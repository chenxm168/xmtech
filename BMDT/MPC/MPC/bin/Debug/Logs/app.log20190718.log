2019-07-18 09:53:18,619 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 09:53:18,658 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 09:53:18,667 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 09:53:18,670 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 09:53:18,672 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 09:53:18,674 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 09:53:18,675 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 09:53:18,676 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 09:53:18,677 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 09:53:18,678 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 09:53:18,679 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 09:53:18,680 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 09:53:18,850 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 09:53:18,855 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 09:53:18,889 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 09:53:18,897 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 09:53:18,899 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 09:53:18,900 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 09:53:18,905 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 09:53:18,906 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 09:53:18,908 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 09:53:18,910 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 09:53:19,050 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 09:53:19,054 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 09:53:19,057 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 09:53:19,061 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 09:53:19,064 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 09:53:19,082 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 09:53:19,084 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 09:53:19,086 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 09:53:19,250 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 09:53:19,253 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 09:53:19,259 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 09:53:19,261 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 09:53:19,263 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 09:53:19,267 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 09:53:19,269 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 09:53:19,271 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 09:53:19,273 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 09:53:19,467 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 09:53:19,470 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 09:53:19,472 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 09:53:19,475 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 09:53:19,477 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 09:53:19,478 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 09:53:19,480 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 09:53:19,655 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 09:53:19,661 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 09:53:19,669 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 09:53:19,677 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 09:53:19,851 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 09:53:19,859 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 09:53:19,863 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 09:53:19,866 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 09:53:19,869 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 09:53:19,873 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 09:53:19,875 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:53:19,877 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 09:53:20,050 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 09:53:20,053 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 09:53:20,056 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 09:53:20,059 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 09:53:20,073 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 09:53:20,252 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 09:53:20,256 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 09:53:20,259 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 09:53:20,262 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 09:53:20,331 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 09:53:20,362 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 09:53:20,368 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 09:53:20,449 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:53:20,452 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:53:20,455 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:53:20,458 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 09:53:20,460 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 09:53:20,650 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 09:53:20,654 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 09:53:20,658 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 09:53:20,661 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 09:53:20,664 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:53:20,667 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:53:20,670 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:53:20,850 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:53:20,854 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 09:53:20,857 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 09:53:20,860 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 09:53:20,863 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:53:20,866 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:53:20,869 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 09:53:21,049 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 09:53:21,051 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 09:53:21,054 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 09:53:21,059 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:53:21,249 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 09:53:21,250 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:53:21,251 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:53:21,258 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:53:21,260 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 09:53:21,262 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:53:21,263 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:53:21,551 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 09:53:21,553 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 09:53:21,555 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 09:53:21,556 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 09:53:21,649 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:53:21,652 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:53:21,663 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:53:21,666 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:53:21,669 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 09:53:21,671 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 09:53:21,673 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 09:53:21,674 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 09:53:21,852 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 09:53:21,856 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 09:53:21,859 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 09:53:21,862 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 09:53:21,865 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 09:53:22,133 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 09:53:22,136 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 09:53:22,138 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 09:53:22,139 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 09:53:22,141 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 09:53:22,142 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 09:53:22,144 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 09:53:22,145 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 09:53:22,249 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:53:22,256 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 09:53:22,258 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 09:53:22,260 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 09:53:22,450 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 09:53:22,454 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 09:53:22,457 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 09:53:22,460 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 09:53:22,463 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 09:53:22,557 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 09:53:22,650 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 09:53:22,653 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 09:53:22,656 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 09:53:22,659 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 09:53:22,662 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 09:53:22,665 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:53:22,668 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:53:22,849 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 09:53:22,851 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 09:53:22,853 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 09:53:22,855 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 09:53:22,857 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 09:53:23,049 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 09:53:23,052 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 09:53:23,055 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:53:23,058 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 09:53:23,061 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:53:23,064 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:53:23,079 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 09:53:23,080 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 09:53:23,250 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 09:53:23,253 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 09:53:23,255 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 09:53:23,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 09:53:23,262 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 09:53:23,265 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 09:53:23,450 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 09:53:23,453 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 09:53:23,457 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 09:53:23,461 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 09:53:23,464 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:53:23,468 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 09:53:23,650 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:53:23,653 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:53:23,660 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 09:53:23,663 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 09:53:23,665 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 09:53:23,668 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 09:53:23,670 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 09:53:23,673 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 09:53:23,850 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 09:53:23,853 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 09:53:23,856 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 09:53:23,859 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 09:53:24,050 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 09:53:24,052 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 09:53:24,055 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 09:53:24,058 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 09:53:24,060 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 09:53:24,063 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 09:53:24,069 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:53:24,095 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 09:53:24,097 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 09:53:24,250 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 09:53:24,269 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 09:53:24,272 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 09:53:24,274 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 09:53:24,450 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 09:53:24,453 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 09:53:24,457 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 09:53:24,460 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 09:53:24,649 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 09:53:24,650 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 09:53:24,652 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 09:53:24,654 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:53:24,655 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 09:53:24,661 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:53:24,663 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:53:24,849 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 09:53:24,852 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 09:53:24,854 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 09:53:24,856 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 09:53:24,858 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 09:53:24,862 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 09:53:24,864 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 09:53:25,047 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 09:53:25,050 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 09:53:25,054 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:53:25,057 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:53:25,060 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 09:53:25,063 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 09:53:25,066 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 09:53:25,250 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 09:53:25,254 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 09:53:25,257 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 09:53:25,260 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 09:53:25,264 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:53:25,450 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 09:53:25,453 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:53:25,457 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:53:25,461 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 09:53:25,464 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 09:53:25,467 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 09:53:25,470 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 09:53:25,473 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 09:53:25,649 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 09:53:25,654 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 09:53:25,657 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 09:53:25,660 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 09:53:25,851 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 09:53:25,854 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 09:53:25,857 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 09:53:25,861 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:53:25,864 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 09:53:25,867 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:53:25,871 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:53:26,051 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 09:53:26,054 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 09:53:26,057 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 09:53:26,060 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 09:53:26,063 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 09:53:26,067 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 09:53:26,084 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 09:53:26,088 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:53:26,250 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:53:26,252 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:53:26,255 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:53:26,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 09:53:26,261 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 09:53:26,265 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 09:53:26,267 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 09:53:26,270 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 09:53:26,449 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 09:53:26,451 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 09:53:26,453 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 09:53:26,456 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 09:53:26,458 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 09:53:26,460 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 09:53:26,462 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 09:55:08,525 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 09:55:08,529 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 09:55:08,532 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 09:55:08,535 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 09:55:08,646 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 09:55:08,647 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 09:55:08,648 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 09:55:08,649 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 09:56:18,526 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 09:56:18,564 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 09:56:18,572 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 09:56:18,576 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 09:56:18,578 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 09:56:18,579 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 09:56:18,580 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 09:56:18,581 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 09:56:18,582 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 09:56:18,583 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 09:56:18,585 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 09:56:18,586 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 09:56:18,761 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 09:56:18,764 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 09:56:18,801 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 09:56:18,810 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 09:56:18,813 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 09:56:18,814 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 09:56:18,820 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 09:56:18,822 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 09:56:18,825 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 09:56:18,828 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 09:56:18,959 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 09:56:18,961 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 09:56:18,962 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 09:56:18,964 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 09:56:18,966 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 09:56:18,975 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 09:56:18,977 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 09:56:18,979 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 09:56:19,161 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 09:56:19,164 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 09:56:19,166 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 09:56:19,169 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 09:56:19,172 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 09:56:19,178 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 09:56:19,180 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 09:56:19,183 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 09:56:19,186 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 09:56:19,397 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 09:56:19,404 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 09:56:19,408 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 09:56:19,412 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 09:56:19,415 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 09:56:19,416 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 09:56:19,419 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 09:56:19,565 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 09:56:19,588 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 09:56:19,589 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 09:56:19,593 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 09:56:19,762 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 09:56:19,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 09:56:19,776 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 09:56:19,780 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 09:56:19,785 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 09:56:19,789 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 09:56:19,791 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:56:19,794 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 09:56:19,959 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 09:56:19,961 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 09:56:19,962 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 09:56:19,964 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 09:56:19,970 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 09:56:20,163 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 09:56:20,169 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 09:56:20,177 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 09:56:20,180 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 09:56:20,221 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 09:56:20,222 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 09:56:20,223 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 09:56:20,360 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:56:20,363 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:56:20,366 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:56:20,369 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 09:56:20,371 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 09:56:20,561 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 09:56:20,565 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 09:56:20,567 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 09:56:20,570 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 09:56:20,572 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:56:20,576 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:56:20,578 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:56:20,759 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:56:20,761 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 09:56:20,762 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 09:56:20,764 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 09:56:20,765 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:56:20,767 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:56:20,768 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 09:56:20,960 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 09:56:20,963 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 09:56:20,966 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 09:56:20,972 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:56:21,161 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 09:56:21,164 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:56:21,167 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:56:21,179 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:56:21,182 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 09:56:21,184 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:56:21,187 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:56:21,361 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 09:56:21,364 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 09:56:21,366 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 09:56:21,368 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 09:56:21,371 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:56:21,373 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:56:21,561 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:56:21,564 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:56:21,568 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 09:56:21,571 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 09:56:21,574 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 09:56:21,577 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 09:56:21,583 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 09:56:21,586 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 09:56:21,760 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 09:56:21,763 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 09:56:21,766 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 09:56:21,819 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 09:56:21,820 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 09:56:21,961 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 09:56:21,964 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 09:56:21,967 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 09:56:21,970 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 09:56:21,973 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 09:56:21,976 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 09:56:21,979 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:56:21,982 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 09:56:22,161 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 09:56:22,164 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 09:56:22,167 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 09:56:22,171 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 09:56:22,361 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 09:56:22,364 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 09:56:22,373 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 09:56:22,403 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 09:56:22,404 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 09:56:22,560 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 09:56:22,564 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 09:56:22,567 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 09:56:22,570 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 09:56:22,573 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:56:22,576 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:56:22,579 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 09:56:22,582 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 09:56:22,761 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 09:56:22,764 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 09:56:22,775 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 09:56:22,779 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 09:56:22,783 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 09:56:22,961 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:56:22,966 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 09:56:22,969 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:56:22,972 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:56:22,975 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 09:56:22,978 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 09:56:22,980 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 09:56:22,983 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 09:56:23,160 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 09:56:23,162 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 09:56:23,165 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 09:56:23,168 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 09:56:23,170 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 09:56:23,361 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 09:56:23,364 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 09:56:23,369 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 09:56:23,372 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:56:23,376 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 09:56:23,379 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:56:23,383 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:56:23,564 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 09:56:23,567 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 09:56:23,570 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 09:56:23,572 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 09:56:23,575 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 09:56:23,577 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 09:56:23,578 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 09:56:23,580 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 09:56:23,761 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 09:56:23,764 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 09:56:23,767 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 09:56:23,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 09:56:23,792 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 09:56:23,961 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 09:56:23,964 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 09:56:23,967 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 09:56:23,970 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:56:23,973 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 09:56:23,976 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 09:56:24,160 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 09:56:24,177 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 09:56:24,178 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 09:56:24,180 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 09:56:24,182 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 09:56:24,183 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 09:56:24,361 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 09:56:24,363 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 09:56:24,368 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 09:56:24,371 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 09:56:24,561 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 09:56:24,565 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:56:24,568 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 09:56:24,572 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:56:24,576 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:56:24,581 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 09:56:24,584 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 09:56:24,759 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 09:56:24,761 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 09:56:24,763 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 09:56:24,766 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 09:56:24,767 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 09:56:24,913 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 09:56:24,915 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 09:56:24,919 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:56:24,960 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:56:24,963 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 09:56:24,966 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 09:56:24,969 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 09:56:25,159 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 09:56:25,162 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 09:56:25,164 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 09:56:25,166 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 09:56:25,168 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:56:25,170 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 09:56:25,172 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:56:25,360 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:56:25,364 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 09:56:25,367 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 09:56:25,370 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 09:56:25,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 09:56:25,377 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 09:56:25,381 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 09:56:25,560 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 09:56:25,563 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 09:56:25,566 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 09:56:25,570 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 09:56:25,573 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 09:56:25,761 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 09:56:25,764 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:56:25,767 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 09:56:25,771 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:56:25,774 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:56:25,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 09:56:25,783 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 09:56:25,959 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 09:56:25,961 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 09:56:25,962 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 09:56:25,964 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 09:56:25,967 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 09:56:25,969 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:56:25,970 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:56:25,975 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:56:26,160 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:56:26,162 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 09:56:26,164 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 09:56:26,166 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 09:56:26,168 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 09:56:26,170 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 09:56:26,172 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 09:56:26,174 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 09:56:26,361 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 09:56:26,364 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 09:56:26,366 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 09:56:26,369 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 09:56:26,372 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 09:57:09,920 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 09:57:09,922 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 09:57:09,923 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 09:57:09,925 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 09:57:10,011 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 09:57:10,012 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 09:57:10,014 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 09:57:10,015 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 09:59:37,010 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 09:59:37,048 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 09:59:37,057 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 09:59:37,063 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-18 09:59:37,065 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-18 09:59:37,066 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 09:59:37,067 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 09:59:37,068 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 09:59:37,069 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-18 09:59:37,070 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-18 09:59:37,071 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-18 09:59:37,072 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 09:59:37,243 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-18 09:59:37,247 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-18 09:59:37,282 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 09:59:37,290 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 09:59:37,292 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 09:59:37,293 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 09:59:37,298 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 09:59:37,299 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 09:59:37,301 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 09:59:37,303 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 09:59:37,443 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 09:59:37,446 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 09:59:37,450 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 09:59:37,453 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 09:59:37,456 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 09:59:37,472 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 09:59:37,474 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 09:59:37,476 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 09:59:37,643 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 09:59:37,646 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 09:59:37,649 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 09:59:37,653 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 09:59:37,655 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 09:59:37,661 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 09:59:37,664 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 09:59:37,667 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 09:59:37,670 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 09:59:37,864 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 09:59:37,869 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 09:59:37,873 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 09:59:37,880 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 09:59:37,884 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 09:59:37,887 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 09:59:37,889 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 09:59:38,047 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 09:59:38,068 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 09:59:38,070 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 09:59:38,074 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 09:59:38,243 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 09:59:38,252 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 09:59:38,258 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 09:59:38,262 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 09:59:38,266 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 09:59:38,270 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 09:59:38,273 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:59:38,275 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 09:59:38,442 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 09:59:38,444 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 09:59:38,446 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 09:59:38,448 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 09:59:38,456 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 09:59:38,644 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 09:59:38,646 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 09:59:38,649 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 09:59:38,651 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 09:59:38,713 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 09:59:38,715 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 09:59:38,716 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 09:59:38,842 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:59:38,845 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:59:38,848 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:59:38,851 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 09:59:38,854 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 09:59:39,043 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 09:59:39,047 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 09:59:39,050 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 09:59:39,054 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 09:59:39,057 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:59:39,060 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:59:39,062 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:59:39,243 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:59:39,246 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 09:59:39,250 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 09:59:39,253 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 09:59:39,255 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:59:39,258 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:59:39,261 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 09:59:39,442 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 09:59:39,445 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 09:59:39,448 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 09:59:39,455 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:59:39,643 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 09:59:39,648 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:59:39,651 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:59:39,665 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 09:59:39,688 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 09:59:39,690 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 09:59:39,692 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 09:59:40,181 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 09:59:40,241 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 09:59:40,243 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 09:59:40,245 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 09:59:40,247 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:59:40,250 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:59:40,252 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:59:40,254 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:59:40,446 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 09:59:40,450 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 09:59:40,454 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 09:59:40,457 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 09:59:40,464 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 09:59:40,467 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 09:59:40,468 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 09:59:40,645 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 09:59:40,647 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 09:59:40,680 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 09:59:40,681 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 09:59:40,682 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 09:59:40,851 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 09:59:40,854 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 09:59:40,857 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 09:59:40,859 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 09:59:40,862 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 09:59:40,865 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:59:40,867 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 09:59:40,869 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 09:59:41,043 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 09:59:41,046 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 09:59:41,050 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 09:59:41,054 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 09:59:41,243 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 09:59:41,246 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 09:59:41,281 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 09:59:41,282 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 09:59:41,284 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 09:59:41,286 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 09:59:41,443 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 09:59:41,446 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 09:59:41,448 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:59:41,451 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:59:41,454 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 09:59:41,456 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 09:59:41,459 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 09:59:41,643 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 09:59:41,646 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 09:59:41,649 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 09:59:41,651 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 09:59:41,654 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:59:41,843 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 09:59:41,848 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:59:41,851 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:59:41,855 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 09:59:41,858 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 09:59:41,861 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 09:59:41,864 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 09:59:41,866 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 09:59:42,043 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 09:59:42,046 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 09:59:42,049 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 09:59:42,053 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 09:59:42,056 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 09:59:42,243 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 09:59:42,247 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 09:59:42,251 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 09:59:42,254 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 09:59:42,257 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 09:59:42,282 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 09:59:42,286 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 09:59:42,441 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 09:59:42,443 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 09:59:42,444 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 09:59:42,446 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 09:59:42,448 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 09:59:42,451 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 09:59:42,453 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 09:59:42,643 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 09:59:42,647 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 09:59:42,650 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 09:59:42,653 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 09:59:42,656 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 09:59:42,659 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 09:59:42,843 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 09:59:42,846 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 09:59:42,849 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:59:42,852 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 09:59:42,855 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 09:59:43,043 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 09:59:43,059 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 09:59:43,062 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 09:59:43,064 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 09:59:43,067 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 09:59:43,070 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 09:59:43,073 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 09:59:43,243 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 09:59:43,247 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 09:59:43,250 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 09:59:43,254 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 09:59:43,443 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:59:43,447 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 09:59:43,450 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:59:43,454 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:59:43,458 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 09:59:43,462 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 09:59:43,465 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 09:59:43,641 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 09:59:43,643 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 09:59:43,646 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 09:59:43,649 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 09:59:43,734 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 09:59:43,736 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 09:59:43,738 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:59:43,739 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:59:43,843 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 09:59:43,845 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 09:59:43,848 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 09:59:43,851 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 09:59:44,043 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 09:59:44,047 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 09:59:44,050 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 09:59:44,053 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:59:44,056 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 09:59:44,060 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:59:44,063 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:59:44,244 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 09:59:44,247 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 09:59:44,249 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 09:59:44,252 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 09:59:44,254 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 09:59:44,256 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 09:59:44,259 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 09:59:44,443 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 09:59:44,446 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 09:59:44,450 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 09:59:44,453 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 09:59:44,456 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 09:59:44,642 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 09:59:44,645 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 09:59:44,648 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 09:59:44,651 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 09:59:44,654 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 09:59:44,657 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 09:59:44,660 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 09:59:44,843 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 09:59:44,846 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 09:59:44,850 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 09:59:44,855 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 09:59:44,859 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 09:59:44,862 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 09:59:44,864 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 09:59:44,873 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 09:59:45,043 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 09:59:45,046 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 09:59:45,049 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 09:59:45,052 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 09:59:45,055 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 09:59:45,058 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 09:59:45,061 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 09:59:45,064 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 09:59:45,243 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 09:59:45,245 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 09:59:45,249 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 09:59:45,263 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 10:00:22,894 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 10:00:22,898 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 10:00:22,901 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 10:00:22,904 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 10:00:23,010 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 10:00:23,012 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 10:00:23,013 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 10:00:23,013 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 10:46:14,859 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 10:46:14,898 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 10:46:14,906 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 10:46:14,910 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 10:46:14,912 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 10:46:14,913 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 10:46:14,915 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 10:46:14,916 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 10:46:14,917 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 10:46:14,918 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 10:46:14,919 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 10:46:14,920 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 10:46:15,083 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 10:46:15,085 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 10:46:15,113 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 10:46:15,120 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 10:46:15,122 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 10:46:15,124 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 10:46:15,129 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 10:46:15,131 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 10:46:15,133 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 10:46:15,135 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 10:46:15,284 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 10:46:15,287 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 10:46:15,290 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 10:46:15,293 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 10:46:15,297 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 10:46:15,318 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 10:46:15,320 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 10:46:15,322 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 10:46:15,484 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 10:46:15,487 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 10:46:15,490 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 10:46:15,494 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 10:46:15,497 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 10:46:15,502 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 10:46:15,505 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 10:46:15,508 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 10:46:15,510 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 10:46:15,718 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 10:46:15,721 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 10:46:15,724 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 10:46:15,729 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 10:46:15,731 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 10:46:15,734 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 10:46:15,736 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 10:46:15,894 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 10:46:15,897 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 10:46:15,898 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 10:46:15,902 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 10:46:16,085 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 10:46:16,093 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 10:46:16,099 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 10:46:16,102 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 10:46:16,107 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 10:46:16,108 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 10:46:16,109 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:46:16,111 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 10:46:16,283 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 10:46:16,286 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 10:46:16,288 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 10:46:16,290 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 10:46:16,298 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 10:46:16,485 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 10:46:16,488 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 10:46:16,491 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 10:46:16,494 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 10:46:16,552 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 10:46:16,554 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 10:46:16,555 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 10:46:16,682 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:46:16,683 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:46:16,684 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:46:16,686 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 10:46:16,687 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 10:46:16,883 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 10:46:16,887 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 10:46:16,890 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 10:46:16,893 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 10:46:16,896 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:46:16,899 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 10:46:16,901 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:46:17,084 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:46:17,088 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 10:46:17,090 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 10:46:17,093 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 10:46:17,096 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:46:17,098 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:46:17,101 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 10:46:17,283 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 10:46:17,286 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 10:46:17,289 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 10:46:17,304 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:46:17,483 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 10:46:17,486 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:46:17,488 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:46:17,496 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:46:17,497 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 10:46:17,499 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:46:17,501 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:46:44,863 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 10:46:44,866 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 10:46:45,045 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 10:46:45,049 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 10:46:45,052 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:46:45,055 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 10:46:45,058 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:46:45,062 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:46:45,065 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 10:46:45,246 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 10:46:45,249 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 10:46:45,252 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 10:46:45,258 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 10:46:45,261 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 10:46:45,269 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 10:46:45,271 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 10:46:45,445 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 10:46:45,481 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 10:46:45,482 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 10:46:45,483 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 10:46:45,484 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 10:46:45,646 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 10:46:45,649 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 10:46:45,652 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 10:46:45,656 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 10:46:45,658 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 10:46:45,660 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 10:46:45,663 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 10:46:45,846 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 10:46:45,849 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 10:46:45,853 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 10:46:45,856 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 10:46:45,859 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 10:46:46,046 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 10:46:46,131 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 10:46:46,135 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 10:46:46,138 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 10:46:46,139 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 10:46:46,141 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 10:46:46,244 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 10:46:46,246 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 10:46:46,257 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 10:46:46,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 10:46:46,260 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 10:46:46,261 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 10:46:46,445 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 10:46:46,449 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 10:46:46,452 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 10:46:46,455 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 10:46:46,458 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 10:46:46,461 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 10:46:46,646 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 10:46:46,649 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 10:46:46,654 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 10:46:46,657 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 10:46:46,660 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 10:46:46,663 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 10:46:46,666 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 10:46:46,669 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 10:46:46,845 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 10:46:46,848 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 10:46:46,851 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 10:46:46,855 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 10:46:46,857 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 10:46:47,047 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 10:46:47,051 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 10:46:47,054 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 10:46:47,057 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 10:46:47,061 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 10:46:47,067 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 10:46:47,069 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 10:46:47,246 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 10:46:47,249 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 10:46:47,252 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 10:46:47,255 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 10:46:47,258 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 10:46:47,261 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 10:46:47,446 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 10:46:47,449 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 10:46:47,452 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 10:46:47,455 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 10:46:47,458 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 10:46:47,460 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 10:46:47,463 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 10:46:47,645 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 10:46:47,648 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 10:46:47,650 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 10:46:47,653 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 10:46:47,655 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 10:46:47,856 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 10:46:47,858 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 10:46:47,859 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 10:46:47,867 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 10:46:47,872 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 10:46:47,875 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 10:46:48,046 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 10:46:48,050 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 10:46:48,054 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 10:46:48,057 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 10:46:48,060 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 10:46:48,246 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 10:46:48,249 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 10:46:48,253 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 10:46:48,257 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 10:46:48,261 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 10:46:48,264 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 10:46:48,267 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 10:46:48,444 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 10:46:48,448 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 10:46:48,449 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 10:46:48,608 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 10:46:48,610 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 10:46:48,611 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 10:46:48,617 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 10:46:48,618 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 10:46:48,644 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 10:46:48,645 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 10:46:48,646 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 10:46:48,648 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 10:46:48,846 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 10:46:48,849 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 10:46:48,853 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 10:46:48,857 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 10:46:48,860 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 10:46:48,864 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 10:46:48,867 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 10:46:49,046 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 10:46:49,049 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 10:46:49,052 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 10:46:49,055 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 10:46:49,058 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 10:46:49,061 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 10:46:49,064 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 10:46:49,246 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 10:46:49,249 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 10:46:49,264 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 10:46:49,267 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 10:46:49,270 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 10:46:49,445 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 10:46:49,448 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 10:46:49,451 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 10:46:49,454 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 10:46:49,456 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 10:46:49,459 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 10:46:49,465 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 10:46:49,467 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 10:46:49,647 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 10:46:49,652 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 10:46:49,656 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:46:49,659 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 10:46:49,662 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:46:49,664 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:46:49,668 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 10:46:49,845 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 10:46:49,848 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 10:46:49,851 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 10:46:49,853 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 10:46:49,856 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 10:46:49,858 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 10:46:49,861 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 10:46:49,863 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 10:46:50,045 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 10:46:50,046 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 10:46:50,048 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 10:47:21,130 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 10:47:21,134 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 10:47:21,137 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 10:47:21,140 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 10:47:21,243 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 10:47:21,244 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 10:47:21,245 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 10:47:21,247 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 10:49:16,530 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 10:49:16,569 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 10:49:16,578 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 10:49:16,581 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-18 10:49:16,583 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-18 10:49:16,585 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 10:49:16,586 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 10:49:16,587 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-18 10:49:16,588 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-18 10:49:16,589 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 10:49:16,590 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 10:49:16,591 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 10:49:16,754 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 10:49:16,756 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 10:49:16,784 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 10:49:16,792 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 10:49:16,795 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 10:49:16,797 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 10:49:16,801 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 10:49:16,803 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 10:49:16,804 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 10:49:16,806 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 10:49:16,953 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 10:49:16,957 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 10:49:16,960 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 10:49:16,963 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 10:49:16,965 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 10:49:16,982 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 10:49:16,984 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 10:49:16,986 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 10:49:17,154 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 10:49:17,157 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 10:49:17,162 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 10:49:17,165 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 10:49:17,168 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 10:49:17,173 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 10:49:17,176 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 10:49:17,179 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 10:49:17,181 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 10:49:17,380 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 10:49:17,386 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 10:49:17,390 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 10:49:17,397 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 10:49:17,398 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 10:49:17,399 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 10:49:17,402 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 10:49:17,558 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 10:49:17,578 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 10:49:17,580 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 10:49:17,584 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 10:49:17,754 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 10:49:17,762 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 10:49:17,768 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 10:49:17,771 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 10:49:17,775 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 10:49:17,778 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 10:49:17,781 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:49:17,783 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 10:49:17,952 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 10:49:17,954 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 10:49:17,955 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 10:49:17,957 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 10:49:17,962 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 10:49:18,156 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 10:49:18,159 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 10:49:18,162 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 10:49:18,165 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 10:49:18,220 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 10:49:18,221 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 10:49:18,222 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 10:49:18,353 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:49:18,356 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:49:18,359 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:49:18,361 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 10:49:18,363 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 10:49:18,553 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 10:49:18,557 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 10:49:18,560 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 10:49:18,562 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 10:49:18,565 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:49:18,568 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 10:49:18,571 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:49:18,754 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:49:18,757 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 10:49:18,760 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 10:49:18,763 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 10:49:18,765 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:49:18,768 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:49:18,770 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 10:49:18,954 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 10:49:18,957 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 10:49:18,959 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 10:49:18,967 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:49:19,153 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 10:49:19,154 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:49:19,156 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:49:19,162 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:49:19,164 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 10:49:19,165 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:49:19,167 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:49:58,701 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 10:49:58,702 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 10:49:58,884 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 10:49:58,887 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 10:49:58,891 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:49:58,894 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 10:49:58,897 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:49:58,903 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:49:58,908 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 10:49:59,082 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 10:49:59,085 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 10:49:59,088 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 10:49:59,094 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 10:49:59,097 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 10:49:59,098 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 10:49:59,100 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 10:49:59,285 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 10:49:59,311 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 10:49:59,312 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 10:49:59,313 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 10:49:59,315 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 10:49:59,483 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 10:49:59,486 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 10:49:59,489 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 10:49:59,492 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 10:49:59,495 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 10:49:59,498 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 10:49:59,501 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 10:49:59,681 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 10:49:59,682 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 10:49:59,684 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 10:49:59,686 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 10:49:59,688 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 10:49:59,883 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 10:49:59,959 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 10:49:59,960 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 10:49:59,961 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 10:49:59,962 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 10:49:59,963 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 10:50:00,083 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 10:50:00,086 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 10:50:00,089 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 10:50:00,109 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 10:50:00,111 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 10:50:00,114 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 10:50:00,283 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 10:50:00,286 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 10:50:00,289 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 10:50:00,293 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 10:50:00,296 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 10:50:00,298 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 10:50:00,483 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 10:50:00,486 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 10:50:00,490 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 10:50:00,494 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 10:50:00,497 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 10:50:00,499 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 10:50:00,502 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 10:50:00,505 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 10:50:00,683 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 10:50:00,686 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 10:50:00,689 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 10:50:00,691 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 10:50:00,694 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 10:50:00,884 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 10:50:00,888 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 10:50:00,891 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 10:50:00,894 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 10:50:00,897 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 10:50:00,904 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 10:50:00,907 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 10:50:01,083 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 10:50:01,086 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 10:50:01,089 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 10:50:01,092 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 10:50:01,095 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 10:50:01,098 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 10:50:01,282 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 10:50:01,286 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 10:50:01,288 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 10:50:01,291 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 10:50:01,293 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 10:50:01,296 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 10:50:01,298 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 10:50:01,482 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 10:50:01,485 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 10:50:01,489 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 10:50:01,492 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 10:50:01,495 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 10:50:01,699 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 10:50:01,702 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 10:50:01,705 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 10:50:01,711 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 10:50:01,713 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 10:50:01,715 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 10:50:01,881 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 10:50:01,883 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 10:50:01,885 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 10:50:01,887 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 10:50:01,890 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 10:50:02,083 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 10:50:02,087 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 10:50:02,090 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 10:50:02,095 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 10:50:02,098 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 10:50:02,101 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 10:50:02,104 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 10:50:02,283 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 10:50:02,291 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 10:50:02,294 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 10:50:02,366 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 10:50:02,367 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 10:50:02,381 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 10:50:02,382 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 10:50:02,383 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 10:50:02,483 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 10:50:02,486 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 10:50:02,489 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 10:50:02,492 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 10:50:02,683 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 10:50:02,686 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 10:50:02,689 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 10:50:02,693 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 10:50:02,696 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 10:50:02,699 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 10:50:02,702 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 10:50:02,883 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 10:50:02,886 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 10:50:02,889 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 10:50:02,892 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 10:50:02,895 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 10:50:02,898 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 10:50:02,901 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 10:50:03,082 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 10:50:03,085 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 10:50:03,094 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 10:50:03,096 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 10:50:03,099 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 10:50:03,282 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 10:50:03,286 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 10:50:03,289 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 10:50:03,293 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 10:50:03,296 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 10:50:03,299 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 10:50:03,302 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 10:50:03,305 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 10:50:03,482 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 10:50:03,484 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 10:50:03,486 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:50:03,488 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 10:50:03,489 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:50:03,490 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:50:03,492 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 10:50:03,683 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 10:50:03,685 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 10:50:03,688 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 10:50:03,691 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 10:50:03,694 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 10:50:03,697 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 10:50:03,699 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 10:50:03,702 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 10:50:03,883 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 10:50:03,886 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 10:50:03,888 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 10:50:24,399 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 10:50:24,402 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 10:50:24,405 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 10:50:24,408 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 10:50:24,519 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 10:50:24,522 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 10:50:24,523 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 10:50:24,524 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 10:51:08,852 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 10:51:08,931 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 10:51:08,940 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 10:51:08,943 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-18 10:51:08,945 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-18 10:51:08,947 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 10:51:08,948 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 10:51:08,950 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-18 10:51:08,951 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-18 10:51:08,952 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 10:51:08,953 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 10:51:08,955 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 10:51:09,075 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 10:51:09,079 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 10:51:09,111 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 10:51:09,119 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 10:51:09,120 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 10:51:09,122 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 10:51:09,126 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 10:51:09,127 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 10:51:09,129 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 10:51:09,131 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 10:51:09,275 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 10:51:09,278 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 10:51:09,281 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 10:51:09,284 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 10:51:09,288 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 10:51:09,308 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 10:51:09,310 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 10:51:09,313 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 10:51:09,475 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 10:51:09,478 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 10:51:09,481 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 10:51:09,484 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 10:51:09,487 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 10:51:09,492 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 10:51:09,495 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 10:51:09,498 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 10:51:09,501 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 10:51:09,688 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 10:51:09,691 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 10:51:09,693 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 10:51:09,697 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 10:51:09,699 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 10:51:09,701 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 10:51:09,703 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 10:51:09,879 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 10:51:09,899 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 10:51:09,902 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 10:51:09,906 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 10:51:10,075 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 10:51:10,083 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 10:51:10,089 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 10:51:10,092 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 10:51:10,096 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 10:51:10,100 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 10:51:10,102 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:51:10,105 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 10:51:10,275 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 10:51:10,278 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 10:51:10,281 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 10:51:10,284 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 10:51:10,296 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 10:51:10,477 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 10:51:10,480 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 10:51:10,483 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 10:51:10,486 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 10:51:10,537 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 10:51:10,538 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 10:51:10,539 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 10:51:10,693 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:51:10,708 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:51:10,709 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:51:10,710 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 10:51:10,711 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 10:51:10,875 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 10:51:10,879 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 10:51:10,882 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 10:51:10,885 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 10:51:10,888 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:51:10,890 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 10:51:10,892 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:51:11,075 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:51:11,079 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 10:51:11,083 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 10:51:11,086 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 10:51:11,089 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:51:11,092 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:51:11,095 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 10:51:11,277 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 10:51:11,278 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 10:51:11,279 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 10:51:11,281 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:51:11,476 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 10:51:11,479 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:51:11,482 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:51:11,492 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:51:11,494 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 10:51:11,496 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:51:11,498 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:54:10,107 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 10:54:10,146 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 10:54:10,154 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 10:54:10,158 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-18 10:54:10,160 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-18 10:54:10,161 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 10:54:10,163 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 10:54:10,164 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 10:54:10,165 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-18 10:54:10,166 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-18 10:54:10,167 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-18 10:54:10,168 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 10:54:10,325 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-18 10:54:10,327 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-18 10:54:10,355 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 10:54:10,362 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 10:54:10,364 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 10:54:10,366 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 10:54:10,372 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 10:54:10,373 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 10:54:10,375 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 10:54:10,378 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 10:54:10,524 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 10:54:10,527 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 10:54:10,529 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 10:54:10,531 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 10:54:10,532 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 10:54:10,546 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 10:54:10,549 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 10:54:10,551 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 10:54:10,725 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 10:54:10,727 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 10:54:10,730 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 10:54:10,734 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 10:54:10,736 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 10:54:10,742 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 10:54:10,744 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 10:54:10,747 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 10:54:10,749 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 10:54:10,955 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 10:54:10,959 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 10:54:10,962 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 10:54:10,967 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 10:54:10,969 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 10:54:10,971 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 10:54:10,974 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 10:54:11,127 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 10:54:11,145 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 10:54:11,149 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 10:54:11,156 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 10:54:11,325 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 10:54:11,334 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 10:54:11,339 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 10:54:11,343 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 10:54:11,347 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 10:54:11,350 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 10:54:11,353 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:54:11,356 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 10:54:11,524 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 10:54:11,527 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 10:54:11,530 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 10:54:11,533 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 10:54:11,545 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 10:54:11,726 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 10:54:11,728 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 10:54:11,731 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 10:54:11,733 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 10:54:11,782 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 10:54:11,783 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 10:54:11,784 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 10:54:11,924 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:54:11,927 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:54:11,929 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:54:11,932 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 10:54:11,935 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 10:54:12,124 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 10:54:12,129 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 10:54:12,132 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 10:54:12,135 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 10:54:12,138 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 10:54:12,141 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 10:54:12,144 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 10:54:12,325 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 10:54:12,328 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 10:54:12,331 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 10:54:12,334 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 10:54:12,336 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:54:12,339 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:54:12,342 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 10:54:12,524 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 10:54:12,527 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 10:54:12,529 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 10:54:12,536 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:54:12,725 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 10:54:12,727 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:54:12,729 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 10:54:12,742 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 10:54:12,745 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 10:54:12,747 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 10:54:12,748 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:05:02,493 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 11:05:02,532 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 11:05:02,559 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 11:05:02,563 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 11:05:02,565 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 11:05:02,566 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 11:05:02,568 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 11:05:02,569 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 11:05:02,570 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 11:05:02,571 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 11:05:02,573 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:05:02,574 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 11:05:02,712 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 11:05:02,715 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:05:02,751 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 11:05:02,759 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 11:05:02,761 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 11:05:02,762 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 11:05:02,767 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 11:05:02,769 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 11:05:02,770 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 11:05:02,773 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 11:05:02,913 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 11:05:02,916 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 11:05:02,918 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 11:05:02,921 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 11:05:02,924 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 11:05:02,944 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 11:05:02,946 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 11:05:02,947 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 11:05:03,113 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 11:05:03,116 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 11:05:03,119 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 11:05:03,122 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 11:05:03,124 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 11:05:03,130 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 11:05:03,132 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 11:05:03,135 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 11:05:03,138 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 11:05:03,328 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:05:03,331 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:05:03,334 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 11:05:03,338 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 11:05:03,341 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 11:05:03,343 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 11:05:03,345 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:05:03,516 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 11:05:03,537 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 11:05:03,538 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 11:05:03,542 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 11:05:03,713 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 11:05:03,721 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 11:05:03,726 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 11:05:03,730 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 11:05:03,734 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:05:03,737 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:05:03,739 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:05:03,742 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:05:03,912 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 11:05:03,915 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 11:05:03,918 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 11:05:03,920 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 11:05:03,930 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 11:05:04,115 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:05:04,118 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 11:05:04,121 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:05:04,124 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:05:04,175 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 11:05:04,176 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 11:05:04,176 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:05:04,313 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:05:04,315 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:05:04,318 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:05:04,319 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:05:04,321 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 11:05:04,513 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 11:05:04,517 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 11:05:04,520 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 11:05:04,522 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 11:05:04,524 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:05:04,527 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:05:04,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:05:04,713 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:05:04,716 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 11:05:04,719 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 11:05:04,722 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:05:04,724 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:05:04,727 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:05:04,730 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:05:04,912 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 11:05:04,917 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 11:05:04,919 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 11:05:04,933 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:05:05,113 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:05:05,116 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:05:05,119 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:05:05,133 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:05:05,136 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:05:05,139 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:05:05,141 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:05:56,728 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 11:05:56,766 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 11:05:56,775 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 11:05:56,778 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-18 11:05:56,781 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-18 11:05:56,782 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 11:05:56,783 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 11:05:56,784 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-18 11:05:56,786 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-18 11:05:56,787 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 11:05:56,788 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:05:56,789 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 11:05:56,937 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 11:05:56,940 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:05:56,972 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 11:05:56,978 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 11:05:56,980 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 11:05:56,982 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 11:05:56,987 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 11:05:56,988 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 11:05:56,990 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 11:05:56,994 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 11:05:57,137 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 11:05:57,140 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 11:05:57,144 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 11:05:57,147 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 11:05:57,149 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 11:05:57,164 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 11:05:57,166 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 11:05:57,168 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 11:05:57,337 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 11:05:57,340 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 11:05:57,343 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 11:05:57,347 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 11:05:57,349 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 11:05:57,355 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 11:05:57,358 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 11:05:57,360 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 11:05:57,363 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 11:05:57,562 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:05:57,567 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:05:57,569 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 11:05:57,572 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 11:05:57,574 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 11:05:57,575 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 11:05:57,577 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:05:57,741 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 11:05:57,756 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 11:05:57,759 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 11:05:57,764 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 11:05:57,938 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 11:05:57,947 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 11:05:57,953 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 11:05:57,956 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 11:05:57,960 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:05:57,964 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:05:57,967 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:05:57,970 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:05:58,135 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 11:05:58,137 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 11:05:58,138 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 11:05:58,139 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 11:05:58,143 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 11:05:58,339 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:05:58,342 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 11:05:58,345 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:05:58,348 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:05:58,405 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 11:05:58,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 11:05:58,408 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:05:58,537 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:05:58,539 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:05:58,542 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:05:58,545 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:05:58,548 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 11:05:58,735 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 11:05:58,738 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 11:05:58,740 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 11:05:58,743 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 11:05:58,746 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:05:58,749 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:05:58,752 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:05:58,936 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:05:58,940 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 11:05:58,943 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 11:05:58,945 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:05:58,948 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:05:58,950 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:05:58,953 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:05:59,137 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 11:05:59,140 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 11:05:59,143 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 11:05:59,151 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:05:59,338 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:05:59,341 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:05:59,344 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:05:59,359 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:05:59,363 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:05:59,365 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:05:59,367 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:05:59,915 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 11:05:59,936 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 11:05:59,937 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 11:05:59,938 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 11:05:59,939 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:05:59,940 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:05:59,941 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:06:00,137 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:06:00,141 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 11:06:00,144 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 11:06:00,147 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 11:06:00,149 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 11:06:00,153 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 11:06:00,155 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 11:06:00,157 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 11:06:00,337 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 11:06:00,340 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 11:06:00,400 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 11:06:00,402 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 11:06:00,403 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 11:06:00,546 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 11:06:00,549 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 11:06:00,551 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 11:06:00,554 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 11:06:00,557 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 11:06:00,560 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:06:00,563 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 11:06:00,566 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 11:06:00,737 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 11:06:00,739 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 11:06:00,743 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 11:06:00,746 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 11:06:00,937 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 11:06:00,941 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 11:06:00,985 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 11:06:00,987 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 11:06:00,988 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 11:06:00,989 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 11:06:01,137 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 11:06:01,140 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 11:06:01,143 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:06:01,147 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:06:01,150 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:06:01,153 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 11:06:01,156 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 11:06:01,336 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 11:06:01,340 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 11:06:01,342 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 11:06:01,345 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 11:06:01,348 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:06:01,537 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 11:06:01,539 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:06:01,542 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:06:01,545 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 11:06:01,548 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 11:06:01,550 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 11:06:01,553 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:06:01,555 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:06:01,737 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 11:06:01,739 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 11:06:01,742 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 11:06:01,745 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 11:06:01,749 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 11:06:01,936 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 11:06:01,938 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 11:06:01,940 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:06:01,942 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 11:06:01,958 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:06:01,960 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:06:01,964 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 11:06:02,137 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 11:06:02,140 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 11:06:02,143 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 11:06:02,146 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 11:06:02,149 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:06:02,152 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 11:06:02,155 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 11:06:02,337 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 11:06:02,341 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 11:06:02,344 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 11:06:02,347 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 11:06:02,350 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 11:06:02,353 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 11:06:02,536 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:06:02,539 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:06:02,542 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:06:02,545 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 11:06:02,547 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 11:06:02,737 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 11:06:02,756 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 11:06:02,758 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 11:06:02,759 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 11:06:02,761 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 11:06:02,763 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 11:06:02,764 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 11:06:02,937 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 11:06:02,939 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 11:06:02,941 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 11:06:02,943 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 11:06:03,137 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:06:03,141 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 11:06:03,144 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:06:03,148 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:06:03,152 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 11:06:03,155 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 11:06:03,158 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 11:06:03,337 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 11:06:03,341 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 11:06:03,348 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 11:06:03,351 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 11:06:03,427 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 11:06:03,429 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 11:06:03,432 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:06:03,433 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:06:03,537 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 11:06:03,540 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 11:06:03,543 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 11:06:03,546 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 11:06:03,737 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 11:06:03,740 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 11:06:03,743 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 11:06:03,747 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:06:03,749 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 11:06:03,752 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:06:03,755 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:06:03,938 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 11:06:03,941 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 11:06:03,944 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 11:06:03,947 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 11:06:03,950 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 11:06:03,953 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 11:06:03,956 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 11:06:04,136 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 11:06:04,139 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 11:06:04,142 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 11:06:04,145 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 11:06:04,147 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 11:06:04,337 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:06:04,340 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 11:06:04,343 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:06:04,347 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:06:04,350 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 11:06:04,353 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 11:06:04,355 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 11:06:04,536 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 11:06:04,539 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 11:06:04,543 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 11:06:04,548 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 11:06:04,552 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:06:04,554 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:06:04,557 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:06:04,558 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:06:04,737 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:06:04,740 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 11:06:04,743 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:06:04,746 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:06:04,749 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:06:04,751 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 11:06:04,754 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 11:06:04,757 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 11:06:04,937 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:06:04,940 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 11:06:04,942 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:06:04,945 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:47:08,598 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 11:47:08,637 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 11:47:08,646 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 11:47:08,649 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 11:47:08,651 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 11:47:08,653 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 11:47:08,654 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 11:47:08,655 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 11:47:08,656 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 11:47:08,657 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 11:47:08,659 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:47:08,660 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 11:47:08,821 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 11:47:08,823 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:47:08,853 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 11:47:08,862 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 11:47:08,864 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 11:47:08,866 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 11:47:08,872 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 11:47:08,875 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 11:47:08,876 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 11:47:08,879 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 11:47:09,021 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 11:47:09,024 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 11:47:09,027 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 11:47:09,030 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 11:47:09,033 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 11:47:09,058 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 11:47:09,061 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 11:47:09,063 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 11:47:09,221 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 11:47:09,223 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 11:47:09,226 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 11:47:09,228 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 11:47:09,231 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 11:47:09,235 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 11:47:09,238 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 11:47:09,240 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 11:47:09,242 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 11:47:09,434 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:47:09,437 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:47:09,439 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 11:47:09,443 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 11:47:09,445 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 11:47:09,447 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 11:47:09,449 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:47:09,637 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 11:47:09,643 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 11:47:09,647 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 11:47:09,655 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 11:47:09,821 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 11:47:09,830 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 11:47:09,835 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 11:47:09,839 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 11:47:09,843 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:47:09,846 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:47:09,849 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:47:09,852 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:47:10,020 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 11:47:10,023 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 11:47:10,026 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 11:47:10,028 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 11:47:10,040 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 11:47:10,222 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:47:10,225 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 11:47:10,228 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:47:10,231 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:47:10,287 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 11:47:10,288 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 11:47:10,289 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:47:10,421 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:47:10,424 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:47:10,426 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:47:10,429 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:47:10,432 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 11:47:10,620 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 11:47:10,624 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 11:47:10,627 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 11:47:10,630 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 11:47:10,633 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:47:10,636 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:47:10,639 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:47:10,821 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:47:10,825 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 11:47:10,828 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 11:47:10,831 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:47:10,834 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:47:10,837 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:47:10,840 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:47:11,020 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 11:47:11,023 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 11:47:11,025 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 11:47:11,038 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:47:11,221 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:47:11,224 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:47:11,228 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:47:11,242 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:47:11,245 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:47:11,247 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:47:11,249 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:47:17,981 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 11:47:17,983 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 11:47:17,984 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 11:47:17,985 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 11:47:17,986 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:47:18,008 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:47:18,009 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:47:18,010 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:47:18,012 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 11:47:18,013 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 11:47:18,014 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 11:47:18,015 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 11:47:18,017 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 11:47:18,210 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 11:47:18,213 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 11:47:18,216 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 11:47:18,219 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 11:47:18,267 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 11:47:18,410 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 11:47:18,413 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 11:47:18,416 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 11:47:18,418 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 11:47:18,420 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 11:47:18,421 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 11:47:18,422 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 11:47:18,424 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:47:18,610 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 11:47:18,613 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 11:47:18,616 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 11:47:18,619 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 11:47:18,810 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 11:47:18,814 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 11:47:18,817 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 11:47:18,821 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 11:47:18,863 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 11:47:18,864 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 11:47:19,010 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 11:47:19,013 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 11:47:19,016 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 11:47:19,018 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 11:47:19,020 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:47:19,022 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:47:19,023 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:47:19,210 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 11:47:19,213 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 11:47:19,216 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 11:47:19,219 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 11:47:19,241 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 11:47:19,408 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 11:47:19,410 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:47:19,412 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 11:47:19,413 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:47:19,415 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:47:19,417 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 11:47:19,418 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 11:47:19,420 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 11:47:19,609 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:47:19,611 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:47:19,613 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 11:47:19,615 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 11:47:19,617 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 11:47:19,810 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 11:47:19,813 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 11:47:19,816 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 11:47:19,821 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 11:47:19,824 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:47:19,827 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 11:47:19,829 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:47:20,010 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:47:20,017 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 11:47:20,020 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 11:47:20,023 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 11:47:20,026 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 11:47:20,029 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 11:47:20,032 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:47:20,034 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 11:47:20,210 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 11:47:20,213 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 11:47:20,216 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 11:47:20,219 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 11:47:20,221 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 11:47:20,408 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 11:47:20,410 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 11:47:20,411 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:47:20,412 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:47:20,413 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:47:20,415 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 11:47:20,416 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 11:47:20,611 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 11:47:20,630 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 11:47:20,633 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 11:47:20,637 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 11:47:20,639 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 11:47:20,810 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 11:47:20,814 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 11:47:20,817 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 11:47:20,831 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 11:47:21,009 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 11:47:21,010 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 11:47:21,012 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:47:21,014 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 11:47:21,015 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:47:21,017 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:47:21,019 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 11:47:21,210 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 11:47:21,214 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 11:47:21,217 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 11:47:21,220 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 11:47:21,227 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 11:47:21,230 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 11:47:21,308 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 11:47:21,410 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 11:47:21,413 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:47:21,416 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:47:21,418 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 11:47:21,420 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 11:47:21,421 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 11:47:21,610 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 11:47:21,614 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 11:47:21,617 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 11:47:21,620 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 11:47:21,623 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:47:21,626 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 11:47:21,809 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:47:21,823 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:47:21,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 11:47:21,830 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 11:47:21,833 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 11:47:21,836 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 11:47:21,838 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 11:47:21,840 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 11:47:22,008 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 11:47:22,009 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 11:47:22,011 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 11:47:22,013 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 11:47:22,209 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 11:47:22,211 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 11:47:22,214 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:47:22,216 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 11:47:22,219 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:47:22,229 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:47:22,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 11:47:22,410 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 11:47:22,413 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 11:47:22,416 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 11:47:22,419 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 11:47:22,423 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 11:47:22,429 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 11:47:22,432 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:47:22,436 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:47:22,608 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:47:22,610 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:47:22,612 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:47:22,613 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 11:47:22,614 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:47:22,616 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:47:22,617 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:47:22,619 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 11:47:22,809 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 11:47:22,812 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 11:47:22,815 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:47:22,818 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 11:47:22,820 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:47:22,823 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:48:13,254 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:48:13,257 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 11:48:13,260 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:48:13,263 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:48:13,374 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:48:13,376 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 11:48:13,377 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:48:13,378 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:49:22,421 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 11:49:22,459 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 11:49:22,468 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 11:49:22,471 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 11:49:22,474 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 11:49:22,475 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 11:49:22,476 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 11:49:22,477 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 11:49:22,479 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 11:49:22,480 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 11:49:22,481 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:49:22,482 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 11:49:22,656 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 11:49:22,659 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:49:22,687 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 11:49:22,694 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 11:49:22,696 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 11:49:22,698 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 11:49:22,703 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 11:49:22,705 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 11:49:22,707 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 11:49:22,709 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 11:49:22,857 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 11:49:22,859 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 11:49:22,862 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 11:49:22,865 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 11:49:22,867 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 11:49:22,885 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 11:49:22,887 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 11:49:22,889 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 11:49:23,057 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 11:49:23,060 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 11:49:23,063 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 11:49:23,066 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 11:49:23,069 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 11:49:23,075 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 11:49:23,077 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 11:49:23,080 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 11:49:23,082 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 11:49:23,285 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:49:23,294 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:49:23,297 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 11:49:23,301 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 11:49:23,304 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 11:49:23,306 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 11:49:23,308 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:49:23,461 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 11:49:23,485 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 11:49:23,488 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 11:49:23,493 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 11:49:23,658 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 11:49:23,667 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 11:49:23,674 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 11:49:23,677 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 11:49:23,682 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:49:23,686 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:49:23,688 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:49:23,691 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:49:23,856 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 11:49:23,858 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 11:49:23,861 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 11:49:23,863 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 11:49:23,875 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 11:49:24,058 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:49:24,061 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 11:49:24,064 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:49:24,067 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:49:24,122 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 11:49:24,123 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 11:49:24,124 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:49:24,257 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:49:24,259 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:49:24,262 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:49:24,265 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:49:24,267 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 11:49:24,457 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 11:49:24,461 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 11:49:24,463 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 11:49:24,466 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 11:49:24,470 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:49:24,473 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:49:24,476 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:49:24,657 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:49:24,661 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 11:49:24,664 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 11:49:24,667 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:49:24,670 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:49:24,673 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:49:24,675 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:49:24,856 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 11:49:24,859 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 11:49:24,862 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 11:49:24,870 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:49:25,057 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:49:25,059 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:49:25,062 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:49:25,074 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:49:25,084 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:49:25,092 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:49:25,100 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:49:25,390 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 11:49:25,391 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 11:49:25,393 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 11:49:25,394 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 11:49:25,395 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:49:25,457 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:49:25,459 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:49:25,462 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:49:25,468 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 11:49:25,470 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 11:49:25,472 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 11:49:25,475 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 11:49:25,479 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 11:49:25,657 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 11:49:25,660 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 11:49:25,663 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 11:49:25,667 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 11:49:25,723 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 11:49:25,856 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 11:49:25,866 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 11:49:25,868 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 11:49:25,871 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 11:49:25,874 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 11:49:25,877 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 11:49:25,880 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 11:49:25,883 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:49:26,060 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 11:49:26,062 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 11:49:26,064 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 11:49:26,066 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 11:49:26,258 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 11:49:26,261 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 11:49:26,264 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 11:49:26,267 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 11:49:26,315 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 11:49:26,457 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 11:49:26,460 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 11:49:26,463 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 11:49:26,466 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 11:49:26,469 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 11:49:26,472 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:49:26,475 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:49:26,478 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:49:26,657 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 11:49:26,660 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 11:49:26,663 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 11:49:26,666 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 11:49:26,669 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 11:49:26,857 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 11:49:26,860 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:49:26,863 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 11:49:26,867 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:49:26,870 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:49:26,874 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 11:49:26,877 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 11:49:26,880 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 11:49:27,057 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:49:27,060 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:49:27,062 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 11:49:27,065 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 11:49:27,068 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 11:49:27,257 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 11:49:27,260 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 11:49:27,264 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 11:49:27,268 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 11:49:27,270 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:49:27,273 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 11:49:27,275 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:49:27,457 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:49:27,465 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 11:49:27,468 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 11:49:27,471 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 11:49:27,474 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 11:49:27,498 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 11:49:27,501 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:49:27,503 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 11:49:27,657 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 11:49:27,659 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 11:49:27,663 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 11:49:27,665 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 11:49:27,857 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 11:49:27,860 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 11:49:27,863 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 11:49:27,866 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:49:27,868 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:49:27,870 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:49:27,872 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 11:49:27,874 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 11:49:28,057 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 11:49:28,076 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 11:49:28,078 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 11:49:28,080 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 11:49:28,082 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 11:49:28,256 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 11:49:28,259 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 11:49:28,262 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 11:49:28,266 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 11:49:28,457 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 11:49:28,460 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 11:49:28,463 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:49:28,466 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 11:49:28,469 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:49:28,471 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:49:28,474 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 11:49:28,657 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 11:49:28,660 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 11:49:28,664 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 11:49:28,667 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 11:49:28,675 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 11:49:28,677 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 11:49:28,762 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 11:49:28,857 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 11:49:28,860 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:49:28,863 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:49:28,866 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 11:49:28,869 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 11:49:28,872 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 11:49:29,057 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 11:49:29,060 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 11:49:29,063 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 11:49:29,066 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 11:49:29,069 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:49:29,072 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 11:49:29,256 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:49:29,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:49:29,260 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 11:49:29,262 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 11:49:29,263 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 11:49:29,265 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 11:49:29,266 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 11:49:29,268 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 11:49:29,457 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 11:49:29,460 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 11:49:29,464 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 11:49:29,467 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 11:49:29,657 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 11:49:29,660 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 11:49:29,663 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:49:29,667 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 11:49:29,670 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:49:29,673 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:49:29,678 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 11:49:29,855 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 11:49:29,857 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 11:49:29,858 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 11:49:29,860 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 11:49:29,862 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 11:49:29,864 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 11:49:29,866 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:49:29,868 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:49:30,056 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:49:30,058 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:49:30,061 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:49:30,064 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 11:49:30,067 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:49:30,070 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:49:30,073 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:49:30,076 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 11:49:30,256 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 11:49:30,259 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 11:49:30,262 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:49:30,264 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 11:49:30,267 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:49:30,271 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:50:36,934 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:50:36,938 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 11:50:36,940 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:50:36,943 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:50:37,045 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:50:37,046 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 11:50:37,047 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:50:37,048 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:51:04,030 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 11:51:04,069 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 11:51:04,078 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 11:51:04,081 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-18 11:51:04,083 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-18 11:51:04,085 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 11:51:04,086 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 11:51:04,087 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 11:51:04,088 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-18 11:51:04,090 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-18 11:51:04,091 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:51:04,092 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 11:51:04,255 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-18 11:51:04,258 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:51:04,288 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 11:51:04,294 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 11:51:04,295 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 11:51:04,297 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 11:51:04,301 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 11:51:04,302 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 11:51:04,303 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 11:51:04,306 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 11:51:04,456 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 11:51:04,462 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 11:51:04,465 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 11:51:04,468 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 11:51:04,471 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 11:51:04,491 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 11:51:04,494 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 11:51:04,497 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 11:51:04,656 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 11:51:04,660 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 11:51:04,662 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 11:51:04,665 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 11:51:04,668 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 11:51:04,673 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 11:51:04,676 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 11:51:04,679 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 11:51:04,681 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 11:51:04,887 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:51:04,890 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:51:04,893 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 11:51:04,896 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 11:51:04,899 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 11:51:04,900 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 11:51:04,903 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:51:05,060 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 11:51:05,081 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 11:51:05,085 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 11:51:05,093 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 11:51:05,256 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 11:51:05,264 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 11:51:05,269 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 11:51:05,273 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 11:51:05,277 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:51:05,279 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:51:05,280 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:51:05,282 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:51:05,455 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 11:51:05,458 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 11:51:05,462 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 11:51:05,464 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 11:51:05,476 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 11:51:05,657 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:51:05,661 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 11:51:05,664 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:51:05,667 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:51:05,731 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 11:51:05,732 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 11:51:05,733 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:51:05,855 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:51:05,858 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:51:05,861 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:51:05,864 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:51:05,867 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 11:51:06,055 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 11:51:06,059 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 11:51:06,062 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 11:51:06,064 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 11:51:06,067 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:51:06,070 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:51:06,073 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:51:06,256 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:51:06,259 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 11:51:06,262 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 11:51:06,265 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:51:06,267 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:51:06,270 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:51:06,272 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:51:06,456 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 11:51:06,458 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 11:51:06,463 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 11:51:06,470 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:51:06,657 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:51:06,661 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:51:06,664 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:51:06,679 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:51:06,682 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:51:06,685 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:51:06,687 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:52:02,377 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 11:52:02,415 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 11:52:02,424 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 11:52:02,427 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 11:52:02,429 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 11:52:02,431 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 11:52:02,432 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 11:52:02,433 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 11:52:02,434 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 11:52:02,435 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 11:52:02,436 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:52:02,438 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 11:52:02,603 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 11:52:02,606 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 11:52:02,642 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 11:52:02,653 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 11:52:02,657 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 11:52:02,659 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 11:52:02,668 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 11:52:02,670 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 11:52:02,671 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 11:52:02,675 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 11:52:02,803 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 11:52:02,806 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 11:52:02,809 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 11:52:02,815 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 11:52:02,817 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 11:52:02,834 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 11:52:02,837 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 11:52:02,840 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 11:52:03,002 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 11:52:03,005 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 11:52:03,008 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 11:52:03,011 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 11:52:03,014 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 11:52:03,019 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 11:52:03,022 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 11:52:03,024 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 11:52:03,026 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 11:52:03,233 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:52:03,239 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 11:52:03,241 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 11:52:03,244 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 11:52:03,246 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 11:52:03,248 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 11:52:03,250 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:52:03,407 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 11:52:03,425 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 11:52:03,428 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 11:52:03,434 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 11:52:03,604 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 11:52:03,612 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 11:52:03,618 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 11:52:03,622 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 11:52:03,626 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:52:03,628 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:52:03,630 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:52:03,631 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:52:03,801 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 11:52:03,802 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 11:52:03,804 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 11:52:03,805 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 11:52:03,809 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 11:52:04,005 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 11:52:04,008 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 11:52:04,011 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 11:52:04,015 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 11:52:04,076 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 11:52:04,077 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 11:52:04,078 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 11:52:04,202 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:52:04,205 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:52:04,208 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:52:04,210 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:52:04,213 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 11:52:04,402 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 11:52:04,406 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 11:52:04,409 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 11:52:04,411 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 11:52:04,414 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:52:04,417 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:52:04,420 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:52:04,603 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:52:04,607 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 11:52:04,610 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 11:52:04,613 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 11:52:04,616 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:52:04,618 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:52:04,621 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:52:04,802 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 11:52:04,805 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 11:52:04,808 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 11:52:04,816 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:52:05,003 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:52:05,007 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:52:05,009 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:52:05,022 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 11:52:05,024 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 11:52:05,027 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 11:52:05,029 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 11:52:31,399 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 11:52:31,401 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 11:52:31,403 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 11:52:31,404 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 11:52:31,597 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:52:31,599 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:52:31,601 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:52:31,603 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:52:31,606 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 11:52:31,608 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 11:52:31,611 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 11:52:31,795 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 11:52:31,801 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 11:52:31,804 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 11:52:31,808 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 11:52:31,818 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 11:52:31,995 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 11:52:32,073 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 11:52:32,074 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 11:52:32,076 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 11:52:32,077 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 11:52:32,078 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 11:52:32,079 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 11:52:32,081 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 11:52:32,194 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 11:52:32,197 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:52:32,200 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 11:52:32,203 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 11:52:32,206 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 11:52:32,394 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 11:52:32,398 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 11:52:32,402 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 11:52:32,405 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 11:52:32,408 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 11:52:32,593 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 11:52:32,596 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 11:52:32,598 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 11:52:32,600 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 11:52:32,602 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 11:52:32,605 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 11:52:32,607 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:52:32,817 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:52:32,819 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:52:32,821 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 11:52:32,823 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 11:52:32,824 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 11:52:32,995 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 11:52:32,998 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 11:52:33,001 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 11:52:33,005 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:52:33,008 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 11:52:33,011 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:52:33,014 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:52:33,018 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 11:52:33,195 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 11:52:33,198 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 11:52:33,201 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:52:33,204 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:52:33,207 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 11:52:33,210 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 11:52:33,212 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 11:52:33,394 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 11:52:33,397 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 11:52:33,399 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 11:52:33,402 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 11:52:33,404 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 11:52:33,595 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 11:52:33,598 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 11:52:33,602 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 11:52:33,608 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 11:52:33,611 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 11:52:33,614 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 11:52:33,617 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 11:52:33,620 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 11:52:33,793 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:52:33,795 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 11:52:33,796 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 11:52:33,797 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 11:52:33,799 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 11:52:33,995 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 11:52:33,998 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 11:52:34,001 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 11:52:34,004 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 11:52:34,007 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:52:34,009 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:52:34,012 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:52:34,015 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 11:52:34,194 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 11:52:34,197 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 11:52:34,206 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 11:52:34,207 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 11:52:34,395 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 11:52:34,407 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 11:52:34,410 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 11:52:34,412 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 11:52:34,595 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 11:52:34,600 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 11:52:34,603 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 11:52:34,607 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 11:52:34,610 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:52:34,614 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 11:52:34,617 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:52:34,795 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:52:34,800 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 11:52:34,803 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 11:52:34,808 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 11:52:34,811 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 11:52:34,814 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 11:52:34,822 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 11:52:34,825 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 11:52:35,090 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 11:52:35,092 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 11:52:35,093 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:52:35,094 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:52:35,097 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 11:52:35,104 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 11:52:35,105 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 11:52:35,195 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 11:52:35,202 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 11:52:35,205 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 11:52:35,209 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 11:52:35,394 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:52:35,397 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 11:52:35,400 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:52:35,403 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:52:35,406 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 11:52:35,408 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 11:52:35,411 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 11:52:35,413 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 11:52:35,595 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 11:52:35,597 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 11:52:35,600 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 11:52:35,603 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 11:52:35,795 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 11:52:35,810 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 11:52:35,813 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 11:52:35,816 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 11:52:35,818 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 11:52:35,820 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 11:52:35,822 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 11:52:35,993 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 11:52:35,994 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 11:52:35,996 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 11:52:35,997 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 11:52:35,998 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 11:52:35,999 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 11:52:36,002 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 11:52:36,007 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 11:52:36,195 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 11:52:36,198 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 11:52:36,201 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 11:52:36,204 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 11:52:36,207 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:52:36,209 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 11:52:36,211 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:52:36,213 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 11:52:36,395 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 11:52:36,397 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 11:52:36,400 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 11:52:36,403 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 11:52:36,405 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:52:36,408 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 11:52:36,411 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:52:36,414 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:52:48,823 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 11:52:48,826 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 11:52:48,829 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 11:52:48,831 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 11:52:48,900 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 11:52:48,901 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 11:52:48,904 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 11:52:48,905 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:33:00,469 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 15:33:00,508 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 15:33:00,516 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 15:33:00,520 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 15:33:00,522 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 15:33:00,524 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 15:33:00,525 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 15:33:00,526 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 15:33:00,527 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 15:33:00,529 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 15:33:00,530 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 15:33:00,531 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 15:33:00,703 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 15:33:00,705 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 15:33:00,721 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 15:33:00,727 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 15:33:00,729 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 15:33:00,730 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 15:33:00,736 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 15:33:00,738 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 15:33:00,740 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 15:33:00,742 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 15:33:00,905 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 15:33:00,909 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 15:33:00,912 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 15:33:00,916 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 15:33:00,919 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 15:33:00,937 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 15:33:00,939 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 15:33:00,942 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 15:33:01,105 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 15:33:01,108 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 15:33:01,111 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 15:33:01,115 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 15:33:01,117 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 15:33:01,123 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 15:33:01,126 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 15:33:01,129 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 15:33:01,132 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 15:33:01,317 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 15:33:01,320 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 15:33:01,323 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 15:33:01,327 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 15:33:01,330 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 15:33:01,332 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 15:33:01,334 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 15:33:01,509 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 15:33:01,515 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 15:33:01,519 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 15:33:01,529 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 15:33:01,705 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 15:33:01,712 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 15:33:01,718 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 15:33:01,722 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 15:33:01,726 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 15:33:01,730 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 15:33:01,733 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:33:01,736 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 15:33:01,905 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 15:33:01,908 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 15:33:01,911 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 15:33:01,913 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 15:33:01,925 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 15:33:02,106 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 15:33:02,109 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 15:33:02,111 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 15:33:02,114 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 15:33:02,170 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 15:33:02,171 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 15:33:02,172 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 15:33:02,304 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:33:02,307 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:33:02,309 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:33:02,312 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 15:33:02,315 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 15:33:02,505 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 15:33:02,509 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 15:33:02,512 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 15:33:02,515 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 15:33:02,517 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:33:02,519 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:33:02,522 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:33:02,705 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:33:02,708 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 15:33:02,711 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 15:33:02,713 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 15:33:02,716 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:33:02,719 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:33:02,721 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 15:33:02,904 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 15:33:02,906 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 15:33:02,909 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 15:33:02,915 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:33:03,105 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 15:33:03,108 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:33:03,111 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:33:03,120 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:33:03,122 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 15:33:03,123 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:33:03,125 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:33:03,495 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 15:33:03,496 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 15:33:03,498 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 15:33:03,499 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 15:33:03,500 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:33:03,503 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:33:03,504 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:33:03,505 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:33:03,506 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 15:33:03,507 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 15:33:03,508 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 15:33:03,509 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 15:33:03,511 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 15:33:03,705 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 15:33:03,708 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 15:33:03,711 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 15:33:03,714 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 15:33:03,783 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 15:33:03,904 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 15:33:03,907 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 15:33:03,911 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 15:33:03,915 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 15:33:03,918 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 15:33:03,921 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 15:33:03,924 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 15:33:04,105 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:33:04,108 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 15:33:04,110 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 15:33:04,113 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 15:33:04,116 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 15:33:04,306 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 15:33:04,309 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 15:33:04,312 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 15:33:04,314 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 15:33:04,359 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 15:33:04,505 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 15:33:04,508 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 15:33:04,510 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 15:33:04,513 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 15:33:04,516 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 15:33:04,519 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:33:04,522 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:33:04,530 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:33:04,704 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 15:33:04,707 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 15:33:04,710 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 15:33:04,714 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 15:33:04,717 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 15:33:04,905 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 15:33:04,908 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:33:04,911 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 15:33:04,914 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:33:04,917 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:33:04,921 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 15:33:04,924 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 15:33:05,103 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 15:33:05,104 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:33:05,106 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:33:05,108 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 15:33:05,109 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 15:33:05,111 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 15:33:05,305 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 15:33:05,308 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 15:33:05,311 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 15:33:05,316 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 15:33:05,319 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:33:05,322 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 15:33:05,325 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:33:05,504 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:33:05,511 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 15:33:05,515 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 15:33:05,517 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 15:33:05,519 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 15:33:05,521 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 15:33:05,522 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:33:05,705 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 15:33:05,708 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 15:33:05,711 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 15:33:05,714 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 15:33:05,717 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 15:33:05,904 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 15:33:05,907 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 15:33:05,910 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 15:33:05,912 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:33:05,915 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:33:05,918 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:33:05,921 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 15:33:05,924 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 15:33:06,105 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 15:33:06,123 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 15:33:06,126 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 15:33:06,128 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 15:33:06,149 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 15:33:06,305 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 15:33:06,309 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 15:33:06,312 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 15:33:06,316 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 15:33:06,505 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 15:33:06,507 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 15:33:06,509 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:33:06,510 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 15:33:06,512 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:33:06,514 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:33:06,516 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 15:33:06,704 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 15:33:06,707 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 15:33:06,710 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 15:33:06,712 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 15:33:06,718 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 15:33:06,719 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 15:33:06,808 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 15:33:06,904 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 15:33:06,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:33:06,910 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:33:06,913 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 15:33:06,915 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 15:33:06,918 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 15:33:07,105 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 15:33:07,109 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 15:33:07,112 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 15:33:07,115 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 15:33:07,118 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:33:07,303 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 15:33:07,305 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:33:07,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:33:07,309 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 15:33:07,310 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 15:33:07,312 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 15:33:07,313 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 15:33:07,315 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 15:33:07,505 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 15:33:07,508 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 15:33:07,511 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 15:33:07,514 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 15:33:07,705 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 15:33:07,708 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 15:33:07,723 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 15:33:07,726 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:33:07,729 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 15:33:07,735 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:33:07,737 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:33:07,740 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 15:33:07,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 15:33:07,908 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 15:33:07,911 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 15:33:07,914 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 15:33:07,919 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 15:33:07,924 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 15:33:07,928 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:33:07,931 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:33:08,104 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:33:08,106 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:33:08,109 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:33:08,111 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 15:33:08,113 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:33:08,115 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:33:08,117 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 15:33:08,120 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 15:33:08,304 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 15:33:08,307 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 15:33:08,308 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:33:08,310 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 15:33:08,311 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:33:08,313 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:33:18,504 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:33:18,507 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 15:33:18,509 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:33:18,511 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:33:18,622 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:33:18,624 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 15:33:18,625 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:33:18,626 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:34:03,475 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 15:34:03,528 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 15:34:03,537 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 15:34:03,540 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 15:34:03,542 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 15:34:03,544 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 15:34:03,545 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 15:34:03,546 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 15:34:03,548 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 15:34:03,549 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 15:34:03,550 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 15:34:03,551 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 15:34:03,699 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 15:34:03,702 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 15:34:03,732 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 15:34:03,740 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 15:34:03,743 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 15:34:03,745 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 15:34:03,750 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 15:34:03,752 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 15:34:03,753 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 15:34:03,756 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 15:34:03,897 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 15:34:03,899 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 15:34:03,900 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 15:34:03,902 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 15:34:03,903 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 15:34:03,913 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 15:34:03,915 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 15:34:03,917 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 15:34:04,099 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 15:34:04,102 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 15:34:04,104 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 15:34:04,107 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 15:34:04,110 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 15:34:04,115 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 15:34:04,118 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 15:34:04,121 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 15:34:04,123 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 15:34:04,327 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 15:34:04,332 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 15:34:04,335 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 15:34:04,340 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 15:34:04,344 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 15:34:04,346 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 15:34:04,348 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 15:34:04,502 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 15:34:04,526 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 15:34:04,528 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 15:34:04,532 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 15:34:04,700 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 15:34:04,709 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 15:34:04,715 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 15:34:04,718 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 15:34:04,723 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 15:34:04,726 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 15:34:04,729 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:34:04,731 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 15:34:04,899 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 15:34:04,902 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 15:34:04,905 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 15:34:04,908 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 15:34:04,920 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 15:34:05,100 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 15:34:05,102 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 15:34:05,105 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 15:34:05,107 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 15:34:05,156 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 15:34:05,158 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 15:34:05,159 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 15:34:05,299 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:34:05,301 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:34:05,304 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:34:05,307 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 15:34:05,310 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 15:34:05,497 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 15:34:05,499 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 15:34:05,500 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 15:34:05,502 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 15:34:05,503 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:34:05,505 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:34:05,507 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:34:05,699 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:34:05,703 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 15:34:05,706 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 15:34:05,709 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 15:34:05,712 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:34:05,714 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:34:05,717 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 15:34:05,898 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 15:34:05,901 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 15:34:05,903 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 15:34:05,910 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:34:06,099 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 15:34:06,102 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:34:06,104 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:34:06,118 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:34:06,120 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 15:34:06,122 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:34:06,123 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:35:01,995 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 15:35:01,997 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 15:35:01,998 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 15:35:01,999 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 15:35:02,000 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:35:02,008 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:35:02,009 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:35:02,010 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:35:02,012 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 15:35:02,013 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 15:35:02,014 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 15:35:02,014 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 15:35:02,016 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 15:35:02,210 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 15:35:02,213 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 15:35:02,216 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 15:35:02,219 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 15:35:02,287 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 15:35:02,410 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 15:35:02,413 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 15:35:02,416 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 15:35:02,421 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 15:35:02,424 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 15:35:02,427 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 15:35:02,429 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 15:35:02,431 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:35:02,610 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 15:35:02,613 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 15:35:02,616 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 15:35:02,619 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 15:35:02,811 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 15:35:02,814 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 15:35:02,818 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 15:35:02,820 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 15:35:02,869 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 15:35:03,008 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 15:35:03,010 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 15:35:03,012 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 15:35:03,013 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 15:35:03,014 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 15:35:03,015 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:35:03,016 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:35:03,017 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:35:03,210 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 15:35:03,212 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 15:35:03,215 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 15:35:03,238 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 15:35:03,239 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 15:35:03,410 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 15:35:03,413 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:35:03,417 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 15:35:03,420 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:35:03,423 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:35:03,426 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 15:35:03,429 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 15:35:03,431 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 15:35:03,609 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:35:03,610 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:35:03,612 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 15:35:03,614 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 15:35:03,616 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 15:35:03,810 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 15:35:03,814 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 15:35:03,817 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 15:35:03,822 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 15:35:03,825 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:35:03,828 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 15:35:03,832 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:35:04,010 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:35:04,016 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 15:35:04,019 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 15:35:04,022 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 15:35:04,024 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 15:35:04,029 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 15:35:04,032 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:35:04,034 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 15:35:04,210 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 15:35:04,213 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 15:35:04,217 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 15:35:04,220 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 15:35:04,409 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 15:35:04,410 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 15:35:04,412 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 15:35:04,413 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:35:04,415 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:35:04,417 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:35:04,419 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 15:35:04,420 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 15:35:04,638 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 15:35:04,647 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 15:35:04,648 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 15:35:04,649 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 15:35:04,650 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 15:35:04,810 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 15:35:04,814 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 15:35:04,817 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 15:35:04,830 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 15:35:05,010 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 15:35:05,013 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 15:35:05,017 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:35:05,020 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 15:35:05,024 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:35:05,027 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:35:05,031 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 15:35:05,208 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 15:35:05,210 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 15:35:05,211 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 15:35:05,213 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 15:35:05,216 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 15:35:05,218 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 15:35:05,276 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 15:35:05,410 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 15:35:05,413 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:35:05,417 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:35:05,420 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 15:35:05,423 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 15:35:05,426 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 15:35:05,610 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 15:35:05,613 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 15:35:05,616 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 15:35:05,620 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 15:35:05,623 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:35:05,626 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 15:35:05,810 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:35:05,813 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:35:05,817 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 15:35:05,820 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 15:35:05,823 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 15:35:05,826 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 15:35:05,829 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 15:35:05,832 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 15:35:06,010 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 15:35:06,013 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 15:35:06,016 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 15:35:06,019 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 15:35:06,210 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 15:35:06,213 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 15:35:06,216 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:35:06,219 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 15:35:06,235 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:35:06,237 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:35:06,240 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 15:35:06,410 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 15:35:06,413 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 15:35:06,416 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 15:35:06,419 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 15:35:06,422 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 15:35:06,428 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 15:35:06,431 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:35:06,434 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:35:06,609 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:35:06,611 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:35:06,614 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:35:06,617 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 15:35:06,619 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:35:06,621 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:35:06,624 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 15:35:06,626 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 15:35:06,808 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 15:35:06,809 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 15:35:06,810 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:35:06,812 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 15:35:06,813 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:35:06,814 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:35:09,810 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:35:09,813 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 15:35:09,816 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:35:09,819 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:35:09,927 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:35:09,929 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 15:35:09,930 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:35:09,931 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:35:55,352 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 15:35:55,389 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 15:35:55,398 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 15:35:55,401 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 15:35:55,403 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 15:35:55,405 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 15:35:55,406 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 15:35:55,407 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 15:35:55,408 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 15:35:55,409 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 15:35:55,410 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 15:35:55,411 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 15:35:55,586 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 15:35:55,588 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 15:35:55,621 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 15:35:55,627 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 15:35:55,629 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 15:35:55,631 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 15:35:55,636 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 15:35:55,637 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 15:35:55,639 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 15:35:55,642 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 15:35:55,784 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 15:35:55,786 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 15:35:55,788 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 15:35:55,789 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 15:35:55,791 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 15:35:55,802 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 15:35:55,805 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 15:35:55,806 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 15:35:55,986 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 15:35:55,989 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 15:35:55,992 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 15:35:55,995 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 15:35:55,998 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 15:35:56,004 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 15:35:56,007 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 15:35:56,010 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 15:35:56,012 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 15:35:56,208 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 15:35:56,213 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 15:35:56,216 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 15:35:56,219 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 15:35:56,221 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 15:35:56,222 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 15:35:56,224 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 15:35:56,390 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 15:35:56,412 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 15:35:56,418 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 15:35:56,426 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 15:35:56,586 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 15:35:56,595 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 15:35:56,601 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 15:35:56,604 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 15:35:56,608 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 15:35:56,612 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 15:35:56,615 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:35:56,617 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 15:35:56,785 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 15:35:56,788 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 15:35:56,792 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 15:35:56,795 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 15:35:56,808 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 15:35:56,988 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 15:35:56,991 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 15:35:56,994 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 15:35:56,997 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 15:35:57,049 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 15:35:57,050 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 15:35:57,050 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 15:35:57,185 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:35:57,188 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:35:57,190 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:35:57,193 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 15:35:57,196 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 15:35:57,385 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 15:35:57,387 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 15:35:57,389 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 15:35:57,391 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 15:35:57,393 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:35:57,394 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:35:57,396 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:35:57,586 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:35:57,590 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 15:35:57,593 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 15:35:57,596 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 15:35:57,599 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:35:57,601 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:35:57,604 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 15:35:57,786 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 15:35:57,789 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 15:35:57,791 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 15:35:57,800 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:35:57,986 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 15:35:57,989 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:35:57,992 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:35:58,007 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:35:58,010 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 15:35:58,013 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:35:58,016 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:37:43,275 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 15:37:43,316 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 15:37:43,328 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 15:37:43,332 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 15:37:43,335 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 15:37:43,336 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 15:37:43,337 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 15:37:43,338 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 15:37:43,339 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 15:37:43,340 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 15:37:43,341 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 15:37:43,342 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 15:37:43,499 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 15:37:43,501 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 15:37:43,517 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 15:37:43,523 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 15:37:43,525 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 15:37:43,527 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 15:37:43,531 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 15:37:43,533 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 15:37:43,534 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 15:37:43,536 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 15:37:43,700 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 15:37:43,702 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 15:37:43,704 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 15:37:43,706 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 15:37:43,708 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 15:37:43,720 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 15:37:43,722 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 15:37:43,724 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 15:37:43,901 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 15:37:43,904 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 15:37:43,907 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 15:37:43,910 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 15:37:43,913 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 15:37:43,918 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 15:37:43,921 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 15:37:43,923 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 15:37:43,926 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 15:37:44,130 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 15:37:44,133 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 15:37:44,136 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 15:37:44,139 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 15:37:44,141 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 15:37:44,143 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 15:37:44,145 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 15:37:44,304 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 15:37:44,325 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 15:37:44,329 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 15:37:44,337 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 15:37:44,502 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 15:37:44,510 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 15:37:44,516 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 15:37:44,519 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 15:37:44,522 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 15:37:44,525 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 15:37:44,527 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:37:44,529 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 15:37:44,701 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 15:37:44,704 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 15:37:44,707 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 15:37:44,710 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 15:37:44,722 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 15:37:44,903 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 15:37:44,906 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 15:37:44,909 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 15:37:44,912 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 15:37:44,983 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 15:37:44,984 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 15:37:44,985 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 15:37:45,101 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:37:45,104 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:37:45,107 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:37:45,110 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 15:37:45,113 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 15:37:45,301 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 15:37:45,306 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 15:37:45,309 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 15:37:45,312 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 15:37:45,315 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:37:45,318 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:37:45,321 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:37:45,501 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:37:45,505 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 15:37:45,508 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 15:37:45,511 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 15:37:45,514 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:37:45,517 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:37:45,520 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 15:37:45,700 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 15:37:45,703 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 15:37:45,706 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 15:37:45,713 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:37:45,899 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 15:37:45,901 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:37:45,902 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:37:45,910 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 15:37:45,912 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 15:37:45,914 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 15:37:45,916 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 15:39:19,001 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 15:39:19,002 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 15:39:19,181 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 15:39:19,185 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 15:39:19,188 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:39:19,192 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:39:19,195 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:39:19,198 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:39:19,202 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 15:39:19,382 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 15:39:19,385 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 15:39:19,388 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 15:39:19,395 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 15:39:19,398 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 15:39:19,401 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 15:39:19,404 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 15:39:19,580 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 15:39:19,621 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 15:39:19,622 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 15:39:19,623 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 15:39:19,624 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 15:39:19,782 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 15:39:19,785 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 15:39:19,788 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 15:39:19,791 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 15:39:19,794 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:39:19,797 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 15:39:19,800 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 15:39:19,981 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 15:39:19,983 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 15:39:19,986 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 15:39:19,989 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 15:39:19,992 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 15:39:20,182 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 15:39:20,238 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 15:39:20,240 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 15:39:20,241 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 15:39:20,243 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 15:39:20,245 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 15:39:20,390 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 15:39:20,393 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:39:20,396 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:39:20,398 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:39:20,399 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 15:39:20,401 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 15:39:20,580 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 15:39:20,582 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 15:39:20,583 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 15:39:20,584 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 15:39:20,585 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:39:20,587 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 15:39:20,782 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:39:20,785 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:39:20,789 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 15:39:20,792 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 15:39:20,795 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 15:39:20,798 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:39:20,801 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:39:20,803 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 15:39:20,982 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 15:39:20,985 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 15:39:20,988 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 15:39:20,991 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 15:39:20,994 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 15:39:21,183 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 15:39:21,187 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 15:39:21,190 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 15:39:21,193 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 15:39:21,196 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 15:39:21,203 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 15:39:21,206 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 15:39:21,380 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 15:39:21,382 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 15:39:21,383 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 15:39:21,385 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:39:21,386 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 15:39:21,387 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 15:39:21,582 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 15:39:21,587 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 15:39:21,591 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 15:39:21,594 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 15:39:21,597 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 15:39:21,599 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 15:39:21,601 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:39:21,782 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:39:21,785 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:39:21,788 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 15:39:21,791 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 15:39:21,794 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 15:39:21,998 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 15:39:22,009 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 15:39:22,012 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 15:39:22,016 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 15:39:22,018 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 15:39:22,019 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 15:39:22,182 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 15:39:22,186 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 15:39:22,190 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 15:39:22,193 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 15:39:22,196 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:39:22,382 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 15:39:22,386 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:39:22,389 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:39:22,394 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 15:39:22,397 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 15:39:22,400 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 15:39:22,404 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 15:39:22,582 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 15:39:22,589 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 15:39:22,592 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 15:39:22,679 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 15:39:22,681 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 15:39:22,684 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:39:22,690 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:39:22,691 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 15:39:22,781 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 15:39:22,784 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 15:39:22,786 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 15:39:22,789 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 15:39:22,982 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 15:39:22,985 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 15:39:22,988 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:39:22,991 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 15:39:22,994 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:39:22,998 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:39:23,002 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 15:39:23,182 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 15:39:23,185 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 15:39:23,188 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 15:39:23,191 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 15:39:23,194 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 15:39:23,197 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 15:39:23,199 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 15:39:23,393 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 15:39:23,396 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 15:39:23,398 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 15:39:23,400 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 15:39:23,402 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 15:39:23,582 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 15:39:23,585 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 15:39:23,588 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 15:39:23,592 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 15:39:23,595 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 15:39:23,598 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 15:39:23,601 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 15:39:23,604 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 15:39:23,784 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 15:39:23,789 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 15:39:23,793 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 15:39:23,796 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 15:39:23,798 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 15:39:23,801 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 15:39:23,805 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:39:23,981 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 15:39:23,984 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:39:23,987 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 15:39:23,990 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 15:39:23,992 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 15:39:23,995 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 15:39:23,998 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 15:39:24,000 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:39:24,181 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 15:39:24,184 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:39:24,187 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:39:26,613 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 15:39:26,615 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 15:39:26,618 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 15:39:26,621 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 15:39:26,728 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 15:39:26,729 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 15:39:26,730 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 15:39:26,733 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 17:17:36,973 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 17:17:37,013 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 17:17:37,021 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 17:17:37,025 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-18 17:17:37,027 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-18 17:17:37,028 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 17:17:37,030 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 17:17:37,031 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-18 17:17:37,032 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-18 17:17:37,033 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 17:17:37,034 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 17:17:37,035 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 17:17:37,198 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 17:17:37,199 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 17:17:37,217 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 17:17:37,223 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 17:17:37,225 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 17:17:37,227 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 17:17:37,231 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 17:17:37,232 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 17:17:37,234 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 17:17:37,236 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 17:17:37,400 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 17:17:37,403 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 17:17:37,407 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 17:17:37,410 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 17:17:37,413 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 17:17:37,433 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 17:17:37,437 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 17:17:37,438 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 17:17:37,600 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 17:17:37,603 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 17:17:37,606 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 17:17:37,609 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 17:17:37,612 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 17:17:37,617 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 17:17:37,620 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 17:17:37,623 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 17:17:37,625 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 17:17:37,830 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 17:17:37,833 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 17:17:37,836 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 17:17:37,839 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 17:17:37,842 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 17:17:37,844 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 17:17:37,846 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 17:17:38,004 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 17:17:38,011 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 17:17:38,015 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 17:17:38,024 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 17:17:38,200 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 17:17:38,209 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 17:17:38,215 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 17:17:38,218 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 17:17:38,222 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 17:17:38,226 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 17:17:38,229 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 17:17:38,231 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 17:17:38,400 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 17:17:38,403 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 17:17:38,407 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 17:17:38,410 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 17:17:38,423 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 17:17:38,602 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 17:17:38,605 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 17:17:38,608 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 17:17:38,611 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 17:17:38,674 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 17:17:38,675 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 17:17:38,676 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 17:17:38,799 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 17:17:38,802 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 17:17:38,804 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 17:17:38,807 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 17:17:38,810 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 17:17:39,000 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 17:17:39,005 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 17:17:39,007 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 17:17:39,010 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 17:17:39,012 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 17:17:39,015 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 17:17:39,018 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 17:17:39,200 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 17:17:39,204 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 17:17:39,207 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 17:17:39,209 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 17:17:39,211 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 17:17:39,213 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 17:17:39,216 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 17:17:39,398 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 17:17:39,400 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 17:17:39,401 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 17:17:39,404 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 17:17:39,600 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 17:17:39,603 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 17:17:39,607 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 17:17:39,621 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 17:17:39,624 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 17:17:39,627 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 17:17:39,629 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 17:17:40,166 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-18 17:17:40,199 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-18 17:17:40,201 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-18 17:17:40,204 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-18 17:17:40,206 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 17:17:40,208 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 17:17:40,210 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 17:17:40,400 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 17:17:40,404 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-18 17:17:40,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-18 17:17:40,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-18 17:17:40,411 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 17:17:40,415 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 17:17:40,418 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 17:17:40,420 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-18 17:17:40,600 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-18 17:17:40,603 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-18 17:17:40,666 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-18 17:17:40,668 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-18 17:17:40,670 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-18 17:17:40,800 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-18 17:17:40,803 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-18 17:17:40,806 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-18 17:17:40,809 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 17:17:40,812 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 17:17:40,815 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 17:17:40,818 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-18 17:17:40,821 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-18 17:17:40,999 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-18 17:17:41,003 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-18 17:17:41,007 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-18 17:17:41,008 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-18 17:17:41,199 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-18 17:17:41,206 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-18 17:17:41,246 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-18 17:17:41,247 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-18 17:17:41,249 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-18 17:17:41,250 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-18 17:17:41,425 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-18 17:17:41,428 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-18 17:17:41,429 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 17:17:41,431 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 17:17:41,432 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 17:17:41,434 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-18 17:17:41,436 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-18 17:17:41,598 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-18 17:17:41,600 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-18 17:17:41,602 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-18 17:17:41,604 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-18 17:17:41,605 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 17:17:41,800 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 17:17:41,803 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 17:17:41,806 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 17:17:41,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-18 17:17:41,813 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-18 17:17:41,816 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-18 17:17:41,819 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 17:17:41,822 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 17:17:42,000 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-18 17:17:42,002 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-18 17:17:42,006 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-18 17:17:42,009 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-18 17:17:42,012 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-18 17:17:42,200 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-18 17:17:42,204 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-18 17:17:42,207 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-18 17:17:42,210 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-18 17:17:42,212 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-18 17:17:42,215 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-18 17:17:42,221 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-18 17:17:42,400 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-18 17:17:42,404 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-18 17:17:42,407 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-18 17:17:42,410 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-18 17:17:42,413 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 17:17:42,417 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-18 17:17:42,419 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-18 17:17:42,600 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-18 17:17:42,604 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-18 17:17:42,607 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-18 17:17:42,609 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-18 17:17:42,612 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-18 17:17:42,615 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-18 17:17:42,800 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 17:17:42,802 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 17:17:42,805 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 17:17:42,808 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-18 17:17:42,811 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-18 17:17:42,999 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-18 17:17:43,024 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-18 17:17:43,026 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-18 17:17:43,028 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-18 17:17:43,030 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-18 17:17:43,032 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 17:17:43,034 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-18 17:17:43,200 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-18 17:17:43,203 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-18 17:17:43,206 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-18 17:17:43,209 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-18 17:17:43,401 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 17:17:43,404 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-18 17:17:43,408 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 17:17:43,411 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 17:17:43,416 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-18 17:17:43,419 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-18 17:17:43,423 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-18 17:17:43,599 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-18 17:17:43,601 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-18 17:17:43,605 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-18 17:17:43,607 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-18 17:17:43,741 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-18 17:17:43,744 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-18 17:17:43,746 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 17:17:43,747 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 17:17:43,798 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-18 17:17:43,799 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-18 17:17:43,800 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-18 17:17:43,801 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-18 17:17:44,000 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-18 17:17:44,004 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-18 17:17:44,007 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-18 17:17:44,010 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 17:17:44,012 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 17:17:44,014 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 17:17:44,017 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 17:17:44,201 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-18 17:17:44,204 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-18 17:17:44,207 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-18 17:17:44,210 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-18 17:17:44,213 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-18 17:17:44,216 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-18 17:17:44,219 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 17:17:44,400 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-18 17:17:44,403 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-18 17:17:44,407 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-18 17:17:44,410 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-18 17:17:44,413 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-18 17:17:44,600 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-18 17:17:44,603 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-18 17:17:44,606 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-18 17:17:44,610 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-18 17:17:44,614 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-18 17:17:44,617 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-18 17:17:44,620 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-18 17:17:44,800 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-18 17:17:44,802 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-18 17:17:44,807 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-18 17:17:44,812 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-18 17:17:44,816 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 17:17:44,818 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 17:17:44,820 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 17:17:44,822 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 17:17:45,000 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 17:17:45,003 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 17:17:45,007 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 17:17:45,010 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 17:17:45,013 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 17:17:45,016 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-18 17:17:45,019 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-18 17:17:45,022 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-18 17:17:45,200 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 17:17:45,202 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 17:17:45,205 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 17:17:45,207 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 17:17:57,682 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-18 17:17:57,684 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-18 17:17:57,685 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-18 17:17:57,686 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-18 17:17:57,782 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-18 17:17:57,784 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-18 17:17:57,785 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-18 17:17:57,786 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-18 18:30:22,973 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 18:30:23,013 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 18:30:23,021 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 18:30:23,025 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-18 18:30:23,027 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-18 18:30:23,028 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 18:30:23,029 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 18:30:23,031 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-18 18:30:23,032 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-18 18:30:23,033 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 18:30:23,035 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 18:30:23,036 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 18:30:23,184 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-18 18:30:23,187 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-18 18:30:23,220 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 18:30:23,225 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 18:30:23,227 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 18:30:23,229 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 18:30:23,234 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 18:30:23,235 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 18:30:23,237 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 18:30:23,240 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 18:30:23,385 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 18:30:23,388 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 18:30:23,391 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 18:30:23,393 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 18:30:23,395 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 18:30:23,412 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 18:30:23,415 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 18:30:23,417 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 18:30:23,585 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 18:30:23,588 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 18:30:23,590 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 18:30:23,594 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 18:30:23,597 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 18:30:23,602 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 18:30:23,605 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 18:30:23,607 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 18:30:23,610 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 18:30:23,812 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 18:30:23,818 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 18:30:23,820 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 18:30:23,824 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 18:30:23,826 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 18:30:23,827 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 18:30:23,830 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 18:30:24,003 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 18:30:24,010 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 18:30:24,013 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 18:30:24,021 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 18:30:24,185 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 18:30:24,194 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 18:30:24,199 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 18:30:24,203 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 18:30:24,207 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 18:30:24,209 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 18:30:24,210 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 18:30:24,211 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 18:30:24,384 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 18:30:24,387 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 18:30:24,389 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 18:30:24,392 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 18:30:24,402 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 18:30:24,587 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 18:30:24,590 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 18:30:24,592 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 18:30:24,596 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 18:30:24,647 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 18:30:24,649 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 18:30:24,650 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 18:30:24,783 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 18:30:24,786 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 18:30:24,789 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 18:30:24,791 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 18:30:24,793 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 18:30:24,984 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 18:30:24,988 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 18:30:24,990 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 18:30:24,992 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 18:30:24,994 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 18:30:24,997 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 18:30:24,999 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 18:30:25,184 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 18:30:25,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 18:30:25,190 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 18:30:25,193 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 18:30:25,195 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 18:30:25,197 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 18:30:25,200 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 18:30:25,383 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 18:30:25,384 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 18:30:25,389 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 18:30:25,392 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 18:30:25,584 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 18:30:25,587 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 18:30:25,590 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 18:30:25,603 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 18:30:25,606 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 18:30:25,609 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 18:30:25,613 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 18:31:28,974 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-18 18:31:29,012 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-18 18:31:29,021 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-18 18:31:29,024 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-18 18:31:29,027 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-18 18:31:29,028 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-18 18:31:29,029 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-18 18:31:29,031 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-18 18:31:29,032 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-18 18:31:29,033 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 18:31:29,034 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 18:31:29,036 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-18 18:31:29,191 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-18 18:31:29,195 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-18 18:31:29,228 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-18 18:31:29,235 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-18 18:31:29,238 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-18 18:31:29,239 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-18 18:31:29,246 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-18 18:31:29,248 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-18 18:31:29,249 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-18 18:31:29,251 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-18 18:31:29,391 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-18 18:31:29,394 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-18 18:31:29,398 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-18 18:31:29,400 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-18 18:31:29,402 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-18 18:31:29,416 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-18 18:31:29,418 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-18 18:31:29,421 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-18 18:31:29,591 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-18 18:31:29,594 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-18 18:31:29,598 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-18 18:31:29,602 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-18 18:31:29,605 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-18 18:31:29,611 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-18 18:31:29,614 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-18 18:31:29,617 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-18 18:31:29,620 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-18 18:31:29,805 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-18 18:31:29,809 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-18 18:31:29,811 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-18 18:31:29,815 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-18 18:31:29,817 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-18 18:31:29,819 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-18 18:31:29,821 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 18:31:29,995 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-18 18:31:30,019 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-18 18:31:30,023 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-18 18:31:30,029 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-18 18:31:30,192 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-18 18:31:30,201 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-18 18:31:30,207 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-18 18:31:30,210 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-18 18:31:30,213 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 18:31:30,216 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 18:31:30,218 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 18:31:30,220 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 18:31:30,390 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-18 18:31:30,393 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-18 18:31:30,396 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-18 18:31:30,399 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-18 18:31:30,412 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-18 18:31:30,592 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-18 18:31:30,595 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-18 18:31:30,598 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-18 18:31:30,600 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-18 18:31:30,655 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-18 18:31:30,656 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-18 18:31:30,657 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-18 18:31:30,791 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 18:31:30,794 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 18:31:30,797 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 18:31:30,800 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-18 18:31:30,803 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-18 18:31:30,991 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-18 18:31:30,995 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-18 18:31:30,998 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-18 18:31:31,001 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-18 18:31:31,005 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-18 18:31:31,009 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-18 18:31:31,012 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-18 18:31:31,191 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-18 18:31:31,195 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-18 18:31:31,197 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-18 18:31:31,199 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-18 18:31:31,200 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 18:31:31,202 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 18:31:31,204 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-18 18:31:31,390 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-18 18:31:31,392 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-18 18:31:31,395 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-18 18:31:31,401 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 18:31:31,591 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 18:31:31,594 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 18:31:31,597 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-18 18:31:31,613 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-18 18:31:31,616 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-18 18:31:31,618 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-18 18:31:31,620 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
