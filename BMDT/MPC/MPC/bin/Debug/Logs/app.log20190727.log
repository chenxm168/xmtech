2019-07-27 10:04:39,071 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-27 10:04:39,118 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-27 10:04:39,127 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-27 10:04:39,130 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-27 10:04:39,132 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-27 10:04:39,133 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-27 10:04:39,133 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-27 10:04:39,134 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-27 10:04:39,135 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-27 10:04:39,135 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-27 10:04:39,136 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:04:39,136 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-27 10:04:39,306 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-27 10:04:39,307 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:04:39,318 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-27 10:04:39,320 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-27 10:04:39,321 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-27 10:04:39,321 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-27 10:04:39,322 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-27 10:04:39,328 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-27 10:04:39,329 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-27 10:04:39,330 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-27 10:04:39,506 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-27 10:04:39,507 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-27 10:04:39,508 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-27 10:04:39,509 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-27 10:04:39,510 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-27 10:04:39,510 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-27 10:04:39,519 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-27 10:04:39,520 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-27 10:04:39,706 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-27 10:04:39,707 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-27 10:04:39,709 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-27 10:04:39,709 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-27 10:04:39,710 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-27 10:04:39,711 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-27 10:04:39,712 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-27 10:04:39,712 [Thread: 10      ] [DEBUG] -- Found 23 <object> elements defining objects.
2019-07-27 10:04:39,713 [Thread: 10      ] [DEBUG] -- Loaded 23 object definitions from location [spring-objects.xml]
2019-07-27 10:04:39,906 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-27 10:04:39,907 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-27 10:04:39,909 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-27 10:04:39,909 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-27 10:04:39,910 [Thread: 10      ] [DEBUG] -- 23 objects defined in application context [spring.root].
2019-07-27 10:04:39,911 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-27 10:04:39,922 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:04:39,925 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:04:40,107 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-27 10:04:40,110 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-27 10:04:40,111 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-27 10:04:40,112 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-27 10:04:40,114 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-27 10:04:40,115 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-27 10:04:40,117 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-27 10:04:40,306 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-27 10:04:40,309 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-27 10:04:40,310 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-27 10:04:40,312 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-27 10:04:40,507 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-27 10:04:40,508 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-27 10:04:40,509 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-27 10:04:40,510 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-27 10:04:40,511 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:04:40,512 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-27 10:04:40,513 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-27 10:04:40,706 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-27 10:04:40,707 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-27 10:04:40,708 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-27 10:04:40,709 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-27 10:04:40,709 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-27 10:04:40,710 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-27 10:04:40,906 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:04:40,907 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:04:40,908 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:04:40,908 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:04:40,909 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-27 10:04:41,106 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-27 10:04:41,107 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-27 10:04:41,108 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-27 10:04:41,108 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-27 10:04:41,109 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-27 10:04:41,110 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:04:41,110 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:04:41,111 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:04:41,306 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:04:41,310 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:04:41,310 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-27 10:04:41,311 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-27 10:04:41,506 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-27 10:04:41,507 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-27 10:04:41,508 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:04:41,509 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:04:41,509 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:04:41,510 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:04:41,511 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:04:41,706 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:04:41,707 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:04:41,708 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-27 10:04:41,708 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-27 10:04:41,908 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-27 10:04:41,909 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-27 10:04:41,911 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:04:41,913 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:04:41,914 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:04:41,916 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:04:41,918 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:04:41,919 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:04:42,107 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:04:42,109 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 30].
2019-07-27 10:04:42,110 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-27 10:04:42,113 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-27 10:04:42,306 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-27 10:04:42,311 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-27 10:04:42,312 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:04:42,313 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-27 10:04:42,314 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:04:42,315 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:04:42,317 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-27 10:04:42,520 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:04:42,521 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-27 10:04:42,522 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:04:42,523 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:04:42,523 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-27 10:04:42,524 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:04:42,525 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-27 10:04:42,706 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:04:42,707 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:04:42,708 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-27 10:04:42,708 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:04:42,709 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-27 10:04:42,709 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:04:42,710 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:04:42,932 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-27 10:04:42,933 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-27 10:04:42,933 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:04:42,934 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:04:42,935 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:04:42,935 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-27 10:04:42,936 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-27 10:04:43,106 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2019-07-27 10:04:43,107 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-27 10:04:43,108 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-27 10:04:43,109 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-27 10:04:43,110 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-27 10:04:43,306 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-27 10:04:43,307 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-27 10:04:43,307 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 51].
2019-07-27 10:04:43,308 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-27 10:04:43,508 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:04:43,508 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:04:43,509 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-07-27 10:04:43,510 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-27 10:04:43,706 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-27 10:04:43,707 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-27 10:04:43,708 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-27 10:04:43,708 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:04:43,709 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:04:43,710 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:04:43,711 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:04:43,906 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-27 10:04:43,907 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-27 10:04:43,908 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:04:43,908 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:04:43,909 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:04:43,913 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:04:43,913 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-27 10:04:43,914 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:04:44,107 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:04:44,622 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-27 10:04:44,799 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-27 10:04:44,800 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-27 10:04:44,800 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-27 10:04:44,801 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:04:44,997 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:04:45,001 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:04:45,002 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:04:45,003 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-27 10:04:45,197 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-27 10:04:45,198 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-27 10:04:45,199 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-27 10:04:45,200 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-27 10:04:45,201 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-27 10:04:45,202 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-27 10:04:45,203 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-27 10:04:45,204 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-27 10:04:45,397 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-27 10:04:45,398 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:04:45,399 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-27 10:04:45,400 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 80].
2019-07-27 10:04:45,400 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-27 10:04:45,597 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-27 10:04:45,598 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-27 10:04:45,599 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-27 10:04:45,600 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-27 10:04:45,600 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-27 10:04:45,601 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:04:45,603 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-27 10:04:45,604 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:45,797 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-27 10:04:45,798 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-27 10:04:45,799 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-27 10:04:45,804 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-27 10:04:45,997 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-27 10:04:45,998 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-27 10:04:45,999 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-27 10:04:45,999 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:04:46,001 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-27 10:04:46,197 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-27 10:04:46,198 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-27 10:04:46,199 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-27 10:04:46,200 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-27 10:04:46,201 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:46,202 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:04:46,397 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:46,398 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:46,399 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:04:46,400 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:04:46,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:04:46,411 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-27 10:04:46,411 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-27 10:04:46,598 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-27 10:04:46,600 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-27 10:04:46,602 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:04:46,603 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-27 10:04:46,798 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-27 10:04:46,800 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-27 10:04:46,802 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-27 10:04:46,803 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-27 10:04:46,804 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:46,805 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:04:46,997 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:46,998 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:46,999 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:04:46,999 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:04:47,000 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:04:47,002 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-27 10:04:47,003 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-27 10:04:47,003 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-27 10:04:47,197 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-27 10:04:47,203 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:04:47,203 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-27 10:04:47,204 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-27 10:04:47,397 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-27 10:04:47,398 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-27 10:04:47,399 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-27 10:04:47,399 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:47,400 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:04:47,401 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:47,402 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:47,597 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-27 10:04:47,598 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-27 10:04:47,599 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:04:47,600 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-27 10:04:47,600 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-27 10:04:47,603 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-27 10:04:47,604 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-27 10:04:47,797 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:04:47,798 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-27 10:04:47,799 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-27 10:04:47,800 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-27 10:04:47,997 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-27 10:04:47,998 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-27 10:04:47,999 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:47,999 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:04:48,001 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:48,002 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:48,003 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-27 10:04:48,197 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-27 10:04:48,202 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:04:48,203 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-27 10:04:48,203 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-27 10:04:48,204 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-27 10:04:48,204 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-27 10:04:48,397 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:04:48,398 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-27 10:04:48,399 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-27 10:04:48,399 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-27 10:04:48,597 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-27 10:04:48,598 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-27 10:04:48,599 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:48,599 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:04:48,601 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:48,602 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:48,603 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:04:48,814 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:04:48,814 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:04:48,815 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-27 10:04:48,816 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-27 10:04:48,818 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-27 10:04:48,819 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-27 10:04:48,871 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-27 10:04:49,000 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-27 10:04:49,001 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:49,002 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:49,002 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:04:49,003 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-27 10:04:49,004 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-27 10:04:49,200 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-27 10:04:49,201 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-27 10:04:49,202 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-27 10:04:49,203 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-27 10:04:49,203 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:49,204 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:04:49,400 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:49,401 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:49,402 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-27 10:04:49,403 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-27 10:04:49,404 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-27 10:04:49,404 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:04:49,405 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:04:49,406 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-27 10:04:49,600 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:04:49,601 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 116].
2019-07-27 10:04:49,602 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-27 10:04:49,603 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-27 10:04:49,800 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-27 10:04:49,801 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-27 10:04:49,802 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:49,802 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:04:49,803 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:49,804 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:49,805 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-27 10:04:49,805 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-27 10:04:50,001 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:04:50,002 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-27 10:04:50,005 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-27 10:04:50,005 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-27 10:04:50,006 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:04:50,007 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-27 10:04:50,200 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-27 10:04:50,201 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-27 10:04:50,202 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-27 10:04:50,203 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-27 10:04:50,203 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:04:50,400 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:04:50,401 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:04:50,402 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:04:50,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-27 10:04:50,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-27 10:04:50,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:04:50,410 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-27 10:04:50,410 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-27 10:04:50,601 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-27 10:04:50,602 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-27 10:04:50,604 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:04:50,604 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:04:50,605 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:04:50,606 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:04:55,035 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:04:55,036 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:04:55,037 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:04:55,038 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:04:55,190 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:04:55,191 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-27 10:04:55,191 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:04:55,192 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-27 10:10:57,360 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-27 10:10:57,393 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-27 10:10:57,401 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-27 10:10:57,404 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-27 10:10:57,406 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-27 10:10:57,407 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-27 10:10:57,408 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-27 10:10:57,408 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-27 10:10:57,409 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-27 10:10:57,410 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-27 10:10:57,410 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:10:57,411 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-27 10:10:57,590 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-27 10:10:57,591 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:10:57,603 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-27 10:10:57,605 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-27 10:10:57,606 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-27 10:10:57,607 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-27 10:10:57,608 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-27 10:10:57,611 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-27 10:10:57,615 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-27 10:10:57,616 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-27 10:10:57,792 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-27 10:10:57,793 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-27 10:10:57,794 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-27 10:10:57,795 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-27 10:10:57,796 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-27 10:10:57,796 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-27 10:10:57,797 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-27 10:10:57,810 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-27 10:10:57,991 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-27 10:10:57,991 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-27 10:10:57,992 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-27 10:10:57,993 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-27 10:10:57,994 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-27 10:10:57,995 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-27 10:10:57,996 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-27 10:10:57,997 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-27 10:10:57,998 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-27 10:10:58,190 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-27 10:10:58,191 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-27 10:10:58,192 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-27 10:10:58,193 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-27 10:10:58,194 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-27 10:10:58,195 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-27 10:10:58,196 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-27 10:10:58,207 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:10:58,392 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:10:58,393 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-27 10:10:58,396 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-27 10:10:58,397 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-27 10:10:58,399 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-27 10:10:58,400 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-27 10:10:58,402 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-27 10:10:58,591 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-27 10:10:58,592 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-27 10:10:58,595 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-27 10:10:58,596 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-27 10:10:58,598 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-27 10:10:58,797 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-27 10:10:58,798 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-27 10:10:58,811 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-27 10:10:58,812 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-27 10:10:58,813 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:10:58,813 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-27 10:10:58,814 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-27 10:10:58,995 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-27 10:10:58,996 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-27 10:10:58,997 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-27 10:10:58,997 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-27 10:10:58,998 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-27 10:10:59,198 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-27 10:10:59,198 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:10:59,199 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:10:59,199 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:10:59,200 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:10:59,201 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-27 10:10:59,395 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-27 10:10:59,396 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-27 10:10:59,397 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-27 10:10:59,397 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-27 10:10:59,398 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-27 10:10:59,399 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:10:59,399 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:10:59,595 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:10:59,596 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:10:59,597 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:10:59,600 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-27 10:10:59,795 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-27 10:10:59,796 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-27 10:10:59,797 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-27 10:10:59,797 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:10:59,798 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:10:59,799 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:10:59,799 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:10:59,995 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:10:59,996 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:10:59,997 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:10:59,997 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-27 10:11:00,195 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-27 10:11:00,196 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-27 10:11:00,197 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-27 10:11:00,197 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:11:00,198 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:11:00,198 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:11:00,199 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:11:00,200 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:11:00,397 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-27 10:11:00,398 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-27 10:11:00,398 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-27 10:11:00,399 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-27 10:11:00,595 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-27 10:11:00,597 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-27 10:11:00,628 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-27 10:11:00,631 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-27 10:11:00,632 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-27 10:11:00,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-27 10:11:00,634 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-27 10:11:00,795 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:11:00,796 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:11:00,797 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-27 10:11:00,798 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-27 10:11:00,997 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-27 10:11:00,999 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-27 10:11:01,001 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-27 10:11:01,003 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:11:01,005 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-27 10:11:01,006 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:11:01,007 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:11:01,009 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-27 10:11:01,196 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:11:01,198 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-27 10:11:01,200 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:11:01,201 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:11:01,203 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-27 10:11:01,204 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:11:01,396 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-27 10:11:01,398 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:11:01,399 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:11:01,400 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-27 10:11:01,402 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:11:01,403 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-27 10:11:01,404 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:11:01,595 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:11:01,596 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-27 10:11:01,596 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-27 10:11:01,597 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-27 10:11:01,598 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-27 10:11:01,598 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-27 10:11:01,599 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-27 10:11:01,795 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-27 10:11:01,796 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:11:01,796 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:11:01,797 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:11:01,798 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-27 10:11:01,799 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-27 10:11:01,799 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-27 10:11:01,995 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-27 10:11:01,996 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-27 10:11:01,997 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-27 10:11:01,999 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-27 10:11:02,000 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-27 10:11:02,195 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-27 10:11:02,196 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-27 10:11:02,197 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-27 10:11:02,199 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:11:02,395 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:11:02,396 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-27 10:11:02,397 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-27 10:11:02,397 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-27 10:11:02,597 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-27 10:11:02,598 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-27 10:11:02,598 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:11:02,599 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:11:02,600 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:11:02,601 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:11:02,602 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-27 10:11:02,811 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-27 10:11:02,811 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:11:02,814 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:11:02,815 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:11:02,818 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:11:02,819 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-27 10:11:02,820 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:11:02,820 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:11:03,536 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-27 10:11:03,537 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-27 10:11:03,539 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-27 10:11:03,718 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-27 10:11:03,719 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:11:03,720 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:11:03,720 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:11:03,721 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:11:03,722 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-27 10:11:03,954 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-27 10:11:03,956 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-27 10:11:04,127 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-27 10:11:04,129 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-27 10:11:04,130 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-27 10:11:04,131 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-27 10:11:04,131 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-27 10:11:04,132 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-27 10:11:04,133 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-27 10:11:04,133 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:11:04,327 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-27 10:11:04,328 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-27 10:11:04,329 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-27 10:11:04,330 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-27 10:11:04,527 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-27 10:11:04,537 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-27 10:11:04,538 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-27 10:11:04,539 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-27 10:11:04,540 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:11:04,541 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-27 10:11:04,541 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:04,542 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-27 10:11:04,727 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-27 10:11:04,728 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-27 10:11:04,733 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-27 10:11:04,734 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-27 10:11:04,735 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-27 10:11:04,927 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-27 10:11:04,928 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:11:04,929 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-27 10:11:04,929 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-27 10:11:05,128 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-27 10:11:05,128 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-27 10:11:05,129 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-27 10:11:05,130 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:05,131 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:11:05,131 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:05,327 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:05,328 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:11:05,329 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:11:05,330 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:11:05,330 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-27 10:11:05,331 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-27 10:11:05,332 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-27 10:11:05,527 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-27 10:11:05,534 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:11:05,535 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-27 10:11:05,535 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-27 10:11:05,729 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-27 10:11:05,730 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-27 10:11:05,732 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-27 10:11:05,733 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:05,735 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:11:05,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:05,739 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:05,929 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:11:05,930 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:11:05,932 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:11:05,934 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-27 10:11:05,935 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-27 10:11:05,937 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-27 10:11:05,938 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-27 10:11:06,127 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:11:06,128 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-27 10:11:06,129 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-27 10:11:06,130 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-27 10:11:06,327 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-27 10:11:06,332 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-27 10:11:06,333 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:06,333 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:11:06,334 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:06,335 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:06,337 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-27 10:11:06,527 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-27 10:11:06,528 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:11:06,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-27 10:11:06,530 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-27 10:11:06,530 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-27 10:11:06,531 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-27 10:11:06,532 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:11:06,727 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-27 10:11:06,728 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-27 10:11:06,729 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-27 10:11:06,730 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-27 10:11:06,927 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-27 10:11:06,931 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:06,932 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:11:06,933 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:06,933 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:06,934 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-27 10:11:06,935 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-27 10:11:07,127 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:11:07,128 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-27 10:11:07,129 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-27 10:11:07,129 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-27 10:11:07,130 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-27 10:11:07,131 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:11:07,131 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-27 10:11:07,327 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-27 10:11:07,328 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-27 10:11:07,329 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-27 10:11:07,330 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-27 10:11:07,527 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:07,528 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:11:07,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:07,529 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:07,530 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:11:07,531 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:11:07,727 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:11:07,728 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-27 10:11:07,729 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-27 10:11:07,730 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-27 10:11:07,731 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-27 10:11:07,805 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-27 10:11:07,807 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-27 10:11:07,807 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:07,927 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:07,928 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:11:07,929 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-27 10:11:07,929 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-27 10:11:08,140 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-27 10:11:08,145 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-27 10:11:08,147 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-27 10:11:08,148 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-27 10:11:08,149 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:08,149 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:11:08,150 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:08,150 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:08,327 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-27 10:11:08,328 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-27 10:11:08,329 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-27 10:11:08,329 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:11:08,330 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:11:08,331 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-27 10:11:08,331 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:11:08,332 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-27 10:11:08,527 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-27 10:11:08,528 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-27 10:11:08,529 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-27 10:11:08,529 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-27 10:11:08,727 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:08,728 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:11:08,728 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:08,729 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:08,730 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-27 10:11:08,731 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-27 10:11:08,731 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:11:08,732 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-27 10:11:08,927 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-27 10:11:08,928 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-27 10:11:08,928 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:11:08,929 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-27 10:11:09,127 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-27 10:11:09,128 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-27 10:11:09,129 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-27 10:11:09,129 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-27 10:11:09,130 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:11:09,131 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:11:09,131 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:11:09,327 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:11:09,328 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-27 10:11:09,329 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-27 10:11:09,329 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:11:09,330 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-27 10:11:09,331 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-27 10:11:09,332 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-27 10:11:09,343 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-27 10:11:09,527 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:11:09,528 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:11:09,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:11:09,529 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:11:22,225 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:11:22,226 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:11:22,227 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:11:22,228 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:13:57,073 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:13:57,074 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:13:57,075 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:13:57,076 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:14:11,724 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:14:11,725 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:14:11,725 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:14:11,728 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:15:52,725 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:15:52,732 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:15:52,733 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:15:52,733 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:16:31,722 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:16:31,723 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:16:31,729 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:16:31,729 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:17:18,359 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:17:18,360 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:17:18,361 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:17:18,362 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:17:18,492 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:17:18,493 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-27 10:17:18,495 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:17:18,496 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-27 10:18:33,976 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-27 10:18:34,009 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-27 10:18:34,017 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-27 10:18:34,020 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-27 10:18:34,022 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-27 10:18:34,022 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-27 10:18:34,023 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-27 10:18:34,024 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-27 10:18:34,024 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-27 10:18:34,025 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-27 10:18:34,026 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:18:34,026 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-27 10:18:34,207 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-27 10:18:34,208 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:18:34,221 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-27 10:18:34,223 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-27 10:18:34,224 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-27 10:18:34,225 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-27 10:18:34,226 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-27 10:18:34,229 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-27 10:18:34,234 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-27 10:18:34,239 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-27 10:18:34,408 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-27 10:18:34,409 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-27 10:18:34,410 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-27 10:18:34,410 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-27 10:18:34,411 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-27 10:18:34,412 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-27 10:18:34,413 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-27 10:18:34,423 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-27 10:18:34,607 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-27 10:18:34,609 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-27 10:18:34,609 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-27 10:18:34,610 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-27 10:18:34,611 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-27 10:18:34,612 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-27 10:18:34,613 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-27 10:18:34,614 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-27 10:18:34,615 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-27 10:18:34,807 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-27 10:18:34,808 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-27 10:18:34,809 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-27 10:18:34,811 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-27 10:18:34,811 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-27 10:18:34,812 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-27 10:18:34,813 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-27 10:18:34,825 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:18:35,009 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:18:35,011 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-27 10:18:35,013 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-27 10:18:35,015 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-27 10:18:35,016 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-27 10:18:35,018 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-27 10:18:35,019 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-27 10:18:35,208 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-27 10:18:35,209 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-27 10:18:35,212 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-27 10:18:35,213 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-27 10:18:35,215 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-27 10:18:35,409 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-27 10:18:35,410 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-27 10:18:35,412 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-27 10:18:35,413 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-27 10:18:35,414 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:18:35,415 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-27 10:18:35,416 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-27 10:18:35,608 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-27 10:18:35,610 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-27 10:18:35,612 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-27 10:18:35,613 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-27 10:18:35,615 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-27 10:18:35,809 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-27 10:18:35,810 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:18:35,812 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:18:35,814 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:18:35,815 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:18:35,817 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-27 10:18:36,007 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-27 10:18:36,008 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-27 10:18:36,009 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-27 10:18:36,010 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-27 10:18:36,010 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-27 10:18:36,011 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:18:36,012 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:18:36,207 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:18:36,208 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:18:36,209 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:18:36,212 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-27 10:18:36,407 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-27 10:18:36,412 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-27 10:18:36,413 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-27 10:18:36,414 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:18:36,414 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:18:36,415 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:18:36,415 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:18:36,607 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:18:36,608 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:18:36,609 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:18:36,609 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-27 10:18:36,807 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-27 10:18:36,808 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-27 10:18:36,809 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-27 10:18:36,810 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:18:36,810 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:18:36,811 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:18:36,812 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:18:36,812 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:18:37,007 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-27 10:18:37,008 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-27 10:18:37,009 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-27 10:18:37,010 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-27 10:18:37,207 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-27 10:18:37,208 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-27 10:18:37,239 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-27 10:18:37,240 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-27 10:18:37,241 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-27 10:18:37,241 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-27 10:18:37,242 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-27 10:18:37,407 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:18:37,408 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:18:37,409 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-27 10:18:37,410 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-27 10:18:37,607 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-27 10:18:37,608 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-27 10:18:37,610 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-27 10:18:37,610 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:18:37,611 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-27 10:18:37,612 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:18:37,612 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:18:37,613 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-27 10:18:37,809 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:18:37,809 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-27 10:18:37,810 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:18:37,811 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:18:37,811 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-27 10:18:37,812 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:18:38,009 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-27 10:18:38,009 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:18:38,010 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:18:38,011 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-27 10:18:38,011 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:18:38,012 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-27 10:18:38,013 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:18:38,208 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:18:38,209 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-27 10:18:38,209 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-27 10:18:38,210 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-27 10:18:38,211 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-27 10:18:38,211 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-27 10:18:38,212 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-27 10:18:38,408 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-27 10:18:38,409 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:18:38,410 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:18:38,410 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:18:38,411 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-27 10:18:38,412 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-27 10:18:38,412 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-27 10:18:38,608 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-27 10:18:38,609 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-27 10:18:38,610 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-27 10:18:38,611 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-27 10:18:38,612 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-27 10:18:38,808 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-27 10:18:38,813 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-27 10:18:38,814 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-27 10:18:38,816 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:18:39,009 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:18:39,009 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-27 10:18:39,010 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-27 10:18:39,011 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-27 10:18:39,208 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-27 10:18:39,209 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-27 10:18:39,209 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:18:39,210 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:18:39,211 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:18:39,211 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:18:39,212 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-27 10:18:39,408 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-27 10:18:39,409 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:18:39,409 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:18:39,410 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:18:39,414 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:18:39,415 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-27 10:18:39,415 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:18:39,416 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:18:40,230 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-27 10:18:40,230 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-27 10:18:40,231 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-27 10:18:40,234 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-27 10:18:40,421 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:18:40,441 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:18:40,442 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:18:40,443 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:18:40,623 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-27 10:18:40,624 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-27 10:18:40,625 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-27 10:18:40,625 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-27 10:18:40,819 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-27 10:18:40,820 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-27 10:18:40,822 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-27 10:18:40,823 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-27 10:18:40,824 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-27 10:18:40,825 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-27 10:18:40,825 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:18:40,826 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-27 10:18:41,018 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-27 10:18:41,019 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-27 10:18:41,020 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-27 10:18:41,021 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-27 10:18:41,021 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-27 10:18:41,218 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-27 10:18:41,219 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-27 10:18:41,220 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:18:41,220 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-27 10:18:41,221 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:41,222 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-27 10:18:41,223 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-27 10:18:41,422 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-27 10:18:41,427 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-27 10:18:41,428 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-27 10:18:41,429 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-27 10:18:41,429 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-27 10:18:41,621 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:18:41,622 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-27 10:18:41,623 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-27 10:18:41,624 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-27 10:18:41,821 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-27 10:18:41,822 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-27 10:18:41,822 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:41,823 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:18:41,824 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:41,825 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:41,826 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:18:42,021 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:18:42,022 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:18:42,023 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-27 10:18:42,023 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-27 10:18:42,024 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-27 10:18:42,025 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-27 10:18:42,221 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:18:42,222 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-27 10:18:42,223 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-27 10:18:42,223 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-27 10:18:42,224 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-27 10:18:42,421 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-27 10:18:42,426 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:42,427 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:18:42,427 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:42,428 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:42,429 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:18:42,430 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:18:42,621 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:18:42,622 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-27 10:18:42,623 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-27 10:18:42,623 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-27 10:18:42,624 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-27 10:18:42,625 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:18:42,625 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-27 10:18:42,821 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-27 10:18:42,822 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-27 10:18:42,823 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-27 10:18:42,824 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-27 10:18:43,021 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:43,022 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:18:43,023 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:43,023 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:43,024 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-27 10:18:43,025 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-27 10:18:43,025 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:18:43,221 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-27 10:18:43,226 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-27 10:18:43,227 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-27 10:18:43,227 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-27 10:18:43,228 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:18:43,229 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-27 10:18:43,421 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-27 10:18:43,422 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-27 10:18:43,423 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-27 10:18:43,423 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-27 10:18:43,424 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:43,621 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:18:43,626 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:43,627 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:43,627 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-27 10:18:43,628 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-27 10:18:43,629 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:18:43,630 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-27 10:18:43,821 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-27 10:18:43,822 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-27 10:18:43,823 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-27 10:18:43,823 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:18:43,824 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-27 10:18:44,021 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-27 10:18:44,026 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-27 10:18:44,027 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-27 10:18:44,027 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-27 10:18:44,028 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:44,225 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:18:44,230 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:44,231 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:44,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:18:44,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:18:44,233 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:18:44,234 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-27 10:18:44,422 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-27 10:18:44,424 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-27 10:18:44,425 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-27 10:18:44,475 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-27 10:18:44,476 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-27 10:18:44,477 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:44,479 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:44,623 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:18:44,625 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-27 10:18:44,627 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-27 10:18:44,628 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-27 10:18:44,823 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-27 10:18:44,824 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-27 10:18:44,825 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-27 10:18:44,825 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:44,827 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:18:44,828 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:44,829 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:44,829 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-27 10:18:45,023 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-27 10:18:45,024 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-27 10:18:45,025 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:18:45,027 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:18:45,028 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-27 10:18:45,030 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:18:45,031 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-27 10:18:45,223 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-27 10:18:45,226 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-27 10:18:45,227 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-27 10:18:45,229 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-27 10:18:45,230 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:45,423 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:18:45,425 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:45,427 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:45,429 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-27 10:18:45,430 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-27 10:18:45,434 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:18:45,436 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-27 10:18:45,438 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-27 10:18:45,622 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-27 10:18:45,623 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:18:45,624 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-27 10:18:45,624 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-27 10:18:45,822 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-27 10:18:45,823 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-27 10:18:45,824 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-27 10:18:45,825 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:18:45,825 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:18:45,826 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:18:45,827 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:18:45,828 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-27 10:18:46,022 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-27 10:18:46,023 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:18:46,024 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-27 10:18:46,024 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-27 10:18:46,025 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-27 10:18:46,027 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-27 10:18:46,028 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:18:46,029 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:18:46,222 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:18:46,223 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:18:52,718 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:18:52,719 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:18:52,719 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:18:52,720 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:19:28,018 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:19:28,020 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:19:28,021 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:19:28,026 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:19:28,147 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:19:28,150 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-27 10:19:28,151 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:19:28,152 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-27 10:20:48,416 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-27 10:20:48,447 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-27 10:20:48,455 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-27 10:20:48,458 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-27 10:20:48,460 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-27 10:20:48,460 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-27 10:20:48,461 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-27 10:20:48,462 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-27 10:20:48,463 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-27 10:20:48,464 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-27 10:20:48,465 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:20:48,465 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-27 10:20:48,644 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-27 10:20:48,645 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:20:48,657 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-27 10:20:48,659 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-27 10:20:48,660 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-27 10:20:48,661 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-27 10:20:48,661 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-27 10:20:48,664 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-27 10:20:48,682 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-27 10:20:48,691 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-27 10:20:48,845 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-27 10:20:48,846 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-27 10:20:48,847 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-27 10:20:48,848 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-27 10:20:48,849 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-27 10:20:48,851 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-27 10:20:48,852 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-27 10:20:48,867 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-27 10:20:49,045 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-27 10:20:49,046 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-27 10:20:49,046 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-27 10:20:49,047 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-27 10:20:49,050 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-27 10:20:49,051 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-27 10:20:49,052 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-27 10:20:49,053 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-27 10:20:49,054 [Thread: 10      ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-27 10:20:49,244 [Thread: 10      ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-27 10:20:49,245 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-27 10:20:49,246 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-27 10:20:49,247 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-27 10:20:49,248 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-27 10:20:49,249 [Thread: 10      ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-27 10:20:49,249 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-27 10:20:49,261 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:20:49,445 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:20:49,448 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-27 10:20:49,451 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-27 10:20:49,452 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-27 10:20:49,453 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-27 10:20:49,455 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-27 10:20:49,457 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-27 10:20:49,645 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-27 10:20:49,646 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-27 10:20:49,648 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-27 10:20:49,649 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-27 10:20:49,652 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-27 10:20:49,845 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-27 10:20:49,847 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-27 10:20:49,848 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-27 10:20:49,849 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-27 10:20:49,849 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:20:49,852 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-27 10:20:49,853 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-27 10:20:50,044 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-27 10:20:50,045 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-27 10:20:50,046 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-27 10:20:50,047 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-27 10:20:50,047 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-27 10:20:50,244 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-27 10:20:50,245 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:20:50,245 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:20:50,246 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:20:50,246 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:20:50,247 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-27 10:20:50,444 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-27 10:20:50,445 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-27 10:20:50,445 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-27 10:20:50,446 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-27 10:20:50,446 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-27 10:20:50,447 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:20:50,447 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:20:50,644 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:20:50,645 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:20:50,645 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:20:50,648 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-27 10:20:50,844 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-27 10:20:50,845 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-27 10:20:50,846 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-27 10:20:50,846 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:20:50,847 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:20:50,847 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:20:50,848 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:20:51,044 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:20:51,045 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:20:51,046 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:20:51,046 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-27 10:20:51,244 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-27 10:20:51,245 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-27 10:20:51,246 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-27 10:20:51,246 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:20:51,247 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:20:51,247 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:20:51,247 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:20:51,248 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:20:51,444 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-27 10:20:51,445 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-27 10:20:51,446 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-27 10:20:51,447 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-27 10:20:51,645 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-27 10:20:51,645 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-27 10:20:51,687 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-27 10:20:51,688 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-27 10:20:51,688 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-27 10:20:51,689 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-27 10:20:51,690 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-27 10:20:51,844 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:20:51,845 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:20:51,845 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-27 10:20:51,846 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-27 10:20:52,044 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-27 10:20:52,045 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-27 10:20:52,046 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-27 10:20:52,047 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:20:52,048 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-27 10:20:52,048 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:20:52,049 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:20:52,049 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-27 10:20:52,244 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:20:52,245 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-27 10:20:52,245 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:20:52,246 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:20:52,246 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-27 10:20:52,249 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:20:52,444 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-27 10:20:52,445 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:20:52,446 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:20:52,446 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-27 10:20:52,447 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:20:52,447 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-27 10:20:52,458 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:20:52,645 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:20:52,647 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-27 10:20:52,648 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-27 10:20:52,650 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-27 10:20:52,651 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-27 10:20:52,653 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-27 10:20:52,655 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-27 10:20:52,845 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-27 10:20:52,847 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:20:52,848 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:20:52,850 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:20:52,852 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-27 10:20:52,853 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-27 10:20:52,855 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-27 10:20:53,045 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-27 10:20:53,051 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-27 10:20:53,052 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-27 10:20:53,054 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-27 10:20:53,056 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-27 10:20:53,244 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-27 10:20:53,245 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-27 10:20:53,245 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-27 10:20:53,247 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:20:53,444 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:20:53,445 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-27 10:20:53,445 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-27 10:20:53,446 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-27 10:20:53,644 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-27 10:20:53,645 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-27 10:20:53,645 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:20:53,646 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:20:53,646 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:20:53,647 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:20:53,647 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-27 10:20:53,844 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-27 10:20:53,845 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:20:53,845 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:20:53,846 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:20:53,850 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:20:53,850 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-27 10:20:53,851 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:20:53,851 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:20:54,608 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-27 10:20:54,609 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-27 10:20:54,610 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-27 10:20:54,632 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-27 10:20:54,798 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:20:54,798 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:20:54,799 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:20:54,800 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:20:54,801 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-27 10:20:54,802 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-27 10:20:54,994 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-27 10:20:54,995 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-27 10:20:54,997 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-27 10:20:54,999 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-27 10:20:55,001 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-27 10:20:55,002 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-27 10:20:55,200 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-27 10:20:55,201 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-27 10:20:55,202 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:20:55,202 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-27 10:20:55,394 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-27 10:20:55,395 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-27 10:20:55,396 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-27 10:20:55,396 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-27 10:20:55,397 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-27 10:20:55,594 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-27 10:20:55,595 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-27 10:20:55,595 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:20:55,596 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-27 10:20:55,596 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:20:55,597 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-27 10:20:55,609 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-27 10:20:55,794 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-27 10:20:55,799 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-27 10:20:55,800 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-27 10:20:55,800 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-27 10:20:55,801 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-27 10:20:55,994 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:20:55,995 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-27 10:20:55,995 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-27 10:20:55,996 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-27 10:20:56,194 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-27 10:20:56,195 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-27 10:20:56,196 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:20:56,197 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:20:56,198 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:20:56,198 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:20:56,199 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:20:56,394 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:20:56,395 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:20:56,396 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-27 10:20:56,397 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-27 10:20:56,397 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-27 10:20:56,398 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-27 10:20:56,596 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:20:56,597 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-27 10:20:56,597 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-27 10:20:56,598 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-27 10:20:56,599 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-27 10:20:56,794 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-27 10:20:56,795 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:20:56,795 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:20:56,796 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:20:56,796 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:20:56,797 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:20:56,798 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:20:56,994 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:20:56,995 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-27 10:20:56,995 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-27 10:20:56,996 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-27 10:20:56,996 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-27 10:20:56,997 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:20:56,997 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-27 10:20:57,194 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-27 10:20:57,195 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-27 10:20:57,195 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-27 10:20:57,196 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-27 10:20:57,395 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:20:57,397 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:20:57,398 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:20:57,400 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:20:57,401 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-27 10:20:57,403 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-27 10:20:57,404 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:20:57,596 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-27 10:20:57,597 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-27 10:20:57,599 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-27 10:20:57,601 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-27 10:20:57,602 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:20:57,604 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-27 10:20:57,796 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-27 10:20:57,798 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-27 10:20:57,807 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-27 10:20:57,809 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-27 10:20:57,810 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:20:57,994 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:20:57,995 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:20:57,995 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:20:57,996 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-27 10:20:57,996 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-27 10:20:57,997 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:20:57,998 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-27 10:20:58,194 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-27 10:20:58,195 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-27 10:20:58,195 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-27 10:20:58,196 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:20:58,196 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-27 10:20:58,394 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-27 10:20:58,395 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-27 10:20:58,395 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-27 10:20:58,396 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-27 10:20:58,396 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:20:58,594 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:20:58,595 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:20:58,596 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:20:58,597 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:20:58,598 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:20:58,598 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:20:58,599 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-27 10:20:58,795 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-27 10:20:58,797 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-27 10:20:58,799 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-27 10:20:58,853 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-27 10:20:58,855 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-27 10:20:58,857 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:20:58,858 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:20:58,994 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:20:58,995 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-27 10:20:58,996 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-27 10:20:58,996 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-27 10:20:59,216 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-27 10:20:59,216 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-27 10:20:59,217 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-27 10:20:59,217 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:20:59,218 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:20:59,218 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:20:59,219 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:20:59,220 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-27 10:20:59,394 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-27 10:20:59,395 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-27 10:20:59,396 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:20:59,396 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:20:59,397 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-27 10:20:59,398 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:20:59,398 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-27 10:20:59,594 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-27 10:20:59,595 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-27 10:20:59,596 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-27 10:20:59,596 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-27 10:20:59,597 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:20:59,794 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:20:59,795 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:20:59,795 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:20:59,796 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-27 10:20:59,796 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-27 10:20:59,797 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:20:59,797 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-27 10:20:59,798 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-27 10:20:59,996 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-27 10:20:59,997 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:20:59,997 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-27 10:20:59,998 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-27 10:21:00,195 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-27 10:21:00,195 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-27 10:21:00,196 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-27 10:21:00,197 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:21:00,197 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:21:00,198 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:21:00,199 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:21:00,203 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-27 10:21:00,394 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-27 10:21:00,395 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:21:00,395 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-27 10:21:00,396 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-27 10:21:00,397 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-27 10:21:00,398 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-27 10:21:00,398 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:21:00,399 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:21:00,594 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:21:00,595 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:21:08,466 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:21:08,467 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:21:08,468 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:21:08,665 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:33:59,477 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:33:59,484 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:33:59,485 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:33:59,671 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:40:09,636 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-27 10:40:09,671 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-27 10:40:09,679 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-27 10:40:09,682 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-27 10:40:09,684 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-27 10:40:09,684 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-27 10:40:09,685 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-27 10:40:09,686 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-27 10:40:09,686 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-27 10:40:09,687 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-27 10:40:09,688 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:40:09,689 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-27 10:40:09,845 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-27 10:40:09,846 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-27 10:40:09,874 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-27 10:40:09,876 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-27 10:40:09,877 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-27 10:40:09,878 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-27 10:40:09,879 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-27 10:40:09,882 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-27 10:40:09,911 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-27 10:40:09,914 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-27 10:40:10,052 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-27 10:40:10,053 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-27 10:40:10,055 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-27 10:40:10,056 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-27 10:40:10,056 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-27 10:40:10,057 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-27 10:40:10,058 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-27 10:40:10,070 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-27 10:40:10,250 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-27 10:40:10,251 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-27 10:40:10,252 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-27 10:40:10,253 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-27 10:40:10,254 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-27 10:40:10,254 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-27 10:40:10,255 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-27 10:40:10,256 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-27 10:40:10,264 [Thread: 10      ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-27 10:40:10,450 [Thread: 10      ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-27 10:40:10,451 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-27 10:40:10,452 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-27 10:40:10,453 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-27 10:40:10,454 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-27 10:40:10,456 [Thread: 10      ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-27 10:40:10,457 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-27 10:40:10,469 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:40:10,652 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-27 10:40:10,653 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-27 10:40:10,656 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-27 10:40:10,657 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-27 10:40:10,658 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-27 10:40:10,660 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-27 10:40:10,661 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-27 10:40:10,855 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-27 10:40:10,856 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-27 10:40:10,858 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-27 10:40:10,860 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-27 10:40:10,862 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-27 10:40:11,054 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-27 10:40:11,055 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-27 10:40:11,056 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-27 10:40:11,058 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-27 10:40:11,058 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:40:11,059 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-27 10:40:11,060 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-27 10:40:11,253 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-27 10:40:11,254 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-27 10:40:11,255 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-27 10:40:11,255 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-27 10:40:11,256 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-27 10:40:11,453 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-27 10:40:11,454 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:40:11,454 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:40:11,455 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:40:11,456 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:40:11,456 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-27 10:40:11,653 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-27 10:40:11,654 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-27 10:40:11,654 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-27 10:40:11,655 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-27 10:40:11,656 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-27 10:40:11,656 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-27 10:40:11,657 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:40:11,853 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:40:11,854 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:40:11,856 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:40:11,859 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-27 10:40:12,053 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-27 10:40:12,054 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-27 10:40:12,059 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-27 10:40:12,060 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:40:12,061 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-27 10:40:12,062 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-27 10:40:12,062 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:40:12,253 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:40:12,254 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:40:12,255 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:40:12,255 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-27 10:40:12,453 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-27 10:40:12,454 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-27 10:40:12,455 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-27 10:40:12,455 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:40:12,456 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-27 10:40:12,457 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-27 10:40:12,458 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:40:12,458 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:40:12,653 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-27 10:40:12,654 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-27 10:40:12,655 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-27 10:40:12,656 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-27 10:40:12,854 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-27 10:40:12,854 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-27 10:40:12,897 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-27 10:40:12,897 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-27 10:40:12,898 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-27 10:40:12,899 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-27 10:40:12,900 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-27 10:40:13,053 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:40:13,054 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:40:13,055 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-27 10:40:13,055 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-27 10:40:13,258 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-27 10:40:13,258 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-27 10:40:13,260 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-27 10:40:13,260 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-27 10:40:13,261 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-27 10:40:13,262 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-27 10:40:13,262 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-27 10:40:13,263 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-27 10:40:13,457 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-27 10:40:13,458 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-27 10:40:13,459 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-27 10:40:13,459 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-27 10:40:13,460 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-27 10:40:13,461 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-27 10:40:13,657 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-27 10:40:13,658 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-27 10:40:13,659 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-27 10:40:13,660 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-27 10:40:13,660 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-27 10:40:13,661 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-27 10:40:13,661 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-27 10:40:13,857 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-27 10:40:13,858 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-27 10:40:13,859 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-27 10:40:13,859 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-27 10:40:13,860 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-27 10:40:13,861 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-27 10:40:13,862 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-27 10:40:14,057 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-27 10:40:14,058 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-27 10:40:14,059 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:40:14,059 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:40:14,060 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-27 10:40:14,060 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-27 10:40:14,061 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-27 10:40:14,258 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-27 10:40:14,262 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-27 10:40:14,263 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-27 10:40:14,264 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-27 10:40:14,266 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-27 10:40:14,458 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-27 10:40:14,459 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-27 10:40:14,461 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-27 10:40:14,464 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:40:14,657 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:40:14,658 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-27 10:40:14,659 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-27 10:40:14,660 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-27 10:40:14,857 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-27 10:40:14,858 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-27 10:40:14,859 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:40:14,859 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:40:14,860 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:40:14,861 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:40:14,862 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-27 10:40:15,057 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-27 10:40:15,058 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-27 10:40:15,059 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:40:15,059 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:40:15,065 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-27 10:40:15,065 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-27 10:40:15,066 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-27 10:40:15,067 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-27 10:40:15,860 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-27 10:40:15,865 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-27 10:40:16,037 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-27 10:40:16,038 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-27 10:40:16,038 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:40:16,039 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:40:16,040 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:40:16,041 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:40:16,042 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-27 10:40:16,265 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-27 10:40:16,279 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-27 10:40:16,437 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-27 10:40:16,439 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-27 10:40:16,440 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-27 10:40:16,441 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-27 10:40:16,441 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-27 10:40:16,442 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-27 10:40:16,443 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-27 10:40:16,443 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:40:16,637 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-27 10:40:16,638 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-27 10:40:16,639 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-27 10:40:16,639 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-27 10:40:16,837 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-27 10:40:16,838 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-27 10:40:16,839 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-27 10:40:16,839 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-27 10:40:16,840 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:40:16,841 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-27 10:40:16,841 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:16,842 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-27 10:40:17,037 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-27 10:40:17,038 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-27 10:40:17,043 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-27 10:40:17,044 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-27 10:40:17,045 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-27 10:40:17,237 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-27 10:40:17,238 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:40:17,239 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-27 10:40:17,239 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-27 10:40:17,437 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-27 10:40:17,442 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-27 10:40:17,443 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-27 10:40:17,444 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:17,444 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:40:17,445 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:17,637 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:17,643 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:40:17,644 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-27 10:40:17,644 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-27 10:40:17,645 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-27 10:40:17,646 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-27 10:40:17,646 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-27 10:40:17,837 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-27 10:40:17,838 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:40:17,839 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-27 10:40:17,839 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-27 10:40:18,037 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-27 10:40:18,038 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-27 10:40:18,039 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-27 10:40:18,040 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:18,040 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:40:18,041 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:18,042 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:18,238 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:40:18,238 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-27 10:40:18,239 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-27 10:40:18,240 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-27 10:40:18,240 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-27 10:40:18,241 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-27 10:40:18,242 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-27 10:40:18,437 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:40:18,438 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-27 10:40:18,439 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-27 10:40:18,439 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-27 10:40:18,637 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-27 10:40:18,638 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-27 10:40:18,639 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:18,639 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:40:18,640 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:18,641 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:18,641 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-27 10:40:18,837 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-27 10:40:18,838 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-27 10:40:18,839 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-27 10:40:18,840 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-27 10:40:18,840 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-27 10:40:18,841 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-27 10:40:18,842 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:40:19,042 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-27 10:40:19,044 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-27 10:40:19,046 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-27 10:40:19,047 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-27 10:40:19,242 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-27 10:40:19,244 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:19,245 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:40:19,247 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:19,249 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:19,251 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-27 10:40:19,253 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-27 10:40:19,442 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-27 10:40:19,443 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-27 10:40:19,444 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-27 10:40:19,445 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-27 10:40:19,446 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-27 10:40:19,447 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:40:19,449 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-27 10:40:19,644 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-27 10:40:19,646 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-27 10:40:19,647 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-27 10:40:19,652 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-27 10:40:19,844 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:19,845 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-27 10:40:19,847 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:19,849 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:19,851 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:40:19,853 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-27 10:40:20,043 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-27 10:40:20,044 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-27 10:40:20,045 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-27 10:40:20,047 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-27 10:40:20,048 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-27 10:40:20,103 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-27 10:40:20,113 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-27 10:40:20,116 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:20,243 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:20,244 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:40:20,245 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-27 10:40:20,246 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-27 10:40:20,445 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-27 10:40:20,446 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-27 10:40:20,448 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-27 10:40:20,449 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-27 10:40:20,450 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:20,450 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:40:20,451 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:20,452 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:20,644 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-27 10:40:20,644 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-27 10:40:20,645 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-27 10:40:20,648 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:40:20,649 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:40:20,651 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-27 10:40:20,651 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:40:20,652 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-27 10:40:20,843 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-27 10:40:20,844 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-27 10:40:20,845 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-27 10:40:20,846 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-27 10:40:21,043 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:21,044 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:40:21,045 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:21,046 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:21,046 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-27 10:40:21,047 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-27 10:40:21,048 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-27 10:40:21,048 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-27 10:40:21,243 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-27 10:40:21,244 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-27 10:40:21,245 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:40:21,245 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-27 10:40:21,443 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-27 10:40:21,444 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-27 10:40:21,445 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-27 10:40:21,446 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-27 10:40:21,446 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-27 10:40:21,447 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-27 10:40:21,448 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-27 10:40:21,643 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-27 10:40:21,644 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-27 10:40:21,645 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-27 10:40:21,646 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-27 10:40:21,646 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-27 10:40:21,647 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-27 10:40:21,648 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-27 10:40:21,650 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-27 10:40:21,843 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-27 10:40:21,844 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-27 10:40:21,845 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-27 10:40:21,846 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-27 10:40:29,192 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:40:29,193 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:40:29,194 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:40:29,348 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:52:15,705 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:52:15,722 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:52:15,723 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:52:15,901 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:58:39,701 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:58:39,702 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:58:39,702 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:58:39,898 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:59:41,343 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-27 10:59:41,346 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-27 10:59:41,347 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-27 10:59:41,348 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-27 10:59:41,498 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-27 10:59:41,500 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-27 10:59:41,500 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-27 10:59:41,501 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
