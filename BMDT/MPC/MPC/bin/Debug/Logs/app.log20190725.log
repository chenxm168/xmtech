2019-07-25 10:38:58,278 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 10:38:58,308 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 10:38:58,316 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 10:38:58,319 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 10:38:58,320 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 10:38:58,321 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 10:38:58,322 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 10:38:58,323 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 10:38:58,323 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 10:38:58,324 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 10:38:58,324 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:38:58,325 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 10:38:58,326 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 10:38:58,326 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:38:58,521 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 10:38:58,529 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 10:38:58,530 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 10:38:58,531 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 10:38:58,532 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 10:38:58,532 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 10:38:58,533 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 10:38:58,534 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 10:38:58,534 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 10:38:58,710 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 10:38:58,719 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 10:38:58,720 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 10:38:58,721 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 10:38:58,722 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 10:38:58,723 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 10:38:58,723 [Thread: 10      ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 10:38:58,724 [Thread: 10      ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 10:38:58,725 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 10:38:58,912 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 10:38:58,915 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 10:38:58,917 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 10:38:58,919 [Thread: 10      ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 10:38:58,921 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 10:38:58,945 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:38:58,947 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:38:58,949 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 10:38:59,116 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 10:38:59,119 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 10:38:59,121 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 10:38:59,123 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:38:59,126 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 10:38:59,129 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 10:38:59,312 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 10:38:59,319 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 10:38:59,322 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 10:38:59,328 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 10:38:59,331 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 10:38:59,512 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 10:38:59,515 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:38:59,517 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:38:59,518 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:38:59,520 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:38:59,521 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 10:38:59,711 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 10:38:59,714 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 10:38:59,716 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 10:38:59,724 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 10:38:59,726 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:38:59,728 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 10:38:59,910 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:38:59,911 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:38:59,940 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 10:38:59,941 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 10:38:59,942 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:38:59,942 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:38:59,943 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:38:59,943 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 10:39:00,110 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 10:39:00,111 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 10:39:00,112 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 10:39:00,113 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 10:39:00,310 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 10:39:00,311 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 10:39:00,311 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 10:39:00,312 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 10:39:00,313 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 10:39:00,510 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 10:39:00,512 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:39:00,513 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:39:00,513 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 10:39:00,710 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 10:39:00,711 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 10:39:00,712 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 10:39:00,712 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 10:39:00,713 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:39:00,714 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:39:00,717 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:39:00,910 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:39:00,911 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 10:39:00,912 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 10:39:00,914 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:39:00,915 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:39:00,916 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:39:00,920 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:39:01,110 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 10:39:01,111 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:39:01,112 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:39:01,604 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 10:39:01,605 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 10:39:01,605 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 10:39:01,606 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 10:39:01,802 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:39:01,802 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:39:01,803 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:39:01,804 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:39:01,805 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 10:39:01,805 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 10:39:01,806 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 10:39:02,000 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 10:39:02,002 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 10:39:02,003 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 10:39:02,004 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 10:39:02,004 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 10:39:02,005 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 10:39:02,006 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 10:39:02,006 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:39:02,214 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 10:39:02,215 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 10:39:02,216 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 10:39:02,217 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 10:39:02,218 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 10:39:02,400 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 10:39:02,401 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 10:39:02,401 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 10:39:02,402 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:39:02,403 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:39:02,403 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:39:02,404 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 10:39:02,405 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 10:39:02,600 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 10:39:02,606 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 10:39:02,607 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 10:39:02,607 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 10:39:02,800 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 10:39:02,801 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:39:02,801 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 10:39:02,802 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 10:39:03,001 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 10:39:03,002 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 10:39:03,003 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 10:39:03,003 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:39:03,004 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 10:39:03,005 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:39:03,005 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:39:03,200 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 10:39:03,201 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 10:39:03,202 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:39:03,203 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 10:39:03,203 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 10:39:03,207 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 10:39:03,208 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 10:39:03,269 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 10:39:03,400 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 10:39:03,401 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:39:03,402 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:39:03,402 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 10:39:03,403 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 10:39:03,404 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 10:39:03,600 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 10:39:03,601 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 10:39:03,602 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 10:39:03,603 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 10:39:03,603 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:39:03,604 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:39:03,800 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:39:03,810 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:39:03,811 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 10:39:03,812 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 10:39:03,812 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 10:39:03,813 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 10:39:03,814 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 10:39:03,815 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 10:39:04,001 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:39:04,004 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 10:39:04,005 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 10:39:04,006 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 10:39:04,202 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 10:39:04,203 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 10:39:04,205 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:39:04,207 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:39:04,208 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:39:04,210 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:39:04,219 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 10:39:04,221 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 10:39:04,401 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:39:04,403 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 10:39:04,405 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 10:39:04,406 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 10:39:04,408 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:39:04,410 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 10:39:04,601 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 10:39:04,603 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 10:39:04,605 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 10:39:04,606 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 10:39:04,608 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:39:04,801 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:39:04,806 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:39:04,808 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:39:04,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 10:39:04,813 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 10:39:04,815 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:39:04,817 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 10:39:04,819 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 10:39:05,001 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 10:39:05,002 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 10:39:05,004 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:39:05,005 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:39:05,005 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:39:05,006 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:40:19,256 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 10:40:19,289 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 10:40:19,297 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 10:40:19,300 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 10:40:19,301 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 10:40:19,302 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 10:40:19,303 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 10:40:19,304 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 10:40:19,304 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 10:40:19,305 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 10:40:19,306 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:40:19,306 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 10:40:19,481 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 10:40:19,482 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:40:19,493 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 10:40:19,499 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 10:40:19,500 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 10:40:19,501 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 10:40:19,502 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 10:40:19,502 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 10:40:19,503 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 10:40:19,503 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 10:40:19,681 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 10:40:19,682 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 10:40:19,691 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 10:40:19,692 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 10:40:19,693 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 10:40:19,694 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 10:40:19,694 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 10:40:19,696 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 10:40:19,881 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 10:40:19,882 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 10:40:19,883 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 10:40:19,885 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 10:40:19,886 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 10:40:19,886 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 10:40:19,887 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 10:40:19,904 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:40:20,082 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:40:20,084 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 10:40:20,086 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 10:40:20,088 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 10:40:20,089 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 10:40:20,090 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:40:20,092 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 10:40:20,093 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 10:40:20,295 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 10:40:20,298 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 10:40:20,299 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 10:40:20,301 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 10:40:20,483 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 10:40:20,483 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 10:40:20,485 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:40:20,485 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:40:20,486 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:40:20,487 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:40:20,488 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 10:40:20,681 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 10:40:20,682 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 10:40:20,683 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 10:40:20,686 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 10:40:20,687 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:40:20,881 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 10:40:20,882 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:40:20,882 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:40:20,909 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 10:40:20,910 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 10:40:20,911 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:40:20,911 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:40:20,912 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:40:21,081 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 10:40:21,082 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 10:40:21,082 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 10:40:21,083 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 10:40:21,285 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 10:40:21,285 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 10:40:21,286 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 10:40:21,286 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 10:40:21,287 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 10:40:21,287 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 10:40:21,484 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 10:40:21,486 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:40:21,487 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:40:21,488 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 10:40:21,684 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 10:40:21,685 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 10:40:21,686 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 10:40:21,686 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 10:40:21,688 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:40:21,689 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:40:21,884 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:40:21,885 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:40:21,888 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 10:40:21,889 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 10:40:21,890 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:40:21,890 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:40:21,891 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:40:22,087 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:40:22,088 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 10:40:22,088 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:40:22,089 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:40:22,593 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 10:40:22,593 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 10:40:22,774 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 10:40:22,775 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 10:40:22,776 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:40:22,776 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:40:22,777 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:40:22,777 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:40:22,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 10:40:22,975 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 10:40:22,977 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 10:40:22,978 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 10:40:22,982 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 10:40:22,984 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 10:40:22,986 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 10:40:22,987 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 10:40:22,989 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 10:40:23,175 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 10:40:23,177 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:40:23,178 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 10:40:23,180 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 10:40:23,181 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 10:40:23,376 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 10:40:23,378 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 10:40:23,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 10:40:23,380 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 10:40:23,381 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 10:40:23,383 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:40:23,384 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:40:23,575 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:40:23,577 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 10:40:23,579 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 10:40:23,580 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 10:40:23,592 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 10:40:23,776 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 10:40:23,777 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 10:40:23,779 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 10:40:23,781 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:40:23,794 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 10:40:23,974 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 10:40:23,991 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 10:40:23,991 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 10:40:23,992 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 10:40:23,992 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:40:23,993 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 10:40:24,174 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:40:24,175 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:40:24,176 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 10:40:24,176 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 10:40:24,177 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:40:24,178 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 10:40:24,178 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 10:40:24,375 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 10:40:24,376 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 10:40:24,422 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 10:40:24,423 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 10:40:24,424 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:40:24,425 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:40:24,426 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 10:40:24,428 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 10:40:24,574 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 10:40:24,575 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 10:40:24,576 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 10:40:24,576 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 10:40:24,774 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 10:40:24,777 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:40:24,777 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:40:24,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:40:24,778 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:40:24,779 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 10:40:24,780 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 10:40:24,780 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 10:40:24,974 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 10:40:24,975 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 10:40:24,975 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 10:40:24,976 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:40:24,977 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 10:40:25,174 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 10:40:25,175 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 10:40:25,176 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 10:40:25,176 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 10:40:25,177 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:40:25,177 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:40:25,178 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:40:25,374 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:40:25,378 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 10:40:25,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 10:40:25,380 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:40:25,380 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 10:40:25,380 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 10:40:25,381 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 10:40:25,381 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:40:25,574 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 10:40:25,584 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 10:40:25,585 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 10:40:25,586 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 10:40:25,774 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 10:40:25,775 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:40:25,775 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:40:25,776 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:40:25,776 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:40:25,777 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 10:40:25,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 10:40:25,778 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:40:25,974 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 10:40:25,975 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 10:40:25,976 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 10:40:25,977 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 10:40:25,978 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:40:25,979 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:40:25,979 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:40:25,980 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:45:52,981 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 10:45:53,015 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 10:45:53,023 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 10:45:53,026 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 10:45:53,027 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 10:45:53,028 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 10:45:53,029 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 10:45:53,030 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 10:45:53,030 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 10:45:53,031 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 10:45:53,031 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:45:53,032 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 10:45:53,215 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 10:45:53,216 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:45:53,228 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 10:45:53,234 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 10:45:53,235 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 10:45:53,236 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 10:45:53,237 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 10:45:53,238 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 10:45:53,239 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 10:45:53,240 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 10:45:53,415 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 10:45:53,417 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 10:45:53,430 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 10:45:53,431 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 10:45:53,432 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 10:45:53,433 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 10:45:53,433 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 10:45:53,434 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 10:45:53,615 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 10:45:53,616 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 10:45:53,617 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 10:45:53,619 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 10:45:53,620 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 10:45:53,621 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 10:45:53,622 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 10:45:53,634 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:45:53,817 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:45:53,818 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 10:45:53,821 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 10:45:53,823 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 10:45:53,824 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 10:45:53,826 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:45:53,828 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 10:45:53,829 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 10:45:54,015 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 10:45:54,019 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 10:45:54,020 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 10:45:54,022 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 10:45:54,216 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 10:45:54,217 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 10:45:54,218 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:45:54,219 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:45:54,220 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:45:54,221 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:45:54,222 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 10:45:54,415 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 10:45:54,416 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 10:45:54,417 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 10:45:54,421 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 10:45:54,421 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:45:54,615 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 10:45:54,616 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:45:54,616 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:45:54,644 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 10:45:54,645 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 10:45:54,646 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:45:54,647 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:45:54,647 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:45:54,815 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 10:45:54,816 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 10:45:54,817 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 10:45:54,817 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 10:45:55,016 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 10:45:55,016 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 10:45:55,017 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 10:45:55,018 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 10:45:55,019 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 10:45:55,020 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 10:45:55,215 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 10:45:55,217 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:45:55,218 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:45:55,219 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 10:45:55,415 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 10:45:55,416 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 10:45:55,417 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 10:45:55,418 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 10:45:55,418 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:45:55,419 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:45:55,615 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:45:55,616 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:45:55,620 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 10:45:55,621 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 10:45:55,621 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:45:55,622 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:45:55,623 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:45:55,818 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:45:55,819 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 10:45:55,820 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:45:55,821 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:45:56,328 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 10:45:56,505 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 10:45:56,506 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 10:45:56,507 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 10:45:56,508 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:45:56,509 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:45:56,509 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:45:56,510 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:45:56,707 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 10:45:56,709 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 10:45:56,710 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 10:45:56,712 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 10:45:56,715 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 10:45:56,718 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 10:45:56,719 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 10:45:56,721 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 10:45:56,906 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 10:45:56,908 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 10:45:56,910 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:45:56,911 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 10:45:56,913 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 10:45:57,107 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 10:45:57,109 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 10:45:57,110 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 10:45:57,112 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 10:45:57,112 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 10:45:57,113 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 10:45:57,114 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:45:57,115 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:45:57,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:45:57,308 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 10:45:57,310 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 10:45:57,312 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 10:45:57,520 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 10:45:57,523 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 10:45:57,525 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 10:45:57,527 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 10:45:57,529 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:45:57,531 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 10:45:57,705 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 10:45:57,706 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 10:45:57,707 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 10:45:57,707 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 10:45:57,708 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:45:57,708 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 10:45:57,905 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:45:57,906 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:45:57,907 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 10:45:57,909 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 10:45:57,910 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:45:57,911 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 10:45:57,912 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 10:45:58,107 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 10:45:58,108 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 10:45:58,163 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 10:45:58,166 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 10:45:58,168 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:45:58,170 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:45:58,171 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 10:45:58,172 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 10:45:58,305 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 10:45:58,306 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 10:45:58,307 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 10:45:58,307 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 10:45:58,505 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 10:45:58,506 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:45:58,507 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:45:58,508 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:45:58,508 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:45:58,509 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 10:45:58,510 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 10:45:58,511 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 10:45:58,705 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 10:45:58,706 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 10:45:58,707 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 10:45:58,707 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:45:58,708 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 10:45:58,905 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 10:45:58,906 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 10:45:58,907 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 10:45:58,912 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 10:45:58,913 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:45:58,913 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:45:58,914 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:45:59,105 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:45:59,106 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 10:45:59,107 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 10:45:59,108 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:45:59,109 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 10:45:59,109 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 10:45:59,110 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 10:45:59,305 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:45:59,306 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 10:45:59,307 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 10:45:59,308 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 10:45:59,505 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 10:45:59,506 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 10:45:59,507 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:45:59,507 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:45:59,508 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:45:59,509 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:45:59,510 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 10:45:59,511 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 10:45:59,713 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:45:59,714 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 10:45:59,715 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 10:45:59,716 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 10:45:59,717 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 10:45:59,718 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:45:59,719 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:45:59,720 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:45:59,905 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:46:29,569 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:46:29,571 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 10:46:29,572 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:46:29,573 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:46:47,491 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 10:46:47,521 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 10:46:47,529 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 10:46:47,532 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 10:46:47,533 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 10:46:47,534 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 10:46:47,535 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 10:46:47,536 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 10:46:47,536 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 10:46:47,537 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 10:46:47,538 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:46:47,538 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 10:46:47,709 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 10:46:47,714 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:46:47,726 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 10:46:47,732 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 10:46:47,733 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 10:46:47,734 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 10:46:47,735 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 10:46:47,736 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 10:46:47,737 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 10:46:47,738 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 10:46:47,919 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 10:46:47,920 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 10:46:47,930 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 10:46:47,931 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 10:46:47,932 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 10:46:47,933 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 10:46:47,934 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 10:46:47,935 [Thread: 10      ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 10:46:48,118 [Thread: 10      ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 10:46:48,119 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 10:46:48,120 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 10:46:48,121 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 10:46:48,122 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 10:46:48,123 [Thread: 10      ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 10:46:48,124 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 10:46:48,135 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:46:48,319 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:46:48,321 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 10:46:48,323 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 10:46:48,324 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 10:46:48,325 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 10:46:48,326 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:46:48,328 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 10:46:48,330 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 10:46:48,518 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 10:46:48,521 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 10:46:48,522 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 10:46:48,524 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 10:46:48,719 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 10:46:48,720 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 10:46:48,721 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:46:48,722 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:46:48,723 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:46:48,723 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:46:48,724 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 10:46:48,918 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 10:46:48,919 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 10:46:48,920 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 10:46:48,923 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 10:46:48,924 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:46:49,118 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 10:46:49,119 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:46:49,119 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:46:49,146 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 10:46:49,147 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 10:46:49,147 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:46:49,148 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:46:49,148 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:46:49,318 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 10:46:49,319 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 10:46:49,319 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 10:46:49,320 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 10:46:49,519 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 10:46:49,519 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 10:46:49,520 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 10:46:49,520 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 10:46:49,521 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 10:46:49,521 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 10:46:49,718 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 10:46:49,720 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:46:49,721 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:46:49,721 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 10:46:49,918 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 10:46:49,919 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 10:46:49,920 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 10:46:49,920 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 10:46:49,921 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:46:49,921 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:46:50,118 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:46:50,119 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:46:50,122 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 10:46:50,123 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 10:46:50,124 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:46:50,124 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:46:50,125 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:46:50,321 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:46:50,322 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 10:46:50,322 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:46:50,323 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:46:50,854 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 10:46:50,854 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 10:46:50,855 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 10:46:50,856 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 10:46:51,041 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:46:51,042 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:46:51,043 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:46:51,043 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:46:51,044 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 10:46:51,045 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 10:46:51,242 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 10:46:51,243 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 10:46:51,247 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 10:46:51,250 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 10:46:51,251 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 10:46:51,253 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 10:46:51,255 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 10:46:51,257 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 10:46:51,441 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:46:51,443 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 10:46:51,445 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 10:46:51,446 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 10:46:51,449 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 10:46:51,642 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 10:46:51,644 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 10:46:51,646 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 10:46:51,648 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 10:46:51,650 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:46:51,652 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:46:51,653 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:46:51,655 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 10:46:51,841 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 10:46:51,842 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 10:46:51,850 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 10:46:51,851 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 10:46:51,852 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 10:46:52,041 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 10:46:52,043 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:46:52,045 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 10:46:52,046 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 10:46:52,240 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 10:46:52,241 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 10:46:52,242 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 10:46:52,242 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:46:52,243 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 10:46:52,243 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:46:52,440 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:46:52,441 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 10:46:52,442 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 10:46:52,442 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:46:52,443 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 10:46:52,443 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 10:46:52,445 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 10:46:52,446 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 10:46:52,694 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 10:46:52,695 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 10:46:52,696 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:46:52,697 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:46:52,697 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 10:46:52,700 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 10:46:52,701 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 10:46:52,840 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 10:46:52,841 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 10:46:52,842 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 10:46:52,842 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 10:46:52,843 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:46:53,040 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:46:53,041 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:46:53,041 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:46:53,042 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 10:46:53,043 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 10:46:53,043 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 10:46:53,044 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 10:46:53,044 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 10:46:53,240 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 10:46:53,241 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:46:53,241 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 10:46:53,242 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 10:46:53,440 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 10:46:53,441 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 10:46:53,442 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 10:46:53,442 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:46:53,443 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:46:53,443 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:46:53,444 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:46:53,448 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 10:46:53,640 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 10:46:53,641 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:46:53,641 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 10:46:53,642 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 10:46:53,642 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 10:46:53,643 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:46:53,644 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 10:46:53,840 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 10:46:53,841 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 10:46:53,842 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 10:46:53,842 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 10:46:53,843 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:46:54,040 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:46:54,041 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:46:54,041 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:46:54,042 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 10:46:54,043 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 10:46:54,043 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:46:54,044 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 10:46:54,240 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 10:46:54,241 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 10:46:54,242 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 10:46:54,243 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:46:54,244 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:46:54,244 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:46:54,245 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:48:31,935 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:48:31,944 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 10:48:31,945 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:48:31,946 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:49:49,363 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 10:49:49,399 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 10:49:49,407 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 10:49:49,410 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 10:49:49,412 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 10:49:49,412 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 10:49:49,413 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 10:49:49,414 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 10:49:49,414 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 10:49:49,415 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 10:49:49,416 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:49:49,416 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 10:49:49,581 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 10:49:49,582 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:49:49,593 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 10:49:49,601 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 10:49:49,602 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 10:49:49,603 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 10:49:49,604 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 10:49:49,605 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 10:49:49,605 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 10:49:49,606 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 10:49:49,781 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 10:49:49,805 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 10:49:49,814 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 10:49:49,815 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 10:49:49,816 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 10:49:49,817 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 10:49:49,817 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 10:49:49,818 [Thread: 10      ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 10:49:49,981 [Thread: 10      ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 10:49:49,982 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 10:49:49,983 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 10:49:49,985 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 10:49:49,985 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 10:49:49,986 [Thread: 10      ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 10:49:49,987 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 10:49:49,998 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:49:50,188 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:49:50,190 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 10:49:50,192 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 10:49:50,194 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 10:49:50,195 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 10:49:50,196 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:49:50,198 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 10:49:50,200 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 10:49:50,390 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 10:49:50,392 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 10:49:50,393 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 10:49:50,396 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 10:49:50,585 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 10:49:50,586 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 10:49:50,588 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:49:50,589 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:49:50,589 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:49:50,590 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:49:50,591 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 10:49:50,784 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 10:49:50,790 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 10:49:50,791 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 10:49:50,794 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 10:49:50,795 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:49:50,984 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 10:49:50,985 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:49:50,985 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:49:51,012 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 10:49:51,014 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 10:49:51,014 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:49:51,015 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:49:51,016 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:49:51,184 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 10:49:51,185 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 10:49:51,186 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 10:49:51,187 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 10:49:51,384 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 10:49:51,385 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 10:49:51,386 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 10:49:51,386 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 10:49:51,387 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 10:49:51,387 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 10:49:51,585 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 10:49:51,590 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:49:51,592 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:49:51,594 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 10:49:51,796 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 10:49:51,798 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 10:49:51,799 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 10:49:51,801 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 10:49:51,802 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:49:51,803 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:49:51,996 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:49:51,997 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:49:52,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 10:49:52,009 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 10:49:52,011 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:49:52,013 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:49:52,014 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:49:52,204 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:49:52,206 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 10:49:52,207 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:49:52,209 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:49:52,711 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 10:49:52,885 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 10:49:52,886 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 10:49:52,886 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 10:49:52,887 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:49:52,887 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:49:52,888 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:49:52,890 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:49:53,084 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 10:49:53,085 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 10:49:53,086 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 10:49:53,086 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 10:49:53,088 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 10:49:53,088 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 10:49:53,089 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 10:49:53,090 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 10:49:53,284 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 10:49:53,296 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 10:49:53,296 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:49:53,297 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 10:49:53,299 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 10:49:53,484 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 10:49:53,485 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 10:49:53,486 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 10:49:53,486 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 10:49:53,487 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 10:49:53,487 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 10:49:53,488 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:49:53,488 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:49:53,684 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:49:53,685 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 10:49:53,685 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 10:49:53,686 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 10:49:53,889 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 10:49:53,889 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 10:49:53,890 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 10:49:53,891 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 10:49:53,891 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:49:53,892 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 10:49:54,084 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 10:49:54,085 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 10:49:54,086 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 10:49:54,086 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 10:49:54,087 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:49:54,088 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 10:49:54,284 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:49:54,285 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:49:54,286 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 10:49:54,286 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 10:49:54,287 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:49:54,287 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 10:49:54,288 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 10:49:54,486 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 10:49:54,487 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 10:49:54,534 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 10:49:54,537 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 10:49:54,538 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:49:54,540 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:49:54,541 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 10:49:54,542 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 10:49:54,684 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 10:49:54,685 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 10:49:54,686 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 10:49:54,686 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 10:49:54,884 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 10:49:54,885 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:49:54,885 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:49:54,886 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:49:54,886 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:49:54,887 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 10:49:54,888 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 10:49:54,888 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 10:49:55,084 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 10:49:55,085 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 10:49:55,085 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 10:49:55,086 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:49:55,087 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 10:49:55,284 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 10:49:55,285 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 10:49:55,286 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 10:49:55,287 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 10:49:55,288 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:49:55,288 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:49:55,289 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:49:55,484 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:49:55,485 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 10:49:55,486 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 10:49:55,486 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:49:55,487 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 10:49:55,488 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 10:49:55,488 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 10:49:55,684 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:49:55,685 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 10:49:55,685 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 10:49:55,686 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 10:49:55,884 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 10:49:55,885 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 10:49:55,885 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:49:55,886 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:49:55,887 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:49:55,887 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:49:55,888 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 10:49:55,889 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 10:49:56,084 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:49:56,085 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 10:49:56,086 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 10:49:56,087 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 10:49:56,088 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 10:49:56,089 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:49:56,090 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:49:56,091 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:49:56,284 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:50:02,155 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:50:02,156 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 10:50:02,157 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:50:02,158 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:50:53,441 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 10:50:53,478 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 10:50:53,490 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 10:50:53,493 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 10:50:53,495 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 10:50:53,496 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 10:50:53,496 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 10:50:53,497 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 10:50:53,498 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 10:50:53,499 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 10:50:53,499 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:50:53,500 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 10:50:53,656 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 10:50:53,657 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:50:53,672 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 10:50:53,678 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 10:50:53,679 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 10:50:53,680 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 10:50:53,681 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 10:50:53,682 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 10:50:53,683 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 10:50:53,684 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 10:50:53,856 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 10:50:53,857 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 10:50:53,867 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 10:50:53,868 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 10:50:53,869 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 10:50:53,870 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 10:50:53,871 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 10:50:53,872 [Thread: 8       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 10:50:54,056 [Thread: 8       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 10:50:54,057 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 10:50:54,058 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 10:50:54,060 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 10:50:54,061 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 10:50:54,062 [Thread: 8       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 10:50:54,063 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 10:50:54,074 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:50:54,258 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:50:54,259 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 10:50:54,262 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 10:50:54,263 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 10:50:54,264 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 10:50:54,266 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:50:54,268 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 10:50:54,269 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 10:50:54,456 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 10:50:54,468 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 10:50:54,469 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 10:50:54,472 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 10:50:54,657 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 10:50:54,658 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 10:50:54,659 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:50:54,660 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:50:54,661 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:50:54,661 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:50:54,662 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 10:50:54,856 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 10:50:54,858 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 10:50:54,859 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 10:50:54,862 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 10:50:54,863 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:50:55,056 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 10:50:55,057 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:50:55,057 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:50:55,085 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 10:50:55,086 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 10:50:55,087 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:50:55,087 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:50:55,088 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:50:55,256 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 10:50:55,257 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 10:50:55,257 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 10:50:55,258 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 10:50:55,457 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 10:50:55,457 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 10:50:55,458 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 10:50:55,459 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 10:50:55,460 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 10:50:55,461 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 10:50:55,661 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 10:50:55,663 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:50:55,664 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:50:55,665 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 10:50:55,856 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 10:50:55,857 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 10:50:55,858 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 10:50:55,858 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 10:50:55,859 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:50:55,859 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:50:56,056 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:50:56,057 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:50:56,061 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 10:50:56,062 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 10:50:56,073 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:50:56,074 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:50:56,075 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:50:56,259 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:50:56,260 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 10:50:56,261 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:50:56,261 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:50:56,750 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 10:50:56,751 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 10:50:56,752 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 10:50:56,752 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 10:50:56,946 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:50:56,951 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:50:56,956 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:50:56,961 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:50:56,962 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 10:50:56,963 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 10:50:56,963 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 10:50:57,147 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 10:50:57,151 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 10:50:57,153 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 10:50:57,154 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 10:50:57,156 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 10:50:57,158 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 10:50:57,160 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 10:50:57,161 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:50:57,347 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 10:50:57,349 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 10:50:57,351 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 10:50:57,353 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 10:50:57,354 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 10:50:57,547 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 10:50:57,549 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 10:50:57,551 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 10:50:57,552 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:50:57,554 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:50:57,556 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:50:57,557 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 10:50:57,559 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 10:50:57,747 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 10:50:57,761 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 10:50:57,763 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 10:50:57,765 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 10:50:57,947 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 10:50:57,949 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:50:57,954 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 10:50:57,955 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 10:50:58,146 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 10:50:58,151 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 10:50:58,156 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 10:50:58,161 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:50:58,166 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 10:50:58,171 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:50:58,175 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:50:58,347 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 10:50:58,347 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 10:50:58,348 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:50:58,349 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 10:50:58,349 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 10:50:58,351 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 10:50:58,352 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 10:50:58,402 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 10:50:58,546 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 10:50:58,547 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:50:58,548 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:50:58,548 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 10:50:58,549 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 10:50:58,550 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 10:50:58,758 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 10:50:58,759 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 10:50:58,760 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 10:50:58,761 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 10:50:58,762 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:50:58,763 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:50:58,946 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:50:58,947 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:50:58,948 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 10:50:58,949 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 10:50:58,949 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 10:50:58,950 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 10:50:58,950 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 10:50:58,951 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 10:50:59,146 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:50:59,147 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 10:50:59,148 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 10:50:59,149 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 10:50:59,346 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 10:50:59,347 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 10:50:59,348 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:50:59,348 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:50:59,349 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:50:59,350 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:50:59,354 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 10:50:59,355 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 10:50:59,546 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:50:59,547 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 10:50:59,548 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 10:50:59,548 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 10:50:59,549 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:50:59,550 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 10:50:59,746 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 10:50:59,747 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 10:50:59,748 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 10:50:59,749 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 10:50:59,749 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:50:59,946 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:50:59,947 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:50:59,948 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:50:59,948 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 10:50:59,949 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 10:50:59,950 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:50:59,950 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 10:50:59,951 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 10:51:00,147 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 10:51:00,152 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 10:51:00,157 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:51:00,162 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:51:00,167 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:51:00,172 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:51:45,579 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:51:45,581 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 10:51:45,583 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:51:45,585 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:52:37,925 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 10:52:37,964 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 10:52:37,973 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 10:52:37,977 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 10:52:37,979 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 10:52:37,980 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 10:52:37,981 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 10:52:37,981 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 10:52:37,982 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 10:52:37,983 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 10:52:37,984 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:52:37,984 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 10:52:38,150 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 10:52:38,151 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:52:38,162 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 10:52:38,169 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 10:52:38,170 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 10:52:38,172 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 10:52:38,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 10:52:38,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 10:52:38,174 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 10:52:38,175 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 10:52:38,350 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 10:52:38,351 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 10:52:38,361 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 10:52:38,362 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 10:52:38,363 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 10:52:38,364 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 10:52:38,365 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 10:52:38,366 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 10:52:38,550 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 10:52:38,551 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 10:52:38,552 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 10:52:38,553 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 10:52:38,554 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 10:52:38,556 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 10:52:38,557 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 10:52:38,568 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:52:38,751 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:52:38,753 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 10:52:38,755 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 10:52:38,757 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 10:52:38,758 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 10:52:38,759 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:52:38,761 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 10:52:38,763 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 10:52:38,950 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 10:52:38,953 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 10:52:38,954 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 10:52:38,956 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 10:52:39,151 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 10:52:39,152 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 10:52:39,153 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:52:39,154 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:52:39,155 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:52:39,156 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:52:39,157 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 10:52:39,350 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 10:52:39,351 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 10:52:39,352 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 10:52:39,356 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 10:52:39,356 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:52:39,557 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 10:52:39,558 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:52:39,559 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:52:39,586 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 10:52:39,588 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 10:52:39,588 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:52:39,589 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:52:39,590 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:52:39,750 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 10:52:39,751 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 10:52:39,752 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 10:52:39,753 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 10:52:39,950 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 10:52:39,951 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 10:52:39,952 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 10:52:39,953 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 10:52:39,954 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 10:52:39,954 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 10:52:40,175 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 10:52:40,177 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:52:40,178 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:52:40,179 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 10:52:40,350 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 10:52:40,351 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 10:52:40,352 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 10:52:40,353 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 10:52:40,353 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:52:40,354 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:52:40,550 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:52:40,551 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:52:40,555 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 10:52:40,556 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 10:52:40,556 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 10:52:40,557 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:52:40,558 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:52:40,753 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 10:52:40,754 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 10:52:40,755 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 10:52:40,755 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 10:52:41,310 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 10:52:41,312 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 10:52:41,313 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 10:52:41,314 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 10:52:41,314 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:52:41,315 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:52:41,316 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:52:41,316 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:52:41,513 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 10:52:41,515 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 10:52:41,517 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 10:52:41,519 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 10:52:41,522 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 10:52:41,524 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 10:52:41,526 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 10:52:41,713 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 10:52:41,715 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 10:52:41,719 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 10:52:41,720 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:52:41,722 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 10:52:41,729 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 10:52:41,913 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 10:52:41,915 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 10:52:41,917 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 10:52:41,919 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 10:52:41,920 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 10:52:41,922 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 10:52:41,924 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:52:42,113 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:52:42,115 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:52:42,117 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 10:52:42,118 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 10:52:42,120 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 10:52:42,317 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 10:52:42,318 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 10:52:42,318 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 10:52:42,319 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 10:52:42,320 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:52:42,321 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 10:52:42,512 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 10:52:42,513 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 10:52:42,516 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 10:52:42,517 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 10:52:42,517 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:52:42,712 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 10:52:42,713 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:52:42,714 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:52:42,715 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 10:52:42,716 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 10:52:42,717 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 10:52:42,717 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 10:52:42,912 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 10:52:42,914 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 10:52:42,915 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 10:52:42,971 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 10:52:42,973 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 10:52:42,976 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:52:42,978 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:52:42,979 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 10:52:43,112 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 10:52:43,113 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 10:52:43,114 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 10:52:43,115 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 10:52:43,312 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 10:52:43,323 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 10:52:43,328 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:52:43,329 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:52:43,329 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:52:43,330 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:52:43,331 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 10:52:43,332 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 10:52:43,512 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 10:52:43,513 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 10:52:43,514 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 10:52:43,516 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 10:52:43,517 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:52:43,518 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 10:52:43,712 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 10:52:43,713 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 10:52:43,714 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 10:52:43,715 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 10:52:43,716 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:52:43,716 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:52:43,912 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:52:43,913 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:52:43,917 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 10:52:43,917 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 10:52:43,918 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 10:52:43,919 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 10:52:43,919 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 10:52:43,920 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 10:52:44,112 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:52:44,113 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 10:52:44,114 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 10:52:44,115 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 10:52:44,312 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 10:52:44,315 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 10:52:44,337 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 10:52:44,338 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 10:52:44,338 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 10:52:44,339 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 10:52:44,340 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 10:52:44,512 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 10:52:44,513 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 10:52:44,514 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 10:52:44,515 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 10:52:44,516 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 10:52:44,518 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 10:52:44,519 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:52:44,519 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 10:52:44,712 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 10:52:44,713 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 10:58:33,901 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 10:58:33,902 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 10:58:33,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 10:58:33,908 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 10:59:58,519 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 10:59:58,555 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 10:59:58,563 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 10:59:58,566 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 10:59:58,568 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 10:59:58,569 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 10:59:58,570 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 10:59:58,570 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 10:59:58,571 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 10:59:58,572 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 10:59:58,572 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:59:58,573 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 10:59:58,753 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 10:59:58,754 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 10:59:58,765 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 10:59:58,772 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 10:59:58,773 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 10:59:58,774 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 10:59:58,775 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 10:59:58,775 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 10:59:58,776 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 10:59:58,777 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 10:59:58,953 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 10:59:58,954 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 10:59:58,965 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 10:59:58,966 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 10:59:58,967 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 10:59:58,968 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 10:59:58,969 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 10:59:58,969 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 10:59:59,153 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 10:59:59,154 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 10:59:59,155 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 10:59:59,156 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 10:59:59,157 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 10:59:59,158 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 10:59:59,159 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 10:59:59,170 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:59:59,354 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 10:59:59,356 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 10:59:59,358 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 10:59:59,359 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 10:59:59,360 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 10:59:59,362 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 10:59:59,363 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 10:59:59,365 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 10:59:59,553 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 10:59:59,556 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 10:59:59,557 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 10:59:59,559 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 10:59:59,754 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 10:59:59,755 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 10:59:59,756 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 10:59:59,757 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 10:59:59,758 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 10:59:59,758 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 10:59:59,759 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 10:59:59,953 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 10:59:59,955 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 10:59:59,955 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 10:59:59,960 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 10:59:59,961 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:00:00,153 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 11:00:00,154 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:00:00,154 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:00:00,182 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 11:00:00,200 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 11:00:00,201 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:00:00,202 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:00:00,203 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:00:00,353 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 11:00:00,354 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 11:00:00,354 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 11:00:00,355 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 11:00:00,553 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 11:00:00,554 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 11:00:00,555 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 11:00:00,555 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 11:00:00,556 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 11:00:00,556 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 11:00:00,753 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 11:00:00,755 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:00:00,756 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:00:00,757 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 11:00:00,953 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 11:00:00,954 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 11:00:00,955 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 11:00:00,955 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 11:00:00,956 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:00:00,956 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:00:01,153 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:00:01,154 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:00:01,158 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 11:00:01,159 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 11:00:01,160 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:00:01,161 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:00:01,161 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:00:01,356 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:00:01,357 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 11:00:01,357 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:00:01,358 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:00:01,875 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 11:00:01,876 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 11:00:01,876 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 11:00:01,877 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 11:00:02,073 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:00:02,074 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:00:02,074 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:00:02,075 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:00:02,076 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 11:00:02,076 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 11:00:02,077 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 11:00:02,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 11:00:02,277 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 11:00:02,279 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 11:00:02,281 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 11:00:02,283 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 11:00:02,284 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 11:00:02,286 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 11:00:02,287 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:00:02,474 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 11:00:02,476 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 11:00:02,478 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 11:00:02,480 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 11:00:02,482 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 11:00:02,674 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 11:00:02,676 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 11:00:02,678 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 11:00:02,680 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:00:02,682 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 11:00:02,684 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:00:02,686 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 11:00:02,688 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 11:00:02,874 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 11:00:02,888 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 11:00:02,890 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 11:00:02,892 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 11:00:03,074 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 11:00:03,076 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:00:03,078 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 11:00:03,079 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 11:00:03,274 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 11:00:03,274 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 11:00:03,275 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 11:00:03,275 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:00:03,276 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 11:00:03,276 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:00:03,277 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:00:03,473 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 11:00:03,474 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 11:00:03,475 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:00:03,475 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 11:00:03,476 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 11:00:03,478 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 11:00:03,478 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 11:00:03,525 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 11:00:03,674 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 11:00:03,688 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:00:03,689 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:00:03,690 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 11:00:03,690 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 11:00:03,691 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 11:00:03,873 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 11:00:03,874 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 11:00:03,875 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 11:00:03,875 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 11:00:03,876 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:00:03,877 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:00:04,073 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:00:04,074 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:00:04,075 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 11:00:04,075 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 11:00:04,076 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 11:00:04,076 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 11:00:04,077 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 11:00:04,077 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 11:00:04,273 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:00:04,274 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 11:00:04,274 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 11:00:04,275 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 11:00:04,473 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 11:00:04,474 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 11:00:04,474 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:00:04,475 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:00:04,476 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:00:04,476 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:00:04,480 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 11:00:04,480 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 11:00:04,673 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:00:04,674 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 11:00:04,674 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 11:00:04,675 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 11:00:04,675 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:00:04,676 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 11:00:04,873 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 11:00:04,874 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 11:00:04,875 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 11:00:04,875 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 11:00:04,876 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:00:05,073 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:00:05,074 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:00:05,074 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:00:05,075 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 11:00:05,076 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 11:00:05,076 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:00:05,077 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 11:00:05,077 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 11:00:05,274 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 11:00:05,275 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 11:00:05,276 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:00:05,276 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:00:05,277 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:00:05,277 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:03:18,299 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 11:03:18,332 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 11:03:18,343 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 11:03:18,346 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 11:03:18,348 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 11:03:18,349 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 11:03:18,350 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 11:03:18,351 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 11:03:18,352 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 11:03:18,352 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 11:03:18,353 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:03:18,354 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 11:03:18,517 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 11:03:18,518 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:03:18,529 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 11:03:18,536 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 11:03:18,537 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 11:03:18,539 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 11:03:18,539 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 11:03:18,540 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 11:03:18,541 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 11:03:18,542 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 11:03:18,717 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 11:03:18,718 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 11:03:18,730 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 11:03:18,731 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 11:03:18,732 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 11:03:18,733 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 11:03:18,735 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 11:03:18,736 [Thread: 8       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 11:03:18,917 [Thread: 8       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 11:03:18,918 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 11:03:18,919 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 11:03:18,923 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 11:03:18,924 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 11:03:18,924 [Thread: 8       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 11:03:18,925 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 11:03:18,936 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:03:19,118 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:03:19,120 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 11:03:19,122 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 11:03:19,123 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 11:03:19,124 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 11:03:19,126 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:03:19,127 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 11:03:19,129 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 11:03:19,317 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 11:03:19,320 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 11:03:19,321 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 11:03:19,323 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 11:03:19,518 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 11:03:19,520 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 11:03:19,521 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:03:19,522 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:03:19,523 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:03:19,524 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:03:19,524 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 11:03:19,717 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 11:03:19,718 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 11:03:19,719 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 11:03:19,722 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 11:03:19,723 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:03:19,917 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 11:03:19,918 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:03:19,919 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:03:19,946 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 11:03:19,947 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 11:03:19,948 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:03:19,948 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:03:19,949 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:03:20,117 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 11:03:20,118 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 11:03:20,118 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 11:03:20,119 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 11:03:20,317 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 11:03:20,318 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 11:03:20,319 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 11:03:20,320 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 11:03:20,320 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 11:03:20,321 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 11:03:20,529 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 11:03:20,531 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:03:20,532 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:03:20,532 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 11:03:20,717 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 11:03:20,718 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 11:03:20,719 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 11:03:20,719 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 11:03:20,720 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:03:20,721 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:03:20,917 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:03:20,918 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:03:20,922 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 11:03:20,922 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 11:03:20,923 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:03:20,924 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:03:20,924 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:03:21,120 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:03:21,121 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 11:03:21,122 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:03:21,122 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:03:21,683 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 11:03:21,684 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 11:03:21,685 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 11:03:21,686 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 11:03:21,868 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:03:21,870 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:03:21,872 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:03:21,873 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:03:21,876 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 11:03:21,877 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 11:03:22,068 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 11:03:22,070 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 11:03:22,073 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 11:03:22,076 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 11:03:22,078 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 11:03:22,079 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 11:03:22,081 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 11:03:22,083 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 11:03:22,269 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:03:22,270 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 11:03:22,272 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 11:03:22,274 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 11:03:22,276 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 11:03:22,468 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 11:03:22,470 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 11:03:22,472 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 11:03:22,474 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 11:03:22,475 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:03:22,477 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 11:03:22,479 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:03:22,481 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 11:03:22,668 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 11:03:22,670 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 11:03:22,684 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 11:03:22,686 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 11:03:22,688 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 11:03:22,867 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 11:03:22,868 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:03:22,868 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 11:03:22,869 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 11:03:23,067 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 11:03:23,068 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 11:03:23,069 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 11:03:23,070 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:03:23,070 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 11:03:23,071 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:03:23,267 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:03:23,268 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 11:03:23,269 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 11:03:23,270 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:03:23,270 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 11:03:23,271 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 11:03:23,273 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 11:03:23,275 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 11:03:23,522 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 11:03:23,528 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 11:03:23,529 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:03:23,530 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:03:23,532 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 11:03:23,533 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 11:03:23,533 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 11:03:23,667 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 11:03:23,668 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 11:03:23,669 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 11:03:23,669 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 11:03:23,670 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:03:23,867 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:03:23,868 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:03:23,868 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:03:23,869 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 11:03:23,870 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 11:03:23,870 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 11:03:23,871 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 11:03:23,871 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 11:03:24,067 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 11:03:24,068 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:03:24,068 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 11:03:24,069 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 11:03:24,267 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 11:03:24,268 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 11:03:24,269 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 11:03:24,269 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:03:24,270 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:03:24,270 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:03:24,271 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:03:24,274 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 11:03:24,467 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 11:03:24,468 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:03:24,468 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 11:03:24,469 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 11:03:24,469 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 11:03:24,470 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:03:24,471 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 11:03:24,667 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 11:03:24,668 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 11:03:24,669 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 11:03:24,669 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 11:03:24,670 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:03:24,867 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:03:24,868 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:03:24,869 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:03:24,869 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 11:03:24,870 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 11:03:24,871 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:03:24,871 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 11:03:25,067 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 11:03:25,068 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 11:03:25,069 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 11:03:25,070 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:03:25,071 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:03:25,072 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:03:25,072 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:04:54,366 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 11:04:54,398 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 11:04:54,409 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 11:04:54,412 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 11:04:54,414 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 11:04:54,415 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 11:04:54,416 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 11:04:54,417 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 11:04:54,417 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 11:04:54,418 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:04:54,419 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:04:54,419 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 11:04:54,585 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:04:54,586 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:04:54,597 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 11:04:54,604 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 11:04:54,604 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 11:04:54,606 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 11:04:54,606 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 11:04:54,607 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 11:04:54,608 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 11:04:54,608 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 11:04:54,785 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 11:04:54,786 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 11:04:54,796 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 11:04:54,796 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 11:04:54,797 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 11:04:54,798 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 11:04:54,799 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 11:04:54,800 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 11:04:54,985 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 11:04:54,986 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 11:04:54,987 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 11:04:54,988 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 11:04:54,989 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 11:04:54,989 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 11:04:54,990 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 11:04:55,001 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:04:55,186 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:04:55,188 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 11:04:55,190 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 11:04:55,191 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 11:04:55,192 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 11:04:55,193 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:04:55,195 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 11:04:55,196 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 11:04:55,385 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 11:04:55,388 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 11:04:55,389 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 11:04:55,391 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 11:04:55,586 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 11:04:55,587 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 11:04:55,588 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:04:55,589 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:04:55,589 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:04:55,590 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:04:55,590 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 11:04:55,801 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 11:04:55,802 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 11:04:55,803 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 11:04:55,806 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 11:04:55,807 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:04:55,985 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 11:04:55,986 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:04:55,986 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:04:56,013 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 11:04:56,014 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 11:04:56,015 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:04:56,016 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:04:56,016 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:04:56,185 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 11:04:56,186 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 11:04:56,186 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 11:04:56,187 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 11:04:56,385 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 11:04:56,386 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 11:04:56,387 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 11:04:56,387 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 11:04:56,388 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 11:04:56,388 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 11:04:56,593 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 11:04:56,595 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:04:56,596 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:04:56,597 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 11:04:56,785 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 11:04:56,786 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 11:04:56,787 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 11:04:56,787 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 11:04:56,788 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:04:56,788 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:04:56,985 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:04:56,986 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:04:56,989 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 11:04:56,990 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 11:04:56,991 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:04:56,991 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:04:56,992 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:04:57,188 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:04:57,189 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 11:04:57,189 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:04:57,190 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:04:57,720 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 11:04:57,722 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 11:04:57,723 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 11:04:57,724 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 11:04:57,906 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:04:57,907 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:04:57,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:04:57,908 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:04:57,909 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 11:04:57,910 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 11:04:57,911 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 11:04:58,106 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 11:04:58,110 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 11:04:58,112 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 11:04:58,114 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 11:04:58,115 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 11:04:58,117 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 11:04:58,118 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 11:04:58,120 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:04:58,306 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 11:04:58,307 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 11:04:58,308 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 11:04:58,310 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 11:04:58,312 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 11:04:58,506 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 11:04:58,508 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 11:04:58,510 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 11:04:58,511 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:04:58,513 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 11:04:58,514 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:04:58,516 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 11:04:58,518 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 11:04:58,707 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 11:04:58,720 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 11:04:58,722 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 11:04:58,723 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 11:04:58,906 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 11:04:58,908 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:04:58,909 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 11:04:58,911 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 11:04:59,105 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 11:04:59,106 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 11:04:59,107 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 11:04:59,110 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:04:59,110 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 11:04:59,111 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:04:59,111 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:04:59,305 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 11:04:59,306 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 11:04:59,307 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:04:59,307 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 11:04:59,308 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 11:04:59,310 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 11:04:59,310 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 11:04:59,374 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 11:04:59,505 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 11:04:59,506 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:04:59,506 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:04:59,507 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 11:04:59,508 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 11:04:59,508 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 11:04:59,715 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 11:04:59,716 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 11:04:59,716 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 11:04:59,717 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 11:04:59,718 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:04:59,718 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:04:59,905 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:04:59,906 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:04:59,907 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 11:04:59,907 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 11:04:59,908 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 11:04:59,908 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 11:04:59,909 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 11:04:59,910 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 11:05:00,105 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:05:00,106 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 11:05:00,107 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 11:05:00,108 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 11:05:00,305 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 11:05:00,306 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 11:05:00,306 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:05:00,307 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:05:00,307 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:05:00,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:05:00,311 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 11:05:00,312 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 11:05:00,505 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:05:00,506 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 11:05:00,506 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 11:05:00,507 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 11:05:00,507 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:05:00,508 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 11:05:00,705 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 11:05:00,706 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 11:05:00,706 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 11:05:00,707 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 11:05:00,707 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:05:00,905 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:05:00,906 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:05:00,906 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:05:00,907 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 11:05:00,908 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 11:05:00,908 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:05:00,909 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 11:05:00,909 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 11:05:01,106 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 11:05:01,107 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 11:05:01,108 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:05:01,108 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:05:01,109 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:05:01,109 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:05:25,381 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:05:25,382 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 11:05:25,383 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:05:25,384 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 11:13:38,857 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 11:13:38,890 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 11:13:38,900 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 11:13:38,903 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 11:13:38,905 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 11:13:38,906 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 11:13:38,907 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 11:13:38,908 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 11:13:38,908 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 11:13:38,909 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:13:38,910 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:13:38,911 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 11:13:39,084 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:13:39,085 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:13:39,096 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 11:13:39,105 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 11:13:39,105 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 11:13:39,107 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 11:13:39,108 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 11:13:39,108 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 11:13:39,109 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 11:13:39,110 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 11:13:39,284 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 11:13:39,285 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 11:13:39,295 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 11:13:39,296 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 11:13:39,297 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 11:13:39,298 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 11:13:39,299 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 11:13:39,299 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 11:13:39,484 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 11:13:39,485 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 11:13:39,486 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 11:13:39,487 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 11:13:39,488 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 11:13:39,489 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 11:13:39,489 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 11:13:39,501 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:13:39,685 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:13:39,687 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 11:13:39,689 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 11:13:39,691 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 11:13:39,692 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 11:13:39,693 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:13:39,694 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 11:13:39,696 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 11:13:39,885 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 11:13:39,887 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 11:13:39,888 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 11:13:39,890 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 11:13:40,085 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 11:13:40,086 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 11:13:40,087 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:13:40,088 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:13:40,089 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:13:40,089 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:13:40,090 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 11:13:40,284 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 11:13:40,285 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 11:13:40,286 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 11:13:40,289 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 11:13:40,290 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:13:40,484 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 11:13:40,485 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:13:40,485 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:13:40,512 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 11:13:40,513 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 11:13:40,514 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:13:40,514 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:13:40,515 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:13:40,684 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 11:13:40,685 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 11:13:40,685 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 11:13:40,686 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 11:13:40,885 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 11:13:40,885 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 11:13:40,886 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 11:13:40,886 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 11:13:40,887 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 11:13:40,887 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 11:13:41,101 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 11:13:41,103 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:13:41,104 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:13:41,105 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 11:13:41,284 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 11:13:41,285 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 11:13:41,286 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 11:13:41,287 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 11:13:41,288 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:13:41,288 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:13:41,484 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:13:41,485 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:13:41,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 11:13:41,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 11:13:41,490 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:13:41,490 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:13:41,491 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:13:41,687 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:13:41,688 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 11:13:41,688 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:13:41,689 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:13:42,181 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 11:13:42,182 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 11:13:42,183 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 11:13:42,183 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 11:13:42,374 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:13:42,375 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:13:42,376 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:13:42,376 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:13:42,377 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 11:13:42,378 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 11:13:42,378 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 11:13:42,576 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 11:13:42,580 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 11:13:42,583 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 11:13:42,585 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 11:13:42,586 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 11:13:42,588 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 11:13:42,590 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 11:13:42,592 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:13:42,776 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 11:13:42,777 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 11:13:42,779 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 11:13:42,782 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 11:13:42,783 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 11:13:42,975 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 11:13:42,977 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 11:13:42,978 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 11:13:42,980 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:13:42,982 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 11:13:42,984 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:13:42,985 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 11:13:42,987 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 11:13:43,175 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 11:13:43,190 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 11:13:43,192 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 11:13:43,193 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 11:13:43,375 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 11:13:43,376 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:13:43,378 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 11:13:43,379 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 11:13:43,574 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 11:13:43,575 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 11:13:43,576 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 11:13:43,576 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:13:43,577 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 11:13:43,577 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:13:43,578 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:13:43,774 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 11:13:43,775 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 11:13:43,776 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:13:43,776 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 11:13:43,777 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 11:13:43,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 11:13:43,779 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 11:13:43,834 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 11:13:43,974 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 11:13:43,975 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:13:43,976 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:13:43,976 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 11:13:43,977 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 11:13:43,977 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 11:13:44,174 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 11:13:44,175 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 11:13:44,176 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 11:13:44,176 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 11:13:44,177 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:13:44,178 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:13:44,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:13:44,375 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:13:44,376 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 11:13:44,376 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 11:13:44,377 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 11:13:44,377 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 11:13:44,378 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 11:13:44,379 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 11:13:44,574 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:13:44,575 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 11:13:44,575 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 11:13:44,576 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 11:13:44,774 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 11:13:44,775 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 11:13:44,775 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:13:44,776 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:13:44,776 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:13:44,777 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:13:44,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 11:13:44,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 11:13:44,976 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:13:44,977 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 11:13:44,977 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 11:13:44,978 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 11:13:44,979 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:13:44,979 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 11:13:45,174 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 11:13:45,175 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 11:13:45,176 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 11:13:45,176 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 11:13:45,177 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:13:45,374 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:13:45,375 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:13:45,375 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:13:45,376 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 11:13:45,377 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 11:13:45,377 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:13:45,378 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 11:13:45,378 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 11:13:45,575 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 11:13:45,576 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 11:13:45,577 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:13:45,578 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:13:45,578 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:13:45,579 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:17:52,758 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 11:17:52,794 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 11:17:52,804 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 11:17:52,808 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 11:17:52,810 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 11:17:52,811 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 11:17:52,812 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 11:17:52,812 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 11:17:52,813 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 11:17:52,814 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:17:52,815 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:17:52,816 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 11:17:52,968 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:17:52,969 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:17:52,981 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 11:17:52,987 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 11:17:52,988 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 11:17:52,989 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 11:17:52,989 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 11:17:52,990 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 11:17:52,991 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 11:17:52,991 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 11:17:53,168 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 11:17:53,169 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 11:17:53,178 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 11:17:53,179 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 11:17:53,179 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 11:17:53,180 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 11:17:53,181 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 11:17:53,181 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 11:17:53,368 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 11:17:53,369 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 11:17:53,370 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 11:17:53,371 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 11:17:53,372 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 11:17:53,372 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 11:17:53,373 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 11:17:53,384 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:17:53,569 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:17:53,571 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 11:17:53,573 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 11:17:53,574 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 11:17:53,575 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 11:17:53,576 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:17:53,578 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 11:17:53,580 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 11:17:53,768 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 11:17:53,771 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 11:17:53,772 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 11:17:53,774 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 11:17:53,969 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 11:17:53,970 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 11:17:53,972 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:17:53,973 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:17:53,973 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:17:53,974 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:17:53,974 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 11:17:54,168 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 11:17:54,169 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 11:17:54,170 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 11:17:54,173 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 11:17:54,174 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:17:54,368 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 11:17:54,369 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:17:54,369 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:17:54,396 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 11:17:54,397 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 11:17:54,398 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:17:54,398 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:17:54,399 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:17:54,568 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 11:17:54,569 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 11:17:54,569 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 11:17:54,570 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 11:17:54,768 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 11:17:54,769 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 11:17:54,770 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 11:17:54,770 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 11:17:54,771 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 11:17:54,771 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 11:17:54,969 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 11:17:54,975 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:17:54,976 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:17:54,978 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 11:17:55,169 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 11:17:55,172 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 11:17:55,173 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 11:17:55,175 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 11:17:55,177 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:17:55,179 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:17:55,369 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:17:55,371 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:17:55,380 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 11:17:55,382 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 11:17:55,383 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:17:55,385 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:17:55,386 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:17:55,578 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:17:55,580 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 11:17:55,581 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:17:55,584 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:17:56,133 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 11:17:56,133 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 11:17:56,134 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 11:17:56,135 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 11:17:56,319 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:17:56,319 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:17:56,320 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:17:56,321 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:17:56,321 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 11:17:56,322 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 11:17:56,322 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 11:17:56,518 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 11:17:56,522 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 11:17:56,524 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 11:17:56,525 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 11:17:56,525 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 11:17:56,526 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 11:17:56,526 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 11:17:56,527 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:17:56,718 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 11:17:56,719 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 11:17:56,720 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 11:17:56,721 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 11:17:56,722 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 11:17:56,918 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 11:17:56,919 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 11:17:56,919 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 11:17:56,920 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:17:56,920 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 11:17:56,921 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:17:56,921 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 11:17:56,922 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 11:17:57,118 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 11:17:57,123 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 11:17:57,124 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 11:17:57,124 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 11:17:57,318 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 11:17:57,319 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:17:57,320 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 11:17:57,320 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 11:17:57,518 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 11:17:57,519 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 11:17:57,520 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 11:17:57,520 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:17:57,521 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 11:17:57,521 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:17:57,522 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:17:57,718 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 11:17:57,719 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 11:17:57,720 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:17:57,720 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 11:17:57,721 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 11:17:57,722 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 11:17:57,723 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 11:17:57,768 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 11:17:57,918 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 11:17:57,919 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:17:57,920 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:17:57,921 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 11:17:57,921 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 11:17:57,922 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 11:17:58,118 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 11:17:58,119 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 11:17:58,119 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 11:17:58,120 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 11:17:58,121 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:17:58,121 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:17:58,318 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:17:58,319 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:17:58,319 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 11:17:58,320 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 11:17:58,321 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 11:17:58,321 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 11:17:58,321 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 11:17:58,322 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 11:17:58,518 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:17:58,519 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 11:17:58,519 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 11:17:58,520 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 11:17:58,718 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 11:17:58,719 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 11:17:58,719 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:17:58,720 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:17:58,720 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:17:58,721 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:17:58,724 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 11:17:58,725 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 11:17:58,918 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:17:58,919 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 11:17:58,919 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 11:17:58,920 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 11:17:58,920 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:17:58,921 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 11:17:59,118 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 11:17:59,119 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 11:17:59,119 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 11:17:59,120 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 11:17:59,121 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:17:59,318 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:17:59,319 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:17:59,319 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:17:59,320 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 11:17:59,321 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 11:17:59,321 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:17:59,322 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 11:17:59,322 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 11:17:59,519 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 11:17:59,521 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 11:17:59,522 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:17:59,522 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:17:59,523 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:17:59,524 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:20:49,924 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 11:20:49,959 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 11:20:49,970 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 11:20:49,974 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 11:20:49,976 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 11:20:49,976 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 11:20:49,977 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 11:20:49,978 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 11:20:49,979 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 11:20:49,979 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:20:49,980 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:20:49,981 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 11:20:50,152 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:20:50,153 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:20:50,164 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 11:20:50,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 11:20:50,172 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 11:20:50,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 11:20:50,174 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 11:20:50,175 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 11:20:50,176 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 11:20:50,176 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 11:20:50,352 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 11:20:50,353 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 11:20:50,364 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 11:20:50,365 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 11:20:50,367 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 11:20:50,368 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 11:20:50,369 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 11:20:50,370 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 11:20:50,552 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 11:20:50,553 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 11:20:50,554 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 11:20:50,555 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 11:20:50,560 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 11:20:50,561 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 11:20:50,561 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 11:20:50,573 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:20:50,753 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:20:50,755 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 11:20:50,757 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 11:20:50,759 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 11:20:50,760 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 11:20:50,761 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:20:50,763 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 11:20:50,764 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 11:20:50,953 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 11:20:50,955 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 11:20:50,956 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 11:20:50,958 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 11:20:51,153 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 11:20:51,154 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 11:20:51,155 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:20:51,156 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:20:51,156 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:20:51,157 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:20:51,158 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 11:20:51,352 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 11:20:51,353 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 11:20:51,354 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 11:20:51,357 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 11:20:51,358 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:20:51,552 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 11:20:51,553 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:20:51,553 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:20:51,580 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 11:20:51,581 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 11:20:51,582 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:20:51,582 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:20:51,583 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:20:51,752 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 11:20:51,753 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 11:20:51,753 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 11:20:51,754 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 11:20:51,952 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 11:20:51,953 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 11:20:51,954 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 11:20:51,954 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 11:20:51,955 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 11:20:51,955 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 11:20:52,152 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 11:20:52,154 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:20:52,155 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:20:52,155 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 11:20:52,352 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 11:20:52,353 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 11:20:52,353 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 11:20:52,354 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 11:20:52,355 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:20:52,355 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:20:52,552 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:20:52,553 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:20:52,556 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 11:20:52,557 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 11:20:52,558 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:20:52,558 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:20:52,559 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:20:52,755 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:20:52,756 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 11:20:52,756 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:20:52,757 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:20:53,267 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 11:20:53,447 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 11:20:53,448 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 11:20:53,448 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 11:20:53,449 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:20:53,449 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:20:53,450 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:20:53,450 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:20:53,644 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 11:20:53,645 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 11:20:53,647 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 11:20:53,648 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 11:20:53,651 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 11:20:53,653 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 11:20:53,655 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 11:20:53,656 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 11:20:53,843 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 11:20:53,845 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 11:20:53,847 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:20:53,848 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 11:20:53,850 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 11:20:54,044 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 11:20:54,046 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 11:20:54,048 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 11:20:54,049 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 11:20:54,051 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 11:20:54,052 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 11:20:54,054 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:20:54,056 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 11:20:54,244 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:20:54,245 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 11:20:54,247 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 11:20:54,249 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 11:20:54,449 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 11:20:54,450 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 11:20:54,451 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 11:20:54,452 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 11:20:54,453 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:20:54,454 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 11:20:54,642 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 11:20:54,643 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 11:20:54,644 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 11:20:54,644 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 11:20:54,645 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:20:54,645 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 11:20:54,842 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:20:54,843 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:20:54,844 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 11:20:54,844 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 11:20:54,845 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:20:54,846 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 11:20:54,846 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 11:20:55,043 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 11:20:55,044 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 11:20:55,091 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 11:20:55,092 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 11:20:55,093 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:20:55,093 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:20:55,094 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 11:20:55,096 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 11:20:55,242 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 11:20:55,243 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 11:20:55,244 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 11:20:55,244 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 11:20:55,442 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 11:20:55,443 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:20:55,443 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:20:55,444 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:20:55,445 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:20:55,445 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 11:20:55,446 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 11:20:55,447 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 11:20:55,642 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 11:20:55,643 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 11:20:55,643 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 11:20:55,644 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:20:55,645 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 11:20:55,842 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 11:20:55,843 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 11:20:55,843 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 11:20:55,844 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 11:20:55,844 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:20:55,845 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:20:55,845 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:20:56,042 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:20:56,046 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 11:20:56,047 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 11:20:56,047 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:20:56,048 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 11:20:56,048 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 11:20:56,049 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 11:20:56,242 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:20:56,243 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 11:20:56,243 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 11:20:56,244 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 11:20:56,442 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 11:20:56,443 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 11:20:56,443 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:20:56,444 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:20:56,444 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:20:56,445 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:20:56,446 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 11:20:56,446 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 11:20:56,642 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:20:56,643 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 11:20:56,643 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 11:20:56,645 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 11:20:56,646 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 11:20:56,647 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:20:56,647 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:20:56,648 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:20:56,842 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:27:12,949 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 11:27:12,982 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 11:27:12,990 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 11:27:12,993 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 11:27:12,994 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 11:27:12,995 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 11:27:12,996 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 11:27:12,997 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 11:27:12,997 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 11:27:12,998 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:27:12,999 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:27:12,999 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 11:27:13,180 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 11:27:13,181 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 11:27:13,193 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 11:27:13,201 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 11:27:13,202 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 11:27:13,203 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 11:27:13,204 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 11:27:13,205 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 11:27:13,206 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 11:27:13,207 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 11:27:13,380 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 11:27:13,381 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 11:27:13,393 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 11:27:13,394 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 11:27:13,395 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 11:27:13,396 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 11:27:13,397 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 11:27:13,397 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 11:27:13,580 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 11:27:13,581 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 11:27:13,583 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 11:27:13,585 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 11:27:13,586 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 11:27:13,586 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 11:27:13,587 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 11:27:13,599 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:27:13,782 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 11:27:13,783 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 11:27:13,786 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 11:27:13,788 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 11:27:13,789 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 11:27:13,791 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:27:13,792 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 11:27:13,794 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 11:27:13,980 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 11:27:13,983 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 11:27:13,984 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 11:27:13,986 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 11:27:14,181 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 11:27:14,182 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 11:27:14,184 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:27:14,185 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:27:14,186 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:27:14,186 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:27:14,187 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 11:27:14,380 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 11:27:14,381 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 11:27:14,382 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 11:27:14,386 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 11:27:14,387 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 11:27:14,580 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 11:27:14,581 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 11:27:14,582 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 11:27:14,611 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 11:27:14,612 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 11:27:14,613 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 11:27:14,613 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:27:14,614 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:27:14,780 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 11:27:14,781 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 11:27:14,782 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 11:27:14,782 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 11:27:14,981 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 11:27:14,982 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 11:27:14,982 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 11:27:14,983 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 11:27:14,984 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 11:27:14,984 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 11:27:15,180 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 11:27:15,182 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:27:15,183 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:27:15,184 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 11:27:15,380 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 11:27:15,381 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 11:27:15,382 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 11:27:15,383 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 11:27:15,383 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:27:15,384 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:27:15,580 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:27:15,581 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:27:15,585 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 11:27:15,586 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 11:27:15,586 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 11:27:15,587 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:27:15,588 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:27:15,783 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 11:27:15,792 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 11:27:15,793 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 11:27:15,793 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 11:27:16,307 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 11:27:16,308 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 11:27:16,308 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 11:27:16,309 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 11:27:16,501 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:27:16,505 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:27:16,506 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:27:16,507 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:27:16,508 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 11:27:16,508 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 11:27:16,509 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 11:27:16,700 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 11:27:16,702 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 11:27:16,703 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 11:27:16,704 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 11:27:16,704 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 11:27:16,705 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 11:27:16,706 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 11:27:16,707 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:27:16,902 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 11:27:16,903 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 11:27:16,905 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 11:27:16,907 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 11:27:16,909 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 11:27:17,101 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 11:27:17,103 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 11:27:17,105 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 11:27:17,107 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:27:17,108 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 11:27:17,110 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:27:17,112 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 11:27:17,114 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 11:27:17,302 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 11:27:17,316 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 11:27:17,317 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 11:27:17,319 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 11:27:17,501 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 11:27:17,503 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:27:17,505 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 11:27:17,506 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 11:27:17,703 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 11:27:17,710 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 11:27:17,711 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 11:27:17,713 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:27:17,714 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 11:27:17,716 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:27:17,718 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:27:17,900 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 11:27:17,901 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 11:27:17,902 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 11:27:17,903 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 11:27:17,903 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 11:27:17,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 11:27:17,906 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 11:27:17,980 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 11:27:18,100 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 11:27:18,101 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:27:18,102 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:27:18,102 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 11:27:18,103 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 11:27:18,103 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 11:27:18,300 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 11:27:18,301 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 11:27:18,302 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 11:27:18,303 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 11:27:18,303 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:27:18,304 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:27:18,500 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:27:18,501 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:27:18,501 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 11:27:18,502 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 11:27:18,503 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 11:27:18,503 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 11:27:18,504 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 11:27:18,504 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 11:27:18,700 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:27:18,701 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 11:27:18,702 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 11:27:18,703 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 11:27:18,900 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 11:27:18,901 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 11:27:18,902 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:27:18,902 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:27:18,903 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:27:18,904 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:27:18,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 11:27:18,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 11:27:19,100 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 11:27:19,101 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 11:27:19,101 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 11:27:19,102 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 11:27:19,103 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:27:19,103 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 11:27:19,300 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 11:27:19,305 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 11:27:19,306 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 11:27:19,307 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 11:27:19,307 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 11:27:19,503 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 11:27:19,504 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 11:27:19,505 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 11:27:19,506 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 11:27:19,507 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 11:27:19,507 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 11:27:19,508 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 11:27:19,509 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 11:27:19,701 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 11:27:19,702 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 11:27:19,703 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 11:27:19,704 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 11:27:19,704 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 11:27:19,705 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 11:30:05,726 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 11:30:05,727 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 11:30:05,728 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 11:30:05,729 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 14:56:47,957 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 14:56:47,994 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 14:56:48,005 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 14:56:48,009 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 14:56:48,011 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 14:56:48,012 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 14:56:48,013 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 14:56:48,014 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 14:56:48,015 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 14:56:48,016 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 14:56:48,017 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 14:56:48,018 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 14:56:48,176 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 14:56:48,177 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 14:56:48,188 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 14:56:48,196 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 14:56:48,197 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 14:56:48,198 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 14:56:48,202 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 14:56:48,203 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 14:56:48,204 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 14:56:48,204 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 14:56:48,377 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 14:56:48,377 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 14:56:48,386 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 14:56:48,389 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 14:56:48,390 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 14:56:48,391 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 14:56:48,392 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 14:56:48,393 [Thread: 10      ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 14:56:48,577 [Thread: 10      ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 14:56:48,578 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 14:56:48,579 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 14:56:48,580 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 14:56:48,581 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 14:56:48,582 [Thread: 10      ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 14:56:48,583 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 14:56:48,595 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 14:56:48,778 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 14:56:48,791 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 14:56:48,793 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 14:56:48,795 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 14:56:48,796 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 14:56:48,797 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 14:56:48,799 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 14:56:48,800 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 14:56:48,977 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 14:56:48,980 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 14:56:48,981 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 14:56:48,984 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 14:56:49,177 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 14:56:49,178 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 14:56:49,179 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 14:56:49,180 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 14:56:49,181 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 14:56:49,181 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 14:56:49,182 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 14:56:49,377 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 14:56:49,378 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 14:56:49,379 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 14:56:49,382 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 14:56:49,383 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 14:56:49,578 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 14:56:49,578 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 14:56:49,579 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 14:56:49,606 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 14:56:49,607 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 14:56:49,607 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 14:56:49,608 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 14:56:49,609 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 14:56:49,777 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 14:56:49,778 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 14:56:49,779 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 14:56:49,779 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 14:56:49,977 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 14:56:49,979 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 14:56:49,980 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 14:56:49,980 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 14:56:49,983 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 14:56:49,984 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 14:56:50,184 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 14:56:50,186 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 14:56:50,187 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 14:56:50,187 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 14:56:50,377 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 14:56:50,378 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 14:56:50,379 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 14:56:50,379 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 14:56:50,380 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 14:56:50,380 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 14:56:50,577 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 14:56:50,578 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 14:56:50,579 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 14:56:50,580 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 14:56:50,580 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 14:56:50,581 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 14:56:50,581 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 14:56:50,780 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 14:56:50,781 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 14:56:50,782 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 14:56:50,782 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 14:56:51,315 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 14:56:51,316 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 14:56:51,498 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 14:56:51,498 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 14:56:51,499 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 14:56:51,499 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 14:56:51,500 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 14:56:51,501 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 14:56:51,501 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 14:56:51,699 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 14:56:51,700 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 14:56:51,702 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 14:56:51,706 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 14:56:51,708 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 14:56:51,710 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 14:56:51,712 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 14:56:51,713 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 14:56:51,899 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 14:56:51,900 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 14:56:51,902 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 14:56:51,904 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 14:56:51,905 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 14:56:52,099 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 14:56:52,100 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 14:56:52,102 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 14:56:52,102 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 14:56:52,103 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 14:56:52,104 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 14:56:52,105 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 14:56:52,297 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:56:52,298 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 14:56:52,298 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 14:56:52,299 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 14:56:52,304 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 14:56:52,497 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 14:56:52,498 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 14:56:52,499 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 14:56:52,499 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 14:56:52,500 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 14:56:52,697 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 14:56:52,698 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 14:56:52,699 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 14:56:52,699 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 14:56:52,700 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:56:52,701 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 14:56:52,897 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:56:52,901 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:56:52,902 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 14:56:52,902 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 14:56:52,903 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 14:56:52,904 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 14:56:52,904 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 14:56:53,098 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 14:56:53,099 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 14:56:53,148 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 14:56:53,149 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 14:56:53,150 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:56:53,150 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:56:53,151 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 14:56:53,152 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 14:56:53,297 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 14:56:53,298 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 14:56:53,299 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 14:56:53,300 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 14:56:53,498 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 14:56:53,499 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:56:53,499 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 14:56:53,500 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:56:53,501 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:56:53,501 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 14:56:53,502 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 14:56:53,503 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 14:56:53,697 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 14:56:53,698 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 14:56:53,698 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 14:56:53,699 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 14:56:53,699 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 14:56:53,897 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 14:56:53,898 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 14:56:53,899 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 14:56:53,899 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 14:56:53,900 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:56:53,900 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 14:56:53,901 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:56:54,097 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:56:54,099 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 14:56:54,099 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 14:56:54,100 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 14:56:54,101 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 14:56:54,101 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 14:56:54,102 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 14:56:54,102 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 14:56:54,297 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 14:56:54,298 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 14:56:54,303 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 14:56:54,303 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 14:56:54,497 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 14:56:54,498 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:56:54,498 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 14:56:54,499 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:56:54,499 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:56:54,500 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 14:56:54,501 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 14:56:54,501 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 14:56:54,697 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 14:56:54,698 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 14:56:54,699 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 14:56:54,700 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 14:56:54,701 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 14:56:54,702 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 14:56:54,702 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 14:56:54,703 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 14:57:28,130 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 14:57:28,131 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 14:57:28,132 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 14:57:28,133 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 14:57:47,683 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 14:57:47,723 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 14:57:47,733 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 14:57:47,736 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 14:57:47,738 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 14:57:47,739 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 14:57:47,739 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 14:57:47,740 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 14:57:47,741 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 14:57:47,742 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 14:57:47,742 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 14:57:47,743 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 14:57:47,895 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 14:57:47,896 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 14:57:47,908 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 14:57:47,915 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 14:57:47,916 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 14:57:47,918 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 14:57:47,919 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 14:57:47,919 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 14:57:47,920 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 14:57:47,921 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 14:57:48,095 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 14:57:48,096 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 14:57:48,105 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 14:57:48,106 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 14:57:48,110 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 14:57:48,111 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 14:57:48,111 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 14:57:48,112 [Thread: 10      ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 14:57:48,295 [Thread: 10      ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 14:57:48,296 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 14:57:48,297 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 14:57:48,299 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 14:57:48,299 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 14:57:48,300 [Thread: 10      ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 14:57:48,301 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 14:57:48,313 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 14:57:48,496 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 14:57:48,498 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 14:57:48,500 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 14:57:48,502 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 14:57:48,503 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 14:57:48,504 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 14:57:48,506 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 14:57:48,508 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 14:57:48,695 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 14:57:48,698 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 14:57:48,699 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 14:57:48,701 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 14:57:48,896 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 14:57:48,897 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 14:57:48,898 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 14:57:48,900 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 14:57:48,901 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 14:57:48,902 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 14:57:48,903 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 14:57:49,095 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 14:57:49,096 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 14:57:49,097 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 14:57:49,100 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 14:57:49,101 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 14:57:49,295 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 14:57:49,296 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 14:57:49,297 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 14:57:49,329 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 14:57:49,329 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 14:57:49,330 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 14:57:49,331 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 14:57:49,331 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 14:57:49,495 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 14:57:49,496 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 14:57:49,497 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 14:57:49,497 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 14:57:49,696 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 14:57:49,696 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 14:57:49,697 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 14:57:49,698 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 14:57:49,698 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 14:57:49,699 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 14:57:49,895 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 14:57:49,897 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 14:57:49,899 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 14:57:49,899 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 14:57:50,095 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 14:57:50,100 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 14:57:50,110 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 14:57:50,111 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 14:57:50,111 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 14:57:50,112 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 14:57:50,295 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 14:57:50,296 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 14:57:50,300 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 14:57:50,300 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 14:57:50,301 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 14:57:50,301 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 14:57:50,302 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 14:57:50,498 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 14:57:50,499 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 14:57:50,500 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 14:57:50,501 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 14:57:51,005 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 14:57:51,005 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 14:57:51,186 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 14:57:51,187 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 14:57:51,187 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 14:57:51,188 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 14:57:51,189 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 14:57:51,189 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 14:57:51,190 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 14:57:51,385 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 14:57:51,386 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 14:57:51,387 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 14:57:51,388 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 14:57:51,389 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 14:57:51,390 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 14:57:51,391 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 14:57:51,392 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 14:57:51,586 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 14:57:51,588 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 14:57:51,589 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 14:57:51,591 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 14:57:51,593 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 14:57:51,801 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 14:57:51,803 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 14:57:51,804 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 14:57:51,804 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 14:57:51,805 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 14:57:51,806 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 14:57:51,807 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 14:57:51,995 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:57:51,996 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 14:57:51,998 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 14:57:51,999 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 14:57:52,012 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 14:57:52,194 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 14:57:52,197 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 14:57:52,198 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 14:57:52,199 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 14:57:52,200 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 14:57:52,394 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 14:57:52,395 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 14:57:52,396 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 14:57:52,397 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 14:57:52,398 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:57:52,398 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 14:57:52,594 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:57:52,595 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:57:52,596 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 14:57:52,597 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 14:57:52,598 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 14:57:52,598 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 14:57:52,599 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 14:57:52,795 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 14:57:52,796 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 14:57:52,845 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 14:57:52,846 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 14:57:52,851 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:57:52,853 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:57:52,854 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 14:57:52,855 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 14:57:52,994 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 14:57:52,995 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 14:57:52,996 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 14:57:52,996 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 14:57:53,201 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 14:57:53,201 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:57:53,202 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 14:57:53,203 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:57:53,203 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:57:53,204 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 14:57:53,205 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 14:57:53,206 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 14:57:53,400 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 14:57:53,401 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 14:57:53,402 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 14:57:53,402 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 14:57:53,403 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 14:57:53,600 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 14:57:53,601 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 14:57:53,602 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 14:57:53,603 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 14:57:53,603 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:57:53,604 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 14:57:53,605 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:57:53,801 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:57:53,806 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 14:57:53,807 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 14:57:53,808 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 14:57:53,809 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 14:57:53,809 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 14:57:53,810 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 14:57:53,811 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 14:57:54,000 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 14:57:54,001 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 14:57:54,002 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 14:57:54,003 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 14:57:54,200 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 14:57:54,201 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 14:57:54,201 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 14:57:54,202 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 14:57:54,203 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 14:57:54,204 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 14:57:54,205 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 14:57:54,205 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 14:57:54,400 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 14:57:54,401 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 14:57:54,402 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 14:57:54,403 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 14:57:54,404 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 14:57:54,404 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 14:57:54,405 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 14:57:54,405 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 14:59:05,992 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 14:59:05,994 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 14:59:05,999 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 14:59:06,004 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:00:53,447 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:00:53,477 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:00:53,485 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:00:53,488 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 15:00:53,490 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 15:00:53,491 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:00:53,492 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:00:53,492 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:00:53,493 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:00:53,494 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 15:00:53,495 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:00:53,495 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:00:53,671 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 15:00:53,673 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:00:53,702 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:00:53,717 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:00:53,719 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:00:53,721 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:00:53,723 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:00:53,724 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:00:53,725 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:00:53,727 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:00:53,869 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:00:53,871 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:00:53,879 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:00:53,880 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:00:53,881 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:00:53,881 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:00:53,882 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:00:53,883 [Thread: 8       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 15:00:54,069 [Thread: 8       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 15:00:54,070 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:00:54,071 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:00:54,074 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:00:54,075 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:00:54,075 [Thread: 8       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 15:00:54,076 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:00:54,094 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:00:54,270 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:00:54,276 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:00:54,279 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:00:54,281 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:00:54,282 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:00:54,283 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:00:54,285 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:00:54,287 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:00:54,470 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:00:54,472 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:00:54,473 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:00:54,476 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:00:54,670 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:00:54,671 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:00:54,673 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:00:54,674 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:00:54,675 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:00:54,676 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:00:54,677 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:00:54,869 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:00:54,871 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:00:54,872 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:00:54,875 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 15:00:54,876 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:00:55,069 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 15:00:55,070 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:00:55,071 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:00:55,098 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:00:55,100 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:00:55,100 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:00:55,101 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:00:55,102 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:00:55,269 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:00:55,270 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:00:55,271 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 15:00:55,272 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:00:55,469 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:00:55,474 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:00:55,475 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:00:55,476 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:00:55,477 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:00:55,478 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 15:00:55,683 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:00:55,690 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:00:55,690 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:00:55,691 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 15:00:55,869 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:00:55,870 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:00:55,871 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:00:55,872 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:00:55,872 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:00:55,873 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:00:56,069 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:00:56,070 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:00:56,074 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:00:56,075 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:00:56,076 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:00:56,077 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:00:56,077 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:00:56,272 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:00:56,273 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:00:56,274 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:00:56,275 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:00:56,786 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:00:56,789 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:00:56,790 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:00:56,790 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:00:56,791 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:00:56,791 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:00:56,792 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:00:56,792 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:00:56,990 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:00:56,992 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:00:56,993 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:00:56,994 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:00:56,996 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:00:56,997 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:00:56,997 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:00:57,189 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:00:57,190 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:00:57,191 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:00:57,192 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:00:57,192 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:00:57,197 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 15:00:57,389 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:00:57,390 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:00:57,391 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:00:57,392 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:00:57,393 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:00:57,394 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:00:57,394 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:00:57,589 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:00:57,590 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:00:57,591 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:00:57,592 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 15:00:57,593 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:00:57,796 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:00:57,797 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:00:57,797 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:00:57,798 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:00:57,799 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:00:57,800 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 15:00:57,991 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:00:57,994 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:00:57,995 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:00:57,996 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:00:57,998 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:00:58,190 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:00:58,192 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:00:58,194 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:00:58,196 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:00:58,198 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:00:58,199 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:00:58,201 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:00:58,390 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:00:58,394 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:00:58,396 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:00:58,446 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:00:58,447 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:00:58,448 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:00:58,450 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:00:58,452 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:00:58,589 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:00:58,590 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 15:00:58,591 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:00:58,592 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:00:58,789 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:00:58,790 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:00:58,791 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:00:58,791 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:00:58,792 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:00:58,793 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:00:58,794 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:00:58,795 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:00:58,989 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:00:58,994 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:00:58,995 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:00:58,996 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:00:58,997 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:00:58,998 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 15:00:59,189 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:00:59,190 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:00:59,191 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:00:59,192 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:00:59,193 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:00:59,194 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:00:59,389 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:00:59,394 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:00:59,395 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:00:59,396 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:00:59,397 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:00:59,398 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:00:59,398 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:00:59,399 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:00:59,589 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:00:59,594 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 15:00:59,595 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:00:59,596 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:00:59,806 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:00:59,807 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:00:59,808 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:00:59,808 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:00:59,809 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:00:59,810 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:00:59,811 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:01:00,005 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:01:00,006 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:01:00,007 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:01:00,007 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:01:00,008 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:01:00,010 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:01:00,010 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:01:00,011 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:01:00,205 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:01:00,207 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:02:00,664 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:02:00,666 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:02:00,666 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:02:00,667 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:02:05,855 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:02:05,885 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:02:05,893 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:02:05,896 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 15:02:05,897 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 15:02:05,898 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:02:05,899 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:02:05,899 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:02:05,900 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:02:05,901 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:02:05,901 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:02:05,902 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:02:06,068 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:02:06,069 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:02:06,082 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:02:06,088 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:02:06,089 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:02:06,090 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:02:06,091 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:02:06,092 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:02:06,092 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:02:06,093 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:02:06,268 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:02:06,276 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:02:06,286 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:02:06,287 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:02:06,289 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:02:06,289 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:02:06,290 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:02:06,291 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 15:02:06,468 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 15:02:06,469 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:02:06,470 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:02:06,472 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:02:06,473 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:02:06,474 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 15:02:06,475 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:02:06,489 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:02:06,669 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:02:06,671 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:02:06,673 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:02:06,675 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:02:06,677 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:02:06,678 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:02:06,680 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:02:06,682 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:02:06,868 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:02:06,871 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:02:06,872 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:02:06,875 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:02:07,071 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:02:07,072 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:02:07,074 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:02:07,075 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:02:07,076 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:02:07,076 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:02:07,077 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:02:07,269 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:02:07,270 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:02:07,270 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:02:07,274 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 15:02:07,275 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:02:07,468 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 15:02:07,473 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:02:07,474 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:02:07,501 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:02:07,502 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:02:07,503 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:02:07,504 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:02:07,504 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:02:07,668 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:02:07,669 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:02:07,670 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 15:02:07,670 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:02:07,869 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:02:07,874 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:02:07,874 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:02:07,875 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:02:07,876 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:02:07,876 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 15:02:08,068 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:02:08,070 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:02:08,071 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:02:08,072 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 15:02:08,268 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:02:08,269 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:02:08,270 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:02:08,271 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:02:08,272 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:02:08,272 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:02:08,468 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:02:08,469 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:02:08,473 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:02:08,474 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:02:08,474 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:02:08,475 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:02:08,476 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:02:08,671 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:02:08,672 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:02:08,673 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:02:08,674 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:02:09,200 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:02:09,200 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:02:09,201 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:02:09,202 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:02:09,389 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:02:09,390 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:02:09,390 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:02:09,391 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:02:09,392 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:02:09,393 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:02:09,394 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:02:09,588 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:02:09,590 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:02:09,591 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:02:09,592 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:02:09,593 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:02:09,594 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:02:09,594 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:02:09,595 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:02:09,789 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:02:09,790 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 15:02:09,791 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:02:09,792 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:02:09,793 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:02:09,988 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:02:09,989 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:02:09,990 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:02:09,990 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:02:09,991 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:02:09,992 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:02:09,993 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:02:09,994 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 15:02:10,188 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:02:10,194 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:02:10,195 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:02:10,196 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:02:10,389 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:02:10,390 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:02:10,392 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 15:02:10,393 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:02:10,590 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:02:10,593 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:02:10,594 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:02:10,596 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:02:10,598 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:02:10,599 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:02:10,601 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:02:10,788 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:02:10,790 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:02:10,790 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:02:10,791 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:02:10,792 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:02:10,794 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:02:10,795 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:02:10,842 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:02:10,988 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:02:10,989 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:02:10,989 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:02:10,990 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:02:10,991 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:02:10,991 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 15:02:11,188 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:02:11,190 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:02:11,190 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:02:11,191 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:02:11,192 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:02:11,193 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:02:11,389 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:02:11,390 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:02:11,391 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:02:11,391 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:02:11,392 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:02:11,393 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:02:11,393 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:02:11,394 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:02:11,588 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:02:11,589 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 15:02:11,590 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:02:11,591 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:02:11,800 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:02:11,801 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:02:11,802 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:02:11,803 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:02:11,804 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:02:11,804 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:02:11,809 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:02:11,810 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:02:11,988 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:02:11,989 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:02:11,989 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:02:11,990 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:02:11,991 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:02:11,991 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 15:02:12,188 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:02:12,189 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:02:12,190 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:02:12,191 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:02:12,191 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:02:12,388 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:02:12,389 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:02:12,390 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:02:12,391 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:02:12,392 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:02:12,392 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:02:12,393 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:02:12,394 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:02:12,589 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:02:12,594 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:02:12,596 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:02:12,596 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:02:12,597 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:02:12,598 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:03:05,631 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:03:05,632 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:03:05,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:03:05,634 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:05:45,058 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:05:45,088 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:05:45,096 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:05:45,099 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 15:05:45,100 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 15:05:45,101 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:05:45,102 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:05:45,103 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:05:45,104 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:05:45,105 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:05:45,105 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:05:45,106 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:05:45,268 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:05:45,270 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:05:45,296 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:05:45,304 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:05:45,305 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:05:45,306 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:05:45,308 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:05:45,309 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:05:45,310 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:05:45,311 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:05:45,470 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:05:45,472 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:05:45,486 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:05:45,493 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:05:45,494 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:05:45,496 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:05:45,497 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:05:45,498 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 15:05:45,666 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 15:05:45,667 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:05:45,668 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:05:45,670 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:05:45,670 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:05:45,671 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 15:05:45,672 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:05:45,684 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:05:45,867 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:05:45,869 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:05:45,872 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:05:45,873 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:05:45,875 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:05:45,876 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:05:45,878 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:05:45,880 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:05:46,066 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:05:46,069 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:05:46,070 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:05:46,073 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:05:46,267 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:05:46,268 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:05:46,270 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:05:46,271 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:05:46,272 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:05:46,272 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:05:46,273 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:05:46,482 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:05:46,484 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:05:46,484 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:05:46,488 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 15:05:46,489 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:05:46,666 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 15:05:46,667 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:05:46,667 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:05:46,698 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:05:46,698 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:05:46,699 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:05:46,700 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:05:46,700 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:05:46,866 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:05:46,867 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:05:46,867 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 15:05:46,868 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:05:47,066 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:05:47,067 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:05:47,068 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:05:47,068 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:05:47,069 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:05:47,069 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 15:05:47,266 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:05:47,268 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:05:47,269 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:05:47,269 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 15:05:47,466 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:05:47,467 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:05:47,468 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:05:47,468 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:05:47,469 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:05:47,469 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:05:47,666 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:05:47,671 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:05:47,675 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:05:47,676 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:05:47,677 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:05:47,677 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:05:47,678 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:05:47,869 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:05:47,870 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:05:47,871 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:05:47,871 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:05:48,393 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:05:48,394 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:05:48,394 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:05:48,395 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:05:48,395 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:05:48,396 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:05:48,563 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:05:48,564 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:05:48,565 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:05:48,566 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:05:48,566 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:05:48,567 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:05:48,569 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:05:48,756 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:05:48,757 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:05:48,758 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:05:48,760 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:05:48,761 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:05:48,762 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:05:48,762 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:05:48,763 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 15:05:48,956 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:05:48,957 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:05:48,958 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:05:48,959 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:05:48,960 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:05:49,156 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:05:49,157 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:05:49,158 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:05:49,159 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:05:49,160 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:05:49,161 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 15:05:49,356 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:05:49,366 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:05:49,367 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:05:49,368 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:05:49,368 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:05:49,369 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:05:49,556 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 15:05:49,557 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:05:49,558 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:05:49,559 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:05:49,757 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:05:49,760 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:05:49,761 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:05:49,763 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:05:49,765 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:05:49,767 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:05:49,769 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:05:49,957 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:05:49,959 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:05:49,961 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:05:49,965 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:05:49,967 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:05:50,039 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:05:50,041 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:05:50,044 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:05:50,156 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:05:50,157 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:05:50,157 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:05:50,158 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 15:05:50,356 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:05:50,357 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:05:50,358 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:05:50,358 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:05:50,359 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:05:50,359 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:05:50,360 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:05:50,360 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:05:50,556 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:05:50,557 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:05:50,558 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:05:50,558 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:05:50,559 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:05:50,559 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:05:50,560 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:05:50,560 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 15:05:50,756 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:05:50,757 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:05:50,758 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:05:50,758 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:05:50,956 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:05:50,957 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:05:50,957 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:05:50,958 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:05:50,959 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:05:50,960 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:05:50,960 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:05:50,961 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:05:51,156 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:05:51,157 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:05:51,157 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:05:51,158 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 15:05:51,356 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:05:51,357 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:05:51,357 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:05:51,358 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:05:51,359 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:05:51,359 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:05:51,360 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:05:51,556 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:05:51,557 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:05:51,558 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:05:51,558 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:05:51,559 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:05:51,559 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:05:51,560 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:05:51,561 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:05:51,756 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:05:51,757 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:05:51,758 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:05:51,758 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:07:29,127 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:07:29,128 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:07:29,129 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:07:29,130 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:29:56,022 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:29:56,052 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:29:56,060 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:29:56,063 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 15:29:56,064 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 15:29:56,065 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:29:56,066 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:29:56,067 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:29:56,067 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:29:56,068 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 15:29:56,069 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:29:56,069 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:29:56,237 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 15:29:56,242 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:29:56,254 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:29:56,271 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:29:56,272 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:29:56,274 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:29:56,275 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:29:56,275 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:29:56,276 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:29:56,278 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:29:56,438 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:29:56,438 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:29:56,448 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:29:56,449 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:29:56,450 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:29:56,451 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:29:56,452 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:29:56,453 [Thread: 8       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 15:29:56,637 [Thread: 8       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 15:29:56,639 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:29:56,640 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:29:56,641 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:29:56,642 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:29:56,643 [Thread: 8       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 15:29:56,644 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:29:56,656 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:29:56,838 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:29:56,841 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:29:56,843 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:29:56,845 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:29:56,846 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:29:56,847 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:29:56,849 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:29:56,851 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:29:57,037 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:29:57,040 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:29:57,041 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:29:57,044 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:29:57,238 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:29:57,239 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:29:57,240 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:29:57,241 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:29:57,242 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:29:57,242 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:29:57,243 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:29:57,437 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:29:57,438 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:29:57,439 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:29:57,443 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 15:29:57,443 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:29:57,637 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 15:29:57,638 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:29:57,639 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:29:57,666 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:29:57,671 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:29:57,672 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:29:57,673 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:29:57,674 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:29:57,837 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:29:57,838 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:29:57,838 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 15:29:57,839 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:29:58,038 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:29:58,038 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:29:58,039 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:29:58,040 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:29:58,042 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:29:58,043 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 15:29:58,237 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:29:58,239 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:29:58,240 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:29:58,241 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 15:29:58,437 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:29:58,438 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:29:58,439 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:29:58,440 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:29:58,440 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:29:58,441 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:29:58,640 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:29:58,641 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:29:58,642 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:29:58,643 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:29:58,644 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:29:58,645 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:29:58,645 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:29:58,840 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:29:58,841 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:29:58,842 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:29:58,843 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:34:20,515 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:34:30,897 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:34:30,937 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:34:30,948 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:34:30,952 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 15:34:30,954 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 15:34:30,955 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:34:30,956 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:34:30,956 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:34:30,957 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:34:30,958 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:34:30,959 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:34:30,959 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:34:31,127 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:34:31,128 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:34:31,140 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:34:31,172 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:34:31,186 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:34:31,191 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:34:31,192 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:34:31,194 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:34:31,196 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:34:31,198 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:34:31,327 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:34:31,328 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:34:31,338 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:34:31,339 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:34:31,340 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:34:31,341 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:34:31,341 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:34:31,342 [Thread: 10      ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 15:34:31,527 [Thread: 10      ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 15:34:31,532 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:34:31,533 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:34:31,535 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:34:31,536 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:34:31,537 [Thread: 10      ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 15:34:31,537 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:34:31,549 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:34:31,728 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:34:31,730 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:34:31,733 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:34:31,734 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:34:31,736 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:34:31,737 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:34:31,739 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:34:31,741 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:34:31,927 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:34:31,930 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:34:31,932 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:34:31,934 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:34:32,128 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:34:32,129 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:34:32,131 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:34:32,132 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:34:32,133 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:34:32,133 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:34:32,134 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:34:32,327 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:34:32,328 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:34:32,329 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:34:32,333 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 15:34:32,334 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:34:32,527 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 15:34:32,528 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:34:32,529 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:34:32,557 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:34:32,559 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:34:32,560 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:34:32,561 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:34:32,562 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:34:32,727 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:34:32,728 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:34:32,729 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 15:34:32,729 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:34:32,928 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:34:32,928 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:34:32,929 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:34:32,930 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:34:32,931 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:34:32,931 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 15:34:33,127 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:34:33,129 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:34:33,130 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:34:33,132 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 15:34:33,327 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:34:33,328 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:34:33,329 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:34:33,330 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:34:33,331 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:34:33,332 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:34:33,527 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:34:33,528 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:34:33,532 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:34:33,533 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:34:33,533 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:34:33,534 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:34:33,535 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:34:33,738 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:34:33,739 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:34:33,740 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:34:33,741 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:34:45,016 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:34:50,532 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:34:51,503 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:34:51,505 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:34:51,515 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:34:52,234 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:34:53,130 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:39:15,012 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:39:15,044 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:39:15,054 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:39:15,058 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 15:39:15,060 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 15:39:15,061 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:39:15,062 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:39:15,062 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:39:15,063 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:39:15,064 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:39:15,065 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:39:15,065 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:39:15,227 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:39:15,228 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:39:15,241 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:39:15,252 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:39:15,253 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:39:15,255 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:39:15,256 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:39:15,257 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:39:15,258 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:39:15,259 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:39:15,427 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:39:15,428 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:39:15,437 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:39:15,439 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:39:15,440 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:39:15,441 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:39:15,441 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:39:15,442 [Thread: 10      ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 15:39:15,628 [Thread: 10      ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 15:39:15,630 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:39:15,631 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:39:15,635 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:39:15,636 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:39:15,638 [Thread: 10      ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 15:39:15,639 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:39:15,659 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:39:15,830 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:39:15,832 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:39:15,835 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:39:15,837 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:39:15,839 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:39:15,842 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:39:15,844 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:39:15,847 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:39:16,029 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:39:16,036 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:39:16,038 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:39:16,043 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:39:16,229 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:39:16,230 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:39:16,231 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:39:16,232 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:39:16,233 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:39:16,234 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:39:16,235 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:39:16,427 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:39:16,428 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:39:16,429 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:39:16,433 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 15:39:16,434 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:39:16,627 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 15:39:16,628 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:39:16,629 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:39:16,657 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:39:16,660 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:39:16,661 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:39:16,662 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:39:16,662 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:39:16,827 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:39:16,828 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:39:16,829 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 15:39:16,829 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:39:17,028 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:39:17,028 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:39:17,029 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:39:17,030 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:39:17,031 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:39:17,031 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 15:39:17,227 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:39:17,229 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:39:17,230 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:39:17,231 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 15:39:17,427 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:39:17,448 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:39:17,449 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:39:17,449 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:39:17,450 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:39:17,451 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:39:17,627 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:39:17,628 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:39:17,632 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:39:17,633 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:39:17,634 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:39:17,634 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:39:17,635 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:39:17,830 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:39:17,831 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:39:17,832 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:39:17,833 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:39:19,449 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:39:19,450 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:39:19,450 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:39:19,451 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:39:19,451 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:39:19,452 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:39:19,452 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:39:19,453 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:39:19,648 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:39:19,649 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:39:19,650 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:39:19,650 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:39:19,652 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:39:19,653 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:39:19,654 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:39:19,654 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:39:19,848 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:39:19,849 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:39:19,850 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:39:19,851 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:39:19,852 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 15:39:20,051 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:39:20,054 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:39:20,055 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:39:20,055 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:39:20,056 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:39:20,057 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:39:20,058 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:39:20,249 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:39:20,251 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:39:20,253 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:39:20,255 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 15:39:20,257 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:39:20,489 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:39:20,490 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:39:20,492 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:39:20,493 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:39:20,494 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:39:20,495 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 15:39:20,650 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:39:20,652 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:39:20,654 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:39:20,663 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:39:20,848 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:39:20,849 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:39:20,850 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:39:20,850 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:39:20,852 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:39:20,853 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:39:20,853 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:39:21,048 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:39:21,049 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:39:21,051 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:39:21,052 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:39:21,131 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:39:21,133 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:39:21,156 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:39:21,159 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:39:21,248 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:39:21,249 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:39:21,250 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 15:39:21,250 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:39:21,448 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:39:21,449 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:39:21,450 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:39:21,451 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:39:21,452 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:39:21,453 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:39:21,453 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:39:21,455 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:39:21,648 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:39:21,649 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:39:21,650 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:39:21,650 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:39:21,651 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:39:21,652 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:39:21,653 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 15:39:21,849 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:39:21,850 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:39:21,851 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:39:21,852 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:39:21,853 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:39:22,048 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:39:22,049 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:39:22,050 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:39:22,051 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:39:22,052 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:39:22,053 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:39:22,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:39:22,054 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:39:22,248 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:39:22,250 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:39:22,250 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 15:39:22,251 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:39:22,448 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:39:22,449 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:39:22,450 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:39:22,451 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:39:22,452 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:39:22,452 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:39:22,453 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:39:22,454 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:39:22,656 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:39:22,657 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:39:22,658 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:39:22,659 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:39:22,660 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:39:22,661 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:39:22,853 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:39:22,854 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:39:22,854 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:39:22,855 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:40:45,493 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:40:45,526 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:40:45,537 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:40:45,540 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 15:40:45,542 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 15:40:45,543 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:40:45,544 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:40:45,545 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:40:45,545 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:40:45,546 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:40:45,547 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:40:45,547 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:40:45,724 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:40:45,725 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:40:45,742 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:40:45,753 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:40:45,755 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:40:45,756 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:40:45,758 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:40:45,759 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:40:45,760 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:40:45,761 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:40:45,924 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:40:45,925 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:40:45,936 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:40:45,937 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:40:45,938 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:40:45,938 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:40:45,939 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:40:45,940 [Thread: 9       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-07-25 15:40:46,124 [Thread: 9       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-07-25 15:40:46,125 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:40:46,126 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:40:46,128 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:40:46,128 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:40:46,129 [Thread: 9       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-07-25 15:40:46,130 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:40:46,141 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:40:46,325 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:40:46,327 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:40:46,329 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:40:46,331 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:40:46,332 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:40:46,335 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:40:46,337 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:40:46,338 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:40:46,539 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:40:46,542 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:40:46,543 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:40:46,545 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:40:46,726 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:40:46,727 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:40:46,728 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:40:46,729 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:40:46,729 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:40:46,730 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:40:46,730 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:40:46,924 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:40:46,929 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:40:46,938 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:40:46,942 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-25 15:40:46,969 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:40:47,124 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-25 15:40:47,125 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:40:47,126 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:40:47,156 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:40:47,157 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:40:47,157 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:40:47,158 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:40:47,158 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:40:47,324 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:40:47,325 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:40:47,325 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-25 15:40:47,326 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:40:47,524 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:40:47,525 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:40:47,526 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:40:47,526 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:40:47,527 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:40:47,527 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 15:40:47,751 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:40:47,753 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:40:47,754 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:40:47,754 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 15:40:47,924 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:40:47,925 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:40:47,926 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:40:47,927 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:40:47,928 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:40:47,928 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:40:48,124 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:40:48,125 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:40:48,129 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:40:48,129 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:40:48,130 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:40:48,131 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:40:48,131 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:40:48,327 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:40:48,328 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:40:48,328 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:40:48,329 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:40:54,423 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:40:54,429 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:40:54,430 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:40:54,431 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:40:54,431 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:40:54,432 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:40:54,433 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:40:54,441 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:40:54,442 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:40:54,443 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:40:54,445 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:40:54,446 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:40:54,447 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:40:54,448 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:40:54,449 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:40:54,638 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:40:54,639 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:40:54,640 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:40:54,640 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:40:54,641 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:40:54,642 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-07-25 15:40:54,838 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:40:54,839 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:40:54,840 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:40:54,841 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:40:54,842 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:40:54,843 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:40:55,038 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:40:55,039 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:40:55,040 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:40:55,041 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:40:55,042 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 92].
2019-07-25 15:40:55,238 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:40:55,244 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:40:55,245 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:40:55,246 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:40:55,247 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:40:55,248 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:40:55,249 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-25 15:40:55,465 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:40:55,466 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:40:55,467 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:40:55,467 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:40:55,638 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:40:55,639 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:40:55,639 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:40:55,640 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:40:55,641 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:40:55,641 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:40:55,642 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:40:55,838 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:40:55,839 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:40:55,841 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:40:55,841 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:40:55,896 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:40:55,897 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:40:55,898 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:40:55,899 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:40:56,038 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:40:56,039 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:40:56,040 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 100].
2019-07-25 15:40:56,040 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:40:56,238 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:40:56,239 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:40:56,240 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:40:56,241 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:40:56,241 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:40:56,242 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:40:56,243 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:40:56,244 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:40:56,438 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:40:56,439 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:40:56,440 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:40:56,440 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:40:56,442 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:40:56,442 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:40:56,443 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 104].
2019-07-25 15:40:56,638 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:40:56,639 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:40:56,640 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:40:56,641 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:40:56,641 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:40:56,838 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:40:56,839 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:40:56,840 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:40:56,841 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:40:56,841 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:40:56,842 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:40:56,843 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:40:56,844 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:40:57,046 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:40:57,046 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:40:57,047 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-25 15:40:57,048 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:40:57,238 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:40:57,239 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:40:57,240 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:40:57,241 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:40:57,242 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:40:57,242 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:40:57,243 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:40:57,438 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:40:57,439 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:40:57,440 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:40:57,441 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:40:57,442 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:40:57,443 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:40:57,444 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:40:57,445 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:40:57,638 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:40:57,639 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:40:57,640 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:41:00,756 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:41:00,757 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:41:00,758 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:41:00,758 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:44:41,743 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:44:41,773 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:44:41,781 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:44:41,797 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 15:44:41,799 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 15:44:41,800 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:44:41,801 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:44:41,802 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:44:41,803 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:44:41,803 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:44:41,804 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:44:41,805 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:44:41,805 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:44:41,806 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:44:41,988 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:44:41,992 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 15:44:41,995 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 15:44:42,037 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:44:42,038 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:44:42,039 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:44:42,039 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:44:42,040 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:44:42,041 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:44:42,177 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:44:42,178 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:44:42,179 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:44:42,195 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:44:42,200 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:44:42,201 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:44:42,202 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:44:42,202 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:44:42,203 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 15:44:42,377 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 15:44:42,378 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:44:42,379 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:44:42,381 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:44:42,382 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:44:42,383 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 15:44:42,384 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:44:42,395 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:44:42,578 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:44:42,580 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:44:42,582 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:44:42,583 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:44:42,585 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:44:42,587 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:44:42,589 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:44:42,778 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:44:42,779 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:44:42,781 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:44:42,782 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:44:42,784 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:44:42,978 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:44:42,979 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:44:42,980 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:44:42,981 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:44:42,982 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:44:42,982 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 15:44:42,983 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 15:44:43,177 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 15:44:43,178 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 15:44:43,184 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 15:44:43,184 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 15:44:43,185 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 15:44:43,377 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 15:44:43,378 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:44:43,378 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:44:43,379 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:44:43,379 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:44:43,380 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:44:43,577 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 15:44:43,578 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 15:44:43,579 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 15:44:43,580 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 15:44:43,580 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 15:44:43,581 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:44:43,581 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:44:43,777 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:44:43,778 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:44:43,778 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:44:43,779 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 15:44:43,978 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:44:43,981 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:44:43,983 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:44:43,992 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 15:44:43,994 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:44:43,996 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 15:44:43,997 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:44:43,999 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:44:44,181 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connected]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 15:44:44,183 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:44:44,184 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 15:44:44,186 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:44:44,187 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:44:44,237 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:44:44,238 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:44:44,378 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:44:44,380 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:44:44,381 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:44:44,383 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:44:44,385 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:44:44,386 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 15:44:44,577 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:44:44,578 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:44:44,579 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:44:44,579 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:44:44,580 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:44:44,580 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:44:44,777 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 15:44:44,778 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:44:44,780 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:44:44,781 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:44:44,977 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 15:44:44,978 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:44:44,979 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:44:44,979 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:44:44,980 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:44:45,177 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:44:45,178 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:44:45,178 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:44:45,179 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:44:45,180 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:44:45,180 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:44:45,181 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:44:45,377 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:44:45,378 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:44:45,382 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:44:45,383 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:44:45,383 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:44:45,384 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:44:50,230 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:44:50,232 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:44:50,233 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:44:50,234 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:44:50,234 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:44:50,235 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:44:50,236 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:44:50,258 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:44:50,259 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:44:50,260 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:44:50,260 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:44:50,261 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:44:50,263 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:44:50,264 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:44:50,265 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:44:50,458 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:44:50,459 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:44:50,460 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:44:50,461 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:44:50,461 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:44:50,462 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 15:44:50,658 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:44:50,659 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:44:50,660 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:44:50,661 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:44:50,667 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:44:50,668 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:44:50,858 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:44:50,859 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:44:50,862 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:44:50,863 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:44:50,863 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 15:44:51,058 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:44:51,063 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:44:51,064 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:44:51,065 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:44:51,065 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:44:51,066 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:44:51,082 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 15:44:51,258 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:44:51,259 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:44:51,260 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:44:51,261 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:44:51,458 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:44:51,459 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:44:51,460 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:44:51,461 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:44:51,462 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:44:51,463 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:44:51,463 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:44:51,464 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:44:51,658 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:44:51,660 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:44:51,661 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:44:51,714 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:44:51,716 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:44:51,717 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:44:51,717 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:44:51,858 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:44:51,859 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:44:51,859 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 15:44:51,860 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:44:52,058 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:44:52,059 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:44:52,060 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:44:52,060 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:44:52,061 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:44:52,061 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:44:52,062 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:44:52,063 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:44:52,260 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:44:52,260 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:44:52,261 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:44:52,262 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:44:52,262 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:44:52,263 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:44:52,263 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 15:44:52,459 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:44:52,460 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:44:52,461 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:44:52,461 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:44:52,462 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:44:52,659 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:44:52,660 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:44:52,660 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:44:52,661 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:44:52,662 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:44:52,663 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:44:52,663 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:44:52,664 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:44:52,859 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:44:52,860 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:44:52,861 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 15:44:52,862 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:44:53,059 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:44:53,060 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:44:53,061 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:44:53,062 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:44:53,062 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:44:53,063 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:44:53,064 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:44:53,065 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:44:53,260 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:44:53,262 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:44:53,269 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:44:53,271 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:44:53,273 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:44:53,276 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:44:53,277 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:44:53,292 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:44:53,460 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:44:53,462 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:45:36,499 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:45:36,501 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:45:36,502 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:45:36,503 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:46:15,401 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:46:15,443 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:46:15,452 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:46:15,455 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 15:46:15,457 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 15:46:15,458 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:46:15,458 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:46:15,459 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:46:15,460 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:46:15,460 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:46:15,461 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:46:15,461 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:46:15,614 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:46:15,614 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:46:15,628 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:46:15,630 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 15:46:15,631 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 15:46:15,641 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:46:15,642 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:46:15,644 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:46:15,645 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:46:15,646 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:46:15,813 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:46:15,814 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:46:15,815 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:46:15,816 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:46:15,827 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:46:15,828 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:46:15,829 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:46:15,830 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:46:16,013 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:46:16,014 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 15:46:16,015 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 15:46:16,016 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:46:16,017 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:46:16,018 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:46:16,019 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:46:16,020 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 15:46:16,020 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:46:16,226 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:46:16,228 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:46:16,230 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:46:16,232 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:46:16,234 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:46:16,235 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:46:16,236 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:46:16,416 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:46:16,418 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:46:16,419 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:46:16,421 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:46:16,615 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:46:16,618 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:46:16,625 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:46:16,626 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:46:16,627 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:46:16,628 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:46:16,628 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:46:16,629 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 15:46:16,815 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 15:46:16,816 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 15:46:16,817 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 15:46:16,817 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 15:46:16,818 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 15:46:17,015 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 15:46:17,016 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 15:46:17,016 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:46:17,017 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:46:17,018 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:46:17,018 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:46:17,019 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:46:17,215 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 15:46:17,216 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 15:46:17,217 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 15:46:17,217 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 15:46:17,218 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 15:46:17,415 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:46:17,417 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:46:17,418 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:46:17,419 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:46:17,420 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:46:17,420 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 15:46:17,615 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:46:17,616 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:46:17,617 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:46:17,620 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 15:46:17,621 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:46:17,622 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 15:46:17,815 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:46:17,816 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:46:17,817 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connected]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 15:46:17,818 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:46:17,819 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 15:46:17,820 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:46:17,820 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:46:17,849 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:46:18,015 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:46:18,016 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:46:18,016 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:46:18,017 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:46:18,017 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:46:18,018 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:46:18,019 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 15:46:18,217 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:46:18,218 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:46:18,219 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:46:18,220 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:46:18,220 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:46:18,415 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:46:18,416 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 15:46:18,417 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:46:18,419 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:46:18,615 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:46:18,616 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 15:46:18,617 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:46:18,618 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:46:18,815 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:46:18,816 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:46:18,816 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:46:18,817 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:46:18,818 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:46:18,818 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:46:18,819 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:46:18,820 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:46:19,016 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:46:19,018 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:46:19,020 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:46:19,030 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:46:19,032 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:46:19,033 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:46:19,035 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:46:19,793 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:46:25,389 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:46:25,401 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:46:25,405 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:46:34,362 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:46:34,372 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:46:34,373 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:46:34,374 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:46:34,375 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:46:34,375 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:46:34,376 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:46:34,377 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:46:34,378 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:46:34,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:46:34,380 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:46:34,381 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:46:34,382 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:46:34,383 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:46:34,383 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:46:34,577 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:46:34,578 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 15:46:34,579 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:46:34,580 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:46:34,581 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:46:34,777 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:46:34,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:46:34,778 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:46:34,779 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:46:34,780 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:46:34,780 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:46:34,784 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:46:34,785 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 15:46:34,977 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:46:34,983 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:46:34,983 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:46:34,984 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:46:34,985 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:46:35,177 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:46:35,178 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 15:46:35,179 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:46:35,180 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:46:35,388 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:46:35,389 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:46:35,390 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:46:35,390 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:46:35,391 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:46:35,391 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:46:35,392 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:46:35,577 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:46:35,578 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:46:35,578 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:46:35,579 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:46:35,581 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:46:35,582 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:46:35,643 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:46:35,777 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:46:35,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:46:35,779 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:46:35,780 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:46:35,781 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:46:35,782 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 15:46:35,977 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:46:35,978 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:46:35,979 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:46:35,979 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:46:35,980 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:46:35,981 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:46:36,177 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:46:36,178 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:46:36,179 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:46:36,179 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:46:36,180 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:46:36,181 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:46:36,181 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:46:36,182 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:46:36,382 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:46:36,384 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 15:46:36,385 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:46:36,385 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:46:36,582 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:46:36,583 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:46:36,583 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:46:36,584 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:46:36,585 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:46:36,585 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:46:36,586 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:46:36,586 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:46:36,781 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:46:36,782 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:46:36,783 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:46:36,783 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:46:36,784 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:46:36,784 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 15:46:36,981 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:46:36,982 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:46:36,983 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:46:36,983 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:46:36,984 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:46:36,984 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:46:37,208 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:46:37,209 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:46:37,209 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:46:37,211 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:46:37,211 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:46:37,212 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:46:37,212 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:46:37,383 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:46:37,385 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:46:37,386 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:46:37,387 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:46:37,387 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:46:37,388 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:46:39,386 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:46:39,387 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:46:39,388 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:46:39,388 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:46:53,557 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:46:53,597 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:46:53,607 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:46:53,611 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 15:46:53,613 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 15:46:53,614 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:46:53,615 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:46:53,616 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:46:53,616 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:46:53,617 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:46:53,618 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:46:53,619 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:46:53,801 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:46:53,802 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:46:53,814 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:46:53,821 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 15:46:53,822 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 15:46:53,831 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:46:53,833 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:46:53,835 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:46:53,836 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:46:53,837 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:46:54,000 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:46:54,001 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:46:54,002 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:46:54,003 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:46:54,012 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:46:54,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:46:54,014 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:46:54,015 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:46:54,200 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:46:54,201 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 15:46:54,202 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 15:46:54,203 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:46:54,204 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:46:54,206 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:46:54,207 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:46:54,208 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 15:46:54,209 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:46:54,411 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:46:54,413 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:46:54,415 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:46:54,418 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:46:54,422 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:46:54,424 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:46:54,425 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:46:54,606 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:46:54,607 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:46:54,609 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:46:54,611 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:46:54,804 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:46:54,807 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:46:54,809 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:46:54,810 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:46:54,825 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:46:54,826 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:46:54,827 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:46:54,828 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 15:46:55,004 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 15:46:55,005 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 15:46:55,006 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 15:46:55,007 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 15:46:55,007 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 15:46:55,204 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 15:46:55,209 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 15:46:55,210 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:46:55,211 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:46:55,212 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:46:55,212 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:46:55,213 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:46:55,404 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 15:46:55,405 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 15:46:55,406 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 15:46:55,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 15:46:55,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 15:46:55,605 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:46:55,606 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:46:55,606 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:46:55,607 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:46:55,608 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:46:55,609 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 15:46:55,804 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:46:55,805 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:46:55,806 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:46:55,810 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 15:46:55,811 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:46:55,812 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 15:46:56,004 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:46:56,005 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:46:56,007 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 15:46:56,008 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:46:56,008 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 15:46:56,009 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:46:56,009 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:46:56,046 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:46:56,204 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:46:56,205 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:46:56,206 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:46:56,207 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:46:56,208 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:46:56,209 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:46:56,209 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 15:46:56,405 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:46:56,408 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:46:56,410 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:46:56,411 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:46:56,413 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:46:56,606 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:46:56,607 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 15:46:56,609 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:46:56,615 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:46:56,804 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:46:56,805 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 15:46:56,806 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:46:56,807 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:46:57,004 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:46:57,005 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:46:57,006 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:46:57,007 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:46:57,007 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:46:57,008 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:46:57,009 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:46:57,010 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:46:57,204 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:46:57,205 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:46:57,206 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:46:57,210 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:46:57,221 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:46:57,222 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:46:57,223 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:47:02,548 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:47:02,551 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:47:02,552 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:47:02,552 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:47:02,553 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:47:02,553 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:47:02,568 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:47:02,568 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:47:02,569 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:47:02,570 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:47:02,570 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:47:02,571 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:47:02,573 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:47:02,576 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:47:03,451 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:47:04,772 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:47:04,777 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:47:10,280 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:47:10,282 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:47:10,283 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:47:10,283 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 15:47:10,284 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:47:10,299 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:47:10,300 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:47:10,300 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:47:10,301 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:47:10,302 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:47:10,302 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:47:10,303 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:47:10,307 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:47:13,522 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:47:13,523 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 15:47:13,524 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:47:13,572 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:47:13,574 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:47:13,575 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:47:13,576 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:47:13,577 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:47:13,578 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 15:47:13,740 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:47:13,741 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:47:13,742 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:47:23,706 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:47:23,715 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:47:23,716 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:47:23,716 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:47:23,717 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:47:23,718 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:47:23,718 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:47:23,732 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:47:23,733 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:47:23,738 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:47:23,741 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:47:23,933 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:47:24,127 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:47:24,131 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:47:24,132 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:47:24,134 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:47:24,135 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:47:24,136 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:47:24,137 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 15:47:24,333 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:47:24,336 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:47:24,338 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:47:24,340 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:47:24,341 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:47:24,345 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:47:24,346 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:47:24,348 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:47:24,532 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:47:24,533 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:47:24,534 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:47:24,534 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:47:24,535 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:47:24,536 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:47:24,537 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:47:24,537 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 15:47:24,742 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:47:24,743 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:47:24,744 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:47:24,745 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:47:24,934 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:47:24,935 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:47:24,935 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:47:24,936 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:47:24,937 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:47:24,937 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:47:24,938 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:47:25,134 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:47:25,135 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:47:25,135 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:47:25,136 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:47:25,137 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 15:47:25,334 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:47:25,335 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:47:25,336 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:47:25,336 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:47:25,337 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:47:25,338 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:47:25,338 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:47:25,534 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:47:25,535 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:47:25,536 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:47:25,536 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:47:25,537 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:47:25,538 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:47:25,539 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:47:25,540 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:47:25,734 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:47:25,735 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:47:25,736 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:47:25,736 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:48:21,783 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:48:21,784 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:48:21,785 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:48:21,786 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:50:18,258 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:50:18,304 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:50:18,312 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:50:18,315 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 15:50:18,317 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 15:50:18,318 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:50:18,318 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:50:18,319 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:50:18,320 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:50:18,321 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:50:18,321 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:50:18,322 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:50:18,484 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:50:18,485 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:50:18,497 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:50:18,499 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 15:50:18,501 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 15:50:18,513 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:50:18,532 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:50:18,534 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:50:18,535 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:50:18,536 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:50:18,684 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:50:18,685 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:50:18,686 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:50:18,687 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:50:18,698 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:50:18,699 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:50:18,700 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:50:18,701 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:50:18,884 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:50:18,885 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 15:50:18,886 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 15:50:18,887 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:50:18,888 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:50:18,890 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:50:18,891 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:50:18,892 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 15:50:18,893 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:50:19,095 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:50:19,097 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:50:19,099 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:50:19,102 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:50:19,103 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:50:19,104 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:50:19,106 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:50:19,285 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:50:19,287 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:50:19,288 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:50:19,291 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:50:19,485 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:50:19,487 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:50:19,489 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:50:19,490 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:50:19,491 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:50:19,493 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:50:19,493 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:50:19,494 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 15:50:19,685 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 15:50:19,685 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 15:50:19,686 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 15:50:19,687 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 15:50:19,688 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 15:50:19,884 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 15:50:19,885 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 15:50:19,886 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:50:19,887 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:50:19,887 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:50:19,888 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:50:19,889 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:50:20,084 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 15:50:20,085 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 15:50:20,086 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 15:50:20,087 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 15:50:20,088 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 15:50:20,284 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:50:20,285 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:50:20,286 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:50:20,287 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:50:20,288 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:50:20,288 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 15:50:20,484 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:50:20,485 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:50:20,486 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:50:20,490 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 15:50:20,491 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:50:20,491 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 15:50:20,684 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:50:20,685 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:50:20,687 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 15:50:20,688 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:50:20,689 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 15:50:20,689 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:50:20,690 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:50:20,719 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:50:20,884 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:50:20,885 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:50:20,886 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:50:20,887 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:50:20,887 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:50:20,888 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:50:20,889 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 15:50:21,084 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:50:21,085 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:50:21,086 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:50:21,087 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:50:21,091 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:50:21,284 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:50:21,285 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 15:50:21,286 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:50:21,288 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:50:21,484 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:50:21,485 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 15:50:21,486 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:50:21,487 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:50:21,684 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:50:21,685 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:50:21,686 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:50:21,687 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:50:21,688 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:50:21,688 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:50:21,690 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:50:21,690 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:50:21,885 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:50:21,887 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:50:21,889 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:50:21,899 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:50:21,900 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:50:21,902 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:50:21,904 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:51:38,552 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:51:44,120 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:51:44,152 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:51:44,156 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:51:44,157 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:51:44,158 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:51:44,161 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:51:44,162 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:51:44,166 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:51:44,180 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:51:44,181 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:51:44,182 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:51:44,185 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:51:44,186 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:51:44,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:51:44,189 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:51:44,190 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:51:44,380 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:51:44,382 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:51:44,383 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:51:44,388 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 15:51:44,580 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:51:44,583 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:51:44,781 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:51:44,784 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:51:44,785 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:51:44,786 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:51:44,787 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:51:44,789 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:51:44,790 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:51:44,791 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:51:44,982 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 15:51:44,983 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:51:44,998 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:51:45,000 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:51:45,002 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:51:45,180 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:51:45,181 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:51:45,181 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 15:51:45,380 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:51:45,381 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:51:45,382 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:51:45,383 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:51:45,383 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:51:45,383 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:51:45,384 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:51:45,580 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:51:45,584 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:51:45,589 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:51:45,590 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:51:45,591 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:51:45,592 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:51:45,594 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:51:45,595 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:51:45,864 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:51:45,866 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:51:45,870 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:51:45,871 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:51:45,872 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:51:45,873 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:51:45,874 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 15:51:45,980 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:51:45,981 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:51:45,982 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:51:45,982 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:51:45,983 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:51:46,180 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:51:46,181 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:51:46,182 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:51:46,183 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:51:46,184 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:51:46,185 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:51:46,186 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:51:46,187 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:51:46,385 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:51:46,386 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:51:46,387 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 15:51:46,388 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:51:46,584 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:51:46,585 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:51:46,586 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:51:46,587 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:51:46,588 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:51:46,589 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:51:46,589 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:51:46,590 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:51:46,784 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:51:46,785 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:51:46,786 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:51:46,788 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:51:46,789 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:51:46,790 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:51:46,791 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 15:51:46,984 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:51:46,985 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:51:46,986 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:51:46,987 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:51:47,184 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:51:47,185 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:51:47,187 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:51:47,188 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:51:47,189 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:51:47,190 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:51:47,191 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:51:47,192 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:51:47,384 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:51:47,385 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:51:47,387 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:51:47,388 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:51:47,389 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:51:47,390 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:51:47,391 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:51:52,039 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:51:52,040 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:51:52,041 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:51:52,042 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:52:54,826 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:52:54,877 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:52:54,890 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:52:54,893 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 15:52:54,894 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 15:52:54,895 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:52:54,896 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:52:54,896 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:52:54,897 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:52:54,898 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:52:54,898 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:52:54,899 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:52:55,055 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:52:55,056 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:52:55,068 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:52:55,076 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 15:52:55,078 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 15:52:55,085 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:52:55,086 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:52:55,102 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:52:55,103 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:52:55,104 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:52:55,256 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:52:55,256 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:52:55,257 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:52:55,258 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:52:55,270 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:52:55,271 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:52:55,272 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:52:55,272 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:52:55,455 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:52:55,456 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 15:52:55,457 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 15:52:55,458 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:52:55,459 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:52:55,461 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:52:55,462 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:52:55,463 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 15:52:55,464 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:52:55,666 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:52:55,668 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:52:55,670 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:52:55,673 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:52:55,674 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:52:55,676 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:52:55,677 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:52:55,856 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:52:55,858 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:52:55,860 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:52:55,862 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:52:56,055 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:52:56,058 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:52:56,060 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:52:56,061 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:52:56,062 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:52:56,067 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:52:56,068 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:52:56,069 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 15:52:56,255 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 15:52:56,256 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 15:52:56,257 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 15:52:56,258 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 15:52:56,259 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 15:52:56,459 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 15:52:56,460 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 15:52:56,460 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:52:56,461 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:52:56,462 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:52:56,463 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:52:56,464 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:52:56,655 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 15:52:56,656 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 15:52:56,657 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 15:52:56,658 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 15:52:56,659 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 15:52:56,860 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:52:56,861 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:52:56,862 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:52:56,862 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:52:56,863 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:52:56,864 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 15:52:57,055 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:52:57,056 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:52:57,057 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:52:57,061 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 15:52:57,063 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:52:57,064 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 15:52:57,255 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:52:57,256 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:52:57,258 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 15:52:57,260 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:52:57,260 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 15:52:57,261 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:52:57,262 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:52:57,291 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:52:57,455 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:52:57,456 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:52:57,456 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:52:57,457 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:52:57,458 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:52:57,459 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:52:57,459 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 15:52:57,655 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:52:57,660 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:52:57,661 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:52:57,662 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:52:57,663 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:52:57,855 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:52:57,856 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 15:52:57,857 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:52:57,859 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:52:58,055 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:52:58,056 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 15:52:58,057 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:52:58,058 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:52:58,255 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:52:58,260 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:52:58,261 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:52:58,262 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:52:58,262 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:52:58,263 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:52:58,264 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:52:58,265 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:52:58,455 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:52:58,456 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:52:58,457 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:52:58,460 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:52:58,461 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:52:58,462 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:52:58,463 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:54:14,908 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:54:14,932 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:54:14,959 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:54:14,965 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:54:14,968 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:54:14,970 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:54:14,972 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:54:14,973 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:54:15,022 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:54:15,116 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:54:15,120 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:54:15,123 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:54:15,131 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:54:15,170 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:54:15,316 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:54:15,380 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:54:15,382 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:54:15,384 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:54:15,568 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:54:15,595 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:54:15,599 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 15:54:15,602 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:54:15,611 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:54:15,719 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:54:15,730 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:54:15,740 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:54:15,747 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:54:15,749 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:54:15,755 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:54:15,901 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:54:15,937 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:54:15,943 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 15:54:15,948 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:54:15,970 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:54:15,973 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:54:16,122 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:54:16,125 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:54:16,157 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:54:16,162 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 15:54:16,320 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:54:16,330 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:54:16,333 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:54:16,338 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:54:16,341 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:54:16,343 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:54:16,345 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:54:16,518 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:55:45,035 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:55:45,083 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:55:45,084 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:55:45,085 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:55:45,085 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:55:45,088 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:55:45,088 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:55:45,160 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:55:45,161 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:55:45,162 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:55:45,163 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:55:45,165 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:55:45,166 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:55:45,288 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 15:55:45,289 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:55:45,290 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:55:45,291 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:55:45,292 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:55:45,488 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:55:45,489 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:55:45,490 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:55:45,491 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:55:45,492 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:55:45,492 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:55:45,493 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:55:45,494 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:55:45,688 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:55:45,689 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:55:45,690 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:55:45,691 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 15:55:45,888 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:55:45,889 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:55:45,890 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:55:45,890 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:55:45,891 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:55:45,892 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:55:45,892 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:55:46,088 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:55:46,089 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:55:46,090 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:55:46,091 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:55:46,091 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:55:46,092 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:55:46,093 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:55:46,093 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:55:46,288 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 15:55:46,289 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:55:46,290 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:55:46,290 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:55:46,488 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:55:46,489 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:55:46,490 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:55:46,490 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:55:46,491 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:55:46,492 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:55:46,492 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:55:46,493 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:55:46,688 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:55:46,689 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:55:46,694 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:55:46,695 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:55:46,696 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:55:46,697 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:55:46,698 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:55:46,698 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:56:17,927 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:56:17,928 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:56:17,929 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:56:17,929 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:56:21,756 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:56:21,804 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:56:21,814 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:56:21,818 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 15:56:21,819 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 15:56:21,820 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:56:21,821 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:56:21,822 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:56:21,822 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:56:21,823 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:56:21,823 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:56:21,824 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:56:21,987 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 15:56:21,989 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:56:22,017 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:56:22,022 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 15:56:22,024 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 15:56:22,045 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:56:22,047 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:56:22,049 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:56:22,051 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:56:22,052 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:56:22,190 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:56:22,191 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:56:22,192 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:56:22,193 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:56:22,204 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:56:22,205 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:56:22,206 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:56:22,207 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:56:22,386 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:56:22,387 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 15:56:22,388 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 15:56:22,389 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:56:22,390 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:56:22,392 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:56:22,393 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:56:22,394 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 15:56:22,394 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:56:22,597 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:56:22,605 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:56:22,606 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:56:22,609 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:56:22,611 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:56:22,612 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:56:22,614 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:56:22,787 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:56:22,789 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:56:22,791 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:56:22,794 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:56:22,986 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:56:22,989 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:56:22,991 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:56:22,992 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:56:22,993 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:56:23,000 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:56:23,001 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:56:23,002 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 15:56:23,186 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 15:56:23,187 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 15:56:23,188 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 15:56:23,189 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 15:56:23,189 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 15:56:23,386 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 15:56:23,387 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 15:56:23,388 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:56:23,389 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:56:23,390 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:56:23,391 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:56:23,391 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:56:23,591 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 15:56:23,592 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 15:56:23,593 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 15:56:23,594 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 15:56:23,595 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 15:56:23,804 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:56:23,805 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:56:23,806 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:56:23,807 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:56:23,808 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:56:23,809 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 15:56:23,995 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:56:23,996 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:56:23,997 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:56:24,001 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 15:56:24,001 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:56:24,002 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 15:56:24,195 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:56:24,196 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:56:24,198 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 15:56:24,199 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:56:24,200 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 15:56:24,201 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:56:24,202 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:56:24,232 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:56:24,395 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:56:24,396 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:56:24,396 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:56:24,397 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:56:24,398 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:56:24,398 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:56:24,399 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 15:56:24,595 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:56:24,596 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:56:24,597 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:56:24,598 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:56:24,599 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:56:24,795 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:56:24,796 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 15:56:24,797 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:56:24,799 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:56:24,995 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:56:24,996 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 15:56:24,997 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:56:24,998 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:56:25,195 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:56:25,196 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:56:25,197 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:56:25,197 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:56:25,198 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:56:25,199 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:56:25,203 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:56:25,203 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:56:25,395 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:56:25,396 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:56:25,397 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:56:25,401 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:56:25,401 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:56:25,402 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:56:25,403 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:58:29,627 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 15:58:29,633 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 15:58:29,640 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 15:58:29,641 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 15:58:29,643 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:58:29,644 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:58:29,645 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:58:29,647 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:58:29,652 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 15:58:29,832 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 15:58:29,833 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 15:58:29,834 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 15:58:29,836 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 15:58:29,837 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 15:58:30,040 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 15:58:30,053 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 15:58:30,054 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 15:58:30,055 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 15:58:30,232 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:58:30,233 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 15:58:30,234 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 15:58:30,235 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 15:58:30,236 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 15:58:30,433 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 15:58:30,435 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 15:58:30,437 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 15:58:30,438 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 15:58:30,440 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:58:30,442 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:58:30,443 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:58:30,445 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 15:58:30,633 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 15:58:30,633 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 15:58:30,640 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 15:58:30,641 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 15:58:30,642 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 15:58:30,834 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 15:58:30,835 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:58:30,839 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 15:58:31,033 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 15:58:31,034 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 15:58:31,035 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 15:58:31,035 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 15:58:31,036 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:58:31,037 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 15:58:31,037 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:58:31,232 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:58:31,233 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 15:58:31,234 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 15:58:31,235 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 15:58:31,235 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 15:58:31,236 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 15:58:31,238 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 15:58:31,239 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 15:58:31,481 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 15:58:31,483 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 15:58:31,486 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:58:31,487 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:58:31,488 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 15:58:31,490 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 15:58:31,491 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 15:58:31,632 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 15:58:31,633 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 15:58:31,634 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 15:58:31,635 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 15:58:31,635 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:58:31,832 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:58:31,833 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:58:31,834 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:58:31,835 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 15:58:31,841 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 15:58:31,842 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 15:58:31,842 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 15:58:31,843 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 15:58:32,032 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 15:58:32,033 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:58:32,034 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 15:58:32,034 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 15:58:32,232 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 15:58:32,233 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 15:58:32,234 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 15:58:32,235 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:58:32,235 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:58:32,236 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:58:32,236 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:58:32,237 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 15:58:32,432 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 15:58:32,433 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 15:58:32,434 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 15:58:32,434 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 15:58:32,435 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 15:58:32,436 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:58:32,436 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 15:58:32,632 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 15:58:32,642 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 15:58:32,643 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 15:58:32,644 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 15:58:32,832 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 15:58:32,833 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 15:58:32,834 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 15:58:32,834 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 15:58:32,835 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 15:58:32,836 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 15:58:32,837 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 15:58:32,837 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 15:58:33,032 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 15:58:33,034 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 15:58:33,037 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 15:58:33,038 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:58:33,039 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:58:33,040 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:58:33,041 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:58:35,187 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 15:58:35,188 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 15:58:35,189 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 15:58:35,190 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 15:58:57,402 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 15:58:57,439 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 15:58:57,447 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 15:58:57,450 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 15:58:57,451 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 15:58:57,452 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 15:58:57,453 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 15:58:57,454 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 15:58:57,454 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 15:58:57,455 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:58:57,456 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:58:57,456 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 15:58:57,623 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 15:58:57,625 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 15:58:57,637 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 15:58:57,640 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 15:58:57,640 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 15:58:57,649 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 15:58:57,650 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 15:58:57,671 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 15:58:57,673 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 15:58:57,674 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 15:58:57,823 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 15:58:57,824 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 15:58:57,825 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 15:58:57,826 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 15:58:57,837 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 15:58:57,838 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 15:58:57,839 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 15:58:57,840 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 15:58:58,023 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 15:58:58,024 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 15:58:58,025 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 15:58:58,026 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 15:58:58,027 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 15:58:58,028 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 15:58:58,029 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 15:58:58,031 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 15:58:58,032 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 15:58:58,236 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:58:58,238 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 15:58:58,240 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 15:58:58,242 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 15:58:58,244 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 15:58:58,245 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 15:58:58,247 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 15:58:58,424 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 15:58:58,426 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 15:58:58,427 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 15:58:58,430 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 15:58:58,623 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 15:58:58,626 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 15:58:58,628 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 15:58:58,629 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 15:58:58,630 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 15:58:58,631 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 15:58:58,632 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:58:58,633 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 15:58:58,823 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 15:58:58,825 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 15:58:58,826 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 15:58:58,827 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 15:58:58,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 15:58:59,023 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 15:58:59,028 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 15:58:59,029 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:58:59,030 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:58:59,030 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:58:59,031 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:58:59,032 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 15:58:59,223 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 15:58:59,224 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 15:58:59,225 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 15:58:59,226 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 15:58:59,226 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 15:58:59,423 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 15:58:59,424 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:58:59,425 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:58:59,425 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:58:59,426 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:58:59,427 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 15:58:59,623 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 15:58:59,629 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 15:58:59,629 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 15:58:59,633 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 15:58:59,634 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 15:58:59,635 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 15:58:59,823 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 15:58:59,828 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 15:58:59,830 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 15:58:59,831 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 15:58:59,832 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 15:58:59,832 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 15:58:59,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 15:58:59,862 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 15:59:00,023 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 15:59:00,024 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 15:59:00,025 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:59:00,025 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:59:00,026 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 15:59:00,027 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 15:59:00,028 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 15:59:00,223 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 15:59:00,229 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 15:59:00,229 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 15:59:00,230 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 15:59:00,231 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 15:59:00,423 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 15:59:00,424 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 15:59:00,425 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 15:59:00,428 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:59:00,623 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:59:00,628 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 15:59:00,629 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 15:59:00,630 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 15:59:00,823 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 15:59:00,824 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 15:59:00,825 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 15:59:00,825 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 15:59:00,826 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 15:59:00,827 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 15:59:00,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 15:59:00,828 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 15:59:01,025 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 15:59:01,026 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:59:01,028 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 15:59:01,039 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 15:59:01,041 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 15:59:01,048 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 15:59:01,050 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:00:21,263 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:00:21,264 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:00:21,267 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:00:21,273 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:00:21,280 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:00:21,286 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:00:21,288 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:00:21,289 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:00:21,295 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:00:21,464 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:00:21,472 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:00:21,477 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:00:21,480 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:00:21,484 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:00:21,664 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:00:21,668 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:00:21,669 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:00:21,670 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:00:21,865 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:00:21,866 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:00:21,871 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:00:21,876 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:00:21,877 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:00:22,064 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:00:22,069 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:00:22,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:00:22,075 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:00:22,076 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:00:22,077 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:00:22,078 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:00:22,079 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:00:22,267 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:00:22,282 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:00:22,287 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:00:22,288 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:00:22,289 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:00:22,464 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:00:22,465 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:00:22,466 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:00:22,664 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:00:22,665 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:00:22,666 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:00:22,667 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:00:22,667 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:00:22,668 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:00:22,669 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:00:22,864 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:00:22,865 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:00:22,866 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:00:22,867 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:00:22,868 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:00:22,868 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:00:22,870 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:00:22,871 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:00:23,115 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:00:23,117 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:00:23,118 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:00:23,120 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:00:23,121 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:00:23,123 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:00:23,124 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:00:23,264 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:00:23,265 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:00:23,266 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:00:23,267 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:00:23,268 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:00:23,465 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:00:23,472 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:00:23,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:00:23,475 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:00:23,477 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:00:23,478 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:00:23,479 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:00:23,481 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:00:23,666 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:00:23,668 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:00:23,670 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:00:23,672 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:00:23,866 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:00:23,867 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:00:23,869 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:00:23,870 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:00:23,871 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:00:23,873 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:00:23,875 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:00:23,877 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:00:24,066 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:00:24,067 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:00:24,069 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:00:24,070 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:00:24,072 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:00:24,073 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:00:24,075 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:00:24,266 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:00:24,269 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:00:24,271 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:00:24,272 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:00:24,464 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:00:24,469 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:00:24,470 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:00:24,470 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:00:24,471 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:00:24,472 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:00:24,473 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:00:24,474 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:00:24,666 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:00:24,669 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:00:24,673 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:00:24,676 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:00:24,678 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:00:24,680 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:00:24,682 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:00:27,917 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:00:27,918 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:00:27,919 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:00:27,920 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:00:31,380 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:00:31,425 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:00:31,438 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:00:31,444 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:00:31,446 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:00:31,447 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:00:31,448 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:00:31,449 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:00:31,450 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:00:31,451 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:00:31,451 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:00:31,452 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:00:31,603 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:00:31,604 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:00:31,616 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:00:31,618 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:00:31,618 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:00:31,629 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:00:31,631 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:00:31,632 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:00:31,633 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:00:31,634 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:00:31,803 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:00:31,804 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:00:31,805 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:00:31,806 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:00:31,817 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:00:31,818 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:00:31,819 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:00:31,820 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:00:32,003 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:00:32,008 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:00:32,009 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:00:32,010 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:00:32,011 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:00:32,013 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:00:32,014 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:00:32,015 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:00:32,015 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:00:32,214 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:00:32,221 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:00:32,223 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:00:32,226 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:00:32,227 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:00:32,228 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:00:32,230 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:00:32,404 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:00:32,406 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:00:32,407 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:00:32,410 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:00:32,603 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:00:32,606 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:00:32,608 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:00:32,609 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:00:32,610 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:00:32,616 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:00:32,617 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:00:32,618 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:00:32,803 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:00:32,808 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:00:32,809 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:00:32,810 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:00:32,811 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:00:33,003 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:00:33,014 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:00:33,015 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:00:33,015 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:00:33,027 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:00:33,028 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:00:33,029 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:00:33,205 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:00:33,206 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:00:33,207 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:00:33,207 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:00:33,208 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:00:33,404 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:00:33,409 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:00:33,410 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:00:33,411 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:00:33,412 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:00:33,412 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:00:33,604 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:00:33,605 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:00:33,606 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:00:33,610 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:00:33,611 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:00:33,612 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:00:33,804 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:00:33,805 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:00:33,807 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:00:33,808 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:00:33,809 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:00:33,810 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:00:33,811 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:00:33,840 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:00:34,005 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:00:34,007 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:00:34,008 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:00:34,010 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:00:34,012 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:00:34,013 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:00:34,015 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:00:34,206 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:00:34,208 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:00:34,209 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:00:34,211 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:00:34,213 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:00:34,404 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:00:34,410 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:00:34,411 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:00:34,413 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:00:34,604 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:00:34,609 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:00:34,610 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:00:34,611 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:00:34,804 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:00:34,805 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:00:34,806 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:00:34,807 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:00:34,808 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:00:34,808 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:00:34,809 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:00:34,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:00:35,004 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:00:35,009 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:00:35,010 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:00:35,014 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:00:35,015 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:00:35,016 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:00:35,017 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:01:59,376 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:01:59,383 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:01:59,416 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:01:59,421 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:01:59,426 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:02:03,545 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:02:06,043 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:02:06,466 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:02:07,239 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:02:09,266 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:02:09,270 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:02:09,271 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:02:09,273 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:02:09,274 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:02:09,275 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:02:09,276 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:02:09,277 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:02:09,277 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:02:09,300 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:02:09,302 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:02:09,308 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:02:09,313 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:02:09,497 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:02:09,499 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:02:09,502 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:02:09,508 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:02:09,509 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:02:09,733 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:02:09,739 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:02:09,740 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:02:09,741 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:02:09,896 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:02:09,897 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:02:09,902 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:02:09,903 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:02:09,904 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:02:10,096 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:02:10,097 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:02:10,098 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:02:10,099 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:02:10,296 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:02:10,297 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:02:10,298 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:02:10,298 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:02:10,299 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:02:10,299 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:02:10,300 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:02:10,497 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:02:10,497 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:02:10,498 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:02:10,499 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:02:10,499 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:02:10,501 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:02:10,502 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:02:10,751 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:02:10,752 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:02:10,753 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:02:10,755 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:02:10,757 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:02:10,759 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:02:10,759 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:02:10,896 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:02:10,897 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:02:10,898 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:02:10,899 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:02:10,900 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:02:11,096 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:02:11,097 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:02:11,098 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:02:11,099 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:02:11,099 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:02:11,100 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:02:11,100 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:02:11,101 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:02:11,102 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:02:11,296 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:02:11,297 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:02:11,298 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:02:11,299 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:02:11,496 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:02:11,497 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:02:11,497 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:02:11,498 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:02:11,498 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:02:11,499 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:02:11,500 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:02:11,696 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:02:11,697 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:02:11,697 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:02:11,698 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:02:11,699 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:02:11,699 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:02:11,700 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:02:11,896 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:02:11,897 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:02:11,898 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:02:11,899 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:02:11,900 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:02:12,096 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:02:12,097 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:02:12,099 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:02:12,100 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:02:12,101 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:02:12,101 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:02:12,102 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:02:12,103 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:02:12,297 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:02:12,298 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:02:12,300 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:02:12,300 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:02:12,301 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:02:12,302 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:02:25,150 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:02:25,151 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:02:25,152 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:02:25,153 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:03:23,725 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:03:23,764 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:03:23,776 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:03:23,778 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:03:23,781 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:03:23,782 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:03:23,794 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:03:23,795 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:03:23,796 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:03:23,797 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:03:23,798 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:03:23,799 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:03:23,938 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:03:23,939 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:03:23,955 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:03:23,958 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:03:23,959 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:03:23,969 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:03:23,970 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:03:23,971 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:03:23,973 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:03:23,974 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:03:24,139 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:03:24,139 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:03:24,140 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:03:24,141 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:03:24,151 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:03:24,152 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:03:24,153 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:03:24,154 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:03:24,338 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:03:24,339 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:03:24,340 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:03:24,341 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:03:24,342 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:03:24,343 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:03:24,344 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:03:24,345 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:03:24,346 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:03:24,549 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:03:24,551 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:03:24,553 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:03:24,555 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:03:24,557 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:03:24,558 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:03:24,560 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:03:24,740 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:03:24,741 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:03:24,742 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:03:24,746 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:03:24,938 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:03:24,941 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:03:24,943 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:03:24,944 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:03:24,946 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:03:24,947 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:03:24,948 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:03:24,948 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:03:25,138 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:03:25,139 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:03:25,140 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:03:25,141 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:03:25,141 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:03:25,338 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:03:25,339 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:03:25,340 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:03:25,340 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:03:25,341 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:03:25,342 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:03:25,343 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:03:25,538 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:03:25,562 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:03:25,562 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:03:25,563 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:03:25,564 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:03:25,738 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:03:25,739 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:03:25,740 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:03:25,741 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:03:25,742 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:03:25,743 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:03:25,938 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:03:25,939 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:03:25,940 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:03:25,944 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:03:25,945 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:03:25,946 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:03:26,138 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:03:26,139 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:03:26,142 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:03:26,143 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:03:26,143 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:03:26,144 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:03:26,145 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:03:26,174 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:03:26,338 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:03:26,339 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:03:26,340 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:03:26,340 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:03:26,341 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:03:26,342 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:03:26,342 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:03:26,538 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:03:26,539 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:03:26,540 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:03:26,541 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:03:26,542 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:03:26,738 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:03:26,739 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:03:26,740 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:03:26,742 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:03:26,939 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:03:26,941 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:03:26,942 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:03:26,943 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:03:27,139 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:03:27,141 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:03:27,142 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:03:27,144 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:03:27,146 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:03:27,147 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:03:27,149 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:03:27,151 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:03:27,339 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:03:27,341 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:03:27,343 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:03:27,353 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:03:27,354 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:03:27,356 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:03:27,358 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:06:28,235 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:06:34,155 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:06:34,180 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:06:34,181 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:06:34,182 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:06:34,183 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:06:34,184 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:06:34,185 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:06:34,186 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:06:34,187 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:06:34,362 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:06:34,363 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:06:34,365 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:06:34,367 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:06:34,368 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:06:34,565 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:06:34,570 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:06:34,571 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:06:34,571 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:06:34,762 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:06:34,763 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:06:34,764 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:06:34,765 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:06:34,766 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:06:34,962 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:06:34,963 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:06:34,967 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:06:34,967 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:06:34,968 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:06:34,969 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:06:34,970 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:06:34,970 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:06:35,163 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:06:35,183 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:06:35,184 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:06:35,185 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:06:35,362 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:06:35,363 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:06:35,363 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:06:35,364 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:06:35,563 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:06:35,563 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:06:35,564 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:06:35,565 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:06:35,565 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:06:35,566 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:06:35,567 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:06:35,762 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:06:35,763 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:06:35,764 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:06:35,765 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:06:35,765 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:06:35,767 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:06:35,768 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:06:35,831 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:06:35,962 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:06:35,963 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:06:35,964 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:06:35,964 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:06:35,965 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:06:35,966 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:06:36,162 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:06:36,166 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:06:36,167 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:06:36,168 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:06:36,169 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:06:36,170 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:06:36,362 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:06:36,363 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:06:36,364 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:06:36,365 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:06:36,366 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:06:36,366 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:06:36,367 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:06:36,368 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:06:36,562 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:06:36,563 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:06:36,564 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:06:36,565 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:06:36,762 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:06:36,767 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:06:36,768 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:06:36,768 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:06:36,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:06:36,770 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:06:36,771 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:06:36,772 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:06:36,964 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:06:36,965 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:06:36,967 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:06:36,969 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:06:36,971 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:06:36,973 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:06:37,164 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:06:37,166 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:06:37,169 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:06:37,171 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:06:37,173 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:06:37,363 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:06:37,365 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:06:37,366 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:06:37,369 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:06:37,370 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:06:37,372 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:06:37,373 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:06:37,374 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:06:37,563 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:06:37,564 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:06:37,565 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:06:37,566 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:06:37,567 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:06:37,567 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:06:40,193 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:06:40,194 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:06:40,195 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:06:40,195 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:06:44,032 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:06:44,063 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:06:44,073 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:06:44,076 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:06:44,078 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:06:44,079 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:06:44,079 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:06:44,080 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:06:44,081 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:06:44,081 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:06:44,082 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:06:44,082 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:06:44,249 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:06:44,250 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:06:44,262 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:06:44,265 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:06:44,266 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:06:44,274 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:06:44,275 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:06:44,276 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:06:44,278 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:06:44,279 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:06:44,449 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:06:44,450 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:06:44,451 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:06:44,452 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:06:44,462 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:06:44,463 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:06:44,464 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:06:44,465 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:06:44,649 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:06:44,650 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:06:44,651 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:06:44,652 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:06:44,653 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:06:44,655 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:06:44,656 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:06:44,656 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:06:44,657 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:06:44,860 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:06:44,862 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:06:44,868 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:06:44,870 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:06:44,872 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:06:44,873 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:06:44,875 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:06:45,051 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:06:45,052 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:06:45,053 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:06:45,056 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:06:45,249 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:06:45,252 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:06:45,254 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:06:45,255 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:06:45,256 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:06:45,257 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:06:45,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:06:45,259 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:06:45,449 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:06:45,450 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:06:45,451 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:06:45,452 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:06:45,452 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:06:45,650 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:06:45,651 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:06:45,652 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:06:45,652 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:06:45,653 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:06:45,654 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:06:45,654 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:06:45,849 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:06:45,850 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:06:45,851 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:06:45,852 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:06:45,852 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:06:46,049 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:06:46,050 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:06:46,051 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:06:46,051 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:06:46,052 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:06:46,053 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:06:46,249 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:06:46,250 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:06:46,251 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:06:46,255 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:06:46,256 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:06:46,256 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:06:46,450 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:06:46,451 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:06:46,454 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:06:46,455 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:06:46,456 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:06:46,457 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:06:46,458 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:06:46,502 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:06:46,651 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:06:46,652 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:06:46,654 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:06:46,656 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:06:46,659 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:06:46,660 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:06:46,662 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:06:46,850 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:06:46,853 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:06:46,855 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:06:46,856 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:06:46,858 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:06:47,051 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:06:47,053 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:06:47,055 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:06:47,061 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:06:47,250 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:06:47,252 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:06:47,254 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:06:47,256 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:06:47,449 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:06:47,450 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:06:47,451 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:06:47,451 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:06:47,452 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:06:47,453 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:06:47,454 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:06:47,455 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:06:47,649 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:06:47,650 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:06:47,651 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:06:47,655 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:06:47,656 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:06:47,656 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:06:47,657 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:07:17,907 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:07:17,936 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:07:25,141 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:07:25,164 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:07:25,166 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:07:25,173 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:07:25,174 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:07:25,176 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:07:25,182 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:07:25,187 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:07:25,188 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:07:25,194 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:07:25,376 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:07:25,377 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:07:25,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:07:25,384 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:07:25,387 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:07:25,570 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:07:25,575 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:07:25,576 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:07:25,576 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:07:25,770 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:07:25,771 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:07:25,772 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:07:25,773 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:07:25,774 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:07:25,970 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:07:25,971 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:07:25,972 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:07:25,973 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:07:25,973 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:07:25,974 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:07:26,181 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:07:26,186 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:07:26,187 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:07:26,188 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:07:26,189 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:07:26,189 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:07:26,372 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:07:26,373 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:07:26,374 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:07:26,375 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:07:26,572 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:07:26,590 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:07:26,591 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:07:26,592 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:07:26,593 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:07:26,594 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:07:26,594 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:07:26,772 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:07:26,773 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:07:26,774 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:07:26,776 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:07:26,777 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:07:26,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:07:26,828 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:07:26,829 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:07:26,972 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:07:26,973 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:07:26,974 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:07:26,975 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:07:27,172 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:07:27,173 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:07:27,174 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:07:27,175 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:07:27,176 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:07:27,177 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:07:27,178 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:07:27,178 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:07:27,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:07:27,374 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:07:27,374 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:07:27,375 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:07:27,376 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:07:27,377 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:07:27,377 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:07:27,378 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:07:27,572 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:07:27,573 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:07:27,574 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:07:27,575 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:07:27,772 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:07:27,773 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:07:27,774 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:07:27,775 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:07:27,802 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:07:27,804 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:07:27,805 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:07:27,805 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:07:27,972 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:07:27,973 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:07:27,974 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:07:27,975 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:07:28,172 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:07:28,173 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:07:28,174 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:07:28,175 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:07:28,176 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:07:28,176 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:07:28,177 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:07:28,178 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:07:28,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:07:28,373 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:07:28,374 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:07:28,375 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:07:28,376 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:07:28,377 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:07:28,379 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:07:28,572 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:07:28,579 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:07:28,579 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:07:28,580 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:07:30,353 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:07:30,354 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:07:30,355 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:07:30,356 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:09:21,265 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:09:21,298 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:09:21,306 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:09:21,309 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:09:21,311 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:09:21,312 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:09:21,313 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:09:21,313 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:09:21,314 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:09:21,315 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:09:21,316 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:09:21,317 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:09:21,478 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:09:21,479 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:09:21,491 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:09:21,494 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:09:21,495 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:09:21,504 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:09:21,505 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:09:21,507 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:09:21,508 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:09:21,509 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:09:21,678 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:09:21,679 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:09:21,680 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:09:21,681 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:09:21,693 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:09:21,697 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:09:21,698 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:09:21,699 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:09:21,878 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:09:21,879 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:09:21,880 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:09:21,881 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:09:21,881 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:09:21,883 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:09:21,884 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:09:21,885 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:09:21,885 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:09:22,089 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:09:22,091 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:09:22,093 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:09:22,095 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:09:22,097 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:09:22,098 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:09:22,100 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:09:22,280 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:09:22,281 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:09:22,282 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:09:22,286 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:09:22,478 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:09:22,481 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:09:22,483 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:09:22,484 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:09:22,485 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:09:22,486 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:09:22,487 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:09:22,488 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:09:22,678 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:09:22,679 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:09:22,680 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:09:22,681 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:09:22,681 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:09:22,879 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:09:22,880 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:09:22,881 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:09:22,882 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:09:22,883 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:09:22,883 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:09:22,884 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:09:23,079 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:09:23,080 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:09:23,081 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:09:23,081 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:09:23,082 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:09:23,279 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:09:23,280 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:09:23,281 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:09:23,282 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:09:23,282 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:09:23,283 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:09:23,479 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:09:23,480 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:09:23,481 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:09:23,484 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:09:23,485 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:09:23,486 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:09:23,679 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:09:23,680 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:09:23,682 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:09:23,683 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:09:23,683 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:09:23,684 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:09:23,685 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:09:23,718 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:09:23,879 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:09:23,880 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:09:23,881 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:09:23,882 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:09:23,882 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:09:23,883 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:09:23,884 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:09:24,079 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:09:24,080 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:09:24,081 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:09:24,082 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:09:24,083 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:09:24,279 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:09:24,280 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:09:24,281 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:09:24,283 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:09:24,479 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:09:24,480 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:09:24,481 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:09:24,482 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:09:24,679 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:09:24,680 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:09:24,681 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:09:24,681 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:09:24,682 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:09:24,683 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:09:24,684 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:09:24,685 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:09:24,880 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:09:24,882 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:09:24,884 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:09:24,893 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:09:24,895 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:09:24,896 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:09:24,898 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:09:42,391 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:09:42,412 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:09:42,414 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:09:42,417 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:09:42,424 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:09:42,426 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:09:42,427 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:09:42,428 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:09:42,429 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:09:42,610 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:09:42,614 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:09:42,617 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:09:42,624 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:09:42,625 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:09:42,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:09:42,818 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:09:42,825 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:09:42,833 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:09:43,010 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:09:43,011 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:09:43,012 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:09:43,013 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:09:43,015 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:09:43,210 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:09:43,211 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:09:43,212 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:09:43,212 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:09:43,213 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:09:43,214 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:09:43,215 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:09:43,216 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:09:43,424 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:09:43,432 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:09:43,440 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:09:43,441 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:09:43,442 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:09:43,621 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:09:43,622 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:09:43,623 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:09:43,822 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:09:43,825 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:09:43,826 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:09:43,828 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:09:43,829 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:09:43,831 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:09:43,832 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:09:44,022 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:09:44,025 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:09:44,026 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:09:44,028 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:09:44,030 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:09:44,031 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:09:44,036 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:09:44,038 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:09:44,270 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:09:44,272 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:09:44,274 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:09:44,278 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:09:44,279 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:09:44,281 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:09:44,282 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:09:44,421 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:09:44,422 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:09:44,423 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:09:44,424 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:09:44,425 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:09:44,621 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:09:44,622 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:09:44,623 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:09:44,624 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:09:44,625 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:09:44,626 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:09:44,627 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:09:44,627 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:09:44,821 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:09:44,822 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:09:44,823 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:09:44,824 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:09:45,021 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:09:45,022 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:09:45,023 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:09:45,024 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:09:45,025 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:09:45,025 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:09:45,026 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:09:45,027 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:09:45,221 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:09:45,222 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:09:45,223 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:09:45,223 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:09:45,224 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:09:45,225 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:09:45,226 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:09:45,421 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:09:45,422 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:09:45,423 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:09:45,424 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:09:45,621 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:09:45,623 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:09:45,624 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:09:45,625 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:09:45,626 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:09:45,627 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:09:45,627 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:09:45,628 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:09:45,821 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:09:45,822 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:09:45,824 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:09:45,825 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:09:45,826 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:09:45,826 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:09:45,827 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:09:52,641 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:09:52,642 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:09:52,643 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:09:52,644 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:10:17,260 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:10:17,299 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:10:17,308 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:10:17,312 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:10:17,314 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:10:17,315 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:10:17,316 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:10:17,316 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:10:17,317 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:10:17,318 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:10:17,319 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:10:17,320 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:10:17,470 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:10:17,471 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:10:17,483 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:10:17,485 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:10:17,486 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:10:17,497 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:10:17,498 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:10:17,499 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:10:17,501 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:10:17,502 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:10:17,670 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:10:17,671 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:10:17,672 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:10:17,673 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:10:17,684 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:10:17,692 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:10:17,693 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:10:17,694 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:10:17,870 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:10:17,871 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:10:17,872 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:10:17,873 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:10:17,873 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:10:17,875 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:10:17,876 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:10:17,877 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:10:17,877 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:10:18,081 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:10:18,084 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:10:18,086 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:10:18,089 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:10:18,091 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:10:18,092 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:10:18,094 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:10:18,271 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:10:18,273 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:10:18,274 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:10:18,276 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:10:18,471 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:10:18,473 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:10:18,474 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:10:18,475 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:10:18,476 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:10:18,477 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:10:18,481 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:10:18,482 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:10:18,670 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:10:18,671 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:10:18,672 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:10:18,672 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:10:18,673 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:10:18,870 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:10:18,871 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:10:18,871 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:10:18,872 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:10:18,872 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:10:18,873 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:10:18,873 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:10:19,070 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:10:19,071 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:10:19,072 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:10:19,077 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:10:19,078 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:10:19,271 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:10:19,272 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:10:19,272 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:10:19,273 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:10:19,275 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:10:19,276 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:10:19,470 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:10:19,471 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:10:19,472 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:10:19,475 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:10:19,476 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:10:19,477 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:10:19,670 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:10:19,671 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:10:19,673 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:10:19,673 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:10:19,674 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:10:19,674 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:10:19,675 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:10:19,704 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:10:19,870 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:10:19,871 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:10:19,872 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:10:19,872 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:10:19,873 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:10:19,874 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:10:19,874 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:10:20,070 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:10:20,072 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:10:20,073 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:10:20,074 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:10:20,074 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:10:20,270 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:10:20,271 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:10:20,272 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:10:20,274 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:10:20,470 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:10:20,471 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:10:20,471 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:10:20,472 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:10:20,670 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:10:20,671 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:10:20,671 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:10:20,673 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:10:20,674 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:10:20,674 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:10:20,675 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:10:20,676 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:10:20,870 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:10:20,871 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:10:20,871 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:10:20,875 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:10:20,876 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:10:20,876 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:10:20,877 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:11:25,851 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:11:25,882 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:11:25,895 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:11:25,898 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:11:25,899 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:11:25,907 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:11:25,908 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:11:25,909 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:11:26,067 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:11:26,068 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:11:26,069 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:11:26,070 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:11:26,071 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:11:26,072 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:11:26,073 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:11:26,302 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:11:26,303 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:11:26,304 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:11:26,304 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:11:26,305 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:11:26,306 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:11:26,467 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:11:26,667 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:11:26,668 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:11:26,669 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:11:26,669 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:11:26,670 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:11:26,671 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:11:26,671 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:11:26,672 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:11:26,876 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:11:26,877 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:11:26,877 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:11:26,882 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:11:26,883 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:11:27,075 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:11:27,076 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:11:27,077 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:11:27,078 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:11:27,275 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:11:27,276 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:11:27,277 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:11:27,277 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:11:27,278 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:11:27,279 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:11:27,475 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:11:27,476 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:11:27,477 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:11:27,477 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:11:27,478 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:11:27,478 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:11:27,479 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:11:27,480 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:11:27,675 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:11:27,722 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:11:27,724 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:11:27,726 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:11:27,728 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:11:27,730 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:11:27,730 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:11:27,732 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:11:27,875 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:11:27,876 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:11:27,878 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:11:27,879 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:11:28,075 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:11:28,076 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:11:28,077 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:11:28,077 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:11:28,078 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:11:28,079 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:11:28,080 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:11:28,080 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:11:28,275 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:11:28,276 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:11:28,276 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:11:28,277 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:11:28,278 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:11:28,475 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:11:28,476 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:11:28,476 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:11:28,477 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:11:28,478 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:11:28,478 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:11:28,479 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:11:28,676 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:11:28,677 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:11:28,677 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:11:28,678 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:11:28,679 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:11:28,679 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:11:28,680 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:11:28,876 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:11:28,877 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:11:28,877 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:11:28,878 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:11:28,879 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:11:29,076 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:11:29,077 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:11:29,080 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:11:29,080 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:11:29,082 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:11:29,082 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:11:29,083 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:11:29,276 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:11:29,277 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:11:29,278 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:11:29,279 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:11:29,280 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:11:29,281 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:11:29,281 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:11:29,282 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:11:37,308 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:11:37,309 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:11:37,310 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:11:37,310 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:11:40,853 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:11:40,891 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:11:40,901 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:11:40,904 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:11:40,905 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:11:40,906 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:11:40,907 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:11:40,908 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:11:40,909 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:11:40,909 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:11:40,910 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:11:40,911 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:11:41,084 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:11:41,085 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:11:41,097 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:11:41,099 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:11:41,100 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:11:41,108 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:11:41,120 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:11:41,123 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:11:41,124 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:11:41,126 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:11:41,284 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:11:41,285 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:11:41,286 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:11:41,287 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:11:41,297 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:11:41,298 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:11:41,299 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:11:41,300 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:11:41,484 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:11:41,485 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:11:41,486 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:11:41,487 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:11:41,488 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:11:41,489 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:11:41,490 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:11:41,491 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:11:41,492 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:11:41,695 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:11:41,702 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:11:41,704 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:11:41,706 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:11:41,708 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:11:41,709 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:11:41,711 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:11:41,885 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:11:41,887 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:11:41,888 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:11:41,892 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:11:42,084 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:11:42,091 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:11:42,093 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:11:42,094 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:11:42,095 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:11:42,097 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:11:42,097 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:11:42,098 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:11:42,284 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:11:42,285 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:11:42,286 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:11:42,287 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:11:42,288 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:11:42,484 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:11:42,485 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:11:42,486 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:11:42,486 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:11:42,487 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:11:42,488 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:11:42,489 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:11:42,684 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:11:42,689 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:11:42,690 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:11:42,691 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:11:42,692 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:11:42,884 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:11:42,885 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:11:42,886 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:11:42,887 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:11:42,887 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:11:42,888 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:11:43,084 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:11:43,085 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:11:43,086 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:11:43,090 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:11:43,095 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:11:43,096 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:11:43,284 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:11:43,289 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:11:43,291 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:11:43,292 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:11:43,293 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:11:43,293 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:11:43,294 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:11:43,324 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:11:43,484 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:11:43,485 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:11:43,485 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:11:43,486 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:11:43,486 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:11:43,487 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:11:43,488 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:11:43,684 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:11:43,685 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:11:43,686 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:11:43,687 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:11:43,687 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:11:43,886 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:11:43,887 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:11:43,889 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:11:43,894 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:11:44,086 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:11:44,087 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:11:44,089 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:11:44,091 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:11:44,286 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:11:44,287 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:11:44,289 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:11:44,291 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:11:44,292 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:11:44,294 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:11:44,297 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:11:44,298 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:11:44,485 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:11:44,486 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:11:44,488 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:11:44,497 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:11:44,501 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:11:44,502 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:11:44,504 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:12:19,326 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:12:19,344 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:12:19,345 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:12:19,346 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:12:19,347 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:12:19,348 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:12:19,354 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:12:19,355 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:12:19,357 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:12:19,358 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:12:19,359 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:12:19,360 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:12:19,362 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:12:19,363 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:12:19,554 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:12:19,556 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:12:19,557 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:12:19,558 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:12:19,562 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:12:19,755 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:12:19,756 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:12:19,954 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:12:19,955 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:12:19,956 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:12:19,957 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:12:19,957 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:12:19,958 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:12:19,958 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:12:20,162 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:12:20,163 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:20,164 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:12:20,165 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:12:20,166 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:12:20,380 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:12:20,383 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:12:20,384 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:12:20,385 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:12:20,385 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:12:20,386 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:12:20,574 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:12:20,575 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:12:20,576 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:12:20,577 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:12:20,577 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:20,774 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:12:20,775 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:20,779 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:20,780 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:12:20,781 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:12:20,782 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:12:20,786 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:12:20,974 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:12:20,976 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:12:20,977 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:12:21,023 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:12:21,025 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:12:21,032 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:21,033 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:21,034 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:12:21,174 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:12:21,175 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:12:21,176 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:12:21,177 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:12:21,375 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:12:21,377 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:12:21,379 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:21,381 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:12:21,382 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:21,384 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:21,385 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:12:21,386 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:12:21,576 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:12:21,578 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:12:21,580 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:12:21,582 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:12:21,584 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:12:21,586 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:12:21,776 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:12:21,778 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:12:21,780 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:12:21,782 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:12:21,783 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:21,785 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:12:21,976 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:21,978 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:21,980 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:12:21,982 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:12:21,984 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:12:21,986 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:12:21,988 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:12:21,990 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:12:22,176 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:12:22,178 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:12:22,179 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:12:22,182 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:12:22,374 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:12:22,375 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:12:22,376 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:22,376 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:12:22,377 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:22,378 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:22,379 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:12:22,574 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:12:22,575 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:12:22,576 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:12:22,576 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:12:22,578 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:12:22,579 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:12:22,580 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:12:22,581 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:12:22,774 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:12:22,784 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:12:25,413 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:12:25,414 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:12:25,416 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:12:25,416 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:12:29,257 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:12:29,298 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:12:29,306 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:12:29,309 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:12:29,311 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:12:29,311 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:12:29,312 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:12:29,313 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:12:29,313 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:12:29,314 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:12:29,315 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:12:29,315 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:12:29,464 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:12:29,465 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:12:29,476 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:12:29,478 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:12:29,479 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:12:29,491 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:12:29,492 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:12:29,494 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:12:29,494 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:12:29,495 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:12:29,664 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:12:29,665 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:12:29,666 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:12:29,667 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:12:29,678 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:12:29,678 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:12:29,679 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:12:29,680 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:12:29,864 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:12:29,865 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:12:29,866 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:12:29,867 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:12:29,867 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:12:29,869 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:12:29,870 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:12:29,870 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:12:29,871 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:12:30,075 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:12:30,077 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:12:30,078 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:12:30,081 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:12:30,082 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:12:30,083 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:12:30,085 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:12:30,265 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:12:30,267 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:12:30,268 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:12:30,270 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:12:30,464 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:12:30,467 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:12:30,468 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:12:30,469 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:12:30,471 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:12:30,472 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:12:30,472 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:12:30,473 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:12:30,664 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:12:30,665 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:12:30,666 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:12:30,666 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:12:30,667 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:12:30,864 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:12:30,865 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:12:30,865 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:12:30,866 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:12:30,867 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:12:30,867 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:12:30,868 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:12:31,064 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:12:31,065 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:12:31,066 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:12:31,066 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:12:31,067 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:12:31,265 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:12:31,267 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:12:31,269 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:12:31,271 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:12:31,273 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:12:31,275 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:12:31,465 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:12:31,469 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:12:31,470 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:12:31,480 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:12:31,482 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:12:31,485 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:12:31,665 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:12:31,667 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:12:31,672 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:12:31,673 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:12:31,674 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:12:31,675 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:12:31,677 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:12:31,727 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:12:31,864 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:12:31,865 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:12:31,865 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:12:31,866 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:12:31,866 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:12:31,867 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:12:31,868 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:12:32,064 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:12:32,065 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:12:32,066 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:12:32,066 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:12:32,067 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:12:32,280 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:12:32,280 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:12:32,281 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:12:32,283 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:12:32,464 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:12:32,465 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:12:32,465 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:12:32,466 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:12:32,664 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:12:32,665 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:12:32,666 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:12:32,667 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:12:32,667 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:12:32,668 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:12:32,669 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:12:32,670 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:12:32,864 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:12:32,865 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:12:32,866 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:12:32,870 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:12:32,877 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:12:32,878 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:12:32,879 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:12:50,621 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:12:52,318 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:12:52,332 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:12:55,166 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:12:55,167 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:12:55,181 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:12:55,182 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:12:55,183 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:12:55,184 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:12:55,186 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:12:55,191 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:12:55,193 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:12:55,195 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:12:55,196 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:12:55,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:12:55,373 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:12:55,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:12:55,375 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:12:55,376 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:12:55,377 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:12:55,585 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:12:55,586 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:12:55,590 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:12:55,772 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:12:55,777 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:12:55,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:12:55,779 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:12:55,972 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:12:55,982 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:12:55,987 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:55,988 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:12:55,994 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:12:56,172 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:12:56,180 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:12:56,182 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:12:56,183 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:12:56,184 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:12:56,185 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:12:56,186 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:12:56,372 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:12:56,373 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:12:56,374 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:12:56,374 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:12:56,572 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:56,573 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:12:56,573 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:56,574 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:56,575 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:12:56,575 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:12:56,576 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:12:56,773 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:12:56,774 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:12:56,775 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:12:56,776 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:12:56,820 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:12:56,825 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:12:56,826 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:56,826 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:56,972 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:12:56,973 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:12:56,974 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:12:56,975 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:12:57,172 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:12:57,173 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:12:57,174 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:12:57,175 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:57,175 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:12:57,176 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:57,177 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:57,178 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:12:57,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:12:57,373 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:12:57,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:12:57,374 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:12:57,375 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:12:57,376 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:12:57,376 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:12:57,572 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:12:57,573 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:12:57,574 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:12:57,575 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:12:57,575 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:57,772 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:12:57,773 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:57,774 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:57,774 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:12:57,775 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:12:57,776 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:12:57,777 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:12:57,777 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:12:57,972 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:12:57,973 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:12:57,973 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:12:57,974 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:12:58,172 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:12:58,173 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:12:58,174 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:12:58,174 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:12:58,175 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:12:58,176 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:12:58,176 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:12:58,177 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:12:58,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:12:58,373 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:12:58,373 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:12:58,374 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:12:58,376 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:12:58,377 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:12:58,378 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:12:58,572 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:12:58,573 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:12:58,573 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:13:00,350 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:13:00,351 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:13:00,351 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:13:00,352 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:13:03,217 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:13:03,255 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:13:03,266 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:13:03,269 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:13:03,270 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:13:03,271 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:13:03,272 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:13:03,273 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:13:03,273 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:13:03,274 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:13:03,275 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:13:03,276 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:13:03,428 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:13:03,429 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:13:03,446 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:13:03,449 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:13:03,450 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:13:03,480 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:13:03,481 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:13:03,482 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:13:03,486 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:13:03,487 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:13:03,628 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:13:03,629 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:13:03,630 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:13:03,631 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:13:03,643 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:13:03,644 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:13:03,645 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:13:03,646 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:13:03,828 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:13:03,829 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:13:03,830 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:13:03,831 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:13:03,832 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:13:03,834 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:13:03,835 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:13:03,836 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:13:03,837 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:13:04,039 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:13:04,041 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:13:04,043 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:13:04,045 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:13:04,047 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:13:04,048 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:13:04,050 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:13:04,229 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:13:04,231 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:13:04,232 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:13:04,235 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:13:04,428 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:13:04,431 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:13:04,433 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:13:04,434 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:13:04,435 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:13:04,437 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:13:04,437 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:13:04,438 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:13:04,629 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:13:04,630 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:13:04,630 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:13:04,631 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:13:04,633 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:13:04,829 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:13:04,830 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:13:04,830 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:13:04,831 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:13:04,832 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:13:04,833 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:13:04,834 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:13:05,029 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:13:05,031 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:13:05,033 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:13:05,035 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:13:05,036 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:13:05,228 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:13:05,229 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:13:05,230 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:13:05,230 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:13:05,231 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:13:05,232 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:13:05,448 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:13:05,449 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:13:05,450 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:13:05,455 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:13:05,456 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:13:05,457 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:13:05,628 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:13:05,629 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:13:05,631 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:13:05,632 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:13:05,632 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:13:05,633 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:13:05,634 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:13:05,665 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:13:05,828 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:13:05,843 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:13:05,844 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:13:05,845 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:13:05,845 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:13:05,846 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:13:05,847 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:13:06,028 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:13:06,033 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:13:06,034 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:13:06,035 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:13:06,036 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:13:06,228 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:13:06,229 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:13:06,230 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:13:06,232 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:13:06,428 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:13:06,429 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:13:06,430 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:13:06,431 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:13:06,628 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:13:06,629 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:13:06,630 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:13:06,630 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:13:06,631 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:13:06,632 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:13:06,633 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:13:06,634 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:13:06,828 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:13:06,829 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:13:06,830 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:13:06,834 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:13:06,834 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:13:06,835 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:13:06,836 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:13:35,693 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:13:35,694 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:13:35,694 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:13:35,695 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:13:35,696 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:13:35,696 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:13:35,706 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:13:35,885 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:13:35,887 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:13:35,888 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:13:35,889 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:13:35,894 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:13:36,086 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:13:36,092 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:13:36,092 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:13:36,093 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:13:36,285 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:13:36,286 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:13:36,287 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:13:36,287 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:13:36,288 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:13:36,485 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:13:36,487 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:13:36,488 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:13:36,492 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:13:36,493 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:13:36,493 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:13:36,494 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:13:36,495 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:13:36,689 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:13:36,715 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:13:36,716 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:13:36,716 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:13:36,890 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:13:36,891 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:13:36,892 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:13:36,892 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:13:36,893 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:13:36,894 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:13:37,085 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:13:37,086 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:13:37,087 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:13:37,088 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:13:37,089 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:13:37,286 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:13:37,287 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:13:37,289 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:13:37,291 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:13:37,293 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:13:37,294 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:13:37,296 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:13:37,298 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:13:37,490 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:13:37,492 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:13:37,561 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:13:37,563 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:13:37,564 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:13:37,565 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:13:37,566 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:13:37,686 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:13:37,688 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:13:37,689 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:13:37,691 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:13:37,887 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:13:37,889 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:13:37,891 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:13:37,893 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:13:37,895 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:13:37,897 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:13:37,900 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:13:37,902 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:13:38,087 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:13:38,089 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:13:38,090 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:13:38,092 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:13:38,093 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:13:38,095 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:13:38,286 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:13:38,287 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:13:38,288 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:13:38,288 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:13:38,289 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:13:38,290 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:13:38,485 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:13:38,486 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:13:38,487 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:13:38,488 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:13:38,489 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:13:38,490 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:13:38,490 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:13:38,491 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:13:38,685 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:13:38,686 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:13:38,687 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:13:38,688 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:13:38,885 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:13:38,886 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:13:38,887 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:13:38,889 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:13:38,890 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:13:38,891 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:13:38,892 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:13:38,893 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:13:39,085 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:13:39,086 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:13:39,087 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:13:39,088 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:13:39,093 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:13:39,094 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:13:39,095 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:13:39,096 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:13:39,285 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:13:41,216 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:13:41,217 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:13:41,218 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:13:41,218 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:13:44,493 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:13:44,535 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:13:44,545 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:13:44,549 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:13:44,551 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:13:44,552 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:13:44,553 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:13:44,554 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:13:44,554 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:13:44,555 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:13:44,556 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:13:44,557 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:13:44,713 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:13:44,714 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:13:44,726 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:13:44,728 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:13:44,729 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:13:44,753 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:13:44,754 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:13:44,756 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:13:44,758 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:13:44,759 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:13:44,913 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:13:44,914 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:13:44,915 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:13:44,916 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:13:44,926 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:13:44,927 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:13:44,928 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:13:44,928 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:13:45,113 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:13:45,118 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:13:45,119 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:13:45,120 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:13:45,121 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:13:45,122 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:13:45,123 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:13:45,124 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:13:45,125 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:13:45,324 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:13:45,326 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:13:45,328 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:13:45,330 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:13:45,331 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:13:45,333 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:13:45,334 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:13:45,514 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:13:45,516 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:13:45,517 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:13:45,520 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:13:45,713 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:13:45,716 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:13:45,718 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:13:45,719 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:13:45,720 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:13:45,722 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:13:45,723 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:13:45,724 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:13:45,913 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:13:45,914 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:13:45,915 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:13:45,916 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:13:45,917 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:13:46,113 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:13:46,114 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:13:46,115 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:13:46,116 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:13:46,116 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:13:46,117 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:13:46,118 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:13:46,313 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:13:46,314 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:13:46,315 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:13:46,316 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:13:46,317 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:13:46,513 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:13:46,514 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:13:46,515 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:13:46,516 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:13:46,517 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:13:46,518 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:13:46,713 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:13:46,714 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:13:46,715 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:13:46,719 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:13:46,720 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:13:46,721 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:13:46,913 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:13:46,914 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:13:46,916 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:13:46,916 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:13:46,917 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:13:46,918 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:13:46,918 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:13:46,948 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:13:47,116 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:13:47,117 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:13:47,118 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:13:47,120 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:13:47,122 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:13:47,122 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:13:47,123 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:13:47,316 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:13:47,319 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:13:47,321 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:13:47,322 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:13:47,324 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:13:47,516 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:13:47,518 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:13:47,520 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:13:47,525 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:13:47,715 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:13:47,716 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:13:47,717 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:13:47,718 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:13:47,915 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:13:47,916 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:13:47,917 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:13:47,917 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:13:47,918 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:13:47,919 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:13:47,921 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:13:47,922 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:13:48,115 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:13:48,116 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:13:48,117 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:13:48,121 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:13:48,122 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:13:48,132 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:13:48,133 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:14:20,113 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:14:20,122 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:14:20,123 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:14:20,123 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:14:20,124 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:14:20,125 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:14:20,125 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:14:20,126 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:14:20,127 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:14:20,323 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:14:20,324 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:14:20,325 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:14:20,328 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:14:20,330 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:14:20,535 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:14:20,542 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:14:20,549 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:14:20,552 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:14:20,722 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:14:20,723 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:14:20,724 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:14:20,725 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:14:20,726 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:14:20,922 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:14:20,923 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:14:20,924 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:14:20,924 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:14:20,925 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:14:20,926 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:14:20,927 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:14:20,927 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:14:21,123 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:14:21,138 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:14:21,146 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:14:21,147 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:14:21,148 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:14:21,322 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:14:21,323 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:14:21,324 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:14:21,522 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:14:21,524 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:14:21,525 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:14:21,525 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:14:21,526 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:14:21,527 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:14:21,528 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:14:21,722 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:14:21,727 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:14:21,728 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:14:21,728 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:14:21,729 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:14:21,730 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:14:21,732 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:14:21,733 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:14:21,972 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:14:21,975 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:14:21,978 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:14:21,979 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:14:21,980 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:14:21,981 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:14:21,982 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:14:22,123 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:14:22,124 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:14:22,125 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:14:22,127 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:14:22,129 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:14:22,322 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:14:22,323 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:14:22,324 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:14:22,324 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:14:22,325 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:14:22,326 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:14:22,327 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:14:22,327 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:14:22,522 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:14:22,523 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:14:22,524 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:14:22,525 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:14:22,722 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:14:22,723 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:14:22,724 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:14:22,725 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:14:22,725 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:14:22,726 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:14:22,727 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:14:22,728 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:14:22,922 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:14:22,923 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:14:22,924 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:14:22,927 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:14:22,929 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:14:22,929 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:14:22,930 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:14:23,122 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:14:23,123 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:14:23,124 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:14:23,125 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:14:23,322 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:14:23,323 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:14:23,324 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:14:23,324 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:14:23,325 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:14:23,326 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:14:23,327 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:14:23,327 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:14:23,522 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:14:23,524 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:14:23,525 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:14:23,526 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:14:23,527 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:14:23,527 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:14:23,528 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:14:27,014 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:14:27,015 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:14:27,016 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:14:27,017 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:14:30,936 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:14:30,976 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:14:30,984 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:14:30,987 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:14:30,989 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:14:30,989 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:14:30,990 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:14:30,991 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:14:30,991 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:14:30,992 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:14:30,993 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:14:30,993 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:14:31,145 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:14:31,146 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:14:31,158 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:14:31,160 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:14:31,161 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:14:31,172 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:14:31,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:14:31,174 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:14:31,175 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:14:31,176 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:14:31,345 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:14:31,346 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:14:31,347 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:14:31,348 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:14:31,361 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:14:31,362 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:14:31,363 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:14:31,364 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:14:31,545 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:14:31,546 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:14:31,547 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:14:31,548 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:14:31,548 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:14:31,550 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:14:31,551 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:14:31,552 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:14:31,552 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:14:31,756 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:14:31,758 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:14:31,760 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:14:31,762 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:14:31,764 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:14:31,765 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:14:31,766 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:14:31,946 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:14:31,948 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:14:31,949 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:14:31,951 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:14:32,145 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:14:32,148 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:14:32,149 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:14:32,150 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:14:32,151 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:14:32,153 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:14:32,153 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:14:32,154 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:14:32,345 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:14:32,346 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:14:32,347 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:14:32,347 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:14:32,348 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:14:32,545 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:14:32,546 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:14:32,547 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:14:32,547 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:14:32,548 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:14:32,549 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:14:32,549 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:14:32,745 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:14:32,746 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:14:32,747 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:14:32,747 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:14:32,748 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:14:32,945 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:14:32,946 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:14:32,946 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:14:32,947 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:14:32,948 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:14:32,948 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:14:33,147 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:14:33,149 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:14:33,149 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:14:33,153 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:14:33,153 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:14:33,154 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:14:33,345 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:14:33,346 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:14:33,348 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:14:33,348 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:14:33,349 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:14:33,350 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:14:33,350 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:14:33,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:14:33,545 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:14:33,546 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:14:33,547 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:14:33,547 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:14:33,548 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:14:33,549 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:14:33,550 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:14:33,745 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:14:33,746 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:14:33,747 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:14:33,747 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:14:33,748 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:14:33,946 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:14:33,948 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:14:33,950 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:14:33,953 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:14:34,146 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:14:34,149 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:14:34,151 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:14:34,153 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:14:34,346 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:14:34,347 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:14:34,347 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:14:34,348 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:14:34,349 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:14:34,350 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:14:34,351 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:14:34,352 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:14:34,546 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:14:34,548 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:14:34,550 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:14:34,560 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:14:34,562 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:14:34,563 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:14:34,565 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:15:29,578 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:15:29,580 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:15:29,584 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:15:29,591 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:15:29,595 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:15:29,597 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:15:29,599 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:15:29,600 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:15:29,656 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:15:29,660 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:15:29,664 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:15:29,666 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:15:29,808 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:15:29,848 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:15:29,852 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:15:29,857 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:15:29,859 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:15:30,006 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:15:30,065 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:15:30,088 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:15:30,092 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:15:30,194 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:15:30,202 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:15:30,204 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:15:30,207 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:15:30,210 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:15:30,395 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:15:30,396 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:15:30,400 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:15:30,499 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:15:30,522 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:15:30,525 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:15:30,594 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:15:30,612 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:15:30,614 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:15:30,619 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:15:30,622 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:15:30,652 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:15:30,796 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:15:30,799 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:15:30,810 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:15:30,812 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:15:30,996 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:15:30,998 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:15:31,000 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:15:31,002 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:15:31,004 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:16:32,381 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:16:32,412 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:16:32,420 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:16:32,423 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:16:32,425 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:16:32,426 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:16:32,427 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:16:32,428 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:16:32,429 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:16:32,430 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:16:32,431 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:16:32,432 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:16:32,433 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:16:32,433 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:16:32,445 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:16:32,622 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:16:32,623 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:16:32,666 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:16:32,667 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:16:32,669 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:16:32,671 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:16:32,672 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:16:32,673 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:16:32,675 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:16:32,820 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:16:32,821 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:16:32,832 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:16:32,833 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:16:32,835 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:16:32,835 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:16:32,836 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:16:32,837 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:16:32,838 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:16:33,020 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:16:33,021 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:16:33,023 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:16:33,024 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:16:33,025 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:16:33,026 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:16:33,038 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:16:33,040 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:16:33,222 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:16:33,225 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:16:33,227 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:16:33,228 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:16:33,229 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:16:33,231 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:16:33,232 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:16:33,420 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:16:33,423 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:16:33,425 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:16:33,427 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:16:33,429 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:16:33,621 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:16:33,623 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:16:33,624 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:16:33,625 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:16:33,626 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:16:33,626 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:16:33,820 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:16:33,821 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:16:33,822 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:16:33,825 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:16:33,826 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:16:33,826 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:16:34,020 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:16:34,021 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:16:34,022 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:16:34,022 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:16:34,023 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:16:34,220 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:16:34,221 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:16:34,222 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:16:34,223 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:16:34,224 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:16:34,224 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:16:34,225 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:16:34,226 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:16:34,423 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:16:34,424 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:16:34,425 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:16:34,426 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:16:34,621 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:16:34,621 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:16:34,635 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:16:34,636 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:16:34,637 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:16:34,638 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:16:34,639 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:16:34,641 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:16:34,820 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:16:34,821 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:16:34,821 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:16:34,822 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:16:34,857 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:16:34,858 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:16:34,858 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:16:35,020 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:16:35,021 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:16:35,022 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:16:35,023 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:16:35,023 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:16:35,220 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:16:35,221 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:16:35,222 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:16:35,223 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:16:35,224 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:16:35,225 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:16:35,226 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:16:35,420 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:16:35,422 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:16:35,423 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:16:35,424 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:16:35,620 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:16:35,621 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:16:35,622 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:16:35,623 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:16:35,820 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:16:35,821 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:16:35,822 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:16:35,822 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:16:35,823 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:16:35,824 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:16:35,825 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:16:35,826 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:16:36,020 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:16:36,024 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:16:36,025 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:16:36,026 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:16:36,027 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:16:49,860 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:16:50,561 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:16:50,584 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:16:50,586 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:16:50,587 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:16:50,588 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:16:50,588 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:16:50,589 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:16:50,590 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:16:50,591 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:16:50,762 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:16:50,763 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:16:50,765 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:16:50,766 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:16:50,766 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:16:50,767 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:16:50,768 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:16:50,970 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:16:50,974 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:16:50,976 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:16:50,981 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:16:51,163 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:16:51,173 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:16:51,175 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:16:51,362 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:16:51,363 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:16:51,364 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:16:51,364 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:16:51,365 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:16:51,370 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:16:51,371 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:16:51,372 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:16:51,562 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:16:51,568 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:16:51,580 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:16:51,581 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:16:51,762 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:16:51,763 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:16:51,764 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:16:51,764 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:16:51,963 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:16:51,963 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:16:51,964 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:16:51,965 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:16:51,965 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:16:51,966 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:16:51,967 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:16:52,162 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:16:52,163 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:16:52,164 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:16:52,164 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:16:52,165 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:16:52,167 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:16:52,167 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:16:52,212 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:16:52,362 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:16:52,363 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:16:52,364 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:16:52,364 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:16:52,365 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:16:52,366 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:16:52,562 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:16:52,563 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:16:52,564 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:16:52,565 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:16:52,565 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:16:52,566 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:16:52,762 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:16:52,763 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:16:52,764 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:16:52,764 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:16:52,765 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:16:52,766 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:16:52,766 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:16:52,767 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:16:52,962 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:16:52,963 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:16:52,963 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:16:52,964 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:16:53,162 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:16:53,163 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:16:53,163 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:16:53,164 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:16:53,165 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:16:53,165 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:16:53,166 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:16:53,167 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:16:53,362 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:16:53,363 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:16:53,363 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:16:53,364 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:16:53,365 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:16:53,365 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:16:53,562 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:16:53,563 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:16:53,564 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:16:53,564 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:16:53,565 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:16:53,762 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:16:53,763 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:16:53,763 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:16:53,764 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:16:53,765 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:16:53,765 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:16:53,766 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:16:53,767 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:16:53,963 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:16:53,964 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:16:53,965 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:16:53,965 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:16:53,966 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:16:53,967 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:17:21,520 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:17:21,521 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:17:21,522 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:17:21,522 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:17:24,765 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:17:24,806 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:17:24,814 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:17:24,817 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:17:24,818 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:17:24,819 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:17:24,820 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:17:24,821 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:17:24,821 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:17:24,822 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:17:24,822 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:17:24,823 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:17:24,986 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:17:24,987 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:17:24,999 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:17:25,001 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:17:25,002 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:17:25,012 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:17:25,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:17:25,014 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:17:25,015 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:17:25,017 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:17:25,186 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:17:25,187 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:17:25,188 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:17:25,189 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:17:25,201 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:17:25,202 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:17:25,203 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:17:25,204 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:17:25,386 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:17:25,387 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:17:25,388 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:17:25,388 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:17:25,389 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:17:25,391 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:17:25,391 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:17:25,392 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:17:25,393 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:17:25,597 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:17:25,599 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:17:25,600 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:17:25,603 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:17:25,605 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:17:25,606 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:17:25,608 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:17:25,790 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:17:25,792 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:17:25,794 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:17:25,803 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:17:25,986 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:17:25,989 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:17:25,990 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:17:25,991 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:17:25,992 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:17:25,993 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:17:25,994 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:17:25,995 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:17:26,186 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:17:26,187 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:17:26,187 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:17:26,188 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:17:26,189 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:17:26,386 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:17:26,387 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:17:26,387 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:17:26,388 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:17:26,388 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:17:26,389 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:17:26,390 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:17:26,587 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:17:26,588 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:17:26,589 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:17:26,589 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:17:26,590 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:17:26,786 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:17:26,787 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:17:26,787 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:17:26,788 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:17:26,788 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:17:26,792 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:17:26,986 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:17:26,987 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:17:26,988 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:17:26,991 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:17:26,992 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:17:26,993 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:17:27,186 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:17:27,187 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:17:27,189 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:17:27,189 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:17:27,190 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:17:27,190 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:17:27,191 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:17:27,219 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:17:27,386 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:17:27,387 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:17:27,387 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:17:27,388 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:17:27,389 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:17:27,389 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:17:27,390 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:17:27,586 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:17:27,587 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:17:27,588 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:17:27,588 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:17:27,589 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:17:27,787 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:17:27,787 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:17:27,788 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:17:27,790 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:17:27,986 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:17:27,987 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:17:27,987 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:17:27,988 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:17:28,187 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:17:28,189 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:17:28,191 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:17:28,193 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:17:28,195 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:17:28,196 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:17:28,199 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:17:28,200 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:17:28,387 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:17:28,388 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:17:28,389 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:17:28,398 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:17:28,400 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:17:28,402 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:17:28,403 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:17:51,116 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:18:02,050 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:18:02,072 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:18:07,462 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:18:07,465 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:18:07,466 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:18:07,467 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:18:07,468 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:18:07,471 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:18:07,473 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:18:07,475 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:18:07,485 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:18:07,487 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:18:07,489 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:18:07,490 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:18:07,491 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:18:07,492 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:18:07,493 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:18:07,494 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:18:07,685 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:18:07,690 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:18:07,691 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:18:07,693 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:18:07,890 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:18:07,891 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:18:07,897 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:18:07,899 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:18:07,900 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:18:07,902 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:18:08,085 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:18:08,094 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:18:08,095 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:18:08,285 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:18:08,295 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:18:08,300 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:18:08,305 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:18:08,310 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:18:08,485 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:18:08,486 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:18:08,487 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:18:08,488 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:18:08,685 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:18:08,690 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:18:08,691 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:18:08,692 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:18:08,693 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:18:08,694 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:18:08,695 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:18:08,885 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:18:08,890 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:18:08,891 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:18:08,892 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:18:08,893 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:18:08,894 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:18:08,948 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:18:08,952 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:18:09,085 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:18:09,086 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:18:09,086 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:18:09,087 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:18:09,088 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:18:09,285 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:18:09,287 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:18:09,288 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:18:09,289 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:18:09,290 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:18:09,291 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:18:09,291 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:18:09,485 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:18:09,487 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:18:09,488 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:18:09,488 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:18:09,489 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:18:09,490 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:18:09,491 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:18:09,492 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:18:09,685 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:18:09,687 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:18:09,688 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:18:09,689 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:18:09,886 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:18:09,887 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:18:09,889 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:18:09,890 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:18:09,892 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:18:09,893 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:18:09,894 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:18:09,895 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:18:10,087 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:18:10,088 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:18:10,090 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:18:10,092 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:18:10,094 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:18:10,286 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:18:10,291 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:18:10,292 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:18:10,293 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:18:10,295 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:18:10,296 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:18:10,486 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:18:10,486 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:18:10,488 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:18:10,488 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:18:10,489 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:18:10,490 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:18:10,491 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:18:10,492 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:18:10,686 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:18:10,697 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:18:10,698 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:18:10,699 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:18:10,700 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:18:31,791 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:18:31,792 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:18:31,793 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:18:31,793 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:18:59,922 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:18:59,962 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:18:59,973 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:18:59,977 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:18:59,979 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:18:59,980 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:18:59,981 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:18:59,981 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:18:59,982 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:18:59,983 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:18:59,983 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:18:59,984 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:19:00,153 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:19:00,154 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:19:00,168 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:19:00,170 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:19:00,171 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:19:00,181 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:19:00,182 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:19:00,184 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:19:00,185 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:19:00,186 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:19:00,353 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:19:00,354 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:19:00,355 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:19:00,355 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:19:00,372 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:19:00,373 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:19:00,374 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:19:00,375 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:19:00,553 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:19:00,554 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:19:00,555 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:19:00,555 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:19:00,556 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:19:00,558 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:19:00,558 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:19:00,559 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:19:00,560 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:19:00,764 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:19:00,766 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:19:00,768 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:19:00,771 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:19:00,772 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:19:00,773 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:19:00,775 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:19:00,957 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:19:00,960 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:19:00,962 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:19:00,968 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:19:01,156 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:19:01,162 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:19:01,165 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:19:01,167 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:19:01,170 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:19:01,172 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:19:01,174 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:19:01,175 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:19:01,375 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:19:01,375 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:19:01,376 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:19:01,377 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:19:01,378 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:19:01,553 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:19:01,554 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:19:01,555 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:19:01,555 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:19:01,556 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:19:01,557 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:19:01,557 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:19:01,753 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:19:01,754 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:19:01,755 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:19:01,756 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:19:01,757 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:19:01,953 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:19:01,954 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:19:01,955 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:19:01,956 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:19:01,957 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:19:01,958 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:19:02,156 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:19:02,158 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:19:02,159 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:19:02,162 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:19:02,164 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:19:02,165 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:19:02,353 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:19:02,354 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:19:02,357 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:19:02,357 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:19:02,358 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:19:02,359 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:19:02,359 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:19:02,392 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:19:02,557 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:19:02,557 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:19:02,558 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:19:02,559 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:19:02,560 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:19:02,561 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:19:02,561 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:19:02,753 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:19:02,754 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:19:02,755 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:19:02,756 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:19:02,757 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:19:02,967 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:19:02,968 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:19:02,968 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:19:02,970 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:19:03,153 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:19:03,154 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:19:03,155 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:19:03,156 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:19:03,353 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:19:03,354 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:19:03,355 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:19:03,355 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:19:03,357 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:19:03,358 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:19:03,359 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:19:03,360 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:19:03,553 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:19:03,554 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:19:03,555 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:19:03,559 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:19:03,560 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:19:03,561 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:19:03,562 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:19:30,924 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:19:30,924 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:19:30,925 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:19:30,926 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:19:30,926 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:19:30,927 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:19:32,070 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:19:32,071 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:19:32,076 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:19:32,077 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:19:32,079 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:19:32,081 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:19:32,083 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:19:32,086 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:19:32,097 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:19:32,098 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:19:32,099 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:19:32,099 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:19:32,100 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:19:32,101 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:19:32,102 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:19:32,297 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:19:32,303 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:19:32,303 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:19:32,304 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:19:32,305 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:19:32,509 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:19:32,509 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:19:32,510 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:19:32,533 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:19:32,697 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:19:32,699 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:19:32,701 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:19:32,902 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:19:32,903 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:19:32,908 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:19:32,913 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:19:32,918 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:19:32,918 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:19:33,098 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:19:33,099 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:19:33,100 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:19:33,101 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:19:33,102 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:19:33,298 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:19:33,300 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:19:33,302 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:19:33,304 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:19:33,306 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:19:33,308 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:19:33,309 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:19:33,498 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:19:33,503 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:19:33,505 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:19:33,588 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:19:33,590 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:19:33,591 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:19:33,594 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:19:33,595 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:19:33,698 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:19:33,700 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:19:33,704 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:19:33,706 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:19:33,898 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:19:33,901 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:19:33,903 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:19:33,905 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:19:33,907 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:19:33,909 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:19:33,911 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:19:33,913 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:19:34,098 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:19:34,100 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:19:34,102 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:19:34,104 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:19:34,106 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:19:34,108 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:19:34,297 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:19:34,298 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:19:34,299 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:19:34,300 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:19:34,300 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:19:34,301 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:19:34,497 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:19:34,498 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:19:34,498 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:19:34,499 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:19:34,500 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:19:34,500 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:19:34,501 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:19:34,502 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:19:34,697 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:19:34,698 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:19:34,698 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:19:34,699 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:19:34,898 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:19:34,899 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:19:34,899 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:19:34,900 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:19:34,900 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:19:34,901 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:19:34,902 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:19:34,902 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:19:35,097 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:19:35,098 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:19:35,098 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:19:35,099 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:19:35,101 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:19:35,102 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:19:35,102 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:19:35,297 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:19:35,298 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:19:44,682 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:19:44,684 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:19:44,685 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:19:44,685 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:20:03,482 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:20:03,528 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:20:03,539 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:20:03,542 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:20:03,543 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:20:03,544 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:20:03,545 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:20:03,545 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:20:03,546 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:20:03,546 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:20:03,547 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:20:03,547 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:20:03,707 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:20:03,709 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:20:03,720 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:20:03,723 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:20:03,724 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:20:03,739 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:20:03,743 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:20:03,744 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:20:03,745 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:20:03,747 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:20:03,907 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:20:03,908 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:20:03,909 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:20:03,910 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:20:03,922 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:20:03,923 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:20:03,924 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:20:03,925 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:20:04,107 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:20:04,112 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:20:04,113 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:20:04,114 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:20:04,115 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:20:04,118 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:20:04,119 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:20:04,120 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:20:04,121 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:20:04,318 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:20:04,320 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:20:04,322 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:20:04,324 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:20:04,326 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:20:04,327 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:20:04,329 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:20:04,508 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:20:04,510 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:20:04,511 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:20:04,514 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:20:04,708 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:20:04,714 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:20:04,716 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:20:04,733 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:20:04,734 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:20:04,736 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:20:04,736 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:20:04,737 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:20:04,907 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:20:04,908 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:20:04,909 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:20:04,910 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:20:04,910 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:20:05,107 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:20:05,108 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:20:05,118 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:20:05,123 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:20:05,124 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:20:05,124 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:20:05,125 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:20:05,307 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:20:05,308 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:20:05,309 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:20:05,310 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:20:05,311 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:20:05,507 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:20:05,508 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:20:05,509 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:20:05,510 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:20:05,511 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:20:05,511 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:20:05,707 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:20:05,712 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:20:05,713 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:20:05,717 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:20:05,718 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:20:05,719 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:20:05,907 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:20:05,908 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:20:05,910 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:20:05,910 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:20:05,911 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:20:05,912 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:20:05,912 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:20:05,943 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:20:06,108 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:20:06,110 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:20:06,112 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:20:06,113 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:20:06,115 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:20:06,117 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:20:06,118 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:20:06,308 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:20:06,311 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:20:06,312 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:20:06,314 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:20:06,315 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:20:06,508 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:20:06,510 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:20:06,512 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:20:06,518 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:20:06,707 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:20:06,708 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:20:06,709 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:20:06,710 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:20:06,907 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:20:06,908 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:20:06,909 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:20:06,910 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:20:06,911 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:20:06,911 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:20:06,912 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:20:06,913 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:20:07,107 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:20:07,108 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:20:07,109 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:20:07,113 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:20:07,114 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:20:07,115 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:20:07,116 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:20:39,795 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:20:39,803 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:20:39,804 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:20:39,804 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:20:39,811 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:20:39,819 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:20:39,820 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:20:39,994 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:20:39,995 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:20:39,996 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:20:39,997 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:20:39,998 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:20:39,999 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:20:40,222 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:20:40,224 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:20:40,225 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:20:40,226 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:20:40,226 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:20:40,227 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:20:40,228 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:20:40,394 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:20:40,594 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:20:40,595 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:20:40,596 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:20:40,596 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:20:40,597 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:20:40,598 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:20:40,598 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:20:40,599 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:20:40,794 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:20:40,795 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:20:40,795 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:20:40,796 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:20:41,001 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:20:41,002 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:20:41,002 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:20:41,003 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:20:41,004 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:20:41,005 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:20:41,194 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:20:41,195 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:20:41,196 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:20:41,196 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:20:41,197 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:20:41,394 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:20:41,395 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:20:41,395 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:20:41,396 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:20:41,397 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:20:41,397 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:20:41,398 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:20:41,398 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:20:41,595 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:20:41,596 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:20:41,649 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:20:41,668 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:20:41,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:20:41,670 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:20:41,671 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:20:41,795 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:20:41,795 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:20:41,796 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:20:41,797 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:20:41,994 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:20:41,995 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:20:41,995 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:20:41,996 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:20:41,996 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:20:41,997 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:20:41,998 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:20:41,998 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:20:42,198 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:20:42,199 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:20:42,200 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:20:42,200 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:20:42,201 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:20:42,201 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:20:42,398 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:20:42,399 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:20:42,400 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:20:42,400 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:20:42,401 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:20:42,401 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:20:42,598 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:20:42,599 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:20:42,600 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:20:42,600 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:20:42,601 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:20:42,601 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:20:42,602 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:20:42,603 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:20:42,798 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:20:42,799 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:20:42,799 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:20:42,800 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:20:42,998 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:20:42,999 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:20:42,999 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:20:43,000 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:20:43,001 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:20:43,002 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:20:43,003 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:20:43,004 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:20:43,198 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:20:43,199 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:20:43,199 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:20:43,200 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:20:43,202 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:20:43,203 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:20:43,203 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:20:43,204 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:20:43,398 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:20:51,781 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:20:51,781 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:20:51,790 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:20:51,791 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:21:34,099 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:21:34,129 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:21:34,137 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:21:34,141 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:21:34,142 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:21:34,143 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:21:34,144 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:21:34,145 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:21:34,146 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:21:34,147 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:21:34,147 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:21:34,148 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:21:34,322 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:21:34,323 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:21:34,334 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:21:34,337 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:21:34,338 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:21:34,346 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:21:34,347 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:21:34,370 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:21:34,370 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:21:34,371 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:21:34,524 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:21:34,526 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:21:34,528 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:21:34,530 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:21:34,561 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:21:34,562 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:21:34,564 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:21:34,565 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:21:34,724 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:21:34,726 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:21:34,728 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:21:34,731 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:21:34,733 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:21:34,737 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:21:34,739 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:21:34,741 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:21:34,743 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:21:34,933 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:21:34,935 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:21:34,937 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:21:34,939 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:21:34,941 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:21:34,943 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:21:34,944 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:21:35,123 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:21:35,125 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:21:35,126 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:21:35,129 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:21:35,322 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:21:35,325 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:21:35,327 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:21:35,328 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:21:35,329 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:21:35,330 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:21:35,331 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:21:35,332 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:21:35,523 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:21:35,524 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:21:35,525 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:21:35,526 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:21:35,527 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:21:35,722 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:21:35,723 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:21:35,724 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:21:35,725 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:21:35,725 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:21:35,726 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:21:35,727 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:21:35,922 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:21:35,923 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:21:35,924 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:21:35,924 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:21:35,925 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:21:36,122 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:21:36,123 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:21:36,123 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:21:36,124 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:21:36,124 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:21:36,125 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:21:36,322 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:21:36,323 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:21:36,324 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:21:36,328 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:21:36,329 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:21:36,330 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:21:36,522 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:21:36,523 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:21:36,525 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:21:36,526 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:21:36,527 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:21:36,528 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:21:36,528 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:21:36,558 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:21:36,722 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:21:36,723 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:21:36,724 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:21:36,725 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:21:36,725 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:21:36,726 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:21:36,727 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:21:36,931 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:21:36,932 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:21:36,933 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:21:36,934 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:21:36,934 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:21:37,130 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:21:37,131 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:21:37,132 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:21:37,134 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:21:37,330 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:21:37,331 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:21:37,332 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:21:37,333 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:21:37,530 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:21:37,531 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:21:37,532 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:21:37,533 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:21:37,533 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:21:37,534 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:21:37,535 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:21:37,536 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:21:37,730 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:21:37,731 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:21:37,732 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:21:37,736 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:21:37,737 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:21:37,738 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:21:37,739 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:22:04,817 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:22:04,860 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:22:04,863 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:22:04,864 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:22:04,864 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:22:04,865 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:22:04,866 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:22:04,866 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:22:05,063 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:22:05,065 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:22:05,071 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:22:05,072 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:22:05,073 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:22:05,243 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:22:05,243 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:22:05,245 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:22:05,246 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:22:05,442 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:22:05,443 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:22:05,444 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:22:05,444 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:22:05,445 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:22:05,642 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:22:05,643 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:22:05,644 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:22:05,645 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:22:05,646 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:22:05,647 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:22:05,647 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:22:05,648 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:05,842 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:22:05,843 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:22:05,844 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:22:05,849 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:22:05,850 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:22:06,042 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:22:06,043 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:22:06,044 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:22:06,045 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:22:06,242 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:22:06,243 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:22:06,244 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:22:06,245 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:22:06,246 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:06,246 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:22:06,442 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:06,443 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:06,444 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:22:06,445 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:22:06,446 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:22:06,446 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:22:06,447 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:22:06,449 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:22:06,642 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:22:06,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:22:06,694 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:22:06,695 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:06,697 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:06,699 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:22:06,700 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:22:06,702 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:22:06,843 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:22:06,844 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:22:06,844 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:22:06,845 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:22:07,044 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:07,045 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:22:07,047 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:07,049 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:07,051 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:22:07,053 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:22:07,055 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:22:07,057 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:22:07,244 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:22:07,246 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:22:07,248 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:22:07,250 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:22:07,252 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:22:07,443 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:22:07,458 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:22:07,466 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:22:07,473 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:07,480 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:22:07,487 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:07,492 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:07,643 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:22:07,644 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:22:07,645 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:22:07,645 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:22:07,646 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:22:07,646 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:22:07,647 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:22:07,842 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:22:07,847 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:22:07,852 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:22:07,857 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:22:07,862 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:22:08,042 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:08,047 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:22:08,054 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:08,060 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:08,063 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:22:08,063 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:22:08,068 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:22:08,242 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:22:08,247 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:22:08,253 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:22:08,258 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:22:08,264 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:22:08,269 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:22:08,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:22:08,275 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:22:20,849 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:22:20,850 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:22:20,851 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:22:20,851 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:22:24,646 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:22:24,680 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:22:24,689 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:22:24,692 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:22:24,693 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:22:24,694 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:22:24,695 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:22:24,695 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:22:24,696 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:22:24,697 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:22:24,697 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:22:24,698 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:22:24,869 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:22:24,870 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:22:24,882 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:22:24,884 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:22:24,885 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:22:24,894 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:22:24,895 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:22:24,900 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:22:24,901 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:22:24,902 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:22:25,069 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:22:25,070 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:22:25,071 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:22:25,071 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:22:25,083 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:22:25,084 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:22:25,085 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:22:25,086 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:22:25,269 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:22:25,273 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:22:25,274 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:22:25,275 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:22:25,275 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:22:25,277 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:22:25,277 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:22:25,278 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:22:25,279 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:22:25,480 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:22:25,482 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:22:25,483 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:22:25,485 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:22:25,487 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:22:25,488 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:22:25,489 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:22:25,673 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:22:25,677 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:22:25,679 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:22:25,686 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:22:25,871 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:22:25,877 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:22:25,881 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:22:25,884 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:22:25,886 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:22:25,888 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:22:25,890 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:22:25,892 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:22:26,075 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:22:26,076 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:22:26,077 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:22:26,084 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:22:26,085 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:22:26,269 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:22:26,270 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:22:26,271 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:22:26,272 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:22:26,272 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:22:26,273 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:22:26,274 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:22:26,469 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:22:26,470 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:22:26,471 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:22:26,471 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:22:26,472 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:22:26,669 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:22:26,670 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:22:26,670 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:22:26,671 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:22:26,672 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:22:26,672 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:22:26,869 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:22:26,870 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:22:26,871 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:22:26,876 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:22:26,876 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:22:26,877 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:22:27,069 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:22:27,070 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:22:27,072 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:22:27,072 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:22:27,073 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:22:27,073 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:22:27,074 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:22:27,113 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:22:27,269 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:22:27,270 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:22:27,271 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:22:27,271 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:22:27,272 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:22:27,272 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:22:27,273 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:22:27,469 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:22:27,470 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:22:27,471 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:22:27,471 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:22:27,472 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:22:27,669 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:22:27,670 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:22:27,670 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:22:27,672 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:22:27,869 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:22:27,870 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:22:27,870 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:22:27,871 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:22:28,069 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:22:28,070 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:22:28,070 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:22:28,072 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:22:28,073 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:22:28,074 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:22:28,074 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:22:28,075 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:22:28,269 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:22:28,270 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:22:28,270 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:22:28,274 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:22:28,275 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:22:28,275 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:22:28,276 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:22:39,504 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:22:39,507 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:22:39,507 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:22:39,508 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:22:39,509 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:22:39,513 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:22:39,520 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:22:39,521 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:22:39,522 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:22:39,523 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:22:39,524 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:22:39,525 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:22:39,527 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:22:39,528 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:22:39,721 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:22:39,723 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:22:39,725 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:22:39,727 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:22:39,729 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:22:39,732 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:22:39,741 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:22:39,921 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:22:39,924 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:22:40,128 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:22:40,131 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:22:40,133 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:22:40,135 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:22:40,136 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:22:40,322 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:22:40,324 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:40,326 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:22:40,328 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:22:40,330 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:22:40,527 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:22:40,534 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:22:40,536 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:22:40,537 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:22:40,538 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:22:40,540 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:22:40,720 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:22:40,721 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:22:40,722 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:22:40,722 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:22:40,723 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:40,920 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:22:40,921 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:40,921 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:40,922 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:22:40,923 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:22:40,923 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:22:40,924 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:22:41,120 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:22:41,122 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:22:41,123 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:22:41,174 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:22:41,176 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:22:41,176 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:41,179 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:41,182 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:22:41,320 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:22:41,321 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:22:41,322 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:22:41,322 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:22:41,520 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:22:41,521 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:22:41,522 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:41,523 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:22:41,524 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:41,524 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:41,525 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:22:41,526 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:22:41,720 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:22:41,721 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:22:41,722 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:22:41,722 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:22:41,723 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:22:41,724 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:22:41,920 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:22:41,921 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:22:41,922 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:22:41,922 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:22:41,923 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:41,923 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:22:42,120 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:42,121 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:42,122 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:22:42,122 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:22:42,123 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:22:42,123 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:22:42,124 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:22:42,124 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:22:42,320 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:22:42,321 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:22:42,322 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:22:42,322 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:22:42,520 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:22:42,521 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:22:42,521 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:22:42,522 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:22:42,522 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:22:42,523 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:22:42,524 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:22:42,720 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:22:42,721 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:22:42,721 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:22:42,722 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:22:42,723 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:22:42,724 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:22:42,725 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:22:42,726 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:22:42,920 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:22:42,921 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:23:03,452 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:23:03,453 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:23:03,454 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:23:03,455 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:23:49,253 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:23:49,292 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:23:49,300 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:23:49,303 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:23:49,305 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:23:49,306 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:23:49,306 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:23:49,307 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:23:49,308 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:23:49,309 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:23:49,309 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:23:49,310 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:23:49,479 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:23:49,484 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:23:49,496 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:23:49,498 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:23:49,499 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:23:49,520 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:23:49,522 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:23:49,524 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:23:49,529 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:23:49,530 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:23:49,680 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:23:49,680 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:23:49,681 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:23:49,682 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:23:49,694 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:23:49,695 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:23:49,696 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:23:49,697 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:23:49,879 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:23:49,880 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:23:49,881 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:23:49,881 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:23:49,882 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:23:49,884 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:23:49,884 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:23:49,885 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:23:49,886 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:23:50,090 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:23:50,093 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:23:50,094 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:23:50,096 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:23:50,098 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:23:50,099 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:23:50,100 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:23:50,280 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:23:50,282 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:23:50,283 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:23:50,285 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:23:50,479 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:23:50,482 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:23:50,483 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:23:50,484 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:23:50,485 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:23:50,486 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:23:50,487 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:23:50,487 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:23:50,679 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:23:50,680 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:23:50,681 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:23:50,681 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:23:50,682 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:23:50,879 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:23:50,880 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:23:50,880 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:23:50,881 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:23:50,881 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:23:50,882 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:23:50,883 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:23:51,079 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:23:51,080 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:23:51,081 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:23:51,081 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:23:51,082 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:23:51,279 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:23:51,280 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:23:51,280 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:23:51,281 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:23:51,281 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:23:51,282 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:23:51,479 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:23:51,480 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:23:51,481 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:23:51,484 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:23:51,485 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:23:51,486 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:23:51,680 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:23:51,680 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:23:51,682 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:23:51,683 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:23:51,684 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:23:51,684 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:23:51,685 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:23:51,714 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:23:51,879 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:23:51,880 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:23:51,881 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:23:51,881 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:23:51,882 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:23:51,883 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:23:51,884 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:23:52,079 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:23:52,080 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:23:52,081 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:23:52,082 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:23:52,082 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:23:52,279 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:23:52,280 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:23:52,280 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:23:52,282 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:23:52,488 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:23:52,489 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:23:52,489 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:23:52,490 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:23:52,679 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:23:52,680 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:23:52,680 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:23:52,681 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:23:52,682 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:23:52,682 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:23:52,683 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:23:52,684 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:23:52,880 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:23:52,882 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:23:52,884 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:23:52,894 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:23:52,896 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:23:52,897 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:23:52,899 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:24:42,473 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:24:42,474 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:24:42,474 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:24:42,475 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:24:42,476 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:24:42,476 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:24:42,502 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:24:42,503 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:24:42,504 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:24:42,505 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:24:42,506 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:24:42,506 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:24:42,510 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:24:42,513 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:24:42,690 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:24:42,691 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:24:42,692 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:24:42,692 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:24:42,693 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:24:42,696 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:24:42,922 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:24:42,922 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:24:42,931 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:24:43,090 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:24:43,091 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:24:43,095 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:24:43,095 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:24:43,096 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:24:43,290 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:24:43,291 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:24:43,291 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:24:43,292 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:24:43,293 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:24:43,495 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:24:43,496 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:24:43,497 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:24:43,497 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:24:43,498 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:24:43,498 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:24:43,692 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:24:43,694 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:24:43,696 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:24:43,699 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:24:43,700 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:24:43,892 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:24:43,893 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:24:43,895 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:24:43,898 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:24:43,900 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:24:43,902 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:24:43,904 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:24:44,092 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:24:44,097 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:24:44,099 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:24:44,161 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:24:44,162 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:24:44,163 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:24:44,164 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:24:44,166 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:24:44,292 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:24:44,294 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:24:44,296 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:24:44,299 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:24:44,490 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:24:44,491 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:24:44,492 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:24:44,492 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:24:44,493 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:24:44,494 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:24:44,495 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:24:44,496 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:24:44,690 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:24:44,691 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:24:44,691 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:24:44,692 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:24:44,693 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:24:44,694 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:24:44,890 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:24:44,891 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:24:44,892 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:24:44,892 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:24:44,893 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:24:44,894 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:24:45,090 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:24:45,091 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:24:45,092 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:24:45,092 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:24:45,093 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:24:45,094 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:24:45,094 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:24:45,095 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:24:45,290 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:24:45,291 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:24:45,292 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:24:45,293 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:24:45,490 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:24:45,491 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:24:45,492 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:24:45,492 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:24:45,493 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:24:45,495 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:24:45,496 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:24:45,690 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:24:45,691 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:24:45,691 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:24:45,692 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:24:45,693 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:24:45,694 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:24:45,695 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:24:45,696 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:24:45,890 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:24:45,891 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:24:49,335 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:24:49,335 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:24:49,336 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:24:49,337 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:24:53,028 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:24:53,060 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:24:53,067 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:24:53,070 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:24:53,072 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:24:53,073 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:24:53,073 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:24:53,074 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:24:53,075 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:24:53,075 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:24:53,076 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:24:53,076 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:24:53,242 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:24:53,243 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:24:53,259 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:24:53,261 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:24:53,262 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:24:53,275 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:24:53,276 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:24:53,277 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:24:53,278 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:24:53,299 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:24:53,444 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:24:53,446 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:24:53,447 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:24:53,449 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:24:53,471 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:24:53,473 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:24:53,475 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:24:53,477 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:24:53,643 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:24:53,645 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:24:53,647 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:24:53,649 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:24:53,650 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:24:53,654 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:24:53,656 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:24:53,658 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:24:53,659 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:24:53,853 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:24:53,855 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:24:53,857 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:24:53,859 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:24:53,861 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:24:53,862 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:24:53,863 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:24:54,043 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:24:54,045 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:24:54,047 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:24:54,049 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:24:54,242 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:24:54,245 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:24:54,246 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:24:54,248 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:24:54,250 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:24:54,250 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:24:54,251 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:24:54,252 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:24:54,442 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:24:54,443 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:24:54,444 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:24:54,444 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:24:54,445 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:24:54,642 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:24:54,643 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:24:54,643 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:24:54,644 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:24:54,645 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:24:54,645 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:24:54,646 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:24:54,842 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:24:54,843 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:24:54,844 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:24:54,844 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:24:54,845 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:24:55,042 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:24:55,043 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:24:55,043 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:24:55,044 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:24:55,045 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:24:55,045 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:24:55,242 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:24:55,243 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:24:55,244 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:24:55,247 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:24:55,248 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:24:55,249 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:24:55,445 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:24:55,445 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:24:55,447 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:24:55,449 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:24:55,450 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:24:55,450 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:24:55,451 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:24:55,480 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:24:55,642 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:24:55,643 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:24:55,644 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:24:55,644 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:24:55,645 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:24:55,646 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:24:55,646 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:24:55,842 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:24:55,843 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:24:55,844 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:24:55,844 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:24:55,845 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:24:56,042 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:24:56,045 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:24:56,045 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:24:56,047 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:24:56,247 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:24:56,247 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:24:56,248 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:24:56,249 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:24:56,442 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:24:56,443 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:24:56,443 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:24:56,444 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:24:56,444 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:24:56,445 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:24:56,446 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:24:56,456 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:24:56,642 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:24:56,643 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:24:56,643 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:24:56,647 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:24:56,648 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:24:56,648 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:24:56,650 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:25:45,833 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:25:45,869 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:25:45,870 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:25:45,871 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:25:45,872 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:25:45,873 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:25:45,873 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:25:45,874 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:25:45,875 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:25:46,044 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:25:46,045 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:25:46,046 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:25:46,049 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:25:46,050 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:25:46,271 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:25:46,285 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:25:46,286 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:25:46,286 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:25:46,444 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:25:46,445 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:25:46,446 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:25:46,447 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:25:46,448 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:25:46,644 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:25:46,645 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:25:46,645 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:25:46,646 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:25:46,647 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:25:46,647 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:25:46,648 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:25:46,648 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:25:46,844 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:25:46,854 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:25:46,860 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:25:46,860 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:25:46,861 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:25:47,044 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:25:47,045 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:25:47,045 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:25:47,244 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:25:47,245 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:25:47,246 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:25:47,246 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:25:47,247 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:25:47,247 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:25:47,248 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:25:47,444 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:25:47,445 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:25:47,446 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:25:47,447 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:25:47,448 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:25:47,449 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:25:47,450 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:25:47,451 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:25:47,697 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:25:47,703 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:25:47,703 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:25:47,704 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:25:47,707 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:25:47,707 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:25:47,708 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:25:47,844 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:25:47,845 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:25:47,846 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:25:47,846 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:25:47,847 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:25:48,044 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:25:48,045 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:25:48,045 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:25:48,046 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:25:48,047 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:25:48,048 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:25:48,048 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:25:48,049 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:25:48,258 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:25:48,259 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:25:48,260 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:25:48,260 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:25:48,444 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:25:48,445 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:25:48,446 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:25:48,446 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:25:48,447 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:25:48,448 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:25:48,448 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:25:48,449 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:25:48,644 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:25:48,645 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:25:48,645 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:25:48,646 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:25:48,647 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:25:48,647 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:25:48,648 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:25:48,844 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:25:48,845 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:25:48,846 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:25:48,846 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:25:49,044 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:25:49,045 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:25:49,045 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:25:49,046 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:25:49,047 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:25:49,047 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:25:49,048 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:25:49,049 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:25:49,244 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:25:49,245 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:25:49,247 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:25:49,248 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:25:49,248 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:25:49,249 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:25:49,249 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:25:50,735 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:25:50,736 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:25:50,737 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:25:50,738 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:28:08,865 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:28:08,899 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:28:08,907 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:28:08,909 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:28:08,911 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:28:08,912 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:28:08,913 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:28:08,913 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:28:08,914 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:28:08,915 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:28:08,915 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:28:08,916 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:28:09,081 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:28:09,082 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:28:09,093 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:28:09,096 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:28:09,097 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:28:09,108 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:28:09,109 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:28:09,110 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:28:09,111 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:28:09,112 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:28:09,281 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:28:09,282 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:28:09,283 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:28:09,284 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:28:09,301 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:28:09,303 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:28:09,304 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:28:09,305 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:28:09,481 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:28:09,483 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:28:09,484 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:28:09,485 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:28:09,485 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:28:09,487 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:28:09,488 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:28:09,489 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:28:09,490 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:28:09,692 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:28:09,704 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:28:09,706 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:28:09,708 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:28:09,710 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:28:09,711 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:28:09,712 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:28:09,882 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:28:09,884 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:28:09,885 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:28:09,888 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:28:10,081 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:28:10,084 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:28:10,086 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:28:10,087 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:28:10,088 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:28:10,089 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:28:10,090 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:28:10,091 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:28:10,281 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:28:10,282 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:28:10,283 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:28:10,284 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:28:10,285 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:28:10,484 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:28:10,485 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:28:10,486 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:28:10,486 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:28:10,487 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:28:10,488 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:28:10,488 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:28:10,681 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:28:10,682 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:28:10,684 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:28:10,684 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:28:10,685 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:28:10,881 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:28:10,882 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:28:10,883 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:28:10,884 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:28:10,885 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:28:10,885 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:28:11,081 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:28:11,083 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:28:11,083 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:28:11,087 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:28:11,088 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:28:11,089 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:28:11,281 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:28:11,286 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:28:11,288 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:28:11,288 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:28:11,289 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:28:11,290 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:28:11,291 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:28:11,321 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:28:11,481 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:28:11,482 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:28:11,483 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:28:11,484 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:28:11,484 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:28:11,485 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:28:11,486 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:28:11,683 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:28:11,685 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:28:11,687 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:28:11,689 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:28:11,691 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:28:11,882 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:28:11,884 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:28:11,886 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:28:11,892 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:28:12,111 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:28:12,113 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:28:12,113 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:28:12,114 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:28:12,281 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:28:12,282 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:28:12,283 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:28:12,284 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:28:12,284 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:28:12,285 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:28:12,286 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:28:12,287 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:28:12,481 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:28:12,482 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:28:12,483 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:28:12,487 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:28:12,488 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:28:12,488 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:28:12,489 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:28:22,875 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:28:22,890 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:28:22,893 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:28:22,895 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:28:22,898 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:28:22,906 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:28:22,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:28:22,908 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:28:22,910 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:28:23,082 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:28:23,083 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:28:23,085 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:28:23,087 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:28:23,100 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:28:23,330 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:28:23,332 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:28:23,332 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:28:23,333 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:28:23,482 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:28:23,483 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:28:23,483 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:28:23,484 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:28:23,485 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:28:23,683 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:28:23,684 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:28:23,684 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:28:23,685 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:28:23,686 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:28:23,687 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:28:23,688 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:28:23,688 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:28:23,882 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:28:23,883 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:28:23,888 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:28:23,889 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:28:23,890 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:28:24,082 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:28:24,083 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:28:24,084 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:28:24,282 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:28:24,290 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:28:24,291 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:28:24,291 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:28:24,292 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:28:24,293 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:28:24,293 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:28:24,482 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:28:24,483 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:28:24,484 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:28:24,485 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:28:24,485 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:28:24,486 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:28:24,488 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:28:24,489 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:28:24,730 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:28:24,732 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:28:24,733 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:28:24,736 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:28:24,737 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:28:24,738 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:28:24,739 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:28:24,882 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:28:24,883 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:28:24,884 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:28:24,884 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:28:24,885 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:28:25,084 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:28:25,085 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:28:25,086 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:28:25,087 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:28:25,088 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:28:25,089 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:28:25,090 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:28:25,091 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:28:25,282 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:28:25,283 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:28:25,284 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:28:25,285 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:28:25,482 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:28:25,483 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:28:25,484 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:28:25,485 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:28:25,486 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:28:25,487 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:28:25,487 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:28:25,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:28:25,682 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:28:25,683 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:28:25,684 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:28:25,685 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:28:25,685 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:28:25,686 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:28:25,687 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:28:25,882 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:28:25,883 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:28:25,884 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:28:25,885 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:28:26,085 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:28:26,089 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:28:26,091 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:28:26,092 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:28:26,094 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:28:26,095 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:28:26,096 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:28:26,097 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:28:26,284 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:28:26,287 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:28:26,291 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:28:26,293 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:28:26,295 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:28:26,297 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:28:26,299 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:28:28,002 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:28:28,003 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:28:28,004 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:28:28,004 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:28:31,047 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:28:31,078 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:28:31,086 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:28:31,088 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:28:31,090 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:28:31,091 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:28:31,092 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:28:31,092 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:28:31,093 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:28:31,094 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:28:31,094 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:28:31,095 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:28:31,278 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:28:31,280 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:28:31,310 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:28:31,313 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:28:31,315 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:28:31,328 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:28:31,328 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:28:31,330 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:28:31,331 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:28:31,332 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:28:31,477 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:28:31,478 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:28:31,479 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:28:31,480 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:28:31,492 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:28:31,493 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:28:31,495 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:28:31,495 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:28:31,677 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:28:31,678 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:28:31,679 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:28:31,680 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:28:31,681 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:28:31,682 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:28:31,683 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:28:31,684 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:28:31,685 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:28:31,888 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:28:31,896 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:28:31,897 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:28:31,900 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:28:31,911 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:28:31,912 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:28:31,914 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:28:32,078 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:28:32,080 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:28:32,081 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:28:32,083 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:28:32,277 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:28:32,280 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:28:32,282 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:28:32,283 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:28:32,284 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:28:32,286 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:28:32,286 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:28:32,287 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:28:32,480 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:28:32,481 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:28:32,482 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:28:32,482 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:28:32,483 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:28:32,679 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:28:32,680 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:28:32,681 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:28:32,681 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:28:32,682 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:28:32,683 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:28:32,684 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:28:32,879 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:28:32,880 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:28:32,881 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:28:32,882 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:28:32,883 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:28:33,079 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:28:33,080 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:28:33,081 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:28:33,081 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:28:33,082 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:28:33,083 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:28:33,279 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:28:33,280 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:28:33,281 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:28:33,285 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:28:33,286 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:28:33,286 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:28:33,479 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:28:33,480 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:28:33,482 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:28:33,483 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:28:33,483 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:28:33,484 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:28:33,485 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:28:33,517 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:28:33,679 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:28:33,680 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:28:33,681 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:28:33,681 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:28:33,682 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:28:33,683 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:28:33,683 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:28:33,879 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:28:33,880 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:28:33,881 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:28:33,882 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:28:33,883 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:28:34,079 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:28:34,080 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:28:34,080 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:28:34,082 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:28:34,279 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:28:34,280 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:28:34,281 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:28:34,282 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:28:34,483 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:28:34,488 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:28:34,488 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:28:34,489 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:28:34,490 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:28:34,490 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:28:34,491 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:28:34,492 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:28:34,682 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:28:34,683 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:28:34,684 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:28:34,687 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:28:34,688 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:28:34,689 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:28:34,690 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:29:11,143 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:29:11,148 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:29:11,148 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:29:11,149 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:29:11,150 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:29:11,150 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:29:11,153 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:29:11,168 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:29:11,176 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:29:11,177 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:29:11,178 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:29:11,179 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:29:11,181 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:29:11,183 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:29:11,352 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:29:11,353 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:29:11,354 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:29:11,355 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:29:11,356 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:29:11,356 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:29:11,361 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:29:11,563 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:29:11,584 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:29:11,752 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:29:11,756 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:29:11,757 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:29:11,759 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:29:11,760 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:29:11,952 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:29:11,953 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:29:11,954 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:29:11,955 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:29:11,956 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:29:12,157 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:29:12,158 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:29:12,159 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:29:12,159 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:29:12,160 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:29:12,160 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:29:12,352 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:29:12,353 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:29:12,354 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:29:12,355 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:29:12,356 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:29:12,553 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:29:12,555 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:29:12,557 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:29:12,559 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:29:12,561 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:29:12,562 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:29:12,564 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:29:12,754 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:29:12,759 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:29:12,761 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:29:12,830 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:29:12,854 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:29:12,855 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:29:12,857 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:29:12,859 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:29:12,953 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:29:12,955 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:29:12,956 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:29:12,958 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:29:13,152 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:29:13,153 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:29:13,154 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:29:13,155 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:29:13,155 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:29:13,156 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:29:13,157 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:29:13,158 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:29:13,352 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:29:13,353 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:29:13,354 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:29:13,354 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:29:13,355 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:29:13,356 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:29:13,552 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:29:13,553 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:29:13,560 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:29:13,562 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:29:13,562 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:29:13,563 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:29:13,752 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:29:13,753 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:29:13,754 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:29:13,755 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:29:13,756 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:29:13,757 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:29:13,757 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:29:13,758 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:29:13,952 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:29:13,953 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:29:13,954 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:29:13,955 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:29:14,152 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:29:14,153 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:29:14,154 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:29:14,156 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:29:14,157 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:29:14,157 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:29:14,158 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:29:14,352 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:29:14,353 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:29:14,354 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:29:14,354 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:29:14,356 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:29:14,357 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:29:14,358 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:29:14,359 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:29:14,552 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:29:14,553 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:29:16,378 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:29:16,379 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:29:16,379 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:29:16,380 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:29:21,218 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:29:21,248 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:29:21,259 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:29:21,261 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:29:21,263 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:29:21,264 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:29:21,265 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:29:21,266 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:29:21,266 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:29:21,267 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:29:21,268 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:29:21,268 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:29:21,442 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:29:21,443 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:29:21,455 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:29:21,457 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:29:21,458 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:29:21,475 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:29:21,477 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:29:21,478 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:29:21,479 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:29:21,479 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:29:21,642 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:29:21,643 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:29:21,644 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:29:21,645 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:29:21,656 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:29:21,657 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:29:21,658 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:29:21,659 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:29:21,842 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:29:21,843 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:29:21,844 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:29:21,845 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:29:21,846 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:29:21,847 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:29:21,848 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:29:21,849 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:29:21,850 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:29:22,053 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:29:22,055 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:29:22,057 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:29:22,060 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:29:22,061 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:29:22,062 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:29:22,064 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:29:22,243 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:29:22,245 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:29:22,246 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:29:22,249 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:29:22,444 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:29:22,450 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:29:22,454 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:29:22,456 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:29:22,459 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:29:22,462 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:29:22,464 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:29:22,466 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:29:22,644 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:29:22,646 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:29:22,648 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:29:22,650 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:29:22,652 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:29:22,844 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:29:22,845 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:29:22,847 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:29:22,849 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:29:22,850 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:29:22,852 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:29:22,854 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:29:23,042 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:29:23,043 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:29:23,044 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:29:23,045 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:29:23,046 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:29:23,242 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:29:23,243 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:29:23,244 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:29:23,245 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:29:23,245 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:29:23,246 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:29:23,443 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:29:23,444 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:29:23,445 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:29:23,449 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:29:23,450 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:29:23,451 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:29:23,642 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:29:23,643 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:29:23,645 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:29:23,652 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:29:23,653 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:29:23,654 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:29:23,655 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:29:23,704 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:29:23,842 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:29:23,843 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:29:23,844 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:29:23,844 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:29:23,845 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:29:23,846 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:29:23,847 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:29:24,042 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:29:24,043 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:29:24,044 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:29:24,045 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:29:24,046 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:29:24,242 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:29:24,243 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:29:24,244 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:29:24,246 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:29:24,442 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:29:24,443 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:29:24,444 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:29:24,445 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:29:24,642 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:29:24,643 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:29:24,644 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:29:24,644 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:29:24,645 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:29:24,647 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:29:24,648 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:29:24,648 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:29:24,842 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:29:24,843 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:29:24,844 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:29:24,847 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:29:24,849 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:29:24,849 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:29:24,850 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:31:26,782 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:31:26,847 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:31:26,848 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:31:26,849 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:31:26,851 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:31:26,852 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:31:26,854 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:31:26,855 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:31:26,856 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:31:26,988 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:31:26,990 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:31:26,993 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:31:26,997 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:31:27,000 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:31:27,004 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:31:27,187 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:31:27,188 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:31:27,199 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:31:27,201 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:31:27,202 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:31:27,203 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:31:27,418 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:31:27,420 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:31:27,586 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:31:27,587 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:31:27,588 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:31:27,589 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:31:27,590 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:31:27,590 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:31:27,591 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:31:27,592 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:31:27,800 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:31:27,802 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:31:27,810 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:31:27,811 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:31:27,812 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:31:27,986 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:31:27,987 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:31:27,987 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:31:28,190 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:31:28,191 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:31:28,192 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:31:28,193 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:31:28,194 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:31:28,194 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:31:28,195 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:31:28,386 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:31:28,387 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:31:28,388 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:31:28,389 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:31:28,390 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:31:28,391 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:31:28,392 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:31:28,393 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:31:28,631 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:31:28,633 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:31:28,635 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:31:28,636 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:31:28,636 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:31:28,637 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:31:28,641 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:31:28,786 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:31:28,787 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:31:28,788 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:31:28,789 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:31:28,790 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:31:28,986 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:31:28,987 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:31:28,991 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:31:28,992 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:31:28,993 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:31:28,995 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:31:28,996 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:31:28,996 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:31:29,186 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:31:29,187 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:31:29,188 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:31:29,188 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:31:29,387 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:31:29,388 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:31:29,389 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:31:29,389 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:31:29,390 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:31:29,391 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:31:29,391 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:31:29,392 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:31:29,586 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:31:29,587 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:31:29,588 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:31:29,588 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:31:29,589 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:31:29,590 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:31:29,591 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:31:29,795 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:31:29,796 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:31:29,797 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:31:29,799 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:31:29,995 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:31:29,996 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:31:29,997 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:31:29,997 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:31:29,998 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:31:29,999 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:31:29,999 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:31:30,000 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:31:30,195 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:31:30,196 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:31:30,198 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:31:30,199 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:31:30,199 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:31:30,200 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:31:30,201 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:31:31,933 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:31:31,935 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:31:31,936 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:31:31,937 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:33:41,671 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:33:41,703 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:33:41,711 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:33:41,714 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 16:33:41,715 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 16:33:41,716 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:33:41,717 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:33:41,718 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:33:41,719 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:33:41,719 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:33:41,720 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:33:41,720 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:33:41,878 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 16:33:41,879 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:33:41,890 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:33:41,893 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:33:41,894 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:33:41,900 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:33:41,903 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:33:41,904 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:33:41,905 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:33:41,905 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:33:42,079 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:33:42,080 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:33:42,080 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:33:42,081 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:33:42,093 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:33:42,094 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:33:42,095 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:33:42,095 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:33:42,278 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:33:42,279 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:33:42,280 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:33:42,280 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:33:42,281 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:33:42,283 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:33:42,283 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:33:42,284 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:33:42,285 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:33:42,489 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:33:42,491 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:33:42,493 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:33:42,495 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:33:42,496 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:33:42,498 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:33:42,499 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:33:42,679 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:33:42,681 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:33:42,682 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:33:42,685 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:33:42,879 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:33:42,881 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:33:42,882 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:33:42,883 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:33:42,885 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:33:42,886 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:33:42,886 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:33:42,887 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:33:43,078 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:33:43,079 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:33:43,080 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:33:43,081 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:33:43,081 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:33:43,282 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:33:43,283 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:33:43,284 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:33:43,285 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:33:43,285 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:33:43,286 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:33:43,287 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:33:43,479 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:33:43,481 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:33:43,483 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:33:43,485 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:33:43,486 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:33:43,679 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:33:43,681 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:33:43,683 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:33:43,685 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:33:43,686 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:33:43,688 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:33:43,879 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:33:43,882 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:33:43,883 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:33:43,888 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:33:43,889 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:33:43,890 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:33:44,078 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:33:44,079 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:33:44,081 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:33:44,081 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:33:44,082 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:33:44,082 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:33:44,083 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:33:44,113 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:33:44,278 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:33:44,279 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:33:44,280 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:33:44,280 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:33:44,281 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:33:44,282 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:33:44,283 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:33:44,478 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:33:44,479 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:33:44,480 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:33:44,481 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:33:44,481 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:33:44,678 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:33:44,679 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:33:44,679 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:33:44,681 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:33:44,878 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:33:44,879 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:33:44,880 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:33:44,881 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:33:45,081 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:33:45,082 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:33:45,082 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:33:45,083 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:33:45,083 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:33:45,084 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:33:45,085 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:33:45,085 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:33:45,278 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:33:45,279 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:33:45,279 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:33:45,283 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:33:45,284 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:33:45,284 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:33:45,285 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:35:20,205 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:35:20,207 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:35:20,207 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:35:20,208 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:35:20,209 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:35:20,209 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:35:20,210 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:35:20,211 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:35:20,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:35:20,410 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:35:20,412 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:35:20,414 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:35:20,418 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:35:20,421 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:35:20,611 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:35:20,612 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:35:20,614 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:35:20,616 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:35:20,625 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:35:20,627 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:35:20,629 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:35:20,807 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:35:21,008 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:35:21,010 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:35:21,012 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:35:21,014 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:35:21,016 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:35:21,018 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:35:21,020 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:35:21,022 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:35:21,207 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:35:21,209 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:35:21,210 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:35:21,225 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:35:21,406 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:35:21,408 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:35:21,408 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:35:21,409 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:35:21,410 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:35:21,606 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:35:21,607 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:35:21,608 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:35:21,609 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:35:21,609 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:35:21,610 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:35:21,806 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:35:21,810 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:35:21,811 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:35:21,812 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:35:21,813 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:35:21,813 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:35:21,814 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:35:22,007 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:35:22,008 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:35:22,058 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:35:22,060 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:35:22,060 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:35:22,062 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:35:22,063 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:35:22,064 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:35:22,206 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:35:22,207 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:35:22,208 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:35:22,208 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:35:22,209 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:35:22,413 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:35:22,413 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:35:22,414 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:35:22,414 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:35:22,415 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:35:22,416 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:35:22,417 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:35:22,606 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:35:22,607 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:35:22,607 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:35:22,608 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:35:22,609 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:35:22,806 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:35:22,807 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:35:22,808 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:35:22,808 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:35:22,809 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:35:22,809 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:35:22,810 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:35:23,007 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:35:23,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:35:23,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:35:23,010 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:35:23,011 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:35:23,011 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:35:23,012 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:35:23,013 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:35:23,206 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:35:23,207 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:35:23,208 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:35:23,208 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:35:23,406 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:35:23,407 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:35:23,409 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:35:23,409 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:35:23,410 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:35:23,411 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:35:23,411 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:35:23,412 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:35:23,606 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:35:23,607 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:35:23,608 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:35:23,609 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:35:23,610 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:35:23,611 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:35:23,611 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:35:23,612 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:35:25,547 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:35:25,549 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:35:25,550 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:35:25,551 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:36:38,745 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:36:38,780 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:36:38,791 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:36:38,794 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:36:38,796 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:36:38,797 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:36:38,798 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:36:38,798 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:36:38,799 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:36:38,800 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:36:38,801 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:36:38,801 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:36:38,971 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:36:38,972 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:36:38,983 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:36:38,985 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:36:38,986 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:36:39,002 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:36:39,003 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:36:39,005 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:36:39,006 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:36:39,007 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:36:39,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:36:39,172 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:36:39,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:36:39,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:36:39,185 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:36:39,186 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:36:39,186 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:36:39,187 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:36:39,372 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:36:39,373 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:36:39,373 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:36:39,374 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:36:39,375 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:36:39,377 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:36:39,377 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:36:39,378 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:36:39,379 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:36:39,582 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:36:39,586 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:36:39,587 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:36:39,590 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:36:39,592 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:36:39,593 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:36:39,595 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:36:39,775 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:36:39,779 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:36:39,781 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:36:39,801 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:36:39,973 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:36:39,979 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:36:39,982 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:36:39,984 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:36:39,987 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:36:39,989 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:36:39,991 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:36:39,992 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:36:40,172 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:36:40,173 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:36:40,175 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:36:40,177 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:36:40,180 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:36:40,374 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:36:40,375 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:36:40,376 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:36:40,377 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:36:40,377 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:36:40,378 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:36:40,379 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:36:40,573 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:36:40,574 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:36:40,574 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:36:40,575 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:36:40,575 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:36:40,773 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:36:40,774 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:36:40,775 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:36:40,776 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:36:40,777 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:36:40,778 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:36:40,973 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:36:40,974 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:36:40,975 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:36:40,979 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:36:40,980 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:36:40,981 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:36:41,173 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:36:41,174 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:36:41,178 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:36:41,179 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:36:41,179 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:36:41,180 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:36:41,180 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:36:41,209 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:36:41,373 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:36:41,374 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:36:41,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:36:41,375 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:36:41,375 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:36:41,376 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:36:41,376 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:36:41,573 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:36:41,574 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:36:41,575 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:36:41,576 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:36:41,576 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:36:41,773 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:36:41,775 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:36:41,775 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:36:41,777 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:36:41,973 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:36:41,975 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:36:41,977 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:36:41,977 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:36:42,174 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:36:42,175 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:36:42,175 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:36:42,176 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:36:42,176 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:36:42,177 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:36:42,178 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:36:42,179 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:36:42,373 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:36:42,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:36:42,375 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:36:42,378 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:36:42,380 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:36:42,380 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:36:42,381 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:37:26,513 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:37:26,514 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:37:26,515 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:37:26,516 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:37:26,516 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:37:26,517 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:37:26,517 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:37:26,688 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:37:26,689 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:37:26,690 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:37:26,691 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:37:26,692 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:37:26,693 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:37:26,695 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:37:26,899 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:37:26,900 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:37:26,901 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:37:26,965 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:37:26,965 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:37:26,966 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:37:27,088 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:37:27,288 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:37:27,289 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:37:27,290 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:37:27,290 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:37:27,291 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:37:27,292 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:37:27,292 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:37:27,293 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:37:27,499 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:37:27,500 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:37:27,500 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:37:27,501 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:37:27,695 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:37:27,696 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:37:27,697 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:37:27,698 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:37:27,698 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:37:27,699 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:37:27,888 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:37:27,889 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:37:27,890 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:37:27,890 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:37:27,891 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:37:28,088 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:37:28,089 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:37:28,089 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:37:28,090 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:37:28,091 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:37:28,091 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:37:28,092 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:37:28,093 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:37:28,289 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:37:28,290 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:37:28,336 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:37:28,337 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:37:28,338 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:37:28,340 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:37:28,341 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:37:28,488 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:37:28,489 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:37:28,490 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:37:28,491 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:37:28,688 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:37:28,689 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:37:28,689 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:37:28,690 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:37:28,690 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:37:28,691 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:37:28,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:37:28,693 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:37:28,888 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:37:28,889 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:37:28,889 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:37:28,890 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:37:28,891 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:37:28,891 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:37:29,088 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:37:29,089 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:37:29,090 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:37:29,090 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:37:29,091 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:37:29,091 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:37:29,288 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:37:29,289 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:37:29,290 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:37:29,290 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:37:29,291 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:37:29,291 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:37:29,292 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:37:29,293 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:37:29,488 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:37:29,489 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:37:29,489 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:37:29,490 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:37:29,688 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:37:29,689 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:37:29,689 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:37:29,690 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:37:29,691 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:37:29,691 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:37:29,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:37:29,693 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:37:29,888 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:37:29,889 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:37:29,889 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:37:29,891 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:37:29,892 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:37:29,893 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:37:29,894 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:37:29,894 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:37:30,088 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:37:31,954 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:37:31,955 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:37:31,955 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:37:31,956 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:38:15,900 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:38:15,935 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:38:15,944 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:38:15,947 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:38:15,948 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:38:15,949 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:38:15,950 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:38:15,951 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:38:15,951 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:38:15,952 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:38:15,953 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:38:15,953 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:38:16,127 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:38:16,128 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:38:16,139 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:38:16,141 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:38:16,142 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:38:16,151 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:38:16,152 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:38:16,154 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:38:16,155 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:38:16,156 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:38:16,327 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:38:16,328 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:38:16,329 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:38:16,330 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:38:16,344 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:38:16,345 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:38:16,347 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:38:16,348 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:38:16,527 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:38:16,528 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:38:16,529 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:38:16,530 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:38:16,531 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:38:16,533 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:38:16,534 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:38:16,534 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:38:16,535 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:38:16,738 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:38:16,743 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:38:16,745 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:38:16,748 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:38:16,750 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:38:16,751 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:38:16,752 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:38:16,928 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:38:16,930 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:38:16,931 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:38:16,933 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:38:17,127 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:38:17,130 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:38:17,131 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:38:17,133 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:38:17,134 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:38:17,135 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:38:17,136 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:38:17,137 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:38:17,327 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:38:17,329 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:38:17,330 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:38:17,330 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:38:17,331 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:38:17,527 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:38:17,528 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:38:17,529 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:38:17,530 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:38:17,530 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:38:17,531 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:38:17,532 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:38:17,727 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:38:17,728 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:38:17,729 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:38:17,730 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:38:17,740 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:38:17,928 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:38:17,930 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:38:17,932 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:38:17,934 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:38:17,935 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:38:17,937 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:38:18,128 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:38:18,129 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:38:18,130 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:38:18,133 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:38:18,134 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:38:18,135 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:38:18,327 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:38:18,329 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:38:18,331 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:38:18,332 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:38:18,333 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:38:18,334 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:38:18,335 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:38:18,371 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:38:18,527 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:38:18,528 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:38:18,529 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:38:18,530 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:38:18,531 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:38:18,531 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:38:18,532 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:38:18,727 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:38:18,729 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:38:18,729 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:38:18,730 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:38:18,731 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:38:18,927 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:38:18,928 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:38:18,929 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:38:18,931 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:38:19,127 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:38:19,128 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:38:19,129 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:38:19,129 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:38:19,327 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:38:19,328 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:38:19,329 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:38:19,329 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:38:19,330 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:38:19,331 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:38:19,332 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:38:19,333 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:38:19,527 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:38:19,528 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:38:19,529 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:38:19,532 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:38:19,533 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:38:19,534 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:38:19,535 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:38:40,037 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:38:40,042 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:38:40,043 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:38:40,043 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:38:40,044 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:38:40,044 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:38:40,065 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:38:40,065 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:38:40,066 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:38:40,067 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:38:40,068 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:38:40,068 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:38:40,070 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:38:40,071 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:38:40,258 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:38:40,259 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:38:40,259 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:38:40,261 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:38:40,262 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:38:40,263 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:38:40,263 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:38:40,469 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:38:40,470 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:38:40,658 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:38:40,666 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:38:40,667 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:38:40,668 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:38:40,668 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:38:40,858 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:38:40,859 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:38:40,859 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:38:40,860 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:38:40,861 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:38:41,072 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:38:41,074 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:38:41,075 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:38:41,077 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:38:41,078 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:38:41,080 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:38:41,259 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:38:41,260 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:38:41,261 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:38:41,262 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:38:41,262 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:38:41,458 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:38:41,460 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:38:41,461 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:38:41,462 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:38:41,463 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:38:41,463 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:38:41,464 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:38:41,658 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:38:41,660 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:38:41,661 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:38:41,706 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:38:41,707 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:38:41,708 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:38:41,709 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:38:41,709 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:38:41,858 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:38:41,859 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:38:41,860 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:38:41,861 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:38:42,058 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:38:42,059 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:38:42,059 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:38:42,060 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:38:42,061 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:38:42,061 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:38:42,062 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:38:42,063 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:38:42,258 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:38:42,259 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:38:42,259 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:38:42,260 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:38:42,261 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:38:42,261 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:38:42,458 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:38:42,459 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:38:42,460 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:38:42,460 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:38:42,461 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:38:42,462 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:38:42,658 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:38:42,660 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:38:42,661 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:38:42,662 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:38:42,662 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:38:42,663 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:38:42,664 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:38:42,664 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:38:42,858 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:38:42,859 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:38:42,859 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:38:42,860 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:38:43,058 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:38:43,059 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:38:43,059 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:38:43,060 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:38:43,062 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:38:43,062 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:38:43,063 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:38:43,258 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:38:43,259 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:38:43,259 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:38:43,260 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:38:43,261 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:38:43,262 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:38:43,263 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:38:43,264 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:38:43,458 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:38:43,459 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:38:45,174 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:38:45,175 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:38:45,175 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:38:45,176 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:39:13,653 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:39:13,689 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:39:13,697 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:39:13,700 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:39:13,702 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:39:13,703 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:39:13,704 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:39:13,704 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:39:13,705 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:39:13,706 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:39:13,707 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:39:13,707 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:39:13,880 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-25 16:39:13,881 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:39:13,914 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:39:13,917 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:39:13,918 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:39:13,932 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:39:13,934 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:39:13,936 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:39:13,937 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:39:13,938 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:39:14,080 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:39:14,082 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:39:14,084 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:39:14,086 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:39:14,113 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:39:14,115 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:39:14,116 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:39:14,118 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:39:14,278 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:39:14,279 [Thread: 8       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:39:14,280 [Thread: 8       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:39:14,281 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:39:14,283 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:39:14,285 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:39:14,286 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:39:14,287 [Thread: 8       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:39:14,288 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:39:14,489 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:39:14,491 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:39:14,493 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:39:14,496 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:39:14,497 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:39:14,498 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:39:14,500 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:39:14,679 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:39:14,681 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:39:14,682 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:39:14,685 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:39:14,879 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:39:14,886 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:39:14,888 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:39:14,889 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:39:14,890 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:39:14,892 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:39:14,892 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:39:14,894 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:39:15,078 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:39:15,079 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:39:15,080 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:39:15,081 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:39:15,082 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:39:15,278 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:39:15,279 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:39:15,280 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:39:15,281 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:39:15,281 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:39:15,282 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:39:15,283 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:39:15,478 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:39:15,479 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:39:15,480 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:39:15,481 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:39:15,482 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:39:15,680 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:39:15,681 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:39:15,681 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:39:15,682 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:39:15,683 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:39:15,684 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:39:15,879 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:39:15,880 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:39:15,881 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:39:15,885 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:39:15,886 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:39:15,886 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:39:16,079 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:39:16,080 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:39:16,083 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:39:16,084 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:39:16,084 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:39:16,085 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:39:16,086 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:39:16,128 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:39:16,279 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:39:16,280 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:39:16,281 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:39:16,281 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:39:16,282 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:39:16,283 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:39:16,284 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:39:16,479 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:39:16,481 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:39:16,482 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:39:16,482 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:39:16,483 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:39:16,679 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:39:16,680 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:39:16,681 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:39:16,683 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:39:16,879 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:39:16,880 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:39:16,881 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:39:16,882 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:39:17,079 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:39:17,080 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:39:17,081 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:39:17,081 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:39:17,082 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:39:17,083 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:39:17,086 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:39:17,087 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:39:17,279 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:39:17,280 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:39:17,281 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:39:17,285 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:39:17,286 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:39:17,287 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:39:17,287 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:41:58,362 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:41:58,395 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:41:58,400 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:41:58,407 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:41:58,409 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:41:58,412 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:41:58,417 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:41:58,419 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:41:58,421 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:41:58,591 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:41:58,593 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:41:58,596 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:41:58,602 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:41:58,605 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:41:58,608 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:41:58,610 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:41:58,791 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:41:58,799 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:41:58,800 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:41:58,801 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:41:58,805 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:41:58,995 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:41:59,026 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:41:59,189 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:41:59,190 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:41:59,190 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:41:59,191 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:41:59,192 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:41:59,192 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:41:59,193 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:41:59,193 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:41:59,394 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:41:59,395 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:41:59,401 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:41:59,402 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:41:59,403 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:41:59,592 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:41:59,593 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:41:59,594 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:41:59,795 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:41:59,796 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:41:59,797 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:41:59,815 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:41:59,816 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:41:59,816 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:41:59,817 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:41:59,992 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:41:59,993 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:41:59,994 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:41:59,995 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:41:59,995 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:41:59,996 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:41:59,998 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:41:59,999 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:42:00,245 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:42:00,255 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:42:00,256 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:42:00,257 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:42:00,258 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:42:00,259 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:42:00,260 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:42:00,392 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:42:00,393 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:42:00,394 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:42:00,394 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:42:00,395 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:42:00,592 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:42:00,593 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:42:00,594 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:42:00,595 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:42:00,595 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:42:00,596 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:42:00,597 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:42:00,597 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:42:00,792 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:42:00,797 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:42:00,798 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:42:00,799 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:42:00,992 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:42:00,993 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:42:00,994 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:42:00,995 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:42:00,995 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:42:00,996 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:42:00,996 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:42:00,997 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:42:01,192 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:42:01,193 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:42:01,194 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:42:01,194 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:42:01,195 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:42:01,196 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:42:01,196 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:42:01,392 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:42:01,393 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:42:01,394 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:42:01,400 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:42:01,592 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:42:01,593 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:42:01,594 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:42:01,595 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:42:01,596 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:42:01,596 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:42:01,597 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:42:01,598 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:42:01,792 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:42:01,793 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:42:01,795 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:42:01,797 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:42:01,797 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:42:01,799 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:42:01,799 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:42:07,590 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:42:07,591 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:42:07,592 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:42:07,593 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:43:12,875 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 16:43:12,910 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 16:43:12,918 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 16:43:12,921 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 16:43:12,923 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 16:43:12,924 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 16:43:12,924 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 16:43:12,925 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 16:43:12,926 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 16:43:12,926 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:43:12,927 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:43:12,928 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 16:43:13,085 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 16:43:13,086 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 16:43:13,099 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 16:43:13,101 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 16:43:13,102 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 16:43:13,112 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 16:43:13,113 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 16:43:13,115 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 16:43:13,116 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 16:43:13,117 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 16:43:13,285 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 16:43:13,286 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 16:43:13,287 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 16:43:13,288 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 16:43:13,312 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 16:43:13,313 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 16:43:13,314 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 16:43:13,315 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 16:43:13,485 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 16:43:13,486 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 16:43:13,487 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 16:43:13,488 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 16:43:13,489 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 16:43:13,491 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 16:43:13,492 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 16:43:13,493 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 16:43:13,493 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 16:43:13,700 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:43:13,703 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 16:43:13,705 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 16:43:13,707 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 16:43:13,708 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 16:43:13,709 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 16:43:13,711 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 16:43:13,891 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 16:43:13,892 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 16:43:13,893 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 16:43:13,896 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 16:43:14,089 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 16:43:14,092 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 16:43:14,093 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 16:43:14,095 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 16:43:14,096 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 16:43:14,097 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 16:43:14,098 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:43:14,099 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 16:43:14,289 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 16:43:14,293 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 16:43:14,294 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 16:43:14,295 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 16:43:14,295 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 16:43:14,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 16:43:14,490 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 16:43:14,491 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:43:14,491 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:43:14,492 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:43:14,493 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:43:14,493 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 16:43:14,689 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 16:43:14,690 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 16:43:14,691 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 16:43:14,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 16:43:14,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 16:43:14,890 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 16:43:14,892 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:43:14,894 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:43:14,895 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:43:14,897 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:43:14,899 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 16:43:15,090 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 16:43:15,092 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 16:43:15,094 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 16:43:15,102 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 16:43:15,103 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 16:43:15,105 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 16:43:15,289 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 16:43:15,290 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 16:43:15,292 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 16:43:15,293 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 16:43:15,293 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 16:43:15,294 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 16:43:15,295 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 16:43:15,332 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 16:43:15,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 16:43:15,490 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 16:43:15,491 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:43:15,492 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:43:15,492 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 16:43:15,493 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 16:43:15,494 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 16:43:15,689 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 16:43:15,695 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 16:43:15,696 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 16:43:15,696 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 16:43:15,697 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 16:43:15,889 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 16:43:15,890 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 16:43:15,891 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 16:43:15,893 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:43:16,091 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:43:16,092 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 16:43:16,093 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 16:43:16,094 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 16:43:16,290 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 16:43:16,291 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 16:43:16,292 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:43:16,292 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:43:16,293 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:43:16,294 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:43:16,295 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 16:43:16,296 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 16:43:16,491 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 16:43:16,492 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:43:16,492 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:43:16,496 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 16:43:16,497 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 16:43:16,498 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 16:43:16,498 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 16:43:29,058 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 16:43:29,071 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 16:43:29,092 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 16:43:29,093 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 16:43:29,093 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:43:29,094 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:43:29,094 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:43:29,095 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:43:29,096 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 16:43:29,268 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 16:43:29,270 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 16:43:29,272 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 16:43:29,276 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 16:43:29,278 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 16:43:29,280 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 16:43:29,469 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 16:43:29,471 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 16:43:29,473 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 16:43:29,482 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:43:29,483 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 16:43:29,484 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 16:43:29,695 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 16:43:29,697 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 16:43:29,867 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 16:43:29,868 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 16:43:29,869 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 16:43:29,870 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 16:43:29,870 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:43:29,871 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 16:43:29,872 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:43:29,872 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 16:43:30,076 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 16:43:30,084 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 16:43:30,090 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 16:43:30,092 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 16:43:30,093 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 16:43:30,276 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 16:43:30,277 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:43:30,278 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 16:43:30,476 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 16:43:30,477 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 16:43:30,478 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 16:43:30,478 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 16:43:30,479 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:43:30,480 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 16:43:30,482 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:43:30,676 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:43:30,677 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 16:43:30,678 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 16:43:30,678 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 16:43:30,679 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 16:43:30,680 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 16:43:30,681 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 16:43:30,682 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 16:43:30,931 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 16:43:30,933 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 16:43:30,934 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:43:30,938 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:43:30,940 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 16:43:30,942 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 16:43:30,942 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 16:43:31,076 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 16:43:31,077 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 16:43:31,078 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 16:43:31,078 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 16:43:31,079 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:43:31,276 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:43:31,277 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:43:31,277 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:43:31,278 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 16:43:31,279 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 16:43:31,280 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 16:43:31,280 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 16:43:31,281 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 16:43:31,476 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 16:43:31,477 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:43:31,477 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 16:43:31,479 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 16:43:31,676 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 16:43:31,677 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 16:43:31,678 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 16:43:31,678 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:43:31,679 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:43:31,680 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:43:31,681 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:43:31,682 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 16:43:31,876 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 16:43:31,877 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 16:43:31,878 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 16:43:31,878 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 16:43:31,879 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 16:43:31,880 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:43:31,880 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 16:43:32,076 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 16:43:32,077 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 16:43:32,080 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 16:43:32,080 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 16:43:32,276 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 16:43:32,277 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 16:43:32,277 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 16:43:32,278 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 16:43:32,279 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 16:43:32,279 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 16:43:32,280 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 16:43:32,281 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 16:43:32,476 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 16:43:32,480 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 16:43:32,481 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 16:43:32,482 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 16:43:32,483 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 16:43:32,483 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 16:43:32,484 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 16:43:35,540 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 16:43:35,540 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 16:43:35,541 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 16:43:35,542 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:12:19,314 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 17:12:19,344 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 17:12:19,352 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 17:12:19,354 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 17:12:19,356 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 17:12:19,357 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 17:12:19,358 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 17:12:19,359 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 17:12:19,359 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 17:12:19,360 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 17:12:19,361 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:12:19,362 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 17:12:19,534 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 17:12:19,536 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:12:19,561 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 17:12:19,564 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 17:12:19,565 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 17:12:19,577 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 17:12:19,578 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 17:12:19,583 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 17:12:19,584 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 17:12:19,585 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 17:12:19,735 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 17:12:19,737 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 17:12:19,739 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 17:12:19,741 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 17:12:19,766 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 17:12:19,768 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 17:12:19,774 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 17:12:19,775 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 17:12:19,933 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 17:12:19,934 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 17:12:19,935 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 17:12:19,936 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 17:12:19,936 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 17:12:19,938 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 17:12:19,939 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 17:12:19,940 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 17:12:19,940 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 17:12:20,144 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:12:20,147 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:12:20,148 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 17:12:20,151 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 17:12:20,152 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 17:12:20,153 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 17:12:20,155 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 17:12:20,334 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 17:12:20,336 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 17:12:20,337 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 17:12:20,340 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 17:12:20,534 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 17:12:20,536 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 17:12:20,538 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 17:12:20,539 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 17:12:20,540 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 17:12:20,542 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 17:12:20,542 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:12:20,543 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 17:12:20,733 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 17:12:20,734 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 17:12:20,735 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 17:12:20,736 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 17:12:20,737 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 17:12:20,933 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 17:12:20,934 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 17:12:20,935 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:12:20,935 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:12:20,936 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:12:20,936 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:12:20,937 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 17:12:21,133 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 17:12:21,134 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 17:12:21,135 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 17:12:21,135 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 17:12:21,136 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 17:12:21,333 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:12:21,334 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:12:21,335 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:12:21,335 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:12:21,336 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:12:21,337 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 17:12:21,533 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 17:12:21,534 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 17:12:21,535 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 17:12:21,538 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 17:12:21,539 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:12:21,539 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 17:12:21,733 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:12:21,734 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:12:21,736 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 17:12:21,736 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:12:21,737 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 17:12:21,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:12:21,738 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:12:21,773 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 17:12:21,933 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 17:12:21,934 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:12:21,935 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:12:21,935 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:12:21,936 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 17:12:21,937 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 17:12:21,938 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 17:12:22,133 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 17:12:22,134 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 17:12:22,135 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 17:12:22,136 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 17:12:22,136 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 17:12:22,333 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 17:12:22,334 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 17:12:22,334 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 17:12:22,336 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:12:22,533 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:12:22,534 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 17:12:22,534 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 17:12:22,535 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 17:12:22,733 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 17:12:22,734 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 17:12:22,734 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:12:22,735 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:12:22,736 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:12:22,736 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:12:22,737 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 17:12:22,738 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 17:12:22,933 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:12:22,934 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:12:22,935 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:12:22,938 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:12:22,939 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 17:12:22,940 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:12:22,940 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:12:31,235 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 17:12:31,236 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 17:12:31,237 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 17:12:31,238 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 17:12:31,241 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:12:31,242 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:12:31,395 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:12:31,396 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:12:31,397 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 17:12:31,398 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 17:12:31,399 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 17:12:31,400 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 17:12:31,401 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 17:12:31,615 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 17:12:31,616 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 17:12:31,617 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 17:12:31,618 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 17:12:31,619 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 17:12:31,620 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:12:31,799 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 17:12:31,800 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 17:12:32,005 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 17:12:32,014 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 17:12:32,015 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 17:12:32,016 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 17:12:32,017 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 17:12:32,017 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 17:12:32,018 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:12:32,200 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:12:32,201 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:12:32,202 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 17:12:32,203 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 17:12:32,203 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 17:12:32,405 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 17:12:32,409 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 17:12:32,410 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 17:12:32,411 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 17:12:32,412 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:12:32,413 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 17:12:32,600 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 17:12:32,619 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 17:12:32,620 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 17:12:32,621 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 17:12:32,622 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:12:32,800 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 17:12:32,801 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:12:32,801 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:12:32,802 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 17:12:32,803 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 17:12:32,803 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:12:32,804 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 17:12:33,000 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 17:12:33,006 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 17:12:33,007 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 17:12:33,059 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 17:12:33,060 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 17:12:33,061 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:12:33,075 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:12:33,076 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:12:33,201 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 17:12:33,203 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 17:12:33,204 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 17:12:33,205 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 17:12:33,401 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 17:12:33,403 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 17:12:33,405 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:12:33,407 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:12:33,409 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:12:33,410 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:12:33,412 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 17:12:33,414 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 17:12:33,602 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 17:12:33,603 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:12:33,605 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:12:33,607 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 17:12:33,609 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:12:33,611 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 17:12:33,801 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 17:12:33,803 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 17:12:33,805 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 17:12:33,806 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 17:12:33,808 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:12:33,810 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:12:34,002 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:12:34,004 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:12:34,006 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 17:12:34,008 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 17:12:34,010 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:12:34,011 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 17:12:34,013 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 17:12:34,015 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 17:12:34,200 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:12:34,210 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 17:12:34,211 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 17:12:34,212 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 17:12:34,400 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 17:12:34,401 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 17:12:34,402 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:12:34,402 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:12:34,403 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:12:34,407 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:12:34,408 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 17:12:34,600 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 17:12:34,601 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:12:34,602 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 17:12:34,602 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 17:12:34,603 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 17:12:34,605 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 17:12:34,606 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:12:34,607 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:12:34,800 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:12:34,801 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:12:58,579 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:12:58,580 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:12:58,581 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:12:58,582 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:12:58,744 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:12:58,745 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 17:12:58,745 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:12:58,746 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:17:34,823 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 17:17:34,854 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 17:17:34,862 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 17:17:34,866 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 17:17:34,868 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 17:17:34,869 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 17:17:34,870 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 17:17:34,871 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 17:17:34,872 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 17:17:34,872 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 17:17:34,873 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:17:34,874 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 17:17:35,032 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 17:17:35,037 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:17:35,049 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 17:17:35,051 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 17:17:35,052 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 17:17:35,068 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 17:17:35,070 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 17:17:35,071 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 17:17:35,072 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 17:17:35,073 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 17:17:35,233 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 17:17:35,233 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 17:17:35,234 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 17:17:35,235 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 17:17:35,245 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 17:17:35,246 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 17:17:35,247 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 17:17:35,248 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 17:17:35,432 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 17:17:35,437 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 17:17:35,438 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 17:17:35,439 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 17:17:35,440 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 17:17:35,442 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 17:17:35,443 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 17:17:35,444 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 17:17:35,445 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 17:17:35,643 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:17:35,645 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:17:35,646 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 17:17:35,648 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 17:17:35,650 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 17:17:35,651 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 17:17:35,652 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 17:17:35,834 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 17:17:35,835 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 17:17:35,836 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 17:17:35,838 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 17:17:36,032 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 17:17:36,035 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 17:17:36,036 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 17:17:36,038 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 17:17:36,039 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 17:17:36,040 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 17:17:36,041 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:17:36,042 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 17:17:36,232 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 17:17:36,233 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 17:17:36,234 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 17:17:36,234 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 17:17:36,235 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 17:17:36,432 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 17:17:36,433 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 17:17:36,433 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:17:36,435 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:17:36,436 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:17:36,437 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:17:36,437 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 17:17:36,632 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 17:17:36,633 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 17:17:36,634 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 17:17:36,634 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 17:17:36,635 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 17:17:36,832 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:17:36,833 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:17:36,833 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:17:36,834 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:17:36,834 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:17:36,835 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 17:17:37,032 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 17:17:37,033 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 17:17:37,034 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 17:17:37,038 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 17:17:37,039 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:17:37,039 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 17:17:37,232 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:17:37,233 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:17:37,236 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 17:17:37,237 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:17:37,238 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 17:17:37,238 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:17:37,239 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:17:37,274 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 17:17:37,432 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 17:17:37,433 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:17:37,434 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:17:37,434 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:17:37,435 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 17:17:37,435 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 17:17:37,436 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 17:17:37,632 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 17:17:37,633 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 17:17:37,634 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 17:17:37,634 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 17:17:37,635 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 17:17:37,832 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 17:17:37,833 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 17:17:37,833 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 17:17:37,836 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:17:38,032 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:17:38,033 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 17:17:38,034 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 17:17:38,035 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 17:17:38,232 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 17:17:38,233 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 17:17:38,234 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:17:38,234 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:17:38,235 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:17:38,235 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:17:38,236 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 17:17:38,237 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 17:17:38,433 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:17:38,435 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:17:38,437 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:17:38,446 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:17:38,448 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 17:17:38,450 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:17:38,451 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:17:39,193 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 17:17:39,194 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 17:17:39,197 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 17:17:39,198 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 17:17:39,385 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:17:39,386 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:17:39,386 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:17:39,388 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:17:39,590 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 17:17:39,594 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 17:17:39,594 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 17:17:39,595 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 17:17:39,807 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 17:17:39,808 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 17:17:39,809 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 17:17:39,809 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 17:17:39,810 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 17:17:39,810 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 17:17:39,811 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:17:39,812 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 17:17:39,982 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 17:17:39,983 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 17:17:39,984 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 17:17:39,985 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 17:17:39,985 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 17:17:40,182 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 17:17:40,183 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 17:17:40,183 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:17:40,184 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:17:40,184 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:17:40,185 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 17:17:40,185 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 17:17:40,383 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 17:17:40,389 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 17:17:40,390 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 17:17:40,390 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 17:17:40,412 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 17:17:40,582 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:17:40,583 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 17:17:40,584 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 17:17:40,584 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 17:17:40,782 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 17:17:40,783 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 17:17:40,783 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:17:40,784 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 17:17:40,784 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:17:40,785 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:17:40,786 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 17:17:40,982 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 17:17:40,983 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:17:40,983 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 17:17:40,984 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 17:17:40,985 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 17:17:40,986 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 17:17:41,045 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 17:17:41,047 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 17:17:41,182 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:17:41,183 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:17:41,183 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:17:41,184 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 17:17:41,185 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 17:17:41,382 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 17:17:41,383 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 17:17:41,384 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 17:17:41,384 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 17:17:41,385 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:17:41,385 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:17:41,452 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:17:41,583 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:17:41,586 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 17:17:41,587 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 17:17:41,588 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 17:17:41,588 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:17:41,589 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:17:41,590 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 17:17:41,798 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:17:41,798 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 17:17:41,799 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 17:17:41,800 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 17:17:41,982 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 17:17:41,983 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 17:17:41,983 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:17:41,984 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:17:41,984 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:17:41,985 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:17:41,986 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 17:17:41,986 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 17:17:42,182 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:17:42,183 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 17:17:42,183 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 17:17:42,184 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 17:17:42,185 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:17:42,185 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 17:17:42,382 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 17:17:42,383 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 17:17:42,384 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 17:17:42,384 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 17:17:42,385 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:17:42,582 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:17:42,583 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:17:42,584 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:17:42,585 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 17:17:42,585 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 17:17:42,586 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:17:42,586 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 17:17:42,587 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 17:17:42,783 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 17:17:42,784 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 17:17:42,785 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:17:42,785 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:17:42,786 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:17:42,786 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:18:07,054 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:18:07,061 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:18:07,062 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:18:07,063 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:18:07,196 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:18:07,197 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 17:18:07,198 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:18:07,198 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:46:10,267 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 17:46:10,324 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 17:46:10,334 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 17:46:10,337 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-25 17:46:10,339 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-25 17:46:10,340 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 17:46:10,340 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 17:46:10,341 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-25 17:46:10,342 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-25 17:46:10,343 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 17:46:10,343 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:46:10,344 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 17:46:10,500 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-25 17:46:10,501 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:46:10,512 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 17:46:10,515 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 17:46:10,516 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 17:46:10,527 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 17:46:10,529 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 17:46:10,550 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 17:46:10,551 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 17:46:10,552 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 17:46:10,700 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 17:46:10,701 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 17:46:10,702 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 17:46:10,703 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 17:46:10,713 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 17:46:10,714 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 17:46:10,715 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 17:46:10,715 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 17:46:10,900 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 17:46:10,901 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-25 17:46:10,902 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-25 17:46:10,902 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 17:46:10,903 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 17:46:10,905 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 17:46:10,906 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 17:46:10,906 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-25 17:46:10,907 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 17:46:11,111 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:46:11,113 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:46:11,114 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 17:46:11,117 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 17:46:11,118 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 17:46:11,119 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 17:46:11,120 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 17:46:11,301 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 17:46:11,303 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 17:46:11,303 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 17:46:11,306 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 17:46:11,500 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 17:46:11,503 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 17:46:11,504 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 17:46:11,505 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 17:46:11,506 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 17:46:11,507 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 17:46:11,508 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:46:11,508 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 17:46:11,700 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 17:46:11,701 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 17:46:11,701 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 17:46:11,702 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 17:46:11,703 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 17:46:11,900 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 17:46:11,901 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 17:46:11,901 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:46:11,902 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:46:11,902 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:46:11,903 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:46:11,904 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 17:46:12,100 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 17:46:12,101 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 17:46:12,102 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 17:46:12,102 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 17:46:12,103 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 17:46:12,300 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:46:12,301 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:46:12,301 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:46:12,302 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:46:12,303 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:46:12,303 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-25 17:46:12,500 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 17:46:12,501 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 17:46:12,502 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 17:46:12,505 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 17:46:12,506 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:46:12,507 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 17:46:12,700 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:46:12,701 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:46:12,703 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 17:46:12,704 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:46:12,704 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 17:46:12,705 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:46:12,705 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:46:12,737 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 17:46:12,900 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 17:46:12,905 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:46:12,906 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:46:12,906 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:46:12,907 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 17:46:12,908 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 17:46:12,909 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-25 17:46:13,100 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 17:46:13,101 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 17:46:13,102 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 17:46:13,103 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 17:46:13,103 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 17:46:13,302 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 17:46:13,303 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-25 17:46:13,305 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 17:46:13,311 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:46:13,501 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:46:13,503 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-07-25 17:46:13,504 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 17:46:13,506 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 17:46:13,702 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 17:46:13,704 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 17:46:13,705 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:46:13,707 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:46:13,709 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:46:13,711 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:46:13,714 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 17:46:13,715 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 17:46:13,902 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:46:13,904 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:46:13,906 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:46:13,915 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:46:13,917 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 17:46:13,918 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:46:13,919 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:46:14,704 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 17:46:14,736 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 17:46:14,747 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 17:46:14,753 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 17:46:14,883 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:46:14,884 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:46:14,885 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:46:14,886 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:46:15,065 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 17:46:15,069 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 17:46:15,070 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 17:46:15,071 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 17:46:15,265 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 17:46:15,266 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 17:46:15,267 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 17:46:15,268 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 17:46:15,268 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 17:46:15,269 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 17:46:15,270 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:46:15,271 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 17:46:15,464 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 76].
2019-07-25 17:46:15,465 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 17:46:15,466 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 17:46:15,467 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 17:46:15,468 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 17:46:15,664 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 17:46:15,665 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 17:46:15,666 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:46:15,666 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:46:15,667 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:46:15,668 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 17:46:15,669 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-25 17:46:15,864 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 17:46:15,869 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 17:46:15,870 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 17:46:15,871 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 17:46:15,872 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 17:46:16,064 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:46:16,065 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-25 17:46:16,066 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 17:46:16,067 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 17:46:16,264 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 17:46:16,265 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 17:46:16,266 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:46:16,267 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 17:46:16,267 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:46:16,268 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:46:16,269 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 17:46:16,464 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 17:46:16,465 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:46:16,466 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 17:46:16,466 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 17:46:16,468 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 17:46:16,469 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 17:46:16,518 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 17:46:16,519 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 17:46:16,664 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:46:16,665 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:46:16,665 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:46:16,666 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 17:46:16,666 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-25 17:46:16,882 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 17:46:16,883 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 17:46:16,884 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 17:46:16,885 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 17:46:16,885 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:46:16,886 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:46:16,887 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:46:17,076 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:46:17,077 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 17:46:17,078 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 17:46:17,078 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 17:46:17,079 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:46:17,080 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:46:17,080 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 17:46:17,081 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:46:17,276 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-25 17:46:17,277 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 17:46:17,278 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 17:46:17,278 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 17:46:17,476 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 17:46:17,478 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:46:17,479 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:46:17,479 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:46:17,480 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:46:17,480 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 17:46:17,481 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 17:46:17,482 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:46:17,676 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 17:46:17,677 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 17:46:17,677 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 17:46:17,678 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:46:17,678 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-25 17:46:17,889 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 17:46:17,891 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 17:46:17,891 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 17:46:17,892 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 17:46:17,892 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:46:17,893 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:46:17,894 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:46:18,088 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:46:18,089 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 17:46:18,090 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 17:46:18,091 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:46:18,091 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 17:46:18,092 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 17:46:18,093 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 17:46:18,289 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 17:46:18,290 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:46:18,291 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:46:18,292 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:46:18,294 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:48:52,195 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:48:52,196 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:48:52,196 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:48:52,197 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:48:52,334 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:48:52,335 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 17:48:52,335 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:48:52,336 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:50:29,772 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 17:50:29,812 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 17:50:29,822 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 17:50:29,825 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 17:50:29,827 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 17:50:29,827 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 17:50:29,828 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 17:50:29,829 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 17:50:29,829 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 17:50:29,830 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 17:50:29,831 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:50:29,831 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 17:50:29,994 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 17:50:29,995 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:50:30,007 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 17:50:30,009 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 17:50:30,010 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 17:50:30,011 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-25 17:50:30,025 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 17:50:30,026 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 17:50:30,027 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 17:50:30,028 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 17:50:30,194 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 17:50:30,195 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 17:50:30,196 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 17:50:30,197 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 17:50:30,198 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 17:50:30,209 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 17:50:30,213 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 17:50:30,214 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 17:50:30,394 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 17:50:30,395 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 17:50:30,396 [Thread: 10      ] [DEBUG] -- Found 18 <object> elements defining objects.
2019-07-25 17:50:30,397 [Thread: 10      ] [DEBUG] -- Loaded 18 object definitions from location [spring-objects.xml]
2019-07-25 17:50:30,398 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 17:50:30,399 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 17:50:30,401 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 17:50:30,401 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 17:50:30,402 [Thread: 10      ] [DEBUG] -- 18 objects defined in application context [spring.root].
2019-07-25 17:50:30,594 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 17:50:30,606 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:50:30,608 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:50:30,610 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 17:50:30,623 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 17:50:30,625 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 17:50:30,626 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 17:50:30,795 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 17:50:30,797 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 17:50:30,799 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 17:50:30,800 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 17:50:30,996 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 17:50:30,998 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 17:50:31,000 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 17:50:31,002 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 17:50:31,004 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 17:50:31,009 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 17:50:31,010 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 17:50:31,011 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:50:31,195 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 17:50:31,197 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 17:50:31,199 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 17:50:31,201 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 17:50:31,202 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 17:50:31,395 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 17:50:31,396 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 17:50:31,398 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 17:50:31,399 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:50:31,400 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:50:31,402 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:50:31,403 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:50:31,404 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 17:50:31,595 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 17:50:31,598 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 17:50:31,599 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 17:50:31,601 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 17:50:31,602 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 17:50:31,795 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:50:31,797 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:50:31,799 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:50:31,800 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 17:50:31,802 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 17:50:31,803 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-25 17:50:31,995 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-25 17:50:31,996 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-25 17:50:31,997 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-25 17:50:31,999 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-25 17:50:32,000 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-25 17:50:32,194 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 17:50:32,195 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 17:50:32,196 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 17:50:32,197 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:50:32,198 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:50:32,198 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-25 17:50:32,394 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 17:50:32,395 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 17:50:32,396 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 17:50:32,400 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 17:50:32,401 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:50:32,401 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 17:50:32,597 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:50:32,598 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:50:32,604 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 17:50:32,605 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:50:32,605 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 17:50:32,606 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:50:32,607 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:50:32,794 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-25 17:50:32,796 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 17:50:32,797 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-25 17:50:32,798 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 17:50:32,799 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 17:50:32,826 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 17:50:32,827 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 17:50:32,994 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:50:32,995 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:50:32,996 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:50:32,996 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 17:50:32,997 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 17:50:33,002 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 17:50:33,194 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 17:50:33,195 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 17:50:33,196 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 17:50:33,197 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 17:50:33,198 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 17:50:33,198 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 17:50:33,395 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-25 17:50:33,396 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 17:50:33,399 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:50:33,399 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:50:33,594 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 17:50:33,595 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 17:50:33,596 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 17:50:33,597 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 17:50:33,805 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 17:50:33,806 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:50:33,807 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:50:33,807 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:50:33,808 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:50:33,809 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 17:50:33,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 17:50:33,811 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:50:34,004 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:50:34,005 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:50:34,009 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:50:34,010 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 17:50:34,010 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:50:34,011 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:50:34,638 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 17:50:34,640 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 17:50:34,642 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 17:50:34,642 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 17:50:34,809 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:50:34,810 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:50:34,811 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:50:34,812 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:50:35,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 17:50:35,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 17:50:35,009 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 17:50:35,010 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 17:50:35,205 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 17:50:35,206 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 17:50:35,207 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 17:50:35,208 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 17:50:35,209 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 17:50:35,210 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 17:50:35,210 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:50:35,211 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 17:50:35,404 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-25 17:50:35,405 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 17:50:35,406 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 17:50:35,407 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 17:50:35,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 17:50:35,610 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 17:50:35,611 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 17:50:35,612 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:50:35,612 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:50:35,613 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:50:35,614 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 17:50:35,615 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-25 17:50:35,804 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 17:50:35,810 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 17:50:35,811 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 17:50:35,812 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 17:50:35,813 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 17:50:36,004 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:50:36,007 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 117].
2019-07-25 17:50:36,008 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 17:50:36,009 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 17:50:36,204 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 17:50:36,206 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 17:50:36,207 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:50:36,207 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 17:50:36,405 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:50:36,406 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:50:36,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 17:50:36,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 17:50:36,408 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:50:36,409 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 17:50:36,410 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 17:50:36,608 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 17:50:36,610 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 17:50:36,712 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 17:50:36,717 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 17:50:36,723 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:50:36,724 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:50:36,726 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:50:36,728 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 17:50:36,804 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 105].
2019-07-25 17:50:36,805 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 17:50:36,806 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 17:50:36,807 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 17:50:37,004 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 17:50:37,005 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:50:37,006 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:50:37,007 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:50:37,013 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:50:37,014 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 17:50:37,015 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 17:50:37,016 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 17:50:37,204 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:50:37,205 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:50:37,206 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 17:50:37,207 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:50:37,211 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 109].
2019-07-25 17:50:37,404 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 17:50:37,405 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 17:50:37,406 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 17:50:37,407 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 17:50:37,408 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:50:37,408 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:50:37,409 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:50:37,604 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:50:37,605 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 17:50:37,606 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 17:50:37,607 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:50:37,608 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 17:50:37,608 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 17:50:37,609 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 17:50:37,610 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:50:37,809 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 113].
2019-07-25 17:50:37,810 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 17:50:37,811 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 17:50:37,812 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 17:50:38,004 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 17:50:38,005 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:50:38,006 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:50:38,007 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:50:38,007 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:50:38,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 17:50:38,009 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 17:50:38,009 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:50:38,205 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 17:50:38,206 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 17:50:38,207 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 17:50:38,208 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 17:50:38,210 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:50:38,211 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:50:38,212 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:50:38,404 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:51:03,366 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:51:03,401 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:51:03,405 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:51:03,405 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:53:29,270 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:53:29,277 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:53:29,303 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:53:29,312 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:53:31,907 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:53:31,910 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:53:31,912 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:53:31,913 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:53:32,046 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:53:32,046 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 17:53:32,047 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:53:32,047 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:57:18,695 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 17:57:18,727 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 17:57:18,738 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 17:57:18,740 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 17:57:18,742 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 17:57:18,743 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 17:57:18,744 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 17:57:18,744 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 17:57:18,745 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 17:57:18,746 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 17:57:18,746 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:57:18,747 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 17:57:18,748 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 17:57:18,748 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 17:57:18,939 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 17:57:18,942 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 17:57:18,943 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 17:57:18,944 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-25 17:57:18,950 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 17:57:18,951 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 17:57:18,974 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 17:57:18,975 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 17:57:18,976 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 17:57:19,129 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 17:57:19,129 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 17:57:19,130 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 17:57:19,131 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 17:57:19,143 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 17:57:19,144 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 17:57:19,145 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 17:57:19,146 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 17:57:19,146 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 17:57:19,328 [Thread: 10      ] [DEBUG] -- Found 18 <object> elements defining objects.
2019-07-25 17:57:19,329 [Thread: 10      ] [DEBUG] -- Loaded 18 object definitions from location [spring-objects.xml]
2019-07-25 17:57:19,329 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 17:57:19,330 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 17:57:19,332 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 17:57:19,332 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 17:57:19,333 [Thread: 10      ] [DEBUG] -- 18 objects defined in application context [spring.root].
2019-07-25 17:57:19,333 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 17:57:19,544 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:57:19,546 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 17:57:19,547 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 17:57:19,549 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 17:57:19,550 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 17:57:19,551 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 17:57:19,553 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 17:57:19,733 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 17:57:19,735 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 17:57:19,736 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 17:57:19,738 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 17:57:19,739 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 17:57:19,937 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 17:57:19,941 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 17:57:19,943 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 17:57:19,946 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 17:57:19,948 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 17:57:19,950 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:57:19,951 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 17:57:19,953 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 17:57:20,134 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 17:57:20,136 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 17:57:20,137 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 17:57:20,139 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 17:57:20,334 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 17:57:20,335 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 17:57:20,337 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:57:20,339 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:57:20,341 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:57:20,343 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:57:20,345 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 17:57:20,534 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 17:57:20,537 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 17:57:20,539 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 17:57:20,541 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 17:57:20,543 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 17:57:20,544 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 17:57:20,734 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:57:20,735 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:57:20,737 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 17:57:20,739 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 17:57:20,741 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-25 17:57:20,932 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-25 17:57:36,572 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-25 17:57:36,573 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-25 17:57:36,573 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-25 17:57:36,574 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-25 17:57:36,574 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 17:57:36,575 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 17:57:36,575 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 17:57:36,576 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:57:36,600 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:57:36,601 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-25 17:57:36,601 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 17:57:36,602 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 17:57:36,800 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 17:57:36,804 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 17:57:36,805 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 17:57:36,808 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 17:57:36,808 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 17:57:36,809 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 17:57:36,811 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 17:57:37,000 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 17:57:37,001 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 17:57:37,007 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 17:57:37,007 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 17:57:37,012 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-25 17:57:37,013 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 17:57:37,018 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-25 17:57:37,200 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 17:57:37,219 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 17:57:37,248 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 17:57:37,249 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 17:57:37,250 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 17:57:37,250 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:57:37,251 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:57:37,252 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 17:57:37,400 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 17:57:37,401 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 17:57:37,401 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 17:57:37,402 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 17:57:37,600 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 17:57:37,612 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 17:57:37,613 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 17:57:37,613 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 17:57:37,614 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-25 17:57:37,800 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 17:57:37,811 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:57:37,817 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:57:37,819 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 17:57:38,000 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 17:57:38,002 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 17:57:38,002 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 17:57:38,003 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 17:57:38,003 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:57:38,004 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:57:38,004 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:57:38,200 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:57:38,201 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 17:57:38,202 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 17:57:38,202 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 17:57:38,203 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:57:38,203 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:57:38,207 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 17:57:38,400 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 17:57:38,401 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 17:57:38,401 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 17:57:38,930 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 17:57:38,931 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 17:57:38,935 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 17:57:38,936 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 17:57:39,132 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:57:39,133 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:57:39,135 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:57:39,136 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:57:39,322 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 17:57:39,324 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 17:57:39,326 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 17:57:39,327 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 17:57:39,521 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 17:57:39,523 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 17:57:39,523 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 17:57:39,524 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 17:57:39,525 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 17:57:39,526 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 17:57:39,526 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:57:39,527 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 17:57:39,720 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-25 17:57:39,721 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 17:57:39,722 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 17:57:39,722 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 17:57:39,723 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 17:57:39,920 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 17:57:39,921 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 17:57:39,921 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:57:39,922 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 17:57:39,923 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:57:39,923 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 17:57:39,924 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-25 17:57:40,121 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 17:57:40,126 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 17:57:40,127 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 17:57:40,135 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 17:57:40,136 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 17:57:40,325 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:57:40,325 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 117].
2019-07-25 17:57:40,326 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 17:57:40,327 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 17:57:40,520 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 17:57:40,521 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 17:57:40,522 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:57:40,522 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 17:57:40,523 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:57:40,524 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:57:40,525 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 17:57:40,720 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 17:57:40,721 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 17:57:40,721 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 17:57:40,722 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 17:57:40,723 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 17:57:40,724 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 17:57:40,795 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 17:57:40,796 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 17:57:40,920 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:57:40,921 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:57:40,922 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:57:40,922 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 17:57:40,923 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 105].
2019-07-25 17:57:41,120 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 17:57:41,121 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 17:57:41,122 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 17:57:41,123 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 17:57:41,123 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:57:41,124 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:57:41,125 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:57:41,320 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:57:41,321 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 17:57:41,322 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 17:57:41,323 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 17:57:41,324 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:57:41,325 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:57:41,326 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 17:57:41,326 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:57:41,520 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 109].
2019-07-25 17:57:41,521 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 17:57:41,522 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 17:57:41,526 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 17:57:41,726 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 17:57:41,727 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:57:41,728 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:57:41,729 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:57:41,729 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:57:41,730 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 17:57:41,736 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 17:57:41,737 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 17:57:41,920 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 17:57:41,921 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 17:57:41,921 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 17:57:41,922 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:57:41,923 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 113].
2019-07-25 17:57:42,120 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 17:57:42,121 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 17:57:42,122 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 17:57:42,122 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 17:57:42,123 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 17:57:42,123 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 17:57:42,124 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 17:57:42,320 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 17:57:42,321 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 17:57:42,322 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 17:57:42,323 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 17:57:42,323 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 17:57:42,324 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 17:57:42,325 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 17:57:42,521 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 17:57:42,522 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 17:57:42,522 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 17:57:42,523 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 17:57:42,523 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 17:58:20,877 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:58:20,901 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:58:20,932 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:58:20,938 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:59:00,617 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:59:00,622 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:59:00,623 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:59:00,623 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:59:20,123 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 17:59:20,123 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 17:59:20,124 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 17:59:20,125 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 17:59:20,271 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 17:59:20,272 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 17:59:20,272 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 17:59:20,273 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 18:13:32,278 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 18:13:32,317 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 18:13:32,325 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 18:13:32,329 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 18:13:32,331 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 18:13:32,332 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 18:13:32,333 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 18:13:32,334 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 18:13:32,335 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 18:13:32,336 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 18:13:32,336 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 18:13:32,337 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 18:13:32,511 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 18:13:32,512 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 18:13:32,523 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 18:13:32,526 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 18:13:32,526 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 18:13:32,527 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-25 18:13:32,536 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 18:13:32,541 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 18:13:32,542 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 18:13:32,543 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 18:13:32,711 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 18:13:32,712 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 18:13:32,713 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 18:13:32,714 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 18:13:32,715 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 18:13:32,724 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 18:13:32,725 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 18:13:32,726 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 18:13:32,911 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 18:13:32,912 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 18:13:32,913 [Thread: 10      ] [DEBUG] -- Found 18 <object> elements defining objects.
2019-07-25 18:13:32,913 [Thread: 10      ] [DEBUG] -- Loaded 18 object definitions from location [spring-objects.xml]
2019-07-25 18:13:32,914 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 18:13:32,915 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 18:13:32,916 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 18:13:32,917 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 18:13:32,918 [Thread: 10      ] [DEBUG] -- 18 objects defined in application context [spring.root].
2019-07-25 18:13:33,111 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 18:13:33,133 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 18:13:33,135 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 18:13:33,137 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 18:13:33,139 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 18:13:33,140 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 18:13:33,141 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 18:13:33,316 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 18:13:33,317 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 18:13:33,319 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 18:13:33,320 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 18:13:33,516 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 18:13:33,517 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 18:13:33,522 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 18:13:33,524 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 18:13:33,525 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 18:13:33,526 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 18:13:33,527 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 18:13:33,532 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 18:13:33,714 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 18:13:33,715 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 18:13:33,731 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 18:13:33,733 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 18:13:33,734 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 18:13:33,914 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 18:13:33,915 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 18:13:33,915 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 18:13:33,916 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 18:13:33,917 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 18:13:33,917 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 18:13:33,918 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 18:13:33,918 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 18:13:34,114 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 18:13:34,115 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 18:13:34,115 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 18:13:34,116 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 18:13:34,116 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 18:13:34,314 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 18:13:34,315 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 18:13:34,315 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 18:13:34,316 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 18:13:34,316 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 18:13:34,317 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-25 18:13:34,517 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-25 18:13:34,518 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-25 18:13:34,518 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-25 18:13:34,519 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-25 18:13:34,519 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-25 18:13:34,714 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 18:13:34,715 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 18:13:34,715 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 18:13:34,716 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:13:34,717 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 18:13:34,717 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-25 18:13:34,914 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 18:13:34,915 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 18:13:34,916 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 18:13:34,919 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 18:13:34,920 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 18:13:34,923 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 18:13:35,114 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 18:13:35,115 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 18:13:35,116 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 18:13:35,117 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 18:13:35,118 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 18:13:35,118 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 18:13:35,119 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 18:13:35,315 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-25 18:13:35,317 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 18:13:35,318 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-25 18:13:35,320 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 18:13:35,321 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 18:13:35,370 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 18:13:35,371 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 18:13:35,515 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 18:13:35,517 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:13:35,519 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:13:35,521 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 18:13:35,522 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 18:13:35,524 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 18:13:35,715 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 18:13:35,717 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 18:13:35,719 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 18:13:35,720 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 18:13:35,722 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 18:13:35,722 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 18:13:35,916 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-25 18:13:35,917 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 18:13:35,923 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 18:13:35,925 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 18:13:36,116 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 18:13:36,117 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 18:13:36,121 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 18:13:36,134 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 18:13:36,314 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 18:13:36,315 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:13:36,315 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:13:36,316 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:13:36,316 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:13:36,317 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 18:13:36,318 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 18:13:36,318 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 18:13:36,514 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 18:13:36,515 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 18:13:36,518 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 18:13:36,519 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 18:13:36,520 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 18:13:36,520 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 18:13:37,121 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 18:13:37,124 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 18:13:37,125 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 18:13:37,126 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 18:13:37,344 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:13:37,344 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:13:37,345 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:13:37,346 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:13:37,515 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 18:13:37,517 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 18:13:37,518 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 18:13:37,518 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 18:13:37,715 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 18:13:37,716 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 18:13:37,717 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 18:13:37,717 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 18:13:37,718 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 18:13:37,718 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 18:13:37,719 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 18:13:37,719 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 18:13:37,914 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-25 18:13:37,915 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 18:13:37,916 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 18:13:37,917 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 18:13:37,917 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 18:13:38,114 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 18:13:38,115 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 18:13:38,115 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 18:13:38,116 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 18:13:38,117 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:13:38,117 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 18:13:38,118 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-25 18:13:38,314 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 18:13:38,319 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 18:13:38,332 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 18:13:38,333 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 18:13:38,337 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 18:13:38,514 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 18:13:38,515 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 117].
2019-07-25 18:13:38,516 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 18:13:38,517 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 18:13:38,714 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 18:13:38,715 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 18:13:38,715 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:13:38,716 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 18:13:38,716 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:13:38,717 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:13:38,718 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 18:13:38,914 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 18:13:38,915 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 18:13:38,915 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 18:13:38,916 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 18:13:38,918 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 18:13:38,918 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 18:13:38,968 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 18:13:38,969 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 18:13:39,114 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:13:39,115 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:13:39,116 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:13:39,116 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 18:13:39,117 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 105].
2019-07-25 18:13:39,314 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 18:13:39,315 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 18:13:39,316 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 18:13:39,316 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 18:13:39,317 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:13:39,317 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:13:39,318 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:13:39,514 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:13:39,515 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 18:13:39,516 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 18:13:39,517 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 18:13:39,517 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:13:39,518 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:13:39,519 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 18:13:39,519 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 18:13:39,714 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 109].
2019-07-25 18:13:39,715 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 18:13:39,715 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 18:13:39,716 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 18:13:39,914 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 18:13:39,915 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:13:39,915 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:13:39,916 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:13:39,916 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:13:39,917 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 18:13:39,918 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 18:13:39,918 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 18:13:40,114 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 18:13:40,115 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 18:13:40,116 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 18:13:40,116 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 18:13:40,117 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 113].
2019-07-25 18:13:40,314 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 18:13:40,315 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 18:13:40,316 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 18:13:40,316 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 18:13:40,317 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:13:40,318 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:13:40,318 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:13:40,515 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:13:40,517 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 18:13:40,518 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 18:13:40,520 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 18:13:40,522 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 18:13:40,523 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 18:13:40,526 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 18:13:40,716 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 18:13:40,725 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:13:40,727 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:13:40,729 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:13:40,730 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:14:08,033 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:14:08,034 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 18:14:08,035 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:14:08,035 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:15:32,105 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:15:32,106 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 18:15:32,107 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:15:32,107 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:21:24,093 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:21:24,094 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 18:21:24,095 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:21:24,096 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:21:24,435 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 18:21:24,446 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 18:21:24,447 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 18:21:24,447 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 18:34:17,241 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 18:34:17,271 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 18:34:17,280 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 18:34:17,284 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 18:34:17,286 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 18:34:17,287 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 18:34:17,288 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 18:34:17,288 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 18:34:17,289 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 18:34:17,290 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 18:34:17,290 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 18:34:17,291 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 18:34:17,464 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 18:34:17,469 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 18:34:17,481 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 18:34:17,483 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 18:34:17,484 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 18:34:17,485 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-25 18:34:17,490 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 18:34:17,491 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 18:34:17,492 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 18:34:17,493 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 18:34:17,664 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 18:34:17,665 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 18:34:17,666 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 18:34:17,667 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 18:34:17,668 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 18:34:17,680 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 18:34:17,693 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 18:34:17,694 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 18:34:17,864 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 18:34:17,865 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 18:34:17,866 [Thread: 10      ] [DEBUG] -- Found 18 <object> elements defining objects.
2019-07-25 18:34:17,867 [Thread: 10      ] [DEBUG] -- Loaded 18 object definitions from location [spring-objects.xml]
2019-07-25 18:34:17,867 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 18:34:17,868 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 18:34:17,870 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 18:34:17,871 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 18:34:17,872 [Thread: 10      ] [DEBUG] -- 18 objects defined in application context [spring.root].
2019-07-25 18:34:18,064 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 18:34:18,080 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 18:34:18,083 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 18:34:18,085 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 18:34:18,087 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 18:34:18,088 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 18:34:18,091 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 18:34:18,265 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 18:34:18,266 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 18:34:18,268 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 18:34:18,269 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 18:34:18,466 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 18:34:18,471 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 18:34:18,474 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 18:34:18,475 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 18:34:18,476 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 18:34:18,478 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 18:34:18,479 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 18:34:18,480 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 18:34:18,664 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 18:34:18,665 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 18:34:18,666 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 18:34:18,667 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 18:34:18,668 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 18:34:18,864 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 18:34:18,865 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 18:34:18,866 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 18:34:18,867 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 18:34:18,868 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 18:34:18,869 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 18:34:18,876 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 18:34:18,878 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 18:34:19,064 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 18:34:19,065 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 18:34:19,066 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 18:34:19,067 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 18:34:19,068 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 18:34:19,265 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 18:34:19,267 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 18:34:19,269 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 18:34:19,271 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 18:34:19,273 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 18:34:19,274 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-25 18:34:19,465 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-25 18:34:19,468 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-25 18:34:19,470 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-25 18:34:19,471 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-25 18:34:19,473 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-25 18:34:19,668 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 18:34:19,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 18:34:19,671 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 18:34:19,672 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:34:19,674 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 18:34:19,675 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-25 18:34:19,868 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 18:34:19,870 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 18:34:19,871 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 18:34:19,880 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 18:34:19,882 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 18:34:19,891 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 18:34:20,071 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 18:34:20,073 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 18:34:20,078 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 18:34:20,080 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 18:34:20,082 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 18:34:20,083 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 18:34:20,085 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 18:34:20,269 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-25 18:34:20,274 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 18:34:20,275 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-25 18:34:20,276 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 18:34:20,277 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 18:34:20,304 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 18:34:20,306 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 18:34:20,469 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 18:34:20,470 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:34:20,471 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:34:20,473 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 18:34:20,473 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 18:34:20,474 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 18:34:20,669 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 18:34:20,670 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 18:34:20,671 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 18:34:20,671 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 18:34:20,672 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 18:34:20,672 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 18:34:20,869 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-25 18:34:20,874 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 18:34:20,876 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 18:34:20,877 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 18:34:21,069 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 18:34:21,075 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 18:34:21,080 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 18:34:21,085 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 18:34:21,269 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 18:34:21,270 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:34:21,271 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:34:21,272 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:34:21,272 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:34:21,273 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 18:34:21,274 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 18:34:21,275 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 18:34:21,469 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 18:34:21,470 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 18:34:21,474 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 18:34:21,479 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 18:34:21,479 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 18:34:21,480 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 18:34:22,122 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 18:34:22,125 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 18:34:22,126 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 18:34:22,127 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 18:34:22,269 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:34:22,281 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:34:22,283 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:34:22,285 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:34:22,479 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 18:34:22,480 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 18:34:22,481 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 18:34:22,482 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 18:34:22,671 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 18:34:22,672 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 18:34:22,673 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 18:34:22,673 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 18:34:22,674 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 18:34:22,675 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 18:34:22,675 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 18:34:22,676 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 18:34:22,870 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-25 18:34:22,871 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 18:34:22,872 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 18:34:22,873 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 18:34:22,874 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 18:34:23,070 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 18:34:23,071 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 18:34:23,072 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 18:34:23,073 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 18:34:23,073 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:34:23,074 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 18:34:23,075 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-25 18:34:23,270 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 18:34:23,276 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 18:34:23,277 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 18:34:23,278 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 18:34:23,279 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 18:34:23,470 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 18:34:23,471 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 117].
2019-07-25 18:34:23,472 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 18:34:23,473 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 18:34:23,670 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 18:34:23,671 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 18:34:23,672 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:34:23,673 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 18:34:23,674 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:34:23,675 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:34:23,676 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 18:34:23,870 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 18:34:23,871 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 18:34:23,872 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 18:34:23,873 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 18:34:23,875 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 18:34:23,876 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 18:34:23,934 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 18:34:23,936 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 18:34:24,070 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:34:24,071 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:34:24,072 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:34:24,072 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 18:34:24,073 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 105].
2019-07-25 18:34:24,270 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 18:34:24,275 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 18:34:24,276 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 18:34:24,277 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 18:34:24,278 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:34:24,279 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:34:24,279 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:34:24,471 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:34:24,473 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 18:34:24,475 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 18:34:24,476 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 18:34:24,477 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:34:24,479 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:34:24,480 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 18:34:24,481 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 18:34:24,672 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 109].
2019-07-25 18:34:24,673 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 18:34:24,682 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 18:34:24,686 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 18:34:24,885 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 18:34:24,887 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:34:24,889 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:34:24,890 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:34:24,892 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:34:24,893 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 18:34:24,893 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 18:34:25,070 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 18:34:25,071 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 18:34:25,072 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 18:34:25,072 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 18:34:25,073 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 18:34:25,074 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 113].
2019-07-25 18:34:25,270 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 18:34:25,271 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 18:34:25,272 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 18:34:25,273 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 18:34:25,274 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:34:25,470 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:34:25,471 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:34:25,472 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:34:25,473 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 18:34:25,474 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 18:34:25,474 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 18:34:25,475 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 18:34:25,476 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 18:34:25,671 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 18:34:25,672 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 18:34:25,673 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:34:25,674 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:34:25,675 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:34:25,676 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:34:30,150 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:34:30,151 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 18:34:30,152 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:34:30,152 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:34:58,616 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:34:58,617 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 18:34:58,617 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:34:58,618 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:34:58,760 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 18:34:58,761 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 18:34:58,762 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 18:34:58,762 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 18:37:05,623 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-25 18:37:05,659 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-25 18:37:05,669 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-25 18:37:05,672 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-25 18:37:05,674 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-25 18:37:05,675 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-25 18:37:05,676 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-25 18:37:05,676 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-25 18:37:05,677 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-25 18:37:05,678 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 18:37:05,679 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 18:37:05,680 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-25 18:37:05,835 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-25 18:37:05,840 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-25 18:37:05,856 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-25 18:37:05,862 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-25 18:37:05,867 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-25 18:37:05,873 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-25 18:37:05,878 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-25 18:37:05,879 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-25 18:37:05,881 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-25 18:37:05,881 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-25 18:37:06,035 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-25 18:37:06,036 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-25 18:37:06,037 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-25 18:37:06,038 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-25 18:37:06,038 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-25 18:37:06,049 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-25 18:37:06,050 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-25 18:37:06,051 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-25 18:37:06,235 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-25 18:37:06,241 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-25 18:37:06,248 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-25 18:37:06,253 [Thread: 10      ] [DEBUG] -- Found 19 <object> elements defining objects.
2019-07-25 18:37:06,258 [Thread: 10      ] [DEBUG] -- Loaded 19 object definitions from location [spring-objects.xml]
2019-07-25 18:37:06,262 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-25 18:37:06,263 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-25 18:37:06,264 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-25 18:37:06,265 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-25 18:37:06,435 [Thread: 10      ] [DEBUG] -- 19 objects defined in application context [spring.root].
2019-07-25 18:37:06,436 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-25 18:37:06,448 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-25 18:37:06,452 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-25 18:37:06,453 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-25 18:37:06,456 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-25 18:37:06,457 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-25 18:37:06,636 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-25 18:37:06,642 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-25 18:37:06,648 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-25 18:37:06,655 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-25 18:37:06,661 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-25 18:37:06,837 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-25 18:37:06,842 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-25 18:37:06,849 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-25 18:37:06,855 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-25 18:37:06,860 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-25 18:37:06,863 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-25 18:37:06,864 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-25 18:37:07,036 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 18:37:07,038 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-25 18:37:07,040 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-25 18:37:07,041 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-25 18:37:07,043 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-25 18:37:07,237 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-25 18:37:07,238 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-25 18:37:07,240 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-25 18:37:07,242 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-25 18:37:07,244 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 18:37:07,246 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 18:37:07,248 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 18:37:07,250 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-25 18:37:07,437 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-25 18:37:07,438 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-25 18:37:07,452 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-25 18:37:07,454 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-25 18:37:07,456 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-25 18:37:07,636 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-25 18:37:07,637 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-25 18:37:07,637 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 18:37:07,638 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 18:37:07,639 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 18:37:07,640 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 18:37:07,641 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-25 18:37:07,835 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-25 18:37:07,836 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-25 18:37:07,837 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-25 18:37:07,838 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-25 18:37:08,035 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-25 18:37:08,045 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-25 18:37:08,047 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 18:37:08,047 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 18:37:08,048 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:37:08,049 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 18:37:08,050 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-25 18:37:08,235 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-25 18:37:08,236 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-25 18:37:08,237 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-25 18:37:08,244 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-25 18:37:08,246 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-25 18:37:08,435 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-25 18:37:08,436 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-25 18:37:08,437 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-25 18:37:08,439 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-25 18:37:08,440 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-25 18:37:08,441 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-25 18:37:08,441 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-25 18:37:08,635 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-25 18:37:08,636 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-25 18:37:08,636 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-25 18:37:08,637 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-25 18:37:08,638 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-25 18:37:08,638 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-25 18:37:08,667 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-25 18:37:08,835 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-25 18:37:08,836 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-25 18:37:08,837 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:37:08,837 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:37:08,838 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 18:37:08,839 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-25 18:37:08,839 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-25 18:37:09,035 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-25 18:37:09,036 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-25 18:37:09,037 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-25 18:37:09,038 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-25 18:37:09,039 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-25 18:37:09,235 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-25 18:37:09,236 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-25 18:37:09,237 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-25 18:37:09,239 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 18:37:09,435 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-25 18:37:09,436 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-25 18:37:09,436 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-25 18:37:09,437 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-25 18:37:09,635 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-25 18:37:09,636 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-25 18:37:09,637 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:37:09,637 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:37:09,638 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:37:09,638 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:37:09,639 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-25 18:37:09,640 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-25 18:37:09,835 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-25 18:37:09,836 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 18:37:09,837 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 18:37:09,840 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-25 18:37:09,841 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-25 18:37:09,842 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-25 18:37:09,843 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-25 18:37:10,543 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-25 18:37:10,544 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-25 18:37:10,546 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-25 18:37:10,547 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-25 18:37:10,766 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:37:10,767 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:37:10,933 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:37:10,933 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:37:10,934 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-25 18:37:10,935 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-25 18:37:10,936 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-25 18:37:11,130 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-25 18:37:11,132 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-25 18:37:11,133 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-25 18:37:11,134 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-25 18:37:11,135 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-25 18:37:11,136 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 18:37:11,137 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 18:37:11,137 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 18:37:11,330 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-25 18:37:11,331 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-25 18:37:11,332 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-25 18:37:11,333 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-25 18:37:11,334 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-25 18:37:11,530 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-25 18:37:11,531 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-25 18:37:11,531 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-25 18:37:11,532 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 18:37:11,533 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-25 18:37:11,533 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:37:11,534 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-25 18:37:11,535 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-25 18:37:11,731 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-25 18:37:11,738 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-25 18:37:11,739 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-25 18:37:11,740 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-25 18:37:11,931 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-25 18:37:11,933 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-25 18:37:11,935 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.ControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-25 18:37:11,937 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-25 18:37:12,131 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-25 18:37:12,131 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-25 18:37:12,132 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-25 18:37:12,133 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:37:12,134 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 18:37:12,135 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:37:12,330 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:37:12,331 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-25 18:37:12,332 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-25 18:37:12,333 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-25 18:37:12,334 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-25 18:37:12,335 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-25 18:37:12,336 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-25 18:37:12,530 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-25 18:37:12,531 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 18:37:12,532 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-25 18:37:12,533 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-25 18:37:12,730 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-25 18:37:12,737 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-25 18:37:12,738 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-25 18:37:12,739 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:37:12,740 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-25 18:37:12,741 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:37:12,741 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:37:12,930 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-25 18:37:12,931 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-25 18:37:12,932 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-25 18:37:12,933 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-25 18:37:12,933 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-25 18:37:12,935 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-25 18:37:12,936 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-25 18:37:12,992 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-25 18:37:13,130 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-25 18:37:13,131 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:37:13,132 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:37:13,132 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:37:13,133 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-25 18:37:13,133 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 106].
2019-07-25 18:37:13,330 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-25 18:37:13,331 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-25 18:37:13,332 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-25 18:37:13,333 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-25 18:37:13,334 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:37:13,334 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:37:13,533 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:37:13,533 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:37:13,534 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-25 18:37:13,535 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-25 18:37:13,536 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-25 18:37:13,537 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:37:13,537 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:37:13,538 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-25 18:37:13,732 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-25 18:37:13,733 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-25 18:37:13,734 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-25 18:37:13,735 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-25 18:37:13,932 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-25 18:37:13,933 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-25 18:37:13,934 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:37:13,934 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:37:13,935 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:37:13,935 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:37:13,936 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-25 18:37:13,937 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-25 18:37:14,132 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-25 18:37:14,133 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-25 18:37:14,134 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-25 18:37:14,135 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-25 18:37:14,136 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 18:37:14,137 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-25 18:37:14,332 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-25 18:37:14,334 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-25 18:37:14,335 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-25 18:37:14,336 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-25 18:37:14,337 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-25 18:37:14,532 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-25 18:37:14,533 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-25 18:37:14,534 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-25 18:37:14,537 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-25 18:37:14,538 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-25 18:37:14,539 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-25 18:37:14,539 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-25 18:37:14,540 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-25 18:37:14,733 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-25 18:37:14,734 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-25 18:37:14,735 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-25 18:37:14,740 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-25 18:37:14,741 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-25 18:37:14,741 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-25 18:37:21,649 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:37:21,653 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 18:37:21,654 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:37:21,656 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:37:21,834 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-25 18:37:21,835 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-25 18:37:21,836 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-25 18:37:21,836 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-25 18:37:22,240 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:37:22,241 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 18:37:22,245 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:37:22,246 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:38:04,394 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-25 18:38:04,400 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-25 18:38:04,402 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-25 18:38:04,403 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-25 18:38:04,548 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-25 18:38:04,549 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-25 18:38:04,550 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-25 18:38:04,550 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
