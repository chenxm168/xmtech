2019-07-17 16:29:19,257 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 16:29:19,295 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 16:29:19,304 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 16:29:19,307 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-17 16:29:19,310 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-17 16:29:19,311 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 16:29:19,312 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 16:29:19,313 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-17 16:29:19,315 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-17 16:29:19,316 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 16:29:19,317 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:29:19,318 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 16:29:19,489 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 16:29:19,492 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:29:19,524 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 16:29:19,532 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 16:29:19,534 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 16:29:19,536 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 16:29:19,543 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 16:29:19,544 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 16:29:19,545 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 16:29:19,548 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 16:29:19,688 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 16:29:19,691 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 16:29:19,694 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 16:29:19,695 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 16:29:19,697 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 16:29:19,707 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 16:29:19,708 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 16:29:19,711 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 16:29:19,889 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 16:29:19,893 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 16:29:19,896 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 16:29:19,900 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 16:29:19,903 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 16:29:19,909 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 16:29:19,912 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 16:29:19,915 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 16:29:19,918 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 16:29:20,119 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:29:20,130 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:29:20,132 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 16:29:20,136 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 16:29:20,139 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 16:29:20,141 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 16:29:20,143 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:29:20,293 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 16:29:20,301 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 16:29:20,306 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 16:29:20,316 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 16:29:20,490 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 16:29:20,499 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 16:29:20,505 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 16:29:20,509 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 16:29:20,514 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:29:20,518 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:29:20,521 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:29:20,524 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:29:20,688 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 16:29:20,690 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 16:29:20,692 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 16:29:20,694 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 16:29:20,703 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 16:29:20,890 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:29:20,893 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 16:29:20,896 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:29:20,898 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:29:20,955 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 16:29:20,956 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 16:29:20,957 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:29:21,088 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:29:21,091 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:29:21,094 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:29:21,097 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:29:21,100 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 16:29:21,288 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 16:29:21,293 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 16:29:21,296 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 16:29:21,299 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 16:29:21,302 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:29:21,305 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:29:21,308 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:29:21,488 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:29:21,497 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 16:29:21,499 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 16:29:21,501 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:29:21,503 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:29:21,505 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:29:21,507 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:29:21,694 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 16:29:21,697 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 16:29:21,700 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 16:29:21,707 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:29:21,894 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:29:21,897 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:29:21,900 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:29:21,913 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:29:21,915 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:29:21,917 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:29:21,919 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:29:22,397 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 16:29:22,493 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 16:29:22,495 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 16:29:22,497 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 16:29:22,500 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:29:22,502 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:29:22,504 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:29:22,692 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:29:22,694 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 16:29:22,695 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 16:29:22,700 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 16:29:22,701 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:29:22,704 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:29:22,705 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:29:22,706 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:29:22,894 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 16:29:22,897 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 16:29:22,953 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 16:29:22,955 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 16:29:22,956 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 16:29:23,093 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 16:29:23,094 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 16:29:23,096 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:29:23,098 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:29:23,099 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:29:23,101 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:29:23,103 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 16:29:23,105 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 16:29:23,293 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 16:29:23,296 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 16:29:23,300 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:29:23,303 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 16:29:23,494 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:29:23,497 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:29:23,558 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 16:29:23,559 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 16:29:23,560 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 16:29:23,562 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 16:29:23,693 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 16:29:23,695 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 16:29:23,698 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:29:23,700 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:29:23,703 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:29:23,706 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 16:29:23,708 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 16:29:23,894 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 16:29:23,897 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 16:29:23,900 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 16:29:23,903 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 16:29:23,907 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:29:24,094 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:29:24,097 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:29:24,100 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:29:24,104 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 16:29:24,106 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 16:29:24,109 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 16:29:24,111 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:29:24,133 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:29:24,294 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 16:29:24,296 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:29:24,299 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 16:29:24,305 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 16:29:24,309 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 16:29:24,494 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 16:29:24,498 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 16:29:24,502 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:29:24,505 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:29:24,508 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:29:24,511 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:29:24,518 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 16:29:24,694 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 16:29:24,697 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:29:24,700 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 16:29:24,703 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 16:29:24,705 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:29:24,708 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 16:29:24,710 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 16:29:24,893 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 16:29:24,897 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 16:29:24,899 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 16:29:24,902 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 16:29:24,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 16:29:24,908 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 16:29:25,093 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:29:25,095 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:29:25,097 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:29:25,099 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 16:29:25,100 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 16:29:25,294 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 16:29:25,312 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 16:29:25,315 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 16:29:25,318 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 16:29:25,321 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 16:29:25,324 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:29:25,327 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 16:29:25,494 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 16:29:25,498 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 16:29:25,501 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 16:29:25,505 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 16:29:25,694 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:29:25,698 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 16:29:25,701 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:29:25,705 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:29:25,718 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 16:29:25,721 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 16:29:25,724 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:29:25,892 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 16:29:25,903 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 16:29:25,906 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 16:29:25,907 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 16:29:26,208 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 16:29:26,211 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 16:29:26,212 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:29:26,214 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:29:26,216 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 16:29:26,217 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:29:26,218 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 16:29:26,293 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 16:29:26,297 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 16:29:26,300 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 16:29:26,303 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 16:29:26,305 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:29:26,494 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:29:26,497 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:29:26,501 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:29:26,505 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 16:29:26,508 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 16:29:26,511 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:29:26,514 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 16:29:26,517 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 16:29:26,692 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 16:29:26,693 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:29:26,694 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 16:29:26,695 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 16:29:26,894 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 16:29:26,896 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 16:29:26,899 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 16:29:26,902 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:29:26,905 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:29:26,908 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:29:26,911 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:29:27,095 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 16:29:27,123 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 16:29:27,126 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:29:27,129 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 16:29:27,132 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 16:29:27,136 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 16:29:27,142 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 16:29:27,146 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:29:27,294 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:29:27,296 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:29:27,299 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:29:27,302 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:29:27,305 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 16:29:27,308 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:29:27,311 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:29:27,313 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:29:27,493 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 16:29:27,496 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:29:27,499 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:29:27,502 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:29:27,504 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:29:27,507 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:29:27,510 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:34:01,830 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 16:34:01,869 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 16:34:01,877 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 16:34:01,881 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-17 16:34:01,883 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-17 16:34:01,885 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 16:34:01,886 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 16:34:01,887 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-17 16:34:01,888 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-17 16:34:01,890 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 16:34:01,891 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:34:01,892 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 16:34:02,042 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 16:34:02,045 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:34:02,070 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 16:34:02,078 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 16:34:02,080 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 16:34:02,082 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 16:34:02,087 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 16:34:02,088 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 16:34:02,089 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 16:34:02,092 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 16:34:02,242 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 16:34:02,245 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 16:34:02,249 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 16:34:02,252 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 16:34:02,255 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 16:34:02,267 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 16:34:02,269 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 16:34:02,270 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 16:34:02,442 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 16:34:02,446 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 16:34:02,449 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 16:34:02,453 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 16:34:02,456 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 16:34:02,462 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 16:34:02,465 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 16:34:02,468 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 16:34:02,470 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 16:34:02,677 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:34:02,683 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:34:02,685 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 16:34:02,689 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 16:34:02,691 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 16:34:02,693 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 16:34:02,695 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:34:02,845 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 16:34:02,868 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 16:34:02,872 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 16:34:02,880 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 16:34:03,043 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 16:34:03,052 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 16:34:03,059 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 16:34:03,064 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 16:34:03,069 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:34:03,073 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:34:03,074 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:34:03,076 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:34:03,241 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 16:34:03,244 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 16:34:03,247 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 16:34:03,250 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 16:34:03,261 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 16:34:03,444 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:34:03,447 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 16:34:03,451 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:34:03,454 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:34:03,508 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 16:34:03,509 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 16:34:03,510 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:34:03,642 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:34:03,645 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:34:03,647 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:34:03,650 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:34:03,653 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 16:34:03,851 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 16:34:03,853 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 16:34:03,855 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 16:34:03,856 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 16:34:03,857 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:34:03,859 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:34:03,860 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:34:04,051 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:34:04,055 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 16:34:04,057 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 16:34:04,060 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:34:04,062 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:34:04,064 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:34:04,066 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:34:04,250 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 16:34:04,253 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 16:34:04,256 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 16:34:04,272 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:34:04,449 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:34:04,451 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:34:04,452 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:34:04,465 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:34:04,469 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:34:04,472 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:34:04,474 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:34:04,978 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 16:34:05,050 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 16:34:05,053 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 16:34:05,056 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 16:34:05,059 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:34:05,062 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:34:05,064 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:34:05,251 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:34:05,255 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 16:34:05,258 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 16:34:05,261 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 16:34:05,264 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:34:05,269 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:34:05,271 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:34:05,274 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:34:05,449 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 16:34:05,450 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 16:34:05,485 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 16:34:05,486 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 16:34:05,487 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 16:34:05,661 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 16:34:05,665 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 16:34:05,667 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:34:05,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:34:05,672 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:34:05,674 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:34:05,676 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 16:34:05,678 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 16:34:05,851 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 16:34:05,854 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 16:34:05,858 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:34:05,861 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 16:34:06,051 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:34:06,054 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:34:06,098 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 16:34:06,100 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 16:34:06,101 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 16:34:06,103 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 16:34:06,251 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 16:34:06,254 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 16:34:06,257 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:34:06,259 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:34:06,262 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:34:06,265 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 16:34:06,268 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 16:34:06,450 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 16:34:06,461 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 16:34:06,465 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 16:34:06,468 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 16:34:06,471 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:34:06,651 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:34:06,654 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:34:06,657 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:34:06,661 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 16:34:06,663 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 16:34:06,666 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 16:34:06,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:34:06,671 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:34:06,851 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 16:34:06,854 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:34:06,857 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 16:34:06,859 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 16:34:06,863 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 16:34:07,050 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 16:34:07,054 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 16:34:07,057 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:34:07,059 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:34:07,062 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:34:07,086 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:34:07,091 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 16:34:07,250 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 16:34:07,252 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:34:07,254 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 16:34:07,256 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 16:34:07,258 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:34:07,260 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 16:34:07,262 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 16:34:07,451 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 16:34:07,455 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 16:34:07,458 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 16:34:07,461 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 16:34:07,463 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 16:34:07,466 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 16:34:07,651 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:34:07,653 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:34:07,657 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:34:07,659 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 16:34:07,662 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 16:34:07,851 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 16:34:07,870 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 16:34:07,872 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 16:34:07,874 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 16:34:07,876 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 16:34:07,878 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:34:07,880 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 16:34:08,051 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 16:34:08,054 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 16:34:08,058 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 16:34:08,061 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 16:34:08,252 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:34:08,255 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 16:34:08,260 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:34:08,263 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:34:08,266 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 16:34:08,268 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 16:34:08,269 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:34:08,453 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 16:34:08,456 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 16:34:08,464 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 16:34:08,467 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 16:34:08,585 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 16:34:08,588 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 16:34:08,596 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:34:08,604 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:34:08,650 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 16:34:08,652 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:34:08,652 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 16:34:08,655 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 16:34:08,853 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 16:34:08,856 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 16:34:08,860 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 16:34:08,863 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:34:08,867 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:34:08,870 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:34:08,874 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:34:09,053 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 16:34:09,056 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 16:34:09,058 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:34:09,061 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 16:34:09,063 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 16:34:09,066 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 16:34:09,068 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:34:09,253 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 16:34:09,256 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 16:34:09,260 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 16:34:09,263 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 16:34:09,266 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 16:34:09,453 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:34:09,456 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:34:09,459 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:34:09,463 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:34:09,466 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 16:34:09,469 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 16:34:09,471 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:34:09,653 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 16:34:09,655 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 16:34:09,660 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 16:34:09,665 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 16:34:09,669 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:34:09,673 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:34:09,675 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:34:09,678 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:34:09,853 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:34:09,855 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 16:34:09,858 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:34:09,860 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:34:09,863 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:34:09,865 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 16:34:09,867 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:34:09,870 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:34:10,053 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:34:10,055 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:34:10,058 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:34:10,071 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:34:14,416 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:34:14,418 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:34:14,420 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:34:14,421 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:39:16,761 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 16:39:16,800 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 16:39:16,808 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 16:39:16,812 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-17 16:39:16,814 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-17 16:39:16,816 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 16:39:16,817 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 16:39:16,818 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-17 16:39:16,819 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-17 16:39:16,821 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 16:39:16,822 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:39:16,823 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 16:39:16,985 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 16:39:16,986 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:39:17,000 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 16:39:17,005 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 16:39:17,007 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 16:39:17,008 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 16:39:17,012 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 16:39:17,013 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 16:39:17,015 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 16:39:17,017 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 16:39:17,186 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 16:39:17,189 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 16:39:17,192 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 16:39:17,213 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 16:39:17,214 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 16:39:17,223 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 16:39:17,225 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 16:39:17,226 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 16:39:17,387 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 16:39:17,390 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 16:39:17,394 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 16:39:17,397 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 16:39:17,400 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 16:39:17,406 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 16:39:17,409 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 16:39:17,412 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 16:39:17,414 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 16:39:17,617 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:39:17,623 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:39:17,625 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 16:39:17,628 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 16:39:17,630 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 16:39:17,631 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 16:39:17,633 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:39:17,790 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 16:39:17,808 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 16:39:17,810 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 16:39:17,815 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 16:39:17,987 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 16:39:17,995 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 16:39:18,001 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 16:39:18,005 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 16:39:18,009 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:39:18,013 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:39:18,016 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:39:18,018 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:39:18,186 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 16:39:18,188 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 16:39:18,191 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 16:39:18,193 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 16:39:18,198 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 16:39:18,389 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:39:18,392 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 16:39:18,395 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:39:18,398 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:39:18,445 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 16:39:18,447 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 16:39:18,448 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:39:18,586 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:39:18,589 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:39:18,592 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:39:18,595 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:39:18,598 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 16:39:18,786 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 16:39:18,790 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 16:39:18,792 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 16:39:18,794 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 16:39:18,797 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:39:18,799 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:39:18,801 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:39:18,987 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:39:18,990 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 16:39:18,993 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 16:39:18,996 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:39:18,999 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:39:19,002 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:39:19,005 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:39:19,186 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 16:39:19,189 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 16:39:19,191 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 16:39:19,206 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:39:19,387 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:39:19,390 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:39:19,392 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:39:19,404 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:39:19,407 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:39:19,409 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:39:19,412 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:39:19,894 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 16:39:19,986 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 16:39:19,988 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 16:39:19,990 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 16:39:19,993 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:39:19,995 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:39:19,996 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:39:20,187 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:39:20,190 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 16:39:20,193 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 16:39:20,196 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 16:39:20,199 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:39:20,206 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:39:20,208 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:39:20,215 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:39:20,387 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 16:39:20,390 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 16:39:20,460 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 16:39:20,462 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 16:39:20,464 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 16:39:20,594 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 16:39:20,597 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 16:39:20,599 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:39:20,601 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:39:20,603 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:39:20,606 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:39:20,608 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 16:39:20,610 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 16:39:20,785 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 16:39:20,787 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 16:39:20,789 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:39:20,791 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 16:39:20,991 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:39:20,994 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:39:21,031 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 16:39:21,032 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 16:39:21,034 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 16:39:21,035 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 16:39:21,187 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 16:39:21,191 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 16:39:21,194 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:39:21,196 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:39:21,199 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:39:21,201 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 16:39:21,203 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 16:39:21,387 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 16:39:21,390 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 16:39:21,393 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 16:39:21,396 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 16:39:21,399 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:39:21,587 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:39:21,590 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:39:21,593 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:39:21,597 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 16:39:21,600 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 16:39:21,603 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 16:39:21,606 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:39:21,609 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:39:21,785 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 16:39:21,786 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:39:21,787 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 16:39:21,789 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 16:39:21,790 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 16:39:21,987 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 16:39:21,991 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 16:39:21,994 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:39:21,997 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:39:22,000 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:39:22,030 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:39:22,035 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 16:39:22,187 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 16:39:22,190 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:39:22,193 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 16:39:22,196 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 16:39:22,198 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:39:22,201 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 16:39:22,204 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 16:39:22,387 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 16:39:22,391 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 16:39:22,394 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 16:39:22,397 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 16:39:22,400 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 16:39:22,403 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 16:39:22,586 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:39:22,589 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:39:22,591 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:39:22,594 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 16:39:22,596 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 16:39:22,814 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 16:39:22,825 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 16:39:22,827 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 16:39:22,828 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 16:39:22,830 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 16:39:22,832 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:39:22,833 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 16:39:22,987 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 16:39:22,991 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 16:39:22,995 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 16:39:22,998 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 16:39:23,187 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:39:23,191 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 16:39:23,194 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:39:23,197 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:39:23,202 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 16:39:23,205 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 16:39:23,208 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:39:23,385 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 16:39:23,386 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 16:39:23,388 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 16:39:23,390 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 16:39:23,465 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 16:39:23,468 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 16:39:23,469 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:39:23,471 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:39:23,586 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 16:39:23,589 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:39:23,592 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 16:39:23,594 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 16:39:23,787 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 16:39:23,790 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 16:39:23,793 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 16:39:23,796 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:39:23,800 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:39:23,803 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:39:23,806 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:39:23,988 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 16:39:23,991 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 16:39:23,994 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:39:23,997 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 16:39:24,000 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 16:39:24,003 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 16:39:24,006 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:39:24,187 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 16:39:24,190 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 16:39:24,193 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 16:39:24,196 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 16:39:24,198 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 16:39:24,387 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:39:24,389 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:39:24,392 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:39:24,395 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:39:24,400 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 16:39:24,403 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 16:39:24,406 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:39:24,586 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 16:39:24,589 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 16:39:24,593 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 16:39:24,599 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 16:39:24,603 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:39:24,606 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:39:24,608 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:39:24,611 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:39:24,788 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:39:24,790 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 16:39:24,793 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:39:24,796 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:39:24,799 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:39:24,802 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 16:39:24,805 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:39:24,808 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:39:24,987 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:39:24,989 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:39:24,992 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:39:25,007 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:39:30,007 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:39:30,079 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:39:30,082 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:39:30,084 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:40:48,316 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:40:48,317 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:40:48,319 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:40:48,320 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:46:16,843 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 16:46:16,881 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 16:46:16,889 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 16:46:16,892 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-17 16:46:16,894 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-17 16:46:16,896 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 16:46:16,897 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 16:46:16,898 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-17 16:46:16,899 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-17 16:46:16,900 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 16:46:16,901 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:46:16,902 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 16:46:17,058 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 16:46:17,061 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:46:17,090 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 16:46:17,096 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 16:46:17,098 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 16:46:17,099 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 16:46:17,104 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 16:46:17,107 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 16:46:17,108 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 16:46:17,111 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 16:46:17,257 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 16:46:17,260 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 16:46:17,264 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 16:46:17,266 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 16:46:17,269 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 16:46:17,285 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 16:46:17,288 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 16:46:17,291 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 16:46:17,458 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 16:46:17,460 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 16:46:17,463 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 16:46:17,466 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 16:46:17,469 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 16:46:17,474 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 16:46:17,477 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 16:46:17,480 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 16:46:17,483 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 16:46:17,667 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:46:17,669 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:46:17,671 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 16:46:17,674 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 16:46:17,676 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 16:46:17,677 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 16:46:17,679 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:46:17,861 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 16:46:17,881 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 16:46:17,885 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 16:46:17,893 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 16:46:18,058 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 16:46:18,066 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 16:46:18,071 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 16:46:18,075 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 16:46:18,078 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:46:18,081 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:46:18,084 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:46:18,086 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:46:18,257 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 16:46:18,260 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 16:46:18,263 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 16:46:18,266 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 16:46:18,277 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 16:46:18,459 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:46:18,462 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 16:46:18,465 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:46:18,468 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:46:18,526 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 16:46:18,527 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 16:46:18,528 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:46:18,657 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:46:18,660 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:46:18,663 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:46:18,665 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:46:18,668 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 16:46:18,858 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 16:46:18,862 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 16:46:18,864 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 16:46:18,867 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 16:46:18,870 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:46:18,872 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:46:18,876 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:46:19,058 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:46:19,061 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 16:46:19,064 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 16:46:19,067 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:46:19,069 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:46:19,071 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:46:19,075 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:46:19,257 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 16:46:19,261 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 16:46:19,263 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 16:46:19,278 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:46:19,458 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:46:19,461 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:46:19,464 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:46:19,477 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:46:19,480 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:46:19,483 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:46:19,485 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:46:19,992 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 16:46:20,057 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 16:46:20,059 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 16:46:20,062 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 16:46:20,064 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:46:20,067 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:46:20,070 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:46:20,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:46:20,261 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 16:46:20,266 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 16:46:20,269 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 16:46:20,272 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:46:20,276 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:46:20,279 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:46:20,281 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:46:20,457 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 16:46:20,460 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 16:46:20,524 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 16:46:20,531 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 16:46:20,533 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 16:46:20,666 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 16:46:20,669 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 16:46:20,672 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:46:20,675 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:46:20,678 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:46:20,681 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:46:20,683 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 16:46:20,685 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 16:46:20,858 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 16:46:20,861 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 16:46:20,864 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:46:20,867 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 16:46:21,057 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:46:21,060 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:46:21,096 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 16:46:21,098 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 16:46:21,099 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 16:46:21,100 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 16:46:21,258 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 16:46:21,261 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 16:46:21,264 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:46:21,267 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:46:21,270 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:46:21,273 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 16:46:21,276 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 16:46:21,458 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 16:46:21,461 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 16:46:21,465 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 16:46:21,468 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 16:46:21,471 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:46:21,657 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:46:21,659 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:46:21,661 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:46:21,663 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 16:46:21,665 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 16:46:21,667 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 16:46:21,669 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:46:21,670 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:46:21,858 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 16:46:21,861 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:46:21,864 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 16:46:21,867 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 16:46:21,871 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 16:46:22,058 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 16:46:22,062 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 16:46:22,066 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:46:22,069 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:46:22,095 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:46:22,096 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:46:22,099 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 16:46:22,257 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 16:46:22,260 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:46:22,262 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 16:46:22,265 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 16:46:22,267 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:46:22,269 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 16:46:22,272 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 16:46:22,458 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 16:46:22,462 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 16:46:22,464 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 16:46:22,467 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 16:46:22,470 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 16:46:22,474 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 16:46:22,656 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:46:22,658 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:46:22,659 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:46:22,661 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 16:46:22,662 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 16:46:22,857 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 16:46:22,875 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 16:46:22,877 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 16:46:22,879 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 16:46:22,881 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 16:46:22,882 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:46:22,884 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 16:46:23,058 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 16:46:23,062 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 16:46:23,066 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 16:46:23,069 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 16:46:23,258 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:46:23,262 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 16:46:23,265 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:46:23,267 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:46:23,270 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 16:46:23,273 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 16:46:23,275 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:46:23,456 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 16:46:23,458 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 16:46:23,461 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 16:46:23,462 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 16:46:23,552 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 16:46:23,554 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 16:46:23,558 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:46:23,560 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:46:23,657 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 16:46:23,658 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:46:23,660 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 16:46:23,662 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 16:46:23,858 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 16:46:23,861 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 16:46:23,865 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 16:46:23,868 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:46:23,871 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:46:23,875 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:46:23,878 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:46:24,059 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 16:46:24,062 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 16:46:24,065 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:46:24,068 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 16:46:24,071 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 16:46:24,074 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 16:46:24,077 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:46:24,258 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 16:46:24,261 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 16:46:24,264 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 16:46:24,267 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 16:46:24,271 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 16:46:24,458 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:46:24,460 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:46:24,463 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:46:24,466 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:46:24,469 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 16:46:24,471 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 16:46:24,476 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:46:24,657 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 16:46:24,660 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 16:46:24,665 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 16:46:24,679 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 16:46:24,681 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:46:24,683 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:46:24,684 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:46:24,687 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:46:24,858 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:46:24,861 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 16:46:24,864 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:46:24,867 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:46:24,870 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:46:24,873 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 16:46:24,875 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:46:24,878 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:46:25,056 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:46:25,058 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:46:25,059 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:46:25,061 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:46:28,822 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:46:28,829 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:46:28,831 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:46:28,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:54:29,474 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 16:54:29,518 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 16:54:29,526 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 16:54:29,529 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-17 16:54:29,531 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-17 16:54:29,533 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 16:54:29,534 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 16:54:29,535 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-17 16:54:29,536 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-17 16:54:29,538 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 16:54:29,539 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:54:29,540 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 16:54:29,701 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 16:54:29,704 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 16:54:29,738 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 16:54:29,745 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 16:54:29,747 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 16:54:29,748 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 16:54:29,753 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 16:54:29,754 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 16:54:29,755 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 16:54:29,757 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 16:54:29,902 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 16:54:29,905 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 16:54:29,908 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 16:54:29,911 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 16:54:29,914 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 16:54:29,931 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 16:54:29,934 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 16:54:29,937 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 16:54:30,102 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 16:54:30,105 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 16:54:30,108 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 16:54:30,111 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 16:54:30,114 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 16:54:30,120 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 16:54:30,123 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 16:54:30,126 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 16:54:30,128 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 16:54:30,317 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:54:30,324 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 16:54:30,326 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 16:54:30,328 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 16:54:30,330 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 16:54:30,332 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 16:54:30,333 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:54:30,505 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 16:54:30,523 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 16:54:30,525 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 16:54:30,529 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 16:54:30,702 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 16:54:30,711 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 16:54:30,717 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 16:54:30,720 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 16:54:30,725 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:54:30,729 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:54:30,732 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:54:30,734 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:54:30,901 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 16:54:30,904 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 16:54:30,907 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 16:54:30,910 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 16:54:30,921 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 16:54:31,104 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 16:54:31,107 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 16:54:31,110 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 16:54:31,114 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 16:54:31,181 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 16:54:31,182 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 16:54:31,183 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 16:54:31,301 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:54:31,304 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:54:31,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:54:31,309 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:54:31,310 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 16:54:31,501 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 16:54:31,505 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 16:54:31,508 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 16:54:31,514 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 16:54:31,516 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:54:31,517 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:54:31,518 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:54:31,702 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:54:31,706 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 16:54:31,709 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 16:54:31,712 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 16:54:31,715 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:54:31,718 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:54:31,721 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:54:31,900 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 16:54:31,902 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 16:54:31,903 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 16:54:31,910 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:54:32,100 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:54:32,102 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:54:32,103 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:54:32,110 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 16:54:32,112 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 16:54:32,113 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 16:54:32,114 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 16:54:32,659 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 16:54:32,700 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 16:54:32,701 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 16:54:32,702 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 16:54:32,703 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:54:32,704 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:54:32,705 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:54:32,902 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:54:32,906 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 16:54:32,909 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 16:54:32,912 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 16:54:32,915 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:54:32,920 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:54:32,923 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:54:32,925 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:54:33,104 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 16:54:33,107 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 16:54:33,153 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 16:54:33,155 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 16:54:33,156 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 16:54:33,311 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 16:54:33,314 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 16:54:33,317 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 16:54:33,320 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:54:33,323 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:54:33,326 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:54:33,329 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 16:54:33,332 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 16:54:33,502 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 16:54:33,505 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 16:54:33,509 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 16:54:33,512 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 16:54:33,701 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 16:54:33,703 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 16:54:33,733 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 16:54:33,735 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 16:54:33,736 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 16:54:33,737 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 16:54:33,901 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 16:54:33,903 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 16:54:33,905 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:54:33,907 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:54:33,909 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:54:33,912 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 16:54:33,914 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 16:54:34,102 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 16:54:34,105 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 16:54:34,108 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 16:54:34,111 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 16:54:34,114 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:54:34,301 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:54:34,302 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:54:34,304 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:54:34,306 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 16:54:34,308 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 16:54:34,310 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 16:54:34,312 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:54:34,313 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:54:34,502 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 16:54:34,504 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:54:34,507 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 16:54:34,510 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 16:54:34,514 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 16:54:34,702 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 16:54:34,706 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 16:54:34,710 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 16:54:34,713 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 16:54:34,716 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 16:54:34,735 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 16:54:34,739 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 16:54:34,901 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 16:54:34,902 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 16:54:34,906 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 16:54:34,910 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 16:54:34,914 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:54:34,917 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 16:54:34,920 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 16:54:35,102 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 16:54:35,105 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 16:54:35,108 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 16:54:35,111 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 16:54:35,114 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 16:54:35,117 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 16:54:35,302 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:54:35,304 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:54:35,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:54:35,310 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 16:54:35,313 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 16:54:35,501 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 16:54:35,517 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 16:54:35,519 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 16:54:35,522 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 16:54:35,525 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 16:54:35,528 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:54:35,531 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 16:54:35,702 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 16:54:35,705 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 16:54:35,708 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 16:54:35,711 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 16:54:35,911 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:54:35,915 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 16:54:35,919 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:54:35,922 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:54:35,925 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 16:54:35,928 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 16:54:35,930 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 16:54:36,102 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 16:54:36,105 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 16:54:36,112 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 16:54:36,116 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 16:54:36,200 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 16:54:36,203 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 16:54:36,206 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:54:36,213 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:54:36,302 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 16:54:36,305 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:54:36,308 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 16:54:36,311 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 16:54:36,502 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 16:54:36,505 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 16:54:36,507 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 16:54:36,509 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:54:36,511 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:54:36,514 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:54:36,516 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:54:36,702 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 16:54:36,705 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 16:54:36,708 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 16:54:36,711 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 16:54:36,714 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 16:54:36,717 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 16:54:36,720 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:54:36,902 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 16:54:36,905 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 16:54:36,908 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 16:54:36,911 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 16:54:36,915 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 16:54:37,101 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 16:54:37,103 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 16:54:37,105 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 16:54:37,107 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 16:54:37,109 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 16:54:37,111 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 16:54:37,113 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 16:54:37,300 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 16:54:37,302 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 16:54:37,304 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 16:54:37,305 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 16:54:37,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 16:54:37,308 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 16:54:37,309 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 16:54:37,310 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 16:54:37,502 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 16:54:37,513 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 16:54:37,515 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 16:54:37,517 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 16:54:37,519 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 16:54:37,521 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 16:54:37,523 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 16:54:37,524 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 16:54:37,700 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:54:37,701 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:54:37,702 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:54:37,703 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 16:54:42,564 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 16:54:42,575 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 16:54:42,576 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 16:54:42,577 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:01:41,829 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 17:01:41,867 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 17:01:41,875 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 17:01:41,879 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-17 17:01:41,881 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-17 17:01:41,882 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 17:01:41,884 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 17:01:41,885 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-17 17:01:41,886 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-17 17:01:41,887 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 17:01:41,888 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:01:41,890 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 17:01:42,058 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 17:01:42,061 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:01:42,102 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 17:01:42,109 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 17:01:42,111 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 17:01:42,113 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 17:01:42,118 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 17:01:42,120 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 17:01:42,122 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 17:01:42,125 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 17:01:42,258 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 17:01:42,261 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 17:01:42,264 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 17:01:42,268 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 17:01:42,271 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 17:01:42,290 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 17:01:42,293 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 17:01:42,296 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 17:01:42,458 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 17:01:42,461 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 17:01:42,464 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 17:01:42,468 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 17:01:42,470 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 17:01:42,477 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 17:01:42,479 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 17:01:42,482 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 17:01:42,485 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 17:01:42,695 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:01:42,707 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:01:42,710 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 17:01:42,714 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 17:01:42,717 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 17:01:42,719 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 17:01:42,721 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:01:42,860 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 17:01:42,878 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 17:01:42,882 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 17:01:42,886 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 17:01:43,058 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 17:01:43,066 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 17:01:43,072 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 17:01:43,076 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 17:01:43,080 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:01:43,084 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:01:43,086 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:01:43,089 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:01:43,257 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 17:01:43,260 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 17:01:43,263 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 17:01:43,266 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 17:01:43,278 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 17:01:43,460 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:01:43,464 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 17:01:43,467 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:01:43,471 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:01:43,527 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 17:01:43,528 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 17:01:43,529 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:01:43,658 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:01:43,662 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:01:43,670 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:01:43,672 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:01:43,674 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 17:01:43,876 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 17:01:43,880 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 17:01:43,881 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 17:01:43,882 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 17:01:43,884 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:01:43,885 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:01:43,886 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:01:44,060 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:01:44,063 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 17:01:44,066 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 17:01:44,069 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:01:44,072 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:01:44,075 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:01:44,077 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:01:44,259 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 17:01:44,262 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 17:01:44,265 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 17:01:44,281 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:01:44,475 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:01:44,477 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:01:44,479 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:01:44,487 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:01:44,489 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:01:44,490 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:01:44,492 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:01:46,126 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 17:01:46,127 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 17:01:46,128 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 17:01:46,129 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 17:01:46,130 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:01:46,131 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:01:46,149 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:01:46,150 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:01:46,152 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 17:01:46,153 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 17:01:46,154 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 17:01:46,155 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:01:46,157 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:01:46,158 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:01:46,351 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:01:46,354 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 17:01:46,357 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 17:01:46,417 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 17:01:46,419 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 17:01:46,550 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 17:01:46,551 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 17:01:46,553 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 17:01:46,555 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:01:46,561 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:01:46,564 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:01:46,566 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:01:46,568 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 17:01:46,751 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 17:01:46,754 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 17:01:46,757 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 17:01:46,761 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:01:46,950 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 17:01:46,953 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:01:46,957 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:01:46,993 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 17:01:46,995 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 17:01:46,996 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 17:01:47,161 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 17:01:47,162 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 17:01:47,164 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 17:01:47,165 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:01:47,167 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:01:47,169 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:01:47,350 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 17:01:47,353 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 17:01:47,356 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 17:01:47,359 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 17:01:47,361 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 17:01:47,551 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 17:01:47,554 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:01:47,557 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:01:47,560 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:01:47,563 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:01:47,590 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 17:01:47,593 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 17:01:47,595 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 17:01:47,750 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:01:47,753 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:01:47,756 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 17:01:47,759 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:01:47,763 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 17:01:47,951 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 17:01:47,954 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 17:01:47,957 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 17:01:47,962 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 17:01:47,966 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:01:47,969 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:01:47,973 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:01:48,150 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:01:48,157 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 17:01:48,160 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 17:01:48,163 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:01:48,164 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 17:01:48,165 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 17:01:48,167 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:01:48,168 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 17:01:48,354 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 17:01:48,359 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 17:01:48,364 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 17:01:48,368 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 17:01:48,371 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 17:01:48,551 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 17:01:48,554 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 17:01:48,557 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:01:48,560 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:01:48,563 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:01:48,566 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 17:01:48,577 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 17:01:48,751 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 17:01:48,768 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 17:01:48,770 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 17:01:48,772 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 17:01:48,775 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 17:01:48,951 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:01:48,954 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 17:01:48,959 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 17:01:48,963 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 17:01:49,151 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 17:01:49,153 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 17:01:49,155 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:01:49,157 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 17:01:49,160 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:01:49,166 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:01:49,189 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 17:01:49,351 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 17:01:49,354 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:01:49,357 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 17:01:49,360 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 17:01:49,365 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 17:01:49,367 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 17:01:49,652 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 17:01:49,654 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 17:01:49,656 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:01:49,663 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:01:49,664 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 17:01:49,665 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:01:49,666 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 17:01:49,751 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 17:01:49,754 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 17:01:49,758 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 17:01:49,761 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 17:01:49,764 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:01:49,949 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:01:49,950 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:01:49,952 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:01:49,954 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 17:01:49,955 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 17:01:49,957 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:01:49,958 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 17:01:50,150 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 17:01:50,158 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 17:01:50,161 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:01:50,164 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 17:01:50,168 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 17:01:50,351 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 17:01:50,354 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 17:01:50,357 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 17:01:50,361 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:01:50,364 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:01:50,367 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:01:50,370 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:01:50,551 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 17:01:50,555 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 17:01:50,558 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:01:50,561 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 17:01:50,564 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 17:01:50,569 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 17:01:50,574 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 17:01:50,578 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:01:50,751 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:01:50,753 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:01:50,757 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:01:50,760 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:01:50,763 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 17:01:50,766 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:01:50,769 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:01:50,772 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:01:50,950 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 17:01:50,953 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:01:50,956 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:01:50,958 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:01:50,961 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:01:50,963 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:01:50,965 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:01:59,978 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:01:59,980 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:01:59,981 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:01:59,983 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:03:03,334 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 17:03:03,372 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 17:03:03,381 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 17:03:03,384 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-17 17:03:03,386 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-17 17:03:03,388 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 17:03:03,389 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 17:03:03,390 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-17 17:03:03,391 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-17 17:03:03,393 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 17:03:03,394 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:03:03,395 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 17:03:03,563 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-17 17:03:03,569 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:03:03,593 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 17:03:03,599 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 17:03:03,601 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 17:03:03,603 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 17:03:03,609 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 17:03:03,610 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 17:03:03,612 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 17:03:03,615 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 17:03:03,760 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 17:03:03,763 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 17:03:03,766 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 17:03:03,770 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 17:03:03,773 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 17:03:03,794 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 17:03:03,796 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 17:03:03,798 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 17:03:03,960 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 17:03:03,963 [Thread: 9       ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 17:03:03,966 [Thread: 9       ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 17:03:03,970 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 17:03:03,973 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 17:03:03,978 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 17:03:03,981 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 17:03:03,984 [Thread: 9       ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 17:03:03,986 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 17:03:04,188 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:03:04,192 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:03:04,196 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 17:03:04,200 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 17:03:04,203 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 17:03:04,205 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 17:03:04,208 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:03:04,363 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 17:03:04,385 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 17:03:04,389 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 17:03:04,395 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 17:03:04,560 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 17:03:04,569 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 17:03:04,575 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 17:03:04,579 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 17:03:04,584 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:03:04,591 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:03:04,594 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:03:04,597 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:03:04,759 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 17:03:04,762 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 17:03:04,765 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 17:03:04,768 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 17:03:04,781 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 17:03:04,962 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:03:04,965 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 17:03:04,968 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:03:04,971 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:03:05,026 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 17:03:05,027 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 17:03:05,028 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:03:05,158 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:03:05,160 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:03:05,162 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:03:05,163 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:03:05,165 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 17:03:05,359 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 17:03:05,366 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 17:03:05,373 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 17:03:05,383 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 17:03:05,385 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:03:05,386 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:03:05,388 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:03:05,560 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:03:05,564 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 17:03:05,566 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 17:03:05,569 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:03:05,572 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:03:05,575 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:03:05,578 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:03:05,760 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 17:03:05,763 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 17:03:05,766 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 17:03:05,774 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:03:05,969 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:03:05,972 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:03:05,975 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:03:05,987 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:03:05,990 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:03:05,992 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:03:05,995 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:03:07,579 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 17:03:07,581 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 17:03:07,582 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 17:03:07,583 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 17:03:07,584 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:03:07,585 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:03:07,598 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:03:07,599 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:03:07,601 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 17:03:07,602 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 17:03:07,603 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 17:03:07,604 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:03:07,606 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:03:07,608 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:03:07,800 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:03:07,803 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 17:03:07,806 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 17:03:07,853 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 17:03:07,855 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 17:03:07,999 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 17:03:08,003 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 17:03:08,006 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 17:03:08,009 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:03:08,012 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:03:08,023 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:03:08,024 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:03:08,026 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 17:03:08,200 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 17:03:08,205 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 17:03:08,208 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 17:03:08,212 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:03:08,400 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 17:03:08,403 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:03:08,407 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:03:08,459 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 17:03:08,461 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 17:03:08,464 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 17:03:08,627 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 17:03:08,632 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 17:03:08,634 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 17:03:08,635 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:03:08,637 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:03:08,639 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:03:08,798 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 17:03:08,800 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 17:03:08,802 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 17:03:08,804 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 17:03:08,805 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 17:03:09,004 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 17:03:09,009 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:03:09,012 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:03:09,014 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:03:09,016 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:03:09,029 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 17:03:09,030 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 17:03:09,032 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 17:03:09,201 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:03:09,204 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:03:09,207 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 17:03:09,210 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:03:09,213 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 17:03:09,400 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 17:03:09,402 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 17:03:09,404 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 17:03:09,408 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 17:03:09,412 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:03:09,415 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:03:09,418 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:03:09,602 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:03:09,609 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 17:03:09,612 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 17:03:09,616 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:03:09,619 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 17:03:09,622 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 17:03:09,626 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:03:09,629 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 17:03:09,801 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 17:03:09,804 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 17:03:09,807 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 17:03:09,810 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 17:03:09,813 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 17:03:10,002 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 17:03:10,005 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 17:03:10,008 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:03:10,011 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:03:10,014 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:03:10,018 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 17:03:10,028 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 17:03:10,202 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 17:03:10,218 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 17:03:10,220 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 17:03:10,223 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 17:03:10,225 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 17:03:10,401 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:03:10,408 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 17:03:10,411 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 17:03:10,414 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 17:03:10,601 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 17:03:10,603 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 17:03:10,604 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:03:10,606 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 17:03:10,607 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:03:10,609 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:03:10,610 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 17:03:10,802 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 17:03:10,806 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:03:10,809 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 17:03:10,813 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 17:03:10,820 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 17:03:10,823 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 17:03:11,100 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 17:03:11,102 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 17:03:11,103 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:03:11,110 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:03:11,111 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 17:03:11,112 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:03:11,113 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 17:03:11,201 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 17:03:11,205 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 17:03:11,208 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 17:03:11,211 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 17:03:11,214 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:03:11,401 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:03:11,404 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:03:11,406 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:03:11,410 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 17:03:11,412 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 17:03:11,426 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:03:11,429 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 17:03:11,601 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 17:03:11,624 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 17:03:11,627 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:03:11,628 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 17:03:11,630 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 17:03:11,802 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 17:03:11,805 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 17:03:11,808 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 17:03:11,812 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:03:11,815 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:03:11,818 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:03:11,822 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:03:12,002 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 17:03:12,006 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 17:03:12,009 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:03:12,012 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 17:03:12,015 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 17:03:12,020 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 17:03:12,026 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 17:03:12,031 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:03:12,200 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:03:12,202 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:03:12,203 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:03:12,205 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:03:12,207 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 17:03:12,209 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:03:12,210 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:03:12,212 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:03:12,421 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 17:03:12,424 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:03:12,427 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:03:12,429 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:03:12,432 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:03:12,433 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:03:12,435 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:03:17,544 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:03:17,545 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:03:17,546 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:03:17,548 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:08:26,796 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 17:08:26,834 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 17:08:26,843 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 17:08:26,846 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-17 17:08:26,848 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-17 17:08:26,849 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 17:08:26,850 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 17:08:26,851 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-17 17:08:26,852 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-17 17:08:26,854 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 17:08:26,855 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:08:26,856 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 17:08:27,010 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 17:08:27,014 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:08:27,046 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 17:08:27,052 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 17:08:27,054 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 17:08:27,056 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 17:08:27,061 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 17:08:27,063 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 17:08:27,064 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 17:08:27,067 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 17:08:27,211 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 17:08:27,213 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 17:08:27,217 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 17:08:27,223 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 17:08:27,225 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 17:08:27,233 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 17:08:27,235 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 17:08:27,237 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 17:08:27,411 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 17:08:27,415 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 17:08:27,418 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 17:08:27,422 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 17:08:27,425 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 17:08:27,432 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 17:08:27,435 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 17:08:27,437 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 17:08:27,439 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 17:08:27,631 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:08:27,635 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:08:27,638 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 17:08:27,643 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 17:08:27,645 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 17:08:27,646 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 17:08:27,648 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:08:27,816 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 17:08:27,836 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 17:08:27,840 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 17:08:27,848 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 17:08:28,011 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 17:08:28,020 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 17:08:28,026 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 17:08:28,030 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 17:08:28,035 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:08:28,037 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:08:28,038 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:08:28,040 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:08:28,210 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 17:08:28,213 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 17:08:28,214 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 17:08:28,216 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 17:08:28,221 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 17:08:28,413 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:08:28,417 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 17:08:28,420 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:08:28,423 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:08:28,471 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 17:08:28,472 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 17:08:28,473 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:08:28,610 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:08:28,615 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:08:28,618 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:08:28,621 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:08:28,624 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 17:08:28,809 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 17:08:28,812 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 17:08:28,815 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 17:08:28,818 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 17:08:28,821 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:08:28,824 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:08:28,827 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:08:29,011 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:08:29,015 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 17:08:29,018 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 17:08:29,020 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:08:29,023 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:08:29,026 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:08:29,029 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:08:29,211 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 17:08:29,214 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 17:08:29,217 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 17:08:29,226 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:08:29,412 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:08:29,416 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:08:29,419 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:08:29,434 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:08:29,438 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:08:29,441 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:08:29,444 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:08:29,972 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 17:08:30,009 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 17:08:30,010 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 17:08:30,011 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 17:08:30,012 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:08:30,013 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:08:30,014 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:08:30,211 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:08:30,216 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 17:08:30,219 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 17:08:30,223 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 17:08:30,226 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:08:30,233 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:08:30,236 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:08:30,240 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:08:30,411 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 17:08:30,417 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 17:08:30,467 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 17:08:30,468 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 17:08:30,469 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 17:08:30,616 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 17:08:30,618 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 17:08:30,620 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:08:30,622 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:08:30,624 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:08:30,626 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:08:30,627 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 17:08:30,629 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 17:08:30,811 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 17:08:30,815 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 17:08:30,819 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:08:30,822 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 17:08:31,011 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:08:31,015 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:08:31,069 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 17:08:31,070 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 17:08:31,071 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 17:08:31,072 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 17:08:31,211 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 17:08:31,214 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 17:08:31,217 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:08:31,220 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:08:31,224 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:08:31,227 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 17:08:31,231 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 17:08:31,411 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 17:08:31,415 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 17:08:31,418 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 17:08:31,421 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 17:08:31,425 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:08:31,609 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:08:31,611 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:08:31,612 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:08:31,614 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 17:08:31,616 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 17:08:31,617 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 17:08:31,618 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:08:31,620 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:08:31,811 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 17:08:31,815 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:08:31,818 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 17:08:31,821 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 17:08:31,825 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 17:08:32,011 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 17:08:32,016 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 17:08:32,020 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:08:32,023 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:08:32,026 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:08:32,050 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:08:32,054 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 17:08:32,211 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 17:08:32,214 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:08:32,217 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 17:08:32,220 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 17:08:32,223 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:08:32,227 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 17:08:32,230 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 17:08:32,411 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 17:08:32,416 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 17:08:32,419 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 17:08:32,422 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 17:08:32,425 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 17:08:32,429 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 17:08:32,616 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:08:32,619 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:08:32,623 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:08:32,626 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 17:08:32,628 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 17:08:32,811 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 17:08:32,831 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 17:08:32,834 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 17:08:32,836 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 17:08:32,839 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 17:08:32,842 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:08:32,845 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 17:08:33,011 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 17:08:33,015 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 17:08:33,019 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 17:08:33,023 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 17:08:33,211 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:08:33,216 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 17:08:33,220 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:08:33,224 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:08:33,229 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 17:08:33,232 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 17:08:33,236 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:08:33,410 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 17:08:33,413 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 17:08:33,418 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 17:08:33,421 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 17:08:33,504 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 17:08:33,506 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 17:08:33,508 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:08:33,510 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:08:33,611 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 17:08:33,615 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:08:33,618 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 17:08:33,621 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 17:08:33,811 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 17:08:33,814 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 17:08:33,816 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 17:08:33,819 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:08:33,822 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:08:33,825 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:08:33,828 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:08:34,012 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 17:08:34,015 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 17:08:34,018 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:08:34,022 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 17:08:34,025 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 17:08:34,028 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 17:08:34,032 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:08:34,211 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 17:08:34,214 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 17:08:34,217 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 17:08:34,220 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 17:08:34,223 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 17:08:34,412 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:08:34,417 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:08:34,421 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:08:34,431 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:08:34,435 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 17:08:34,440 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 17:08:34,452 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:08:34,611 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 17:08:34,615 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 17:08:34,620 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 17:08:34,626 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 17:08:34,630 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:08:34,633 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:08:34,635 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:08:34,637 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:08:34,811 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:08:34,814 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 17:08:34,815 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:08:34,817 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:08:34,819 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:08:34,821 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 17:08:34,822 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:08:34,824 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:08:35,009 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:08:35,011 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:08:35,013 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:08:35,015 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:09:23,339 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:09:23,340 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:09:23,342 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:09:23,343 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:11:48,235 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 17:11:48,274 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 17:11:48,282 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 17:11:48,286 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-17 17:11:48,288 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-17 17:11:48,289 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 17:11:48,291 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 17:11:48,292 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-17 17:11:48,293 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-17 17:11:48,294 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 17:11:48,296 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:11:48,297 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 17:11:48,454 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 17:11:48,457 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:11:48,495 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 17:11:48,501 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 17:11:48,503 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 17:11:48,505 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 17:11:48,510 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 17:11:48,513 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 17:11:48,514 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 17:11:48,517 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 17:11:48,654 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 17:11:48,658 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 17:11:48,665 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 17:11:48,669 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 17:11:48,673 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 17:11:48,686 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 17:11:48,689 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 17:11:48,691 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 17:11:48,853 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 17:11:48,856 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 17:11:48,858 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 17:11:48,860 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 17:11:48,862 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 17:11:48,867 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 17:11:48,869 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 17:11:48,871 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 17:11:48,873 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 17:11:49,090 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:11:49,095 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:11:49,098 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 17:11:49,101 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 17:11:49,103 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 17:11:49,105 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 17:11:49,107 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:11:49,258 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 17:11:49,278 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 17:11:49,281 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 17:11:49,287 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 17:11:49,455 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 17:11:49,464 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 17:11:49,470 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 17:11:49,475 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 17:11:49,479 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:11:49,483 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:11:49,485 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:11:49,487 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:11:49,654 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 17:11:49,657 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 17:11:49,661 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 17:11:49,664 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 17:11:49,671 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 17:11:49,856 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:11:49,860 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 17:11:49,866 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:11:49,869 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:11:49,921 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 17:11:49,922 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 17:11:49,923 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:11:50,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:11:50,056 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:11:50,059 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:11:50,062 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:11:50,065 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 17:11:50,255 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 17:11:50,258 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 17:11:50,261 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 17:11:50,263 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 17:11:50,265 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:11:50,266 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:11:50,267 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:11:50,453 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:11:50,456 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 17:11:50,459 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 17:11:50,461 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:11:50,463 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:11:50,466 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:11:50,468 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:11:50,653 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 17:11:50,656 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 17:11:50,659 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 17:11:50,666 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:11:50,865 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:11:50,868 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:11:50,872 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:11:50,887 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:11:50,891 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:11:50,894 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:11:50,895 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:11:51,374 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 17:11:51,452 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 17:11:51,453 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 17:11:51,455 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 17:11:51,456 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:11:51,457 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:11:51,459 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:11:51,654 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:11:51,659 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 17:11:51,662 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 17:11:51,666 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 17:11:51,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:11:51,675 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:11:51,678 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:11:51,681 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:11:51,853 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 17:11:51,856 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 17:11:51,909 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 17:11:51,910 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 17:11:51,912 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 17:11:52,058 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 17:11:52,060 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 17:11:52,062 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:11:52,064 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:11:52,065 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:11:52,067 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:11:52,069 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 17:11:52,070 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 17:11:52,253 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 17:11:52,255 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 17:11:52,258 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:11:52,261 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 17:11:52,467 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:11:52,476 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:11:52,508 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 17:11:52,509 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 17:11:52,510 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 17:11:52,511 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 17:11:52,654 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 17:11:52,658 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 17:11:52,661 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:11:52,664 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:11:52,666 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:11:52,668 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 17:11:52,671 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 17:11:52,854 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 17:11:52,858 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 17:11:52,861 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 17:11:52,864 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 17:11:52,867 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:11:53,053 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:11:53,054 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:11:53,055 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:11:53,057 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 17:11:53,058 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 17:11:53,060 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 17:11:53,061 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:11:53,062 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:11:53,253 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 17:11:53,257 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:11:53,260 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 17:11:53,263 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 17:11:53,264 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 17:11:53,454 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 17:11:53,459 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 17:11:53,463 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:11:53,466 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:11:53,469 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:11:53,490 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:11:53,505 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 17:11:53,654 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 17:11:53,658 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:11:53,661 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 17:11:53,665 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 17:11:53,668 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:11:53,671 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 17:11:53,674 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 17:11:53,854 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 17:11:53,858 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 17:11:53,862 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 17:11:53,864 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 17:11:53,867 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 17:11:53,870 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 17:11:54,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:11:54,055 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:11:54,057 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:11:54,059 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 17:11:54,061 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 17:11:54,254 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 17:11:54,274 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 17:11:54,284 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 17:11:54,286 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 17:11:54,287 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 17:11:54,289 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:11:54,291 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 17:11:54,455 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 17:11:54,459 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 17:11:54,463 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 17:11:54,467 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 17:11:54,655 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:11:54,658 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 17:11:54,662 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:11:54,666 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:11:54,671 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 17:11:54,674 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 17:11:54,677 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:11:54,853 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 17:11:54,854 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 17:11:54,856 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 17:11:54,857 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 17:11:54,919 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 17:11:54,921 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 17:11:54,922 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:11:54,925 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:11:55,054 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 17:11:55,057 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:11:55,060 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 17:11:55,064 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 17:11:55,255 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 17:11:55,258 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 17:11:55,262 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 17:11:55,265 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:11:55,269 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:11:55,273 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:11:55,276 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:11:55,453 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 17:11:55,456 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 17:11:55,460 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:11:55,463 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 17:11:55,466 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 17:11:55,469 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 17:11:55,473 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:11:55,654 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 17:11:55,657 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 17:11:55,661 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 17:11:55,664 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 17:11:55,667 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 17:11:55,854 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:11:55,858 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:11:55,861 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:11:55,865 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:11:55,872 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 17:11:55,874 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 17:11:55,876 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:11:56,052 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 17:11:56,055 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 17:11:56,060 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 17:11:56,065 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 17:11:56,069 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:11:56,072 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:11:56,075 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:11:56,078 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:11:56,255 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:11:56,258 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 17:11:56,261 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:11:56,264 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:11:56,267 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:11:56,270 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 17:11:56,273 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:11:56,276 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:11:56,454 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:11:56,457 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:11:56,460 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:11:56,463 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:12:07,848 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:12:07,849 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:12:07,850 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:12:07,852 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:14:20,363 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:14:20,367 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:14:20,369 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:14:20,370 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:18:19,143 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-17 17:18:19,196 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-17 17:18:19,205 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-17 17:18:19,208 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-17 17:18:19,211 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-17 17:18:19,212 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-17 17:18:19,214 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-17 17:18:19,215 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-17 17:18:19,216 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-17 17:18:19,217 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 17:18:19,219 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:18:19,220 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-17 17:18:19,374 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-17 17:18:19,377 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-17 17:18:19,404 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-17 17:18:19,411 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-17 17:18:19,413 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-17 17:18:19,415 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-17 17:18:19,421 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-07-17 17:18:19,423 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-07-17 17:18:19,425 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-07-17 17:18:19,428 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-07-17 17:18:19,574 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-17 17:18:19,577 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-17 17:18:19,581 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-17 17:18:19,585 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-17 17:18:19,589 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-17 17:18:19,607 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-17 17:18:19,609 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-17 17:18:19,611 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-17 17:18:19,774 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-17 17:18:19,778 [Thread: 10      ] [DEBUG] -- Found 17 <object> elements defining objects.
2019-07-17 17:18:19,781 [Thread: 10      ] [DEBUG] -- Loaded 17 object definitions from location [spring-objects.xml]
2019-07-17 17:18:19,784 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-17 17:18:19,787 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-17 17:18:19,790 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-17 17:18:19,792 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-17 17:18:19,795 [Thread: 10      ] [DEBUG] -- 17 objects defined in application context [spring.root].
2019-07-17 17:18:19,796 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-17 17:18:19,999 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:18:20,002 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-17 17:18:20,005 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-17 17:18:20,008 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-17 17:18:20,010 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-17 17:18:20,012 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-17 17:18:20,014 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:18:20,177 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-17 17:18:20,199 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-17 17:18:20,203 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-17 17:18:20,208 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-17 17:18:20,374 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-17 17:18:20,383 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-17 17:18:20,388 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-17 17:18:20,392 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-17 17:18:20,395 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:18:20,399 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:18:20,401 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:18:20,404 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:18:20,574 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-17 17:18:20,577 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-17 17:18:20,581 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-17 17:18:20,584 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-17 17:18:20,598 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-07-17 17:18:20,776 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-17 17:18:20,779 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-07-17 17:18:20,783 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-17 17:18:20,788 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-07-17 17:18:20,846 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-17 17:18:20,847 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-17 17:18:20,848 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-17 17:18:20,972 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:18:20,973 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:18:20,974 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:18:20,975 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:18:20,976 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-07-17 17:18:21,172 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-17 17:18:21,174 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-17 17:18:21,175 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-17 17:18:21,177 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-17 17:18:21,178 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:18:21,180 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:18:21,181 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:18:21,374 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:18:21,378 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-17 17:18:21,381 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-17 17:18:21,384 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-17 17:18:21,387 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:18:21,392 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:18:21,395 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:18:21,573 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-17 17:18:21,576 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-17 17:18:21,579 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-17 17:18:21,586 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:18:21,780 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:18:21,783 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:18:21,785 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:18:21,795 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-17 17:18:21,797 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-17 17:18:21,799 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-17 17:18:21,800 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-17 17:18:23,482 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-17 17:18:23,484 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-17 17:18:23,485 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-17 17:18:23,486 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-17 17:18:23,487 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:18:23,489 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:18:23,492 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:18:23,493 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:18:23,495 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-17 17:18:23,496 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-17 17:18:23,497 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-17 17:18:23,499 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:18:23,501 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:18:23,502 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:18:23,694 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:18:23,697 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-07-17 17:18:23,700 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-07-17 17:18:23,764 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-07-17 17:18:23,765 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-07-17 17:18:23,893 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-07-17 17:18:23,897 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-07-17 17:18:23,900 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-07-17 17:18:23,903 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-07-17 17:18:23,916 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:18:23,920 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:18:23,923 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:18:23,924 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-07-17 17:18:24,093 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-07-17 17:18:24,096 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-07-17 17:18:24,099 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-07-17 17:18:24,103 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-07-17 17:18:24,296 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-07-17 17:18:24,299 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-07-17 17:18:24,313 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-07-17 17:18:24,342 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-07-17 17:18:24,343 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-07-17 17:18:24,344 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-07-17 17:18:24,552 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-07-17 17:18:24,560 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-07-17 17:18:24,562 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-07-17 17:18:24,564 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:18:24,566 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:18:24,567 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:18:24,694 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-07-17 17:18:24,697 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-07-17 17:18:24,700 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-07-17 17:18:24,704 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-07-17 17:18:24,707 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-07-17 17:18:24,894 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-07-17 17:18:24,897 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:18:24,900 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:18:24,903 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:18:24,906 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:18:24,924 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-07-17 17:18:24,926 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-07-17 17:18:24,928 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-07-17 17:18:25,093 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:18:25,096 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:18:25,099 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-07-17 17:18:25,101 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:18:25,104 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-07-17 17:18:25,294 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-07-17 17:18:25,298 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-07-17 17:18:25,302 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-07-17 17:18:25,306 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-07-17 17:18:25,309 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-07-17 17:18:25,312 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-07-17 17:18:25,315 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-07-17 17:18:25,494 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-07-17 17:18:25,501 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-07-17 17:18:25,504 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-07-17 17:18:25,507 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-07-17 17:18:25,510 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-07-17 17:18:25,513 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-07-17 17:18:25,516 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:18:25,520 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-17 17:18:25,694 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-07-17 17:18:25,697 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-17 17:18:25,701 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-17 17:18:25,705 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-17 17:18:25,708 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-17 17:18:25,893 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-17 17:18:25,894 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-17 17:18:25,897 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:18:25,899 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:18:25,902 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:18:25,904 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-17 17:18:25,907 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 87].
2019-07-17 17:18:26,093 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-17 17:18:26,112 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-17 17:18:26,115 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-17 17:18:26,117 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-17 17:18:26,118 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-17 17:18:26,294 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:18:26,298 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 103].
2019-07-17 17:18:26,302 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-17 17:18:26,306 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-17 17:18:26,494 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-17 17:18:26,498 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-17 17:18:26,501 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:18:26,505 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-17 17:18:26,509 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:18:26,512 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:18:26,517 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-17 17:18:26,694 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-17 17:18:26,697 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-17 17:18:26,701 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-17 17:18:26,704 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-17 17:18:26,712 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-17 17:18:26,714 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-17 17:18:26,979 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-17 17:18:26,981 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-17 17:18:27,005 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:18:27,007 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:18:27,008 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-17 17:18:27,009 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:18:27,010 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 95].
2019-07-17 17:18:27,094 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-17 17:18:27,097 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-17 17:18:27,101 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-17 17:18:27,104 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-17 17:18:27,107 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:18:27,294 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:18:27,297 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:18:27,301 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:18:27,305 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-17 17:18:27,308 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-17 17:18:27,311 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-17 17:18:27,315 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-17 17:18:27,494 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-17 17:18:27,497 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-17 17:18:27,501 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:18:27,504 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-17 17:18:27,507 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-17 17:18:27,695 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-17 17:18:27,699 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-17 17:18:27,703 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-17 17:18:27,705 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-17 17:18:27,706 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-17 17:18:27,708 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-17 17:18:27,710 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-17 17:18:27,895 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-17 17:18:27,898 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-17 17:18:27,902 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-17 17:18:27,906 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-17 17:18:27,909 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-17 17:18:27,914 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-17 17:18:27,920 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-17 17:18:27,924 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-17 17:18:28,093 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-17 17:18:28,096 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-17 17:18:28,099 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-17 17:18:28,103 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-17 17:18:28,106 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-17 17:18:28,109 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-17 17:18:28,112 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-17 17:18:28,115 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-17 17:18:28,294 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-07-17 17:18:28,297 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-17 17:18:28,300 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-07-17 17:18:28,303 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:18:28,305 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:18:28,307 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:18:28,309 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-07-17 17:18:32,782 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-07-17 17:18:32,785 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-07-17 17:18:32,814 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-07-17 17:18:32,815 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
