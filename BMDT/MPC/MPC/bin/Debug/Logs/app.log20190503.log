2019-05-03 11:09:23,520 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:09:23,557 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:09:23,565 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:09:23,569 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 11:09:23,571 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 11:09:23,572 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:09:23,574 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:09:23,575 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:09:23,576 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:09:23,577 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:09:23,578 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:09:23,579 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:09:23,728 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:09:23,731 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:09:23,767 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:09:23,774 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:09:23,775 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:09:23,777 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:09:23,781 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:09:23,782 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:09:23,783 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:09:23,786 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:09:23,928 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:09:23,931 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:09:23,934 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:09:23,937 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:09:23,941 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:09:23,944 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:09:23,946 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:09:23,950 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:09:24,127 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:09:24,134 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:09:24,136 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:09:24,139 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:09:24,142 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:09:24,170 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:09:24,174 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:09:24,177 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:09:24,333 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:09:24,339 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:09:24,343 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:09:24,346 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:09:24,349 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:09:24,353 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:09:24,529 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:09:24,538 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:09:24,542 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:09:24,550 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:09:24,556 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:09:24,559 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:09:24,729 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:09:24,749 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:09:24,752 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:09:24,755 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:09:24,758 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:09:24,927 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:09:24,931 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:09:24,934 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:09:24,946 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:09:24,951 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:09:24,963 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:09:24,966 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:09:25,128 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:09:25,184 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:09:25,186 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:09:25,187 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:09:25,188 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:09:25,189 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:09:25,189 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:09:25,327 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:09:25,330 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:09:25,333 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:09:25,336 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:09:25,526 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:09:25,527 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:09:25,528 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:09:25,530 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:09:25,531 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:09:25,532 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:09:25,533 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:09:25,535 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:09:25,727 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:09:25,729 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:09:25,741 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:09:25,744 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:09:25,927 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:09:25,930 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:09:25,944 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:09:25,947 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:09:25,950 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:09:25,952 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:09:26,513 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:09:26,681 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:09:26,684 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:09:26,687 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:09:26,690 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:09:26,693 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:09:26,696 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:09:26,699 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:09:26,883 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:09:26,886 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:09:26,889 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:09:26,892 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:09:26,897 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:09:26,899 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:09:26,902 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:09:26,904 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:09:27,082 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:09:27,145 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:09:27,146 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:09:27,147 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:09:27,283 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:09:27,286 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:09:27,288 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:09:27,290 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:09:27,292 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:09:27,294 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:09:27,296 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:09:27,298 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:09:27,482 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:09:27,485 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:09:27,489 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:09:27,492 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:09:27,681 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:09:27,692 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:09:27,727 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:09:27,728 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:09:27,730 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:09:27,731 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:09:27,882 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:09:27,885 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:09:27,888 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:09:27,891 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:09:27,894 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:09:27,897 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:09:27,900 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:09:28,081 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:09:28,084 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:09:28,087 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:09:28,090 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:09:28,093 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:09:28,280 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:09:28,282 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:09:28,283 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:09:28,285 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:09:28,287 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:09:28,288 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:09:28,290 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:09:28,291 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:09:28,292 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:09:28,482 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:09:28,485 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:09:28,488 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:09:28,491 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:09:28,682 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:09:28,686 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:09:28,690 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:09:28,693 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:09:28,695 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:09:28,698 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:09:28,704 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:09:28,880 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:09:28,882 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:09:28,883 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:09:28,884 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:09:28,886 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:09:28,887 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:09:28,888 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:09:29,082 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:09:29,085 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:09:29,089 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:09:29,092 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:09:29,118 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:09:29,120 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:09:29,282 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:09:29,285 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:09:29,289 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:09:29,295 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:09:29,298 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:09:29,302 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:09:29,305 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:09:29,308 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:09:29,481 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:09:29,484 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:09:29,487 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:09:29,489 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:09:29,492 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:09:29,494 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:09:29,497 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:09:29,499 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:10:03,409 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:10:03,426 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:10:03,429 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:10:03,436 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:10:13,999 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:10:14,003 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:10:14,005 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:10:14,008 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:10:22,657 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:10:22,660 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:10:22,663 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:10:22,666 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:10:28,624 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:10:28,627 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:10:28,630 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:10:28,633 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:10:31,231 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:10:31,234 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:10:31,237 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:10:31,240 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:11:31,664 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:11:31,668 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:11:31,671 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:11:31,674 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:12:13,368 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:12:13,372 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:12:13,375 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:12:13,378 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:12:57,027 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:12:57,070 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:12:57,079 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:12:57,082 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 11:12:57,084 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 11:12:57,085 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:12:57,086 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:12:57,087 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:12:57,088 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:12:57,089 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:12:57,090 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:12:57,091 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:12:57,243 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:12:57,246 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:12:57,283 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:12:57,288 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:12:57,290 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:12:57,291 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:12:57,296 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:12:57,297 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:12:57,298 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:12:57,301 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:12:57,443 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:12:57,446 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:12:57,449 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:12:57,452 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:12:57,455 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:12:57,458 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:12:57,460 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:12:57,463 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:12:57,643 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:12:57,649 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:12:57,651 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:12:57,654 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:12:57,657 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:12:57,684 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:12:57,687 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:12:57,690 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:12:57,848 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:12:57,851 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:12:57,854 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:12:57,858 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:12:57,864 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:12:57,879 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:12:58,045 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:12:58,053 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:12:58,056 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:12:58,063 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:12:58,067 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:12:58,069 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:12:58,245 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:12:58,248 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:12:58,264 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:12:58,267 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:12:58,269 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:12:58,443 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:12:58,447 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:12:58,450 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:12:58,462 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:12:58,466 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:12:58,469 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:12:58,472 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:12:58,642 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:12:58,675 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:12:58,676 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:12:58,677 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:12:58,679 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:12:58,680 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:12:58,681 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:12:58,843 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:12:58,846 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:12:58,849 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:12:58,853 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:12:59,043 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:12:59,046 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:12:59,049 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:12:59,052 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:12:59,054 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:12:59,057 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:12:59,060 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:12:59,062 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:12:59,243 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:12:59,246 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:12:59,254 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:12:59,257 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:12:59,443 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:12:59,446 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:12:59,460 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:12:59,463 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:12:59,466 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:12:59,469 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:12:59,987 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:13:00,167 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:13:00,170 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:13:00,174 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:13:00,178 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:13:00,181 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:13:00,184 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:13:00,187 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:13:00,369 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:13:00,372 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:13:00,375 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:13:00,378 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:13:00,383 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:13:00,386 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:13:00,389 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:13:00,392 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:13:00,568 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:13:00,625 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:13:00,627 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:13:00,628 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:13:00,767 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:13:00,768 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:13:00,770 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:13:00,772 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:13:00,774 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:13:00,776 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:13:00,777 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:13:00,779 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:13:00,967 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:13:00,973 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:13:00,975 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:13:00,977 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:13:01,168 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:13:01,183 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:13:01,220 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:13:01,221 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:13:01,222 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:13:01,223 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:13:01,367 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:13:01,368 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:13:01,370 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:13:01,372 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:13:01,374 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:13:01,376 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:13:01,378 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:13:01,568 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:13:01,571 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:13:01,575 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:13:01,578 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:13:01,581 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:13:01,768 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:13:01,771 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:13:01,774 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:13:01,778 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:13:01,781 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:13:01,785 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:13:01,788 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:13:01,791 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:13:01,794 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:13:01,968 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:13:01,971 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:13:01,974 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:13:01,978 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:13:02,168 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:13:02,172 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:13:02,175 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:13:02,177 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:13:02,179 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:13:02,181 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:13:02,186 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:13:02,368 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:13:02,371 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:13:02,373 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:13:02,376 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:13:02,379 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:13:02,382 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:13:02,384 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:13:02,568 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:13:02,572 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:13:02,575 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:13:02,600 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:13:02,603 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:13:02,605 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:13:02,767 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:13:02,774 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:13:02,778 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:13:02,784 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:13:02,787 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:13:02,790 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:13:02,792 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:13:02,794 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:13:07,835 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:13:07,836 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:13:07,838 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:13:07,839 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:13:07,840 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:13:07,842 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:13:07,843 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:13:07,844 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:14:07,307 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:14:07,308 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:14:07,310 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:14:07,313 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:15:33,570 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:15:33,608 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:15:33,616 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:15:33,620 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 11:15:33,622 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 11:15:33,623 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:15:33,624 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:15:33,626 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:15:33,627 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:15:33,628 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:15:33,629 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:15:33,630 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:15:33,804 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:15:33,809 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:15:33,841 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:15:33,850 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:15:33,852 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:15:33,854 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:15:33,858 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:15:33,860 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:15:33,861 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:15:33,863 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:15:34,004 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:15:34,008 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:15:34,011 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:15:34,014 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:15:34,018 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:15:34,021 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:15:34,024 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:15:34,027 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:15:34,204 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:15:34,210 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:15:34,213 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:15:34,215 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:15:34,218 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:15:34,247 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:15:34,250 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:15:34,253 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:15:34,410 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:15:34,415 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:15:34,418 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:15:34,423 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:15:34,426 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:15:34,429 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:15:34,606 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:15:34,615 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:15:34,619 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:15:34,631 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:15:34,635 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:15:34,638 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:15:34,806 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:15:34,810 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:15:34,826 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:15:34,828 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:15:34,831 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:15:35,003 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:15:35,005 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:15:35,006 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:15:35,012 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:15:35,014 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:15:35,015 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:15:35,017 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:15:35,204 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:15:35,251 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:15:35,252 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:15:35,253 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:15:35,254 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:15:35,255 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:15:35,256 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:15:35,404 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:15:35,407 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:15:35,410 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:15:35,413 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:15:35,605 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:15:35,609 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:15:35,612 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:15:35,614 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:15:35,617 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:15:35,619 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:15:35,622 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:15:35,624 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:15:35,804 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:15:35,807 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:15:35,815 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:15:35,818 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:15:36,004 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:15:36,007 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:15:36,019 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:15:36,022 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:15:36,025 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:15:36,028 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:15:36,580 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:15:36,583 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:15:36,584 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:15:36,585 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:15:36,586 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:15:36,587 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:15:36,588 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:15:36,588 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:15:36,784 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:15:36,785 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:15:36,787 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:15:36,788 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:15:36,791 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:15:36,793 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:15:36,794 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:15:36,985 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:15:36,990 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:15:37,036 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:15:37,038 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:15:37,039 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:15:37,185 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:15:37,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:15:37,191 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:15:37,194 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:15:37,197 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:15:37,200 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:15:37,203 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:15:37,206 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:15:37,385 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:15:37,387 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:15:37,392 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:15:37,585 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:15:37,588 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:15:37,602 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:15:37,633 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:15:37,635 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:15:37,636 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:15:37,785 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:15:37,786 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:15:37,788 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:15:37,790 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:15:37,791 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:15:37,793 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:15:37,795 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:15:37,797 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:15:37,983 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:15:37,985 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:15:37,986 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:15:37,988 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:15:37,989 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:15:38,185 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:15:38,188 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:15:38,191 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:15:38,195 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:15:38,198 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:15:38,201 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:15:38,204 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:15:38,207 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:15:38,385 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:15:38,388 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:15:38,391 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:15:38,394 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:15:38,583 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:15:38,585 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:15:38,587 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:15:38,589 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:15:38,591 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:15:38,593 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:15:38,594 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:15:38,595 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:15:38,785 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:15:38,788 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:15:38,791 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:15:38,794 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:15:38,797 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:15:38,800 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:15:38,803 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:15:38,985 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:15:38,988 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:15:38,992 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:15:39,014 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:15:39,016 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:15:39,185 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:15:39,188 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:15:39,191 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:15:39,195 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:15:39,201 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:15:39,205 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:15:39,208 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:15:39,211 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:15:39,385 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:15:43,530 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:15:43,532 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:15:43,533 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:15:43,535 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:15:43,536 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:15:43,538 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:15:43,539 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:15:43,540 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:15:46,661 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:15:46,664 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:15:46,667 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:15:46,670 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:20:06,562 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:20:06,600 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:20:06,608 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:20:06,612 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 11:20:06,614 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 11:20:06,615 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:20:06,617 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:20:06,618 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:20:06,619 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:20:06,620 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:20:06,621 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:20:06,622 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:20:06,785 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:20:06,788 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:20:06,824 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:20:06,828 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:20:06,830 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:20:06,832 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:20:06,836 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:20:06,837 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:20:06,839 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:20:06,841 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:20:06,985 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:20:06,988 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:20:06,992 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:20:06,995 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:20:06,998 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:20:07,001 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:20:07,004 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:20:07,006 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:20:07,184 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:20:07,189 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:20:07,192 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:20:07,194 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:20:07,197 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:20:07,222 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:20:07,225 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:20:07,228 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:20:07,389 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:20:07,394 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:20:07,397 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:20:07,402 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:20:07,408 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:20:07,413 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:20:07,586 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:20:07,595 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:20:07,599 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:20:07,607 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:20:07,615 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:20:07,618 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:20:07,786 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:20:07,807 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:20:07,810 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:20:07,813 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:20:07,814 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:20:07,983 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:20:07,985 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:20:07,987 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:20:07,993 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:20:07,995 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:20:07,997 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:20:07,998 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:20:08,185 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:20:08,251 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:20:08,252 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:20:08,253 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:20:08,254 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:20:08,256 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:20:08,257 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:20:08,384 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:20:08,386 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:20:08,389 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:20:08,393 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:20:08,584 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:20:08,589 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:20:08,591 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:20:08,594 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:20:08,596 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:20:08,598 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:20:08,601 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:20:08,603 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:20:08,785 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:20:08,787 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:20:08,795 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:20:08,799 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:20:08,984 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:20:08,987 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:20:09,001 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:20:09,004 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:20:09,007 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:20:09,010 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:20:09,513 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:20:09,585 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:20:09,588 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:20:09,591 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:20:09,594 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:20:09,597 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:20:09,600 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:20:09,785 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:20:09,789 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:20:09,793 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:20:09,795 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:20:09,798 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:20:09,803 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:20:09,806 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:20:09,808 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:20:09,984 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:20:09,987 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:20:10,047 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:20:10,048 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:20:10,050 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:20:10,185 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:20:10,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:20:10,191 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:20:10,195 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:20:10,198 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:20:10,201 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:20:10,203 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:20:10,207 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:20:10,385 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:20:10,388 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:20:10,392 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:20:10,585 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:20:10,588 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:20:10,601 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:20:10,653 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:20:10,655 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:20:10,658 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:20:10,785 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:20:10,788 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:20:10,791 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:20:10,796 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:20:10,799 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:20:10,802 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:20:10,804 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:20:10,807 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:20:10,985 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:20:10,988 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:20:10,991 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:20:10,994 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:20:10,999 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:20:11,185 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:20:11,188 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:20:11,191 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:20:11,195 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:20:11,199 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:20:11,202 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:20:11,204 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:20:11,207 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:20:11,385 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:20:11,388 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:20:11,390 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:20:11,393 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:20:11,585 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:20:11,588 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:20:11,593 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:20:11,597 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:20:11,600 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:20:11,603 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:20:11,606 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:20:11,613 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:20:11,784 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:20:11,787 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:20:11,790 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:20:11,793 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:20:11,795 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:20:11,798 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:20:11,801 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:20:11,984 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:20:11,988 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:20:11,991 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:20:11,993 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:20:12,015 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:20:12,185 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:20:12,188 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:20:12,190 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:20:12,194 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:20:12,198 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:20:12,201 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:20:12,203 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:20:12,206 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:20:12,385 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:20:32,937 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:20:32,942 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:20:32,943 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:20:32,944 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:20:32,945 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:20:32,946 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:20:32,947 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:20:32,948 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:20:36,367 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:20:36,371 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:20:36,374 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:20:36,377 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:29:24,383 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:29:24,420 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:29:24,428 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:29:24,431 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 11:29:24,433 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 11:29:24,435 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:29:24,436 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:29:24,437 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:29:24,438 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:29:24,439 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:29:24,440 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:29:24,441 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:29:24,613 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:29:24,617 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:29:24,663 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:29:24,689 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:29:24,692 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:29:24,694 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:29:24,700 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:29:24,702 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:29:24,703 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:29:24,706 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:29:24,811 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:29:24,815 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:29:24,818 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:29:24,822 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:29:24,825 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:29:24,829 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:29:24,832 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:29:24,836 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:29:25,011 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:29:25,017 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:29:25,020 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:29:25,023 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:29:25,026 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:29:25,063 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:29:25,066 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:29:25,068 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:29:25,217 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:29:25,222 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:29:25,225 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:29:25,231 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:29:25,237 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:29:25,243 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:29:25,412 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:29:25,422 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:29:25,426 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:29:25,434 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:29:25,439 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:29:25,443 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:29:25,612 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:29:25,634 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:29:25,636 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:29:25,638 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:29:25,640 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:29:25,811 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:29:25,815 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:29:25,818 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:29:25,831 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:29:25,836 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:29:25,839 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:29:25,841 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:29:26,011 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:29:26,075 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:29:26,076 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:29:26,078 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:29:26,079 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:29:26,080 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:29:26,081 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:29:26,210 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:29:26,213 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:29:26,215 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:29:26,219 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:29:26,411 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:29:26,415 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:29:26,418 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:29:26,422 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:29:26,424 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:29:26,427 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:29:26,430 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:29:26,433 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:29:26,611 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:29:26,614 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:29:26,622 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:29:26,625 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:29:26,811 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:29:26,814 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:29:26,828 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:29:26,832 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:29:26,834 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:29:26,836 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:29:27,317 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:29:27,500 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:29:27,502 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:29:27,503 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:29:27,505 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:29:27,507 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:29:27,508 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:29:27,510 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:29:27,702 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:29:27,705 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:29:27,708 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:29:27,712 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:29:27,718 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:29:27,721 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:29:27,724 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:29:27,727 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:29:27,901 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:29:27,958 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:29:27,960 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:29:27,961 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:29:28,101 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:29:28,104 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:29:28,107 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:29:28,110 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:29:28,113 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:29:28,117 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:29:28,120 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:29:28,123 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:29:28,300 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:29:28,303 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:29:28,305 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:29:28,306 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:29:28,501 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:29:28,514 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:29:28,567 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:29:28,570 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:29:28,571 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:29:28,572 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:29:28,701 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:29:28,704 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:29:28,708 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:29:28,710 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:29:28,714 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:29:28,717 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:29:28,720 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:29:28,901 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:29:28,904 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:29:28,908 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:29:28,911 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:29:28,914 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:29:29,100 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:29:29,103 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:29:29,106 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:29:29,109 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:29:29,112 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:29:29,114 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:29:29,115 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:29:29,116 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:29:29,117 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:29:29,300 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:29:29,303 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:29:29,310 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:29:29,314 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:29:29,501 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:29:29,505 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:29:29,509 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:29:29,512 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:29:29,515 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:29:29,518 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:29:29,525 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:29:29,701 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:29:29,704 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:29:29,707 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:29:29,710 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:29:29,713 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:29:29,716 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:29:29,719 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:29:29,901 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:29:29,905 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:29:29,908 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:29:29,911 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:29:29,932 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:29:29,935 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:29:30,100 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:29:30,103 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:29:30,105 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:29:30,108 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:29:30,111 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:29:30,112 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:29:30,114 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:29:30,116 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:29:30,301 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:29:30,303 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:29:30,306 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:29:30,309 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:29:30,312 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:29:30,314 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:29:30,316 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:29:30,318 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:29:34,663 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:29:34,666 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:29:34,670 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:29:34,673 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:31:20,639 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:31:20,676 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:31:20,684 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:31:20,687 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 11:31:20,689 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 11:31:20,691 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:31:20,692 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:31:20,693 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:31:20,694 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:31:20,695 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:31:20,696 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:31:20,697 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:31:20,870 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:31:20,873 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:31:20,910 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:31:20,923 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:31:20,925 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:31:20,926 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:31:20,930 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:31:20,932 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:31:20,933 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:31:20,936 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:31:21,070 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:31:21,073 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:31:21,076 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:31:21,080 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:31:21,083 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:31:21,086 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:31:21,089 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:31:21,092 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:31:21,269 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:31:21,275 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:31:21,278 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:31:21,281 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:31:21,284 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:31:21,316 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:31:21,319 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:31:21,321 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:31:21,472 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:31:21,475 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:31:21,478 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:31:21,482 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:31:21,486 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:31:21,491 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:31:21,671 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:31:21,680 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:31:21,684 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:31:21,692 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:31:21,698 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:31:21,702 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:31:21,871 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:31:21,875 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:31:21,891 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:31:21,894 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:31:21,896 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:31:22,069 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:31:22,073 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:31:22,076 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:31:22,089 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:31:22,093 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:31:22,095 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:31:22,097 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:31:22,269 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:31:22,328 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:31:22,329 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:31:22,331 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:31:22,332 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:31:22,333 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:31:22,334 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:31:22,469 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:31:22,472 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:31:22,475 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:31:22,479 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:31:22,669 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:31:22,672 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:31:22,675 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:31:22,678 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:31:22,680 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:31:22,683 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:31:22,686 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:31:22,689 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:31:22,869 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:31:22,872 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:31:22,879 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:31:22,883 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:31:23,069 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:31:23,072 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:31:23,085 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:31:23,088 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:31:23,091 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:31:23,094 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:31:23,551 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:31:23,728 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:31:23,730 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:31:23,732 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:31:23,734 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:31:23,736 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:31:23,738 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:31:23,741 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:31:23,931 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:31:23,934 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:31:23,937 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:31:23,940 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:31:23,946 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:31:23,949 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:31:23,952 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:31:23,954 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:31:24,130 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:31:24,186 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:31:24,188 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:31:24,190 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:31:24,328 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:31:24,330 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:31:24,332 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:31:24,334 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:31:24,336 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:31:24,338 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:31:24,341 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:31:24,343 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:31:24,530 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:31:24,533 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:31:24,537 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:31:24,540 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:31:24,730 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:31:24,747 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:31:24,783 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:31:24,785 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:31:24,786 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:31:24,788 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:31:24,930 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:31:24,933 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:31:24,936 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:31:24,939 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:31:24,942 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:31:24,945 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:31:24,947 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:31:25,129 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:31:25,132 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:31:25,135 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:31:25,137 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:31:25,140 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:31:25,330 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:31:25,333 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:31:25,336 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:31:25,341 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:31:25,344 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:31:25,352 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:31:25,355 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:31:25,359 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:31:25,362 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:31:25,530 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:31:25,533 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:31:25,536 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:31:25,540 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:31:25,730 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:31:25,735 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:31:25,739 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:31:25,742 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:31:25,745 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:31:25,749 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:31:25,755 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:31:25,929 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:31:25,931 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:31:25,933 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:31:25,936 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:31:25,938 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:31:25,940 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:31:25,943 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:31:26,134 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:31:26,143 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:31:26,145 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:31:26,161 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:31:26,163 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:31:26,165 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:31:26,330 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:31:26,333 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:31:26,337 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:31:26,343 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:31:26,347 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:31:26,350 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:31:26,352 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:31:26,355 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:31:26,529 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:31:26,532 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:31:26,535 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:31:26,537 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:31:26,540 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:31:26,542 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:31:26,545 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:31:26,547 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:32:31,906 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:32:31,944 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:32:31,952 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:32:31,956 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 11:32:31,958 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 11:32:31,959 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:32:31,960 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:32:31,961 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:32:31,962 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:32:31,964 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:32:31,965 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:32:31,966 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:32:32,141 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 11:32:32,144 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:32:32,188 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:32:32,198 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:32:32,203 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:32:32,204 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:32:32,209 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:32:32,211 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:32:32,212 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:32:32,215 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:32:32,342 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:32:32,345 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:32:32,348 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:32:32,352 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:32:32,355 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:32:32,357 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:32:32,360 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:32:32,363 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:32:32,541 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:32:32,547 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:32:32,550 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:32:32,553 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:32:32,556 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:32:32,577 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:32:32,581 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:32:32,583 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:32:32,744 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:32:32,746 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:32:32,748 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:32:32,750 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:32:32,752 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:32:32,755 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:32:32,943 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:32:32,952 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:32:32,956 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:32:32,963 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:32:32,972 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:32:32,976 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:32:33,143 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:32:33,147 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:32:33,164 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:32:33,166 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:32:33,168 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:32:33,341 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:32:33,345 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:32:33,348 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:32:33,360 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:32:33,365 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:32:33,368 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:32:33,371 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:32:33,542 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:32:33,604 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:32:33,606 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:32:33,607 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:32:33,608 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:32:33,609 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:32:33,610 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:32:33,741 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:32:33,747 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:32:33,750 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:32:33,754 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:32:33,941 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:32:33,946 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:32:33,948 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:32:33,951 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:32:33,954 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:32:33,956 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:32:33,960 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:32:33,963 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:32:34,141 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:32:34,144 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:32:34,152 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:32:34,155 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:32:34,341 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:32:34,344 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:32:34,358 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:32:34,361 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:32:34,364 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:32:34,366 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:32:34,864 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:32:34,941 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:32:34,944 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:32:34,947 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:32:34,949 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:32:34,952 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:32:34,955 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:32:35,142 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:32:35,146 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:32:35,150 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:32:35,153 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:32:35,156 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:32:35,161 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:32:35,164 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:32:35,167 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:32:35,341 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:32:35,344 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:32:35,402 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:32:35,404 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:32:35,405 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:32:35,542 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:32:35,545 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:32:35,548 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:32:35,551 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:32:35,554 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:32:35,558 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:32:35,561 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:32:35,563 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:32:35,742 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:32:35,745 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:32:35,749 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:32:35,942 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:32:35,945 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:32:35,961 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:32:36,011 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:32:36,013 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:32:36,015 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:32:36,141 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:32:36,144 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:32:36,147 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:32:36,149 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:32:36,152 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:32:36,154 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:32:36,157 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:32:36,159 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:32:36,342 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:32:36,346 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:32:36,350 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:32:36,354 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:32:36,357 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:32:36,542 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:32:36,545 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:32:36,549 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:32:36,553 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:32:36,556 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:32:36,560 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:32:36,563 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:32:36,566 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:32:36,741 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:32:36,745 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:32:36,747 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:32:36,750 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:32:36,942 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:32:36,946 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:32:36,950 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:32:36,954 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:32:36,957 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:32:36,961 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:32:36,964 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:32:36,971 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:32:37,140 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:32:37,141 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:32:37,142 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:32:37,145 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:32:37,146 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:32:37,147 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:32:37,149 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:32:37,340 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:32:37,341 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:32:37,343 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:32:37,351 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:32:37,353 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:32:37,542 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:32:37,545 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:32:37,548 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:32:37,553 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:32:37,558 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:32:37,562 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:32:37,565 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:32:37,568 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:32:37,741 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:32:37,744 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:32:37,747 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:32:37,750 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:32:37,753 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:32:37,756 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:32:37,759 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:32:37,761 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:32:37,941 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:32:44,921 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:32:44,925 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:32:44,928 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:32:44,931 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:34:43,545 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:34:43,582 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:34:43,591 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:34:43,594 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-05-03 11:34:43,596 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-05-03 11:34:43,598 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:34:43,599 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:34:43,600 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:34:43,601 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:34:43,603 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-05-03 11:34:43,604 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:34:43,605 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:34:43,779 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-05-03 11:34:43,782 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:34:43,851 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:34:43,898 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:34:43,900 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:34:43,903 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:34:43,910 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:34:43,912 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:34:43,913 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:34:43,916 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:34:43,976 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:34:43,979 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:34:43,982 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:34:43,986 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:34:43,989 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:34:43,992 [Thread: 8       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:34:43,995 [Thread: 8       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:34:43,998 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:34:44,175 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:34:44,181 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:34:44,184 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:34:44,187 [Thread: 8       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:34:44,190 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:34:44,214 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:34:44,218 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:34:44,221 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:34:44,381 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:34:44,385 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:34:44,389 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:34:44,394 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:34:44,400 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:34:44,406 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:34:44,575 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:34:44,579 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:34:44,580 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:34:44,584 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:34:44,587 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:34:44,589 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:34:44,777 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:34:44,781 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:34:44,798 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:34:44,801 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:34:44,803 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:34:44,975 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:34:44,979 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:34:44,982 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:34:44,994 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:34:44,998 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:34:45,001 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:34:45,004 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:34:45,176 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:34:45,228 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:34:45,229 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:34:45,230 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:34:45,231 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:34:45,232 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:34:45,232 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:34:45,375 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:34:45,378 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:34:45,381 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:34:45,385 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:34:45,575 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:34:45,578 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:34:45,581 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:34:45,585 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:34:45,587 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:34:45,594 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:34:45,596 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:34:45,613 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:34:45,775 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:34:45,778 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:34:45,786 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:34:45,789 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:34:45,975 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:34:45,978 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:34:45,991 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:34:45,995 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:34:45,997 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:34:46,000 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:34:46,476 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:34:46,477 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:34:46,478 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:34:46,665 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:34:46,668 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:34:46,671 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:34:46,673 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:34:46,678 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:34:46,688 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:34:46,692 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:34:46,866 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:34:46,869 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:34:46,874 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:34:46,877 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:34:46,879 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:34:46,881 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:34:47,066 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:34:47,126 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:34:47,128 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:34:47,129 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:34:47,130 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:34:47,131 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:34:47,265 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:34:47,268 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:34:47,271 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:34:47,274 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:34:47,277 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:34:47,279 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:34:47,465 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:34:47,468 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:34:47,471 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:34:47,474 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:34:47,476 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:34:47,489 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:34:47,720 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:34:47,721 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:34:47,722 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:34:47,723 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:34:47,724 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:34:47,865 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:34:47,869 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:34:47,872 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:34:47,875 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:34:47,878 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:34:47,881 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:34:48,064 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:34:48,065 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:34:48,066 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:34:48,067 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:34:48,068 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:34:48,069 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:34:48,070 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:34:48,264 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:34:48,265 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:34:48,266 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:34:48,267 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:34:48,268 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:34:48,269 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:34:48,270 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:34:48,271 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:34:48,465 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:34:48,468 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:34:48,470 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:34:48,473 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:34:48,476 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:34:48,666 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:34:48,669 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:34:48,672 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:34:48,676 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:34:48,682 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:34:48,685 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:34:48,688 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:34:48,866 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:34:48,869 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:34:48,872 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:34:48,874 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:34:48,877 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:34:49,066 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:34:49,069 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:34:49,072 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:34:49,094 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:34:49,096 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:34:49,097 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:34:49,099 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:34:49,265 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:34:49,269 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:34:49,273 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:34:49,276 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:34:49,277 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:34:49,279 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:34:49,281 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:34:49,282 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:34:49,465 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:34:49,468 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:34:49,471 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:34:49,473 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:34:49,476 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:34:49,478 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:34:49,481 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:34:55,754 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:34:55,757 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:34:55,760 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:34:55,763 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:36:37,897 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:36:37,935 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:36:37,943 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:36:37,947 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 11:36:37,949 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 11:36:37,950 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:36:37,952 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:36:37,953 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:36:37,954 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:36:37,955 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 11:36:37,956 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:36:37,958 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:36:38,109 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 11:36:38,111 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:36:38,150 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:36:38,156 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:36:38,158 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:36:38,160 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:36:38,166 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:36:38,167 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:36:38,168 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:36:38,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:36:38,309 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:36:38,312 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:36:38,316 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:36:38,319 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:36:38,323 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:36:38,325 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:36:38,326 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:36:38,329 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:36:38,508 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:36:38,514 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:36:38,517 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:36:38,520 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:36:38,523 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:36:38,546 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:36:38,549 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:36:38,552 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:36:38,714 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:36:38,718 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:36:38,722 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:36:38,727 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:36:38,733 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:36:38,739 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:36:38,910 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:36:38,919 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:36:38,922 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:36:38,930 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:36:38,935 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:36:38,939 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:36:39,110 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:36:39,114 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:36:39,131 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:36:39,133 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:36:39,135 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:36:39,308 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:36:39,312 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:36:39,315 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:36:39,326 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:36:39,331 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:36:39,334 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:36:39,337 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:36:39,508 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:36:39,556 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:36:39,557 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:36:39,558 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:36:39,559 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:36:39,560 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:36:39,561 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:36:39,709 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:36:39,711 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:36:39,714 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:36:39,718 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:36:39,908 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:36:39,911 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:36:39,914 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:36:39,916 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:36:39,919 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:36:39,922 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:36:39,925 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:36:39,927 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:36:40,108 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:36:40,109 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:36:40,114 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:36:40,116 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:36:40,308 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:36:40,311 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:36:40,323 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:36:40,326 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:36:40,329 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:36:40,332 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:36:40,844 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:36:40,845 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:36:41,029 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:36:41,032 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:36:41,036 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:36:41,039 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:36:41,042 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:36:41,046 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:36:41,050 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:36:41,229 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:36:41,234 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:36:41,236 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:36:41,240 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:36:41,242 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:36:41,244 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:36:41,246 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:36:41,430 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:36:41,502 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:36:41,504 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:36:41,506 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:36:41,508 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:36:41,630 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:36:41,633 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:36:41,636 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:36:41,639 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:36:41,642 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:36:41,645 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:36:41,648 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:36:41,832 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:36:41,843 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:36:41,846 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:36:41,849 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:36:41,852 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:36:42,043 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:36:42,116 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:36:42,117 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:36:42,118 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:36:42,120 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:36:42,121 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:36:42,230 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:36:42,233 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:36:42,236 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:36:42,239 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:36:42,242 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:36:42,245 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:36:42,428 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:36:42,430 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:36:42,431 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:36:42,432 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:36:42,433 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:36:42,434 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:36:42,629 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:36:42,632 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:36:42,636 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:36:42,638 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:36:42,641 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:36:42,643 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:36:42,646 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:36:42,648 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:36:42,830 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:36:42,833 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:36:42,836 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:36:42,840 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:36:43,030 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:36:43,034 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:36:43,038 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:36:43,041 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:36:43,044 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:36:43,047 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:36:43,053 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:36:43,056 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:36:43,230 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:36:43,233 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:36:43,236 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:36:43,239 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:36:43,242 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:36:43,244 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:36:43,430 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:36:43,433 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:36:43,437 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:36:43,458 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:36:43,460 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:36:43,462 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:36:43,630 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:36:43,633 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:36:43,637 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:36:43,647 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:36:43,650 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:36:43,654 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:36:43,657 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:36:43,660 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:36:43,662 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:36:43,830 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:36:43,832 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:36:43,835 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:36:43,838 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:36:43,841 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:36:43,843 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:36:43,846 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:36:51,844 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:36:51,848 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:36:51,851 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:36:51,854 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:44:00,864 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:44:00,903 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:44:00,911 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:44:00,915 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 11:44:00,917 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 11:44:00,918 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:44:00,920 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:44:00,921 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:44:00,922 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:44:00,923 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 11:44:00,924 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:44:00,926 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:44:01,074 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 11:44:01,077 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:44:01,115 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:44:01,124 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:44:01,125 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:44:01,127 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:44:01,131 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:44:01,132 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:44:01,133 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:44:01,136 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:44:01,272 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:44:01,275 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:44:01,278 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:44:01,280 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:44:01,283 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:44:01,286 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:44:01,288 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:44:01,291 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:44:01,474 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:44:01,480 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:44:01,483 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:44:01,487 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:44:01,490 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:44:01,520 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:44:01,523 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:44:01,526 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:44:01,679 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:44:01,685 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:44:01,690 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:44:01,694 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:44:01,698 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:44:01,702 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:44:01,875 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:44:01,885 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:44:01,889 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:44:01,897 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:44:01,903 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:44:01,904 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:44:02,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:44:02,092 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:44:02,094 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:44:02,096 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:44:02,098 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:44:02,274 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:44:02,278 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:44:02,281 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:44:02,294 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:44:02,298 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:44:02,301 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:44:02,303 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:44:02,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:44:02,513 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:44:02,514 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:44:02,515 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:44:02,516 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:44:02,517 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:44:02,518 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:44:02,674 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:44:02,677 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:44:02,680 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:44:02,683 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:44:02,871 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:44:02,873 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:44:02,874 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:44:02,875 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:44:02,876 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:44:02,877 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:44:02,878 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:44:02,879 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:44:03,072 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:44:03,073 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:44:03,079 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:44:03,081 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:44:03,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:44:03,277 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:44:03,290 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:44:03,293 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:44:03,296 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:44:03,298 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:44:03,771 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:44:03,772 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:44:03,773 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:44:03,774 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:44:03,964 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:44:03,967 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:44:03,970 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:44:03,973 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:44:03,977 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:44:03,980 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:44:04,164 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:44:04,167 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:44:04,173 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:44:04,176 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:44:04,179 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:44:04,182 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:44:04,364 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:44:04,416 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:44:04,418 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:44:04,420 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:44:04,421 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:44:04,423 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:44:04,424 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:44:04,564 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:44:04,567 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:44:04,570 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:44:04,573 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:44:04,575 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:44:04,764 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:44:04,767 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:44:04,771 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:44:04,774 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:44:04,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:44:04,790 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:44:04,981 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:44:04,985 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:44:04,988 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:44:04,991 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:44:04,993 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:44:04,995 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:44:05,164 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:44:05,167 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:44:05,170 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:44:05,173 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:44:05,176 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:44:05,363 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:44:05,366 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:44:05,368 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:44:05,370 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:44:05,373 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:44:05,375 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:44:05,378 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:44:05,381 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:44:05,565 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:44:05,568 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:44:05,574 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:44:05,577 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:44:05,579 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:44:05,583 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:44:05,587 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:44:05,591 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:44:05,764 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:44:05,767 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:44:05,770 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:44:05,774 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:44:05,964 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:44:05,967 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:44:05,971 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:44:05,976 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:44:05,982 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:44:05,984 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:44:05,986 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:44:05,987 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:44:06,164 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:44:06,167 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:44:06,169 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:44:06,172 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:44:06,363 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:44:06,367 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:44:06,376 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:44:06,377 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:44:06,391 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:44:06,392 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:44:06,394 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:44:06,395 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:44:06,565 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:44:06,570 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:44:06,574 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:44:06,577 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:44:06,580 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:44:06,582 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:44:06,585 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:44:06,586 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:44:06,763 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:44:06,767 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:44:06,769 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:44:06,772 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:44:06,775 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:44:06,778 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:46:09,451 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:46:09,455 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:46:09,458 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:46:09,461 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:49:46,980 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 11:49:47,017 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 11:49:47,026 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 11:49:47,029 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 11:49:47,031 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 11:49:47,033 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 11:49:47,034 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 11:49:47,035 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 11:49:47,036 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 11:49:47,037 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 11:49:47,038 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:49:47,040 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 11:49:47,193 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 11:49:47,196 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 11:49:47,236 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 11:49:47,242 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 11:49:47,244 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 11:49:47,246 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 11:49:47,251 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 11:49:47,253 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 11:49:47,255 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 11:49:47,258 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 11:49:47,394 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 11:49:47,397 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 11:49:47,401 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 11:49:47,404 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 11:49:47,407 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 11:49:47,410 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 11:49:47,413 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 11:49:47,416 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 11:49:47,593 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 11:49:47,599 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 11:49:47,602 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 11:49:47,605 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 11:49:47,608 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 11:49:47,635 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:49:47,639 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 11:49:47,642 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 11:49:47,799 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 11:49:47,804 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 11:49:47,807 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 11:49:47,825 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:49:47,832 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 11:49:47,836 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 11:49:47,995 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 11:49:48,004 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 11:49:48,008 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 11:49:48,016 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 11:49:48,022 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 11:49:48,025 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 11:49:48,195 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:49:48,216 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:49:48,219 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:49:48,222 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:49:48,225 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 11:49:48,392 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 11:49:48,394 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 11:49:48,395 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 11:49:48,400 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 11:49:48,403 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 11:49:48,404 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 11:49:48,405 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 11:49:48,594 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 11:49:48,645 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 11:49:48,647 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 11:49:48,648 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 11:49:48,649 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:49:48,650 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:49:48,651 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:49:48,794 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:49:48,796 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 11:49:48,799 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 11:49:48,803 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 11:49:48,993 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 11:49:48,996 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 11:49:48,999 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 11:49:49,002 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 11:49:49,004 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:49:49,007 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:49:49,009 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:49:49,012 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 11:49:49,194 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 11:49:49,197 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 11:49:49,205 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:49:49,208 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:49:49,393 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:49:49,396 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:49:49,408 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 11:49:49,412 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 11:49:49,414 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 11:49:49,417 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 11:49:49,972 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 11:49:50,155 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 11:49:50,159 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 11:49:50,163 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 11:49:50,166 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 11:49:50,170 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 11:49:50,173 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 11:49:50,175 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 11:49:50,352 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 11:49:50,355 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 11:49:50,358 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 11:49:50,361 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:49:50,367 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:49:50,370 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:49:50,373 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:49:50,377 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 11:49:50,551 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 11:49:50,610 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 11:49:50,612 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 11:49:50,613 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 11:49:50,751 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 11:49:50,754 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 11:49:50,757 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 11:49:50,760 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:49:50,763 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:49:50,767 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:49:50,770 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 11:49:50,773 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 11:49:50,951 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 11:49:50,954 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 11:49:50,956 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 11:49:50,959 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 11:49:51,151 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 11:49:51,164 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 11:49:51,203 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 11:49:51,204 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 11:49:51,205 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 11:49:51,207 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 11:49:51,351 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 11:49:51,354 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 11:49:51,357 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:49:51,360 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:49:51,363 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:49:51,366 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 11:49:51,369 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 11:49:51,549 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 11:49:51,551 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 11:49:51,552 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 11:49:51,553 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 11:49:51,555 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:49:51,751 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:49:51,754 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:49:51,758 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:49:51,762 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 11:49:51,764 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 11:49:51,767 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 11:49:51,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:49:51,771 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:49:51,774 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 11:49:51,950 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:49:51,953 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 11:49:51,961 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 11:49:51,965 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 11:49:52,150 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 11:49:52,153 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 11:49:52,155 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 11:49:52,158 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 11:49:52,160 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 11:49:52,162 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 11:49:52,167 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 11:49:52,351 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 11:49:52,354 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 11:49:52,357 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 11:49:52,360 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 11:49:52,363 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:49:52,365 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 11:49:52,368 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 11:49:52,551 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 11:49:52,555 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 11:49:52,558 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 11:49:52,562 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 11:49:52,584 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 11:49:52,587 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 11:49:52,757 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:49:52,759 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:49:52,761 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 11:49:52,764 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 11:49:52,767 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:49:52,768 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:49:52,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:49:52,771 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 11:49:52,958 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 11:49:52,961 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 11:49:52,964 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 11:49:52,967 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 11:49:52,970 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:49:52,973 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:49:52,976 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:49:52,978 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:49:57,504 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 11:49:57,507 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 11:49:57,510 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 11:49:57,513 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 11:49:57,616 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 11:49:57,618 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 11:49:57,619 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 11:49:57,620 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 12:03:20,732 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 12:03:20,787 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 12:03:20,796 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 12:03:20,800 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 12:03:20,802 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 12:03:20,803 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 12:03:20,804 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 12:03:20,805 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 12:03:20,806 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 12:03:20,807 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 12:03:20,808 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 12:03:20,809 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 12:03:20,945 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 12:03:20,948 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 12:03:20,983 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 12:03:20,988 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 12:03:20,991 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 12:03:20,992 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 12:03:20,996 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 12:03:20,997 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 12:03:20,998 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 12:03:21,001 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 12:03:21,146 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 12:03:21,149 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 12:03:21,152 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 12:03:21,155 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 12:03:21,158 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 12:03:21,161 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 12:03:21,164 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 12:03:21,167 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 12:03:21,345 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 12:03:21,351 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 12:03:21,353 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 12:03:21,355 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 12:03:21,357 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 12:03:21,380 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 12:03:21,383 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 12:03:21,386 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 12:03:21,546 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 12:03:21,548 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 12:03:21,550 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 12:03:21,552 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 12:03:21,555 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 12:03:21,558 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 12:03:21,747 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 12:03:21,756 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 12:03:21,760 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 12:03:21,767 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 12:03:21,773 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 12:03:21,776 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 12:03:21,947 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 12:03:21,967 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 12:03:21,969 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 12:03:21,972 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 12:03:21,973 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 12:03:22,145 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 12:03:22,149 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 12:03:22,152 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 12:03:22,164 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 12:03:22,169 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 12:03:22,172 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 12:03:22,175 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 12:03:22,345 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 12:03:22,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 12:03:22,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 12:03:22,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 12:03:22,410 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 12:03:22,411 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 12:03:22,412 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 12:03:22,545 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 12:03:22,548 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 12:03:22,551 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 12:03:22,554 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 12:03:22,745 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 12:03:22,748 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 12:03:22,752 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 12:03:22,754 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 12:03:22,757 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 12:03:22,759 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 12:03:22,762 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 12:03:22,764 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 12:03:22,945 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 12:03:22,948 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 12:03:22,956 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 12:03:22,960 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 12:03:23,145 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 12:03:23,147 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 12:03:23,159 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 12:03:23,162 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 12:03:23,165 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 12:03:23,167 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 12:03:23,639 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 12:03:23,640 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 12:03:23,641 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 12:03:23,642 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 12:03:23,836 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 12:03:23,838 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 12:03:23,841 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 12:03:23,844 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 12:03:23,848 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 12:03:23,851 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 12:03:23,854 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 12:03:24,036 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 12:03:24,041 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 12:03:24,044 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 12:03:24,047 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 12:03:24,050 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 12:03:24,236 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 12:03:24,308 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 12:03:24,311 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 12:03:24,313 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 12:03:24,314 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 12:03:24,315 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 12:03:24,316 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 12:03:24,317 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 12:03:24,436 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 12:03:24,438 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 12:03:24,441 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 12:03:24,443 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 12:03:24,636 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 12:03:24,639 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 12:03:24,642 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 12:03:24,645 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 12:03:24,647 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 12:03:24,657 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 12:03:24,856 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 12:03:24,858 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 12:03:24,860 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 12:03:24,862 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 12:03:24,865 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 12:03:24,867 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 12:03:24,869 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 12:03:25,036 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 12:03:25,039 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 12:03:25,042 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 12:03:25,045 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 12:03:25,048 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 12:03:25,236 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 12:03:25,239 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 12:03:25,242 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 12:03:25,246 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 12:03:25,249 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 12:03:25,253 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 12:03:25,256 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 12:03:25,260 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 12:03:25,435 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 12:03:25,438 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 12:03:25,441 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 12:03:25,444 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 12:03:25,447 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 12:03:25,450 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 12:03:25,452 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 12:03:25,636 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 12:03:25,639 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 12:03:25,643 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 12:03:25,647 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 12:03:25,651 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 12:03:25,845 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 12:03:25,849 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 12:03:25,851 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 12:03:25,854 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 12:03:25,856 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 12:03:25,858 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 12:03:25,859 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 12:03:25,861 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 12:03:26,043 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 12:03:26,044 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 12:03:26,045 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 12:03:26,046 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 12:03:26,245 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 12:03:26,247 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 12:03:26,249 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 12:03:26,269 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 12:03:26,271 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 12:03:26,274 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 12:03:26,276 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 12:03:26,279 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 12:03:26,447 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 12:03:26,451 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 12:03:26,454 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 12:03:26,457 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 12:03:26,460 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 12:03:26,462 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 12:03:26,465 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 12:03:26,467 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 12:03:26,644 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 12:03:26,646 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 12:03:26,648 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 12:03:26,650 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 12:03:26,652 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 12:03:46,414 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 12:03:46,417 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 12:03:46,420 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 12:03:46,423 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 12:03:46,522 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 12:03:46,524 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 12:03:46,525 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 12:03:46,526 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 12:12:07,758 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 12:12:07,801 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 12:12:07,812 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 12:12:07,816 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 12:12:07,819 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 12:12:07,821 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 12:12:07,822 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 12:12:07,824 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 12:12:07,825 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 12:12:07,826 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 12:12:07,828 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 12:12:07,829 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 12:12:07,967 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 12:12:07,968 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 12:12:07,982 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 12:12:07,986 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 12:12:07,988 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 12:12:07,989 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 12:12:07,993 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 12:12:07,995 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 12:12:07,996 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 12:12:07,998 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 12:12:08,168 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 12:12:08,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 12:12:08,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 12:12:08,175 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 12:12:08,177 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 12:12:08,178 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 12:12:08,180 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 12:12:08,182 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 12:12:08,368 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 12:12:08,374 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 12:12:08,376 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 12:12:08,379 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 12:12:08,382 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 12:12:08,410 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 12:12:08,414 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 12:12:08,416 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 12:12:08,569 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 12:12:08,571 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 12:12:08,572 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 12:12:08,574 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 12:12:08,577 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 12:12:08,579 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 12:12:08,770 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 12:12:08,778 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 12:12:08,782 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 12:12:08,791 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 12:12:08,801 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 12:12:08,803 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 12:12:08,970 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 12:12:08,991 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 12:12:08,993 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 12:12:08,995 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 12:12:08,998 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 12:12:09,168 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 12:12:09,172 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 12:12:09,175 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 12:12:09,186 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 12:12:09,190 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 12:12:09,192 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 12:12:09,194 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 12:12:09,368 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 12:12:09,423 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 12:12:09,425 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 12:12:09,426 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 12:12:09,427 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 12:12:09,428 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 12:12:09,429 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 12:12:09,568 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 12:12:09,571 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 12:12:09,576 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 12:12:09,581 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 12:12:09,768 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 12:12:09,773 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 12:12:09,775 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 12:12:09,778 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 12:12:09,780 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 12:12:09,783 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 12:12:09,786 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 12:12:09,788 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 12:12:09,968 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 12:12:09,972 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 12:12:09,979 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 12:12:09,982 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 12:12:10,169 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 12:12:10,172 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 12:12:10,184 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 12:12:10,187 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 12:12:10,189 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 12:12:10,191 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 12:12:10,744 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 12:12:10,750 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 12:12:10,751 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 12:12:10,752 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 12:12:10,753 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 12:12:10,754 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 12:12:10,755 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 12:12:10,756 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 12:12:10,951 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 12:12:10,952 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 12:12:10,954 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 12:12:10,955 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 12:12:10,958 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 12:12:10,959 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 12:12:10,960 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 12:12:11,151 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 12:12:11,154 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 12:12:11,198 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 12:12:11,200 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 12:12:11,201 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 12:12:11,352 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 12:12:11,355 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 12:12:11,358 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 12:12:11,361 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 12:12:11,364 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 12:12:11,367 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 12:12:11,370 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 12:12:11,373 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 12:12:11,552 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 12:12:11,554 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 12:12:11,558 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 12:12:11,752 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 12:12:11,755 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 12:12:11,768 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 12:12:11,807 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 12:12:11,809 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 12:12:11,811 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 12:12:11,951 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 12:12:11,954 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 12:12:11,957 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 12:12:11,960 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 12:12:11,963 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 12:12:11,966 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 12:12:11,969 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 12:12:11,971 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 12:12:12,152 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 12:12:12,156 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 12:12:12,159 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 12:12:12,161 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 12:12:12,164 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 12:12:12,352 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 12:12:12,355 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 12:12:12,358 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 12:12:12,363 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 12:12:12,366 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 12:12:12,368 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 12:12:12,371 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 12:12:12,373 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 12:12:12,552 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 12:12:12,555 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 12:12:12,557 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 12:12:12,561 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 12:12:12,752 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 12:12:12,754 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 12:12:12,757 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 12:12:12,760 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 12:12:12,762 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 12:12:12,765 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 12:12:12,767 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 12:12:12,772 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 12:12:12,952 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 12:12:12,966 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 12:12:12,979 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 12:12:12,981 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 12:12:12,983 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 12:12:12,985 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 12:12:12,986 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 12:12:13,150 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 12:12:13,152 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 12:12:13,153 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 12:12:13,154 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 12:12:13,167 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 12:12:13,352 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 12:12:13,355 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 12:12:13,357 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 12:12:13,362 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 12:12:13,365 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 12:12:13,368 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 12:12:13,370 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 12:12:13,372 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 12:12:13,551 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 12:12:13,554 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 12:12:13,557 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 12:12:13,560 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 12:12:13,563 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 12:12:13,566 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 12:12:13,568 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 12:12:13,571 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 12:12:13,751 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 12:12:19,370 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 12:12:19,371 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 12:12:19,372 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 12:12:19,373 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 12:12:22,184 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 12:12:22,186 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 12:12:22,187 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 12:12:22,188 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 12:12:22,280 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 12:12:22,282 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 12:12:22,284 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 12:12:22,286 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 13:56:10,709 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 13:56:10,766 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 13:56:10,774 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 13:56:10,778 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 13:56:10,780 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 13:56:10,782 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 13:56:10,783 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 13:56:10,785 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 13:56:10,786 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 13:56:10,788 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 13:56:10,789 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 13:56:10,791 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 13:56:10,921 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 13:56:10,923 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 13:56:10,962 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 13:56:10,972 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 13:56:10,992 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 13:56:10,993 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 13:56:10,998 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 13:56:10,999 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 13:56:11,000 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 13:56:11,003 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 13:56:11,121 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 13:56:11,124 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 13:56:11,127 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 13:56:11,131 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 13:56:11,134 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 13:56:11,136 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 13:56:11,139 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 13:56:11,142 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 13:56:11,320 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 13:56:11,325 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 13:56:11,328 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 13:56:11,331 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 13:56:11,333 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 13:56:11,360 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 13:56:11,364 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 13:56:11,366 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 13:56:11,527 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 13:56:11,532 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 13:56:11,534 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 13:56:11,536 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 13:56:11,539 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 13:56:11,542 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 13:56:11,722 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 13:56:11,730 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 13:56:11,734 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 13:56:11,741 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 13:56:11,747 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 13:56:11,763 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 13:56:11,922 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 13:56:11,926 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 13:56:11,928 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 13:56:11,931 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 13:56:11,934 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 13:56:12,119 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 13:56:12,122 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 13:56:12,124 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 13:56:12,131 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 13:56:12,134 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 13:56:12,136 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 13:56:12,138 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 13:56:12,320 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 13:56:12,379 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 13:56:12,380 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 13:56:12,381 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 13:56:12,382 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 13:56:12,383 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 13:56:12,384 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 13:56:12,521 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 13:56:12,523 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 13:56:12,526 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 13:56:12,530 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 13:56:12,720 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 13:56:12,723 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 13:56:12,726 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 13:56:12,728 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 13:56:12,731 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 13:56:12,734 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 13:56:12,736 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 13:56:12,739 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 13:56:12,920 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 13:56:12,923 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 13:56:12,931 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 13:56:12,934 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 13:56:13,120 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 13:56:13,123 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 13:56:13,135 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 13:56:13,139 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 13:56:13,141 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 13:56:13,144 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 13:56:13,704 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 13:56:13,705 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 13:56:13,706 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 13:56:13,707 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 13:56:13,902 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 13:56:13,904 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 13:56:13,907 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 13:56:13,910 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 13:56:13,914 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 13:56:13,917 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 13:56:13,920 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 13:56:14,103 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 13:56:14,108 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 13:56:14,111 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 13:56:14,113 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 13:56:14,116 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 13:56:14,303 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 13:56:14,354 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 13:56:14,355 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 13:56:14,357 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 13:56:14,358 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 13:56:14,359 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 13:56:14,360 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 13:56:14,361 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 13:56:14,503 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 13:56:14,506 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 13:56:14,509 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 13:56:14,512 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 13:56:14,703 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 13:56:14,706 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 13:56:14,710 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 13:56:14,725 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 13:56:14,728 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 13:56:14,731 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 13:56:14,930 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 13:56:14,931 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 13:56:14,933 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 13:56:14,934 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 13:56:14,935 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 13:56:14,937 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 13:56:14,938 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 13:56:15,103 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 13:56:15,106 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 13:56:15,109 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 13:56:15,112 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 13:56:15,115 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 13:56:15,303 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 13:56:15,306 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 13:56:15,309 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 13:56:15,313 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 13:56:15,316 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 13:56:15,319 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 13:56:15,322 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 13:56:15,326 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 13:56:15,501 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 13:56:15,503 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 13:56:15,504 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 13:56:15,506 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 13:56:15,508 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 13:56:15,509 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 13:56:15,511 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 13:56:15,702 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 13:56:15,705 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 13:56:15,707 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 13:56:15,711 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 13:56:15,713 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 13:56:15,903 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 13:56:15,906 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 13:56:15,909 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 13:56:15,915 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 13:56:15,917 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 13:56:15,920 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 13:56:15,922 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 13:56:15,924 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 13:56:16,103 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 13:56:16,106 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 13:56:16,108 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 13:56:16,111 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 13:56:16,326 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 13:56:16,329 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 13:56:16,332 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 13:56:16,334 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 13:56:16,336 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 13:56:16,338 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 13:56:16,340 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 13:56:16,343 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 13:56:16,503 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 13:56:16,505 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 13:56:16,507 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 13:56:16,509 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 13:56:16,511 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 13:56:16,512 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 13:56:16,514 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 13:56:16,516 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 13:56:16,702 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 13:56:16,704 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 13:56:16,707 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 13:56:16,709 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 13:56:16,715 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 13:57:37,663 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 13:57:37,700 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 13:57:37,709 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 13:57:37,712 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 13:57:37,714 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 13:57:37,716 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 13:57:37,717 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 13:57:37,718 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 13:57:37,719 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 13:57:37,721 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 13:57:37,722 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 13:57:37,723 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 13:57:37,872 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 13:57:37,874 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 13:57:37,909 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 13:57:37,915 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 13:57:37,917 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 13:57:37,919 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 13:57:37,924 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 13:57:37,925 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 13:57:37,927 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 13:57:37,930 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 13:57:38,072 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 13:57:38,075 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 13:57:38,079 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 13:57:38,082 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 13:57:38,085 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 13:57:38,088 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 13:57:38,091 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 13:57:38,094 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 13:57:38,271 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 13:57:38,277 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 13:57:38,280 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 13:57:38,283 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 13:57:38,286 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 13:57:38,323 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 13:57:38,326 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 13:57:38,328 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 13:57:38,477 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 13:57:38,481 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 13:57:38,485 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 13:57:38,490 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 13:57:38,496 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 13:57:38,502 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 13:57:38,672 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 13:57:38,682 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 13:57:38,684 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 13:57:38,689 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 13:57:38,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 13:57:38,695 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 13:57:38,873 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 13:57:38,893 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 13:57:38,894 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 13:57:38,895 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 13:57:38,897 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 13:57:39,071 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 13:57:39,075 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 13:57:39,078 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 13:57:39,091 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 13:57:39,096 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 13:57:39,099 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 13:57:39,102 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 13:57:39,271 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 13:57:39,317 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 13:57:39,318 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 13:57:39,319 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 13:57:39,320 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 13:57:39,321 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 13:57:39,322 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 13:57:39,472 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 13:57:39,475 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 13:57:39,477 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 13:57:39,481 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 13:57:39,671 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 13:57:39,674 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 13:57:39,677 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 13:57:39,680 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 13:57:39,683 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 13:57:39,685 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 13:57:39,688 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 13:57:39,691 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 13:57:39,871 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 13:57:39,874 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 13:57:39,882 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 13:57:39,885 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 13:57:40,071 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 13:57:40,074 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 13:57:40,088 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 13:57:40,091 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 13:57:40,094 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 13:57:40,097 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 13:57:40,620 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 13:57:40,625 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 13:57:40,626 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 13:57:40,627 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 13:57:40,628 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 13:57:40,629 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 13:57:40,630 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 13:57:40,631 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 13:57:40,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 13:57:40,831 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 13:57:40,833 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 13:57:40,836 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 13:57:40,841 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 13:57:40,844 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 13:57:40,847 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 13:57:41,026 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 13:57:41,029 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 13:57:41,072 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 13:57:41,074 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 13:57:41,075 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 13:57:41,226 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 13:57:41,229 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 13:57:41,232 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 13:57:41,234 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 13:57:41,236 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 13:57:41,238 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 13:57:41,240 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 13:57:41,242 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 13:57:41,426 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 13:57:41,429 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 13:57:41,433 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 13:57:41,627 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 13:57:41,630 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 13:57:41,641 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 13:57:41,680 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 13:57:41,682 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 13:57:41,684 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 13:57:41,826 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 13:57:41,829 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 13:57:41,835 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 13:57:41,837 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 13:57:41,839 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 13:57:41,849 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 13:57:41,852 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 13:57:41,854 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 13:57:42,027 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 13:57:42,030 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 13:57:42,033 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 13:57:42,035 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 13:57:42,038 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 13:57:42,227 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 13:57:42,230 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 13:57:42,233 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 13:57:42,236 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 13:57:42,239 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 13:57:42,242 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 13:57:42,245 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 13:57:42,247 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 13:57:42,426 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 13:57:42,429 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 13:57:42,432 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 13:57:42,434 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 13:57:42,627 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 13:57:42,631 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 13:57:42,636 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 13:57:42,639 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 13:57:42,641 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 13:57:42,643 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 13:57:42,645 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 13:57:42,647 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 13:57:42,826 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 13:57:42,829 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 13:57:42,832 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 13:57:42,835 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 13:57:42,837 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 13:57:42,840 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 13:57:42,843 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 13:57:43,026 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 13:57:43,030 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 13:57:43,033 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 13:57:43,055 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 13:57:43,057 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 13:57:43,226 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 13:57:43,229 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 13:57:43,232 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 13:57:43,236 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 13:57:43,240 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 13:57:43,243 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 13:57:43,245 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 13:57:43,247 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 13:57:43,426 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 13:57:43,429 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 13:57:43,431 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 13:57:43,433 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 13:57:43,436 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 13:57:43,438 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 13:57:43,440 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 13:57:43,443 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 13:57:43,626 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 13:57:45,885 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 13:57:45,888 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 13:57:45,891 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 13:57:45,894 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 13:57:45,984 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 13:57:45,986 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 13:57:45,987 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 13:57:45,988 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:34:13,129 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 14:34:13,167 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 14:34:13,175 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 14:34:13,178 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 14:34:13,180 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 14:34:13,182 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 14:34:13,183 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 14:34:13,184 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 14:34:13,186 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 14:34:13,187 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 14:34:13,188 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:34:13,189 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 14:34:13,365 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 14:34:13,368 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:34:13,400 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 14:34:13,407 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 14:34:13,409 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 14:34:13,411 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 14:34:13,420 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 14:34:13,422 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 14:34:13,424 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 14:34:13,426 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 14:34:13,565 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 14:34:13,568 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 14:34:13,572 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 14:34:13,575 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 14:34:13,578 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 14:34:13,580 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 14:34:13,583 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 14:34:13,586 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 14:34:13,765 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 14:34:13,771 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 14:34:13,789 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 14:34:13,792 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 14:34:13,794 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 14:34:13,818 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:34:13,821 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:34:13,823 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 14:34:13,967 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 14:34:13,971 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 14:34:13,973 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 14:34:13,977 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:34:13,980 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 14:34:13,984 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 14:34:14,166 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 14:34:14,173 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 14:34:14,175 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 14:34:14,179 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 14:34:14,181 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 14:34:14,183 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 14:34:14,383 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:34:14,385 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:34:14,387 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:34:14,388 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:34:14,390 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 14:34:14,565 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 14:34:14,569 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 14:34:14,575 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 14:34:14,588 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 14:34:14,592 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:34:14,594 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 14:34:14,595 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:34:14,766 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:34:14,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 14:34:14,828 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 14:34:14,829 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:34:14,831 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:34:14,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:34:14,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:34:14,965 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:34:14,967 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 14:34:14,970 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 14:34:14,973 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 14:34:15,165 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 14:34:15,169 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 14:34:15,172 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 14:34:15,175 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:34:15,177 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:34:15,180 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:34:15,184 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:34:15,187 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 14:34:15,365 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 14:34:15,368 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 14:34:15,376 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:34:15,379 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:34:15,565 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:34:15,568 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:34:15,582 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:34:15,585 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:34:15,588 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:34:15,591 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:34:16,139 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 14:34:16,164 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 14:34:16,165 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 14:34:16,166 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 14:34:16,167 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:34:16,168 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 14:34:16,169 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:34:16,365 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:34:16,369 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 14:34:16,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 14:34:16,375 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 14:34:16,377 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:34:16,382 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:34:16,385 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:34:16,388 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:34:16,565 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 14:34:16,568 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 14:34:16,618 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 14:34:16,619 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 14:34:16,620 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 14:34:16,767 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 14:34:16,769 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 14:34:16,773 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:34:16,775 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:34:16,778 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:34:16,780 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:34:16,783 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 14:34:16,784 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 14:34:16,966 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 14:34:16,968 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 14:34:16,972 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:34:17,166 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 14:34:17,176 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:34:17,179 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:34:17,218 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 14:34:17,220 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 14:34:17,221 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 14:34:17,364 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 14:34:17,366 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 14:34:17,367 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 14:34:17,368 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:34:17,370 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:34:17,371 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:34:17,372 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 14:34:17,374 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 14:34:17,565 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 14:34:17,568 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 14:34:17,571 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 14:34:17,573 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 14:34:17,576 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:34:17,766 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:34:17,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:34:17,772 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:34:17,775 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 14:34:17,777 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 14:34:17,779 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 14:34:17,781 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:34:17,783 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:34:17,965 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 14:34:17,968 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:34:17,971 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 14:34:17,974 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 14:34:18,166 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 14:34:18,169 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 14:34:18,173 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 14:34:18,177 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:34:18,180 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:34:18,183 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:34:18,186 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:34:18,192 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 14:34:18,365 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 14:34:18,367 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:34:18,369 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 14:34:18,370 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 14:34:18,372 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:34:18,374 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 14:34:18,375 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 14:34:18,565 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 14:34:18,569 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 14:34:18,590 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 14:34:18,593 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 14:34:18,595 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 14:34:18,766 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 14:34:18,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:34:18,772 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:34:18,776 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 14:34:18,782 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 14:34:18,786 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:34:18,789 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:34:18,792 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:34:18,965 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:34:18,967 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:34:18,969 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 14:34:18,972 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:34:18,973 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:34:18,975 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:34:18,976 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:34:18,977 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:34:19,165 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:34:25,973 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:34:25,975 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:34:25,978 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:34:25,981 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:34:26,086 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:34:26,088 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:34:26,089 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:34:26,091 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:34:50,478 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 14:34:50,516 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 14:34:50,524 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 14:34:50,528 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-05-03 14:34:50,530 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-05-03 14:34:50,531 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 14:34:50,532 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 14:34:50,534 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 14:34:50,535 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-05-03 14:34:50,536 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-05-03 14:34:50,537 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:34:50,538 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 14:34:50,692 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-05-03 14:34:50,695 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:34:50,723 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 14:34:50,728 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 14:34:50,730 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 14:34:50,732 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 14:34:50,736 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 14:34:50,738 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 14:34:50,739 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 14:34:50,742 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 14:34:50,892 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 14:34:50,895 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 14:34:50,899 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 14:34:50,902 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 14:34:50,905 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 14:34:50,908 [Thread: 8       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 14:34:50,911 [Thread: 8       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 14:34:50,915 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 14:34:51,091 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 14:34:51,097 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 14:34:51,099 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 14:34:51,102 [Thread: 8       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 14:34:51,104 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 14:34:51,126 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:34:51,131 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:34:51,133 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 14:34:51,297 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 14:34:51,302 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 14:34:51,307 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 14:34:51,313 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:34:51,319 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 14:34:51,324 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 14:34:51,493 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 14:34:51,502 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 14:34:51,506 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 14:34:51,514 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 14:34:51,520 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 14:34:51,524 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 14:34:51,693 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:34:51,712 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:34:51,714 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:34:51,716 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:34:51,719 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 14:34:51,891 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 14:34:51,895 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 14:34:51,897 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 14:34:51,909 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 14:34:51,913 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:34:51,914 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 14:34:51,916 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:34:52,092 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:34:52,151 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 14:34:52,152 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 14:34:52,154 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:34:52,155 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:34:52,156 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:34:52,157 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:34:52,292 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:34:52,294 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 14:34:52,297 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 14:34:52,301 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 14:34:52,491 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 14:34:52,494 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 14:34:52,497 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 14:34:52,500 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:34:52,503 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:34:52,505 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:34:52,508 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:34:52,511 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 14:34:52,691 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 14:34:52,694 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 14:34:52,701 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:34:52,705 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:34:52,894 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:34:52,899 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:34:52,909 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:34:52,911 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:34:52,913 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:34:52,915 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:34:53,406 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 14:34:53,584 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 14:34:53,586 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 14:34:53,589 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 14:34:53,592 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:34:53,594 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 14:34:53,595 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:34:53,596 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:34:53,783 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 14:34:53,786 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 14:34:53,790 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 14:34:53,793 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:34:53,799 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:34:53,803 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:34:53,805 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:34:53,807 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 14:34:53,981 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 14:34:54,035 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 14:34:54,036 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 14:34:54,038 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 14:34:54,182 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 14:34:54,185 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 14:34:54,188 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:34:54,191 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:34:54,193 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:34:54,195 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:34:54,199 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 14:34:54,206 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 14:34:54,380 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 14:34:54,381 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 14:34:54,383 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:34:54,385 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 14:34:54,582 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:34:54,595 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:34:54,632 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 14:34:54,634 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 14:34:54,636 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 14:34:54,637 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 14:34:54,780 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 14:34:54,782 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 14:34:54,783 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:34:54,785 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:34:54,786 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:34:54,787 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 14:34:54,789 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 14:34:54,981 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 14:34:54,988 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 14:34:54,991 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 14:34:54,994 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 14:34:54,998 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:34:55,182 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:34:55,185 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:34:55,188 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:34:55,192 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 14:34:55,196 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 14:34:55,199 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 14:34:55,202 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:34:55,205 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:34:55,208 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 14:34:55,382 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:34:55,385 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 14:34:55,388 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 14:34:55,392 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 14:34:55,581 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 14:34:55,585 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 14:34:55,589 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:34:55,592 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:34:55,595 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:34:55,598 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:34:55,604 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 14:34:55,781 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 14:34:55,784 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:34:55,786 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 14:34:55,788 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 14:34:55,789 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:34:55,791 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 14:34:55,793 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 14:34:55,982 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 14:34:55,986 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 14:34:55,989 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 14:34:56,018 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 14:34:56,021 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 14:34:56,024 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 14:34:56,182 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:34:56,185 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:34:56,190 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 14:34:56,195 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 14:34:56,199 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:34:56,202 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:34:56,205 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:34:56,208 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:34:56,380 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:34:56,381 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 14:34:56,382 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:34:56,385 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:34:56,388 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:34:56,390 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:34:56,393 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:34:56,395 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:35:12,397 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:35:12,399 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:35:12,404 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:35:12,408 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:35:12,510 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:35:12,511 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:35:12,512 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:35:12,513 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:41:17,684 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 14:41:17,722 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 14:41:17,730 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 14:41:17,733 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 14:41:17,735 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 14:41:17,737 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 14:41:17,738 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 14:41:17,739 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 14:41:17,740 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 14:41:17,741 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 14:41:17,743 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:41:17,744 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 14:41:17,903 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 14:41:17,906 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:41:17,942 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 14:41:17,951 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 14:41:17,953 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 14:41:17,954 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 14:41:17,965 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 14:41:17,966 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 14:41:17,967 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 14:41:17,969 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 14:41:18,103 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 14:41:18,106 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 14:41:18,109 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 14:41:18,112 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 14:41:18,116 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 14:41:18,118 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 14:41:18,121 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 14:41:18,124 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 14:41:18,303 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 14:41:18,308 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 14:41:18,311 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 14:41:18,313 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 14:41:18,315 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 14:41:18,346 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:41:18,349 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:41:18,351 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 14:41:18,504 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 14:41:18,506 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 14:41:18,508 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 14:41:18,511 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:41:18,514 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 14:41:18,517 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 14:41:18,703 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 14:41:18,708 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 14:41:18,710 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 14:41:18,715 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 14:41:18,719 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 14:41:18,722 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 14:41:18,904 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:41:18,921 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:41:18,923 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:41:18,925 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:41:18,927 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 14:41:19,102 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 14:41:19,106 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 14:41:19,109 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 14:41:19,122 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 14:41:19,126 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:41:19,128 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 14:41:19,131 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:41:19,302 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:41:19,367 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 14:41:19,369 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 14:41:19,370 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:41:19,371 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:41:19,372 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:41:19,374 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:41:19,503 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:41:19,506 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 14:41:19,508 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 14:41:19,512 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 14:41:19,703 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 14:41:19,706 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 14:41:19,709 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 14:41:19,712 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:41:19,714 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:41:19,717 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:41:19,720 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:41:19,729 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 14:41:19,903 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 14:41:19,906 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 14:41:19,913 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:41:19,917 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:41:20,102 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:41:20,103 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:41:20,111 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:41:20,113 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:41:20,115 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:41:20,117 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:41:20,704 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 14:41:20,881 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 14:41:20,882 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 14:41:20,884 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 14:41:20,885 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:41:20,887 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 14:41:20,888 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:41:20,890 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:41:21,083 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 14:41:21,094 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 14:41:21,097 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 14:41:21,100 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:41:21,104 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:41:21,106 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:41:21,108 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:41:21,110 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 14:41:21,283 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 14:41:21,334 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 14:41:21,335 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 14:41:21,337 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 14:41:21,483 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 14:41:21,486 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 14:41:21,489 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:41:21,491 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:41:21,494 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:41:21,497 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:41:21,500 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 14:41:21,502 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 14:41:21,683 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 14:41:21,686 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 14:41:21,690 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:41:21,693 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 14:41:21,882 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:41:21,884 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:41:21,913 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 14:41:21,915 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 14:41:21,916 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 14:41:21,918 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 14:41:22,082 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 14:41:22,084 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 14:41:22,086 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:41:22,087 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:41:22,089 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:41:22,091 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 14:41:22,093 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 14:41:22,287 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 14:41:22,308 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 14:41:22,310 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 14:41:22,311 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 14:41:22,313 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:41:22,483 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:41:22,486 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:41:22,489 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:41:22,493 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 14:41:22,497 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 14:41:22,500 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 14:41:22,503 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:41:22,506 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:41:22,509 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 14:41:22,681 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:41:22,682 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 14:41:22,684 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 14:41:22,685 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 14:41:22,883 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 14:41:22,887 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 14:41:22,891 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:41:22,894 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:41:22,897 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:41:22,900 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:41:22,907 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 14:41:23,083 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 14:41:23,086 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:41:23,089 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 14:41:23,092 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 14:41:23,095 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:41:23,098 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 14:41:23,101 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 14:41:23,283 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 14:41:23,286 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 14:41:23,290 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 14:41:23,293 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 14:41:23,296 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 14:41:23,299 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 14:41:23,483 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:41:23,486 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:41:23,490 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 14:41:23,496 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 14:41:23,500 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:41:23,503 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:41:23,506 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:41:23,508 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:41:23,682 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:41:23,685 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 14:41:23,692 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:41:23,696 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:41:23,699 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:41:23,702 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:41:23,704 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:41:23,715 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:42:02,640 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:42:02,643 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:42:02,646 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:42:02,650 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:42:02,748 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:42:02,749 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:42:02,750 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:42:02,751 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:42:24,348 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 14:42:24,387 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 14:42:24,395 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 14:42:24,399 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 14:42:24,401 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 14:42:24,403 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 14:42:24,404 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 14:42:24,405 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 14:42:24,406 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 14:42:24,407 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 14:42:24,408 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:42:24,409 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 14:42:24,563 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 14:42:24,565 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:42:24,593 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 14:42:24,598 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 14:42:24,600 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 14:42:24,601 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 14:42:24,606 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 14:42:24,607 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 14:42:24,608 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 14:42:24,611 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 14:42:24,763 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 14:42:24,766 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 14:42:24,770 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 14:42:24,773 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 14:42:24,777 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 14:42:24,780 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 14:42:24,783 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 14:42:24,787 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 14:42:24,963 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 14:42:24,968 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 14:42:24,971 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 14:42:24,975 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 14:42:24,976 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 14:42:25,001 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:42:25,006 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:42:25,010 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 14:42:25,168 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 14:42:25,172 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 14:42:25,176 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 14:42:25,181 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:42:25,185 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 14:42:25,189 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 14:42:25,364 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 14:42:25,373 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 14:42:25,377 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 14:42:25,386 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 14:42:25,391 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 14:42:25,394 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 14:42:25,564 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:42:25,584 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:42:25,587 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:42:25,590 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:42:25,592 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 14:42:25,762 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 14:42:25,765 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 14:42:25,768 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 14:42:25,781 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 14:42:25,784 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:42:25,786 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 14:42:25,787 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:42:25,963 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:42:26,018 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 14:42:26,019 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 14:42:26,021 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:42:26,022 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:42:26,023 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:42:26,024 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:42:26,163 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:42:26,166 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 14:42:26,169 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 14:42:26,172 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 14:42:26,361 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 14:42:26,362 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 14:42:26,364 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 14:42:26,365 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:42:26,367 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:42:26,368 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:42:26,370 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:42:26,372 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 14:42:26,562 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 14:42:26,566 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 14:42:26,573 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:42:26,577 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:42:26,762 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:42:26,765 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:42:26,776 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:42:26,778 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:42:26,781 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:42:26,783 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:42:27,297 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 14:42:27,299 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 14:42:27,484 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 14:42:27,491 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 14:42:27,495 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:42:27,498 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 14:42:27,503 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:42:27,506 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:42:27,510 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 14:42:27,685 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 14:42:27,688 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 14:42:27,691 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:42:27,697 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:42:27,700 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:42:27,703 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:42:27,706 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 14:42:27,885 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 14:42:27,941 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 14:42:27,943 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 14:42:27,945 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 14:42:27,946 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 14:42:28,083 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 14:42:28,086 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:42:28,088 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:42:28,090 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:42:28,092 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:42:28,093 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 14:42:28,095 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 14:42:28,285 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 14:42:28,287 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 14:42:28,296 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:42:28,301 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 14:42:28,303 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:42:28,494 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:42:28,536 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 14:42:28,538 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 14:42:28,541 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 14:42:28,543 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 14:42:28,544 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 14:42:28,685 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 14:42:28,688 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:42:28,691 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:42:28,694 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:42:28,696 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 14:42:28,699 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 14:42:28,885 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 14:42:28,888 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 14:42:28,891 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 14:42:28,894 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 14:42:28,898 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:42:28,901 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:42:29,084 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:42:29,086 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:42:29,090 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 14:42:29,092 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 14:42:29,094 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 14:42:29,097 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:42:29,099 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:42:29,101 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 14:42:29,285 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:42:29,288 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 14:42:29,291 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 14:42:29,294 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 14:42:29,485 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 14:42:29,489 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 14:42:29,493 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:42:29,496 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:42:29,499 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:42:29,502 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:42:29,509 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 14:42:29,512 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 14:42:29,685 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:42:29,688 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 14:42:29,690 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 14:42:29,693 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:42:29,696 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 14:42:29,699 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 14:42:29,884 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 14:42:29,887 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 14:42:29,890 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 14:42:29,913 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 14:42:29,916 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 14:42:29,919 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 14:42:30,085 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:42:30,088 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:42:30,093 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 14:42:30,098 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 14:42:30,102 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:42:30,105 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:42:30,107 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:42:30,110 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:42:30,121 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:42:30,285 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 14:42:30,288 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:42:30,291 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:42:30,294 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:42:30,297 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:42:30,300 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:42:30,302 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:42:34,037 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:42:34,040 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:42:34,044 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:42:34,046 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:42:34,152 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:42:34,154 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:42:34,155 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:42:34,156 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:42:34,846 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:42:34,847 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:42:34,944 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:42:34,947 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:42:40,128 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:42:40,131 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:42:40,134 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:42:40,137 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:43:03,028 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:43:03,031 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:43:03,034 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:43:03,037 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:43:03,113 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:43:03,117 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:43:03,119 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:43:03,122 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:43:51,581 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 14:43:51,619 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 14:43:51,627 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 14:43:51,631 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 14:43:51,633 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 14:43:51,634 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 14:43:51,635 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 14:43:51,637 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 14:43:51,638 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 14:43:51,639 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 14:43:51,640 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:43:51,642 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 14:43:51,804 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 14:43:51,807 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:43:51,841 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 14:43:51,849 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 14:43:51,853 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 14:43:51,854 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 14:43:51,858 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 14:43:51,860 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 14:43:51,861 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 14:43:51,863 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 14:43:52,004 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 14:43:52,008 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 14:43:52,011 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 14:43:52,014 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 14:43:52,017 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 14:43:52,021 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 14:43:52,023 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 14:43:52,027 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 14:43:52,203 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 14:43:52,209 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 14:43:52,212 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 14:43:52,215 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 14:43:52,218 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 14:43:52,250 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:43:52,254 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:43:52,258 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 14:43:52,408 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 14:43:52,412 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 14:43:52,415 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 14:43:52,420 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:43:52,424 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 14:43:52,427 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 14:43:52,604 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 14:43:52,612 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 14:43:52,616 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 14:43:52,622 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 14:43:52,627 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 14:43:52,630 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 14:43:52,806 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:43:52,826 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:43:52,829 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:43:52,831 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:43:52,834 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 14:43:53,003 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 14:43:53,006 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 14:43:53,008 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 14:43:53,017 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 14:43:53,021 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:43:53,023 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 14:43:53,024 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:43:53,204 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:43:53,264 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 14:43:53,266 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 14:43:53,267 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:43:53,268 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:43:53,269 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:43:53,270 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:43:53,402 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:43:53,404 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 14:43:53,405 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 14:43:53,407 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 14:43:53,603 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 14:43:53,607 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 14:43:53,611 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 14:43:53,613 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:43:53,616 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:43:53,618 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:43:53,621 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:43:53,623 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 14:43:53,804 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 14:43:53,807 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 14:43:53,815 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:43:53,818 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:43:54,004 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:43:54,007 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:43:54,019 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:43:54,021 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:43:54,023 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:43:54,025 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:43:54,534 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 14:43:54,536 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 14:43:54,537 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 14:43:54,538 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 14:43:54,722 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:43:54,724 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 14:43:54,725 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:43:54,727 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:43:54,728 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 14:43:54,730 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 14:43:54,731 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 14:43:54,924 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:43:54,930 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:43:54,933 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:43:54,936 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:43:54,944 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 14:43:55,124 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 14:43:55,195 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 14:43:55,197 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 14:43:55,199 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 14:43:55,201 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 14:43:55,203 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 14:43:55,204 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:43:55,206 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:43:55,323 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:43:55,326 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:43:55,329 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 14:43:55,332 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 14:43:55,524 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 14:43:55,527 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 14:43:55,531 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:43:55,534 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 14:43:55,538 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:43:55,550 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:43:55,743 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 14:43:55,746 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 14:43:55,749 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 14:43:55,751 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 14:43:55,753 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 14:43:55,755 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 14:43:55,756 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:43:55,922 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:43:55,924 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:43:55,925 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 14:43:55,927 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 14:43:55,928 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 14:43:56,124 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 14:43:56,127 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 14:43:56,130 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 14:43:56,134 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:43:56,137 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:43:56,141 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:43:56,144 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:43:56,148 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 14:43:56,324 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 14:43:56,328 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 14:43:56,331 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:43:56,334 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:43:56,337 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 14:43:56,340 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:43:56,343 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 14:43:56,523 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 14:43:56,525 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 14:43:56,527 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 14:43:56,530 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 14:43:56,532 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:43:56,724 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:43:56,727 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:43:56,730 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:43:56,737 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 14:43:56,740 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 14:43:56,743 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:43:56,746 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 14:43:56,749 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 14:43:56,923 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:43:56,926 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 14:43:56,929 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 14:43:56,932 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 14:43:57,124 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 14:43:57,128 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 14:43:57,145 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 14:43:57,147 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 14:43:57,149 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 14:43:57,151 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:43:57,153 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:43:57,156 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 14:43:57,323 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 14:43:57,324 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:43:57,325 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:43:57,326 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:43:57,327 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:43:57,327 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:43:57,328 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 14:43:57,329 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:43:57,523 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:43:57,526 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:43:57,529 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:43:57,532 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:43:57,535 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:44:02,013 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:44:02,015 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:44:02,018 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:44:02,020 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:44:09,570 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:44:09,573 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:44:09,576 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:44:09,579 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:45:50,218 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 14:45:50,255 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 14:45:50,263 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 14:45:50,266 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 14:45:50,268 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 14:45:50,270 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 14:45:50,271 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 14:45:50,272 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 14:45:50,273 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 14:45:50,274 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 14:45:50,275 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:45:50,277 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 14:45:50,455 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 14:45:50,458 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:45:50,491 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 14:45:50,499 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 14:45:50,503 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 14:45:50,504 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 14:45:50,508 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 14:45:50,509 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 14:45:50,511 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 14:45:50,513 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 14:45:50,655 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 14:45:50,658 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 14:45:50,662 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 14:45:50,665 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 14:45:50,668 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 14:45:50,672 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 14:45:50,675 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 14:45:50,678 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 14:45:50,854 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 14:45:50,860 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 14:45:50,863 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 14:45:50,866 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 14:45:50,869 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 14:45:50,898 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:45:50,901 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:45:50,904 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 14:45:51,056 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 14:45:51,058 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 14:45:51,060 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 14:45:51,063 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:45:51,066 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 14:45:51,069 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 14:45:51,256 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 14:45:51,265 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 14:45:51,269 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 14:45:51,277 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 14:45:51,283 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 14:45:51,284 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 14:45:51,456 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:45:51,476 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:45:51,479 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:45:51,481 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:45:51,484 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 14:45:51,654 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 14:45:51,658 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 14:45:51,661 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 14:45:51,674 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 14:45:51,678 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:45:51,681 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 14:45:51,684 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:45:51,855 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:45:51,913 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 14:45:51,915 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 14:45:51,916 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:45:51,917 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:45:51,918 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:45:51,919 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:45:52,054 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:45:52,057 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 14:45:52,060 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 14:45:52,063 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 14:45:52,255 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 14:45:52,258 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 14:45:52,261 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 14:45:52,264 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:45:52,266 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:45:52,269 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:45:52,272 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:45:52,274 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 14:45:52,455 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 14:45:52,458 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 14:45:52,465 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:45:52,469 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:45:52,654 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:45:52,657 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:45:52,666 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:45:52,668 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:45:52,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:45:52,671 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:45:53,212 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 14:45:53,213 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 14:45:53,214 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 14:45:53,215 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 14:45:53,410 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:45:53,413 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 14:45:53,416 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:45:53,420 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:45:53,424 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 14:45:53,428 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 14:45:53,431 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 14:45:53,609 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:45:53,615 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:45:53,618 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:45:53,622 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:45:53,625 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 14:45:53,810 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 14:45:53,870 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 14:45:53,872 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 14:45:53,873 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 14:45:53,875 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 14:45:53,876 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 14:45:53,878 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:45:53,879 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:45:54,010 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:45:54,013 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:45:54,016 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 14:45:54,019 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 14:45:54,210 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 14:45:54,213 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 14:45:54,217 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:45:54,220 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 14:45:54,223 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:45:54,233 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:45:54,430 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 14:45:54,433 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 14:45:54,434 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 14:45:54,436 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 14:45:54,438 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 14:45:54,439 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 14:45:54,441 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:45:54,610 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:45:54,613 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:45:54,616 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 14:45:54,618 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 14:45:54,621 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 14:45:54,810 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 14:45:54,818 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 14:45:54,821 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 14:45:54,824 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:45:54,826 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:45:54,829 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:45:54,832 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:45:54,835 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 14:45:55,010 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 14:45:55,013 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 14:45:55,016 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:45:55,019 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:45:55,022 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 14:45:55,025 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:45:55,028 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 14:45:55,210 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 14:45:55,213 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 14:45:55,216 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 14:45:55,219 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 14:45:55,223 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:45:55,408 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:45:55,410 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:45:55,412 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:45:55,415 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 14:45:55,417 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 14:45:55,418 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:45:55,420 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 14:45:55,421 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 14:45:55,610 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:45:55,613 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 14:45:55,616 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 14:45:55,619 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 14:45:55,810 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 14:45:55,814 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 14:45:55,841 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 14:45:55,843 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 14:45:55,845 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 14:45:55,846 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:45:55,848 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:45:55,850 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 14:45:56,009 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 14:45:56,010 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:45:56,012 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:45:56,013 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:45:56,014 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:45:56,016 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:45:56,017 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 14:45:56,018 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:45:56,209 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:45:56,212 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:45:56,215 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:45:56,218 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:45:56,221 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:46:16,999 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:46:17,003 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:46:17,006 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:46:17,008 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:46:17,104 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:46:17,105 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:46:17,106 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:46:17,107 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:46:29,427 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 14:46:29,465 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 14:46:29,474 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 14:46:29,477 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 14:46:29,479 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 14:46:29,481 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 14:46:29,482 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 14:46:29,483 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 14:46:29,484 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 14:46:29,486 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 14:46:29,487 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:46:29,488 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 14:46:29,662 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 14:46:29,665 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 14:46:29,700 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 14:46:29,709 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 14:46:29,711 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 14:46:29,713 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 14:46:29,718 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 14:46:29,719 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 14:46:29,720 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 14:46:29,723 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 14:46:29,862 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 14:46:29,865 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 14:46:29,869 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 14:46:29,872 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 14:46:29,875 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 14:46:29,879 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 14:46:29,882 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 14:46:29,885 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 14:46:30,062 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 14:46:30,067 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 14:46:30,070 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 14:46:30,074 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 14:46:30,076 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 14:46:30,108 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:46:30,111 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 14:46:30,113 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 14:46:30,265 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 14:46:30,275 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 14:46:30,278 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 14:46:30,282 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:46:30,285 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 14:46:30,287 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 14:46:30,463 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 14:46:30,473 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 14:46:30,477 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 14:46:30,485 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 14:46:30,491 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 14:46:30,494 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 14:46:30,663 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:46:30,684 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:46:30,686 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:46:30,690 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:46:30,693 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 14:46:30,860 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 14:46:30,862 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 14:46:30,863 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 14:46:30,869 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 14:46:30,871 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 14:46:30,872 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 14:46:30,874 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 14:46:31,062 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 14:46:31,108 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 14:46:31,110 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 14:46:31,111 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 14:46:31,112 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:46:31,113 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:46:31,114 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:46:31,261 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:46:31,264 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 14:46:31,267 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 14:46:31,271 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 14:46:31,461 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 14:46:31,464 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 14:46:31,466 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 14:46:31,469 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 14:46:31,472 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:46:31,475 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:46:31,478 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:46:31,482 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 14:46:31,662 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 14:46:31,665 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 14:46:31,673 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:46:31,677 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:46:31,861 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:46:31,864 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:46:31,877 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 14:46:31,880 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 14:46:31,882 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 14:46:31,885 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 14:46:32,340 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 14:46:32,341 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 14:46:32,342 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 14:46:32,523 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 14:46:32,526 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 14:46:32,529 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 14:46:32,532 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 14:46:32,534 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 14:46:32,536 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 14:46:32,537 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 14:46:32,721 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 14:46:32,724 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:46:32,730 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:46:32,733 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:46:32,736 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:46:32,740 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 14:46:32,921 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 14:46:32,990 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 14:46:32,992 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 14:46:32,993 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 14:46:32,995 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 14:46:32,996 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 14:46:33,121 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 14:46:33,124 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:46:33,126 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:46:33,129 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:46:33,132 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 14:46:33,133 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 14:46:33,322 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 14:46:33,325 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 14:46:33,329 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 14:46:33,332 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 14:46:33,336 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 14:46:33,345 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 14:46:33,574 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 14:46:33,579 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 14:46:33,581 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 14:46:33,583 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 14:46:33,585 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 14:46:33,720 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 14:46:33,721 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:46:33,723 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:46:33,724 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:46:33,725 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 14:46:33,726 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 14:46:33,920 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 14:46:33,927 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 14:46:33,929 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 14:46:33,931 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 14:46:33,932 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:46:33,933 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:46:33,934 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:46:34,122 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:46:34,126 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 14:46:34,129 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 14:46:34,132 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 14:46:34,135 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:46:34,138 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:46:34,141 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 14:46:34,144 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:46:34,322 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 14:46:34,325 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 14:46:34,329 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 14:46:34,332 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 14:46:34,335 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 14:46:34,522 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 14:46:34,525 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 14:46:34,529 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 14:46:34,532 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 14:46:34,538 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 14:46:34,542 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 14:46:34,544 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 14:46:34,721 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 14:46:34,723 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 14:46:34,726 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:46:34,729 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 14:46:34,732 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 14:46:34,922 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 14:46:34,926 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 14:46:34,929 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 14:46:34,960 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 14:46:34,963 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 14:46:34,964 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 14:46:34,966 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:46:35,122 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:46:35,126 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 14:46:35,132 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 14:46:35,136 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:46:35,139 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:46:35,141 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:46:35,144 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 14:46:35,147 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 14:46:35,321 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 14:46:35,324 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 14:46:35,327 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 14:46:35,329 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:46:35,331 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:46:35,334 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:46:35,336 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:46:40,035 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:46:40,038 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:46:40,041 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:46:40,044 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:46:45,465 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:46:45,468 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:46:45,471 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:46:45,474 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:46:53,084 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:46:53,086 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:46:53,089 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:46:53,092 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:47:43,549 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:47:43,552 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:47:43,555 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:47:43,558 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:50:22,221 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:50:22,223 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:50:22,226 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:50:22,228 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:50:26,285 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:50:26,288 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:50:26,291 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:50:26,294 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:50:29,993 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:50:29,996 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:50:29,999 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:50:30,002 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:50:58,487 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 14:50:58,490 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 14:50:58,499 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 14:50:58,501 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 14:50:58,585 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 14:50:58,588 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 14:50:58,590 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 14:50:58,593 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:25:31,244 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 15:25:31,282 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 15:25:31,290 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 15:25:31,294 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 15:25:31,295 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 15:25:31,297 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 15:25:31,298 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 15:25:31,299 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 15:25:31,300 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 15:25:31,301 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 15:25:31,302 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:25:31,303 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 15:25:31,463 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 15:25:31,466 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:25:31,511 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 15:25:31,517 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 15:25:31,520 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 15:25:31,521 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 15:25:31,526 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 15:25:31,528 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 15:25:31,529 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 15:25:31,532 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 15:25:31,662 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 15:25:31,666 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 15:25:31,669 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 15:25:31,672 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 15:25:31,675 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 15:25:31,678 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 15:25:31,681 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 15:25:31,684 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 15:25:31,862 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 15:25:31,868 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 15:25:31,871 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 15:25:31,874 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 15:25:31,876 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 15:25:31,907 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:25:31,910 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:25:31,912 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 15:25:32,064 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 15:25:32,066 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 15:25:32,067 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 15:25:32,069 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:25:32,072 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 15:25:32,074 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 15:25:32,264 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 15:25:32,273 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 15:25:32,277 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 15:25:32,286 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 15:25:32,292 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 15:25:32,294 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 15:25:32,479 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:25:32,482 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:25:32,485 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:25:32,487 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:25:32,490 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 15:25:32,662 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 15:25:32,666 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 15:25:32,669 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 15:25:32,681 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 15:25:32,684 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:25:32,686 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 15:25:32,688 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:25:32,862 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:25:32,920 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 15:25:32,922 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 15:25:32,923 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:25:32,924 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:25:32,925 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:25:32,926 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:25:33,063 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:25:33,065 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 15:25:33,068 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 15:25:33,071 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 15:25:33,263 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 15:25:33,268 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 15:25:33,270 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 15:25:33,273 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:25:33,276 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:25:33,279 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:25:33,281 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:25:33,283 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 15:25:33,462 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 15:25:33,466 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 15:25:33,473 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:25:33,477 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:25:33,663 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:25:33,666 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:25:33,677 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:25:33,679 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:25:33,681 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:25:33,683 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:25:34,145 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 15:25:34,323 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 15:25:34,325 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 15:25:34,328 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 15:25:34,332 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:25:34,334 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:25:34,335 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:25:34,337 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:25:34,524 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 15:25:34,527 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 15:25:34,530 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 15:25:34,533 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:25:34,538 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:25:34,541 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:25:34,544 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:25:34,546 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 15:25:34,723 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 15:25:34,796 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 15:25:34,799 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 15:25:34,802 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 15:25:34,921 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 15:25:34,923 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 15:25:34,924 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:25:34,925 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:25:34,927 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:25:34,928 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:25:34,929 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 15:25:34,931 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 15:25:35,123 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 15:25:35,126 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 15:25:35,133 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:25:35,136 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 15:25:35,333 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:25:35,336 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:25:35,375 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 15:25:35,377 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 15:25:35,378 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 15:25:35,380 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 15:25:35,523 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 15:25:35,526 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 15:25:35,528 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:25:35,531 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:25:35,534 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:25:35,536 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 15:25:35,538 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 15:25:35,723 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 15:25:35,726 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 15:25:35,729 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 15:25:35,732 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 15:25:35,735 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:25:35,922 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:25:35,925 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:25:35,927 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:25:35,931 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 15:25:35,933 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 15:25:35,936 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 15:25:35,938 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:25:35,941 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:25:35,943 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 15:25:36,123 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:25:36,125 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 15:25:36,128 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 15:25:36,131 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 15:25:36,323 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 15:25:36,327 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 15:25:36,330 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:25:36,333 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:25:36,336 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:25:36,339 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:25:36,345 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 15:25:36,523 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 15:25:36,526 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:25:36,529 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 15:25:36,532 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 15:25:36,535 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:25:36,538 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 15:25:36,540 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 15:25:36,723 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 15:25:36,726 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 15:25:36,749 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 15:25:36,752 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 15:25:36,754 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 15:25:36,757 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 15:25:36,923 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:25:36,926 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:25:36,930 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 15:25:36,936 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 15:25:36,939 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:25:36,942 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 15:25:36,944 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:25:36,947 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:25:37,123 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:25:37,125 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 15:25:37,128 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:25:37,130 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:25:37,133 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:25:37,135 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 15:25:37,138 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:25:37,140 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:26:06,802 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:26:06,805 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 15:26:06,808 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:26:06,810 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:26:06,906 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:26:06,910 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 15:26:06,911 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:26:06,913 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:34:36,485 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 15:34:36,522 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 15:34:36,531 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 15:34:36,534 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 15:34:36,536 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 15:34:36,537 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 15:34:36,539 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 15:34:36,540 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 15:34:36,541 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 15:34:36,542 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:34:36,543 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:34:36,544 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 15:34:36,696 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:34:36,698 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:34:36,735 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 15:34:36,741 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 15:34:36,744 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 15:34:36,745 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 15:34:36,750 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 15:34:36,751 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 15:34:36,753 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 15:34:36,756 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 15:34:36,896 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 15:34:36,899 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 15:34:36,902 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 15:34:36,905 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 15:34:36,909 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 15:34:36,912 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 15:34:36,914 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 15:34:36,917 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 15:34:37,095 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 15:34:37,101 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 15:34:37,104 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 15:34:37,107 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 15:34:37,110 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 15:34:37,139 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:34:37,144 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:34:37,147 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 15:34:37,301 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 15:34:37,304 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 15:34:37,306 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 15:34:37,309 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:34:37,313 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 15:34:37,317 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 15:34:37,497 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 15:34:37,506 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 15:34:37,509 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 15:34:37,517 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 15:34:37,523 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 15:34:37,526 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 15:34:37,697 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:34:37,716 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:34:37,719 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:34:37,721 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:34:37,723 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 15:34:37,895 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 15:34:37,899 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 15:34:37,901 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 15:34:37,914 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 15:34:37,918 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:34:37,921 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 15:34:37,924 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:34:38,096 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:34:38,152 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 15:34:38,153 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 15:34:38,154 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:34:38,155 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:34:38,156 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:34:38,157 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:34:38,295 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:34:38,299 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 15:34:38,301 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 15:34:38,305 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 15:34:38,496 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 15:34:38,499 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 15:34:38,502 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 15:34:38,505 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:34:38,507 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:34:38,509 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:34:38,511 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:34:38,513 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 15:34:38,696 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 15:34:38,699 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 15:34:38,706 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:34:38,710 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:34:38,902 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:34:38,905 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:34:38,917 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:34:38,919 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:34:38,922 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:34:38,923 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:34:39,387 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 15:34:39,388 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 15:34:39,390 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 15:34:39,391 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 15:34:39,587 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:34:39,591 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:34:39,594 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:34:39,597 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:34:39,601 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 15:34:39,604 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 15:34:39,608 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 15:34:39,788 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:34:39,793 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:34:39,796 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:34:39,798 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:34:39,801 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 15:34:39,986 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 15:34:40,010 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 15:34:40,012 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 15:34:40,013 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 15:34:40,013 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 15:34:40,014 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 15:34:40,015 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:34:40,016 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:34:40,187 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:34:40,190 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:34:40,192 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 15:34:40,195 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 15:34:40,388 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 15:34:40,391 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 15:34:40,394 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:34:40,398 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 15:34:40,414 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:34:40,417 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:34:40,607 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 15:34:40,608 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 15:34:40,610 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 15:34:40,611 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 15:34:40,613 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 15:34:40,614 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 15:34:40,616 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:34:40,788 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:34:40,791 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:34:40,794 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 15:34:40,797 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 15:34:40,799 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 15:34:40,988 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 15:34:40,991 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 15:34:40,994 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 15:34:40,997 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:34:41,000 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:34:41,004 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:34:41,007 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:34:41,011 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 15:34:41,188 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 15:34:41,191 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 15:34:41,193 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:34:41,196 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:34:41,199 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 15:34:41,202 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:34:41,204 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 15:34:41,388 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 15:34:41,391 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 15:34:41,394 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 15:34:41,398 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 15:34:41,402 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:34:41,587 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:34:41,589 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:34:41,591 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:34:41,594 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 15:34:41,596 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 15:34:41,598 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:34:41,600 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 15:34:41,602 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 15:34:41,786 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:34:41,788 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 15:34:41,790 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 15:34:41,791 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 15:34:41,988 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 15:34:41,991 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 15:34:42,015 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 15:34:42,016 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 15:34:42,018 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 15:34:42,019 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:34:42,020 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:34:42,022 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 15:34:42,190 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 15:34:42,193 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:34:42,195 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 15:34:42,197 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:34:42,198 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:34:42,200 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:34:42,201 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 15:34:42,202 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:34:42,387 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:34:42,390 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:34:42,393 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 15:34:42,396 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:34:42,398 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:35:36,860 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 15:35:36,897 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 15:35:36,905 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 15:35:36,909 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 15:35:36,911 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 15:35:36,912 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 15:35:36,913 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 15:35:36,914 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 15:35:36,915 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 15:35:36,917 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:35:36,918 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:35:36,919 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 15:35:37,086 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:35:37,088 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:35:37,125 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 15:35:37,130 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 15:35:37,131 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 15:35:37,133 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 15:35:37,137 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 15:35:37,138 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 15:35:37,139 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 15:35:37,142 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 15:35:37,286 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 15:35:37,289 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 15:35:37,291 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 15:35:37,294 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 15:35:37,297 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 15:35:37,300 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 15:35:37,303 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 15:35:37,305 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 15:35:37,485 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 15:35:37,489 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 15:35:37,492 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 15:35:37,494 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 15:35:37,496 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 15:35:37,519 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:35:37,522 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:35:37,524 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 15:35:37,690 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 15:35:37,694 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 15:35:37,695 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 15:35:37,697 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:35:37,700 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 15:35:37,702 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 15:35:37,887 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 15:35:37,895 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 15:35:37,899 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 15:35:37,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 15:35:37,909 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 15:35:37,912 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 15:35:38,087 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:35:38,104 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:35:38,106 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:35:38,109 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:35:38,113 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 15:35:38,285 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 15:35:38,289 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 15:35:38,291 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 15:35:38,302 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 15:35:38,307 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:35:38,310 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 15:35:38,312 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:35:38,485 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:35:38,535 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 15:35:38,537 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 15:35:38,537 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:35:38,538 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:35:38,539 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:35:38,540 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:35:38,685 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:35:38,689 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 15:35:38,692 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 15:35:38,695 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 15:35:38,885 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 15:35:38,888 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 15:35:38,891 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 15:35:38,894 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:35:38,896 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:35:38,898 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:35:38,901 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:35:38,903 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 15:35:39,085 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 15:35:39,088 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 15:35:39,095 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:35:39,099 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:35:39,285 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:35:39,288 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:35:39,300 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:35:39,303 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:35:39,305 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:35:39,308 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:35:39,814 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 15:35:39,815 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 15:35:39,816 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 15:35:39,817 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 15:35:40,006 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:35:40,009 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:35:40,013 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:35:40,016 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:35:40,021 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 15:35:40,023 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 15:35:40,026 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 15:35:40,206 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:35:40,211 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:35:40,214 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:35:40,217 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:35:40,219 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 15:35:40,405 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 15:35:40,456 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 15:35:40,457 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 15:35:40,458 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 15:35:40,459 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 15:35:40,460 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 15:35:40,461 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:35:40,462 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:35:40,606 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:35:40,609 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:35:40,612 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 15:35:40,614 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 15:35:40,805 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 15:35:40,809 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 15:35:40,812 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:35:40,815 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 15:35:40,824 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:35:40,827 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:35:41,013 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 15:35:41,014 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 15:35:41,015 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 15:35:41,016 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 15:35:41,018 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 15:35:41,019 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 15:35:41,019 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:35:41,206 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:35:41,209 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:35:41,212 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 15:35:41,215 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 15:35:41,218 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 15:35:41,406 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 15:35:41,409 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 15:35:41,412 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 15:35:41,416 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:35:41,419 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:35:41,422 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:35:41,425 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:35:41,429 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 15:35:41,606 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 15:35:41,609 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 15:35:41,612 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:35:41,614 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:35:41,617 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 15:35:41,621 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:35:41,623 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 15:35:41,806 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 15:35:41,809 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 15:35:41,812 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 15:35:41,816 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 15:35:41,820 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:35:42,005 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:35:42,007 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:35:42,009 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:35:42,014 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 15:35:42,016 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 15:35:42,018 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:35:42,020 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 15:35:42,022 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 15:35:42,205 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:35:42,208 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 15:35:42,211 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 15:35:42,214 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 15:35:42,406 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 15:35:42,434 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 15:35:42,435 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 15:35:42,437 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 15:35:42,438 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 15:35:42,439 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:35:42,440 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:35:42,442 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 15:35:42,608 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 15:35:42,613 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:35:42,614 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 15:35:42,616 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:35:42,618 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:35:42,620 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:35:42,622 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 15:35:42,624 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:35:42,805 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:35:42,808 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:35:42,811 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 15:35:42,814 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:35:42,816 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:41:52,293 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 15:41:52,331 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 15:41:52,340 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 15:41:52,343 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-05-03 15:41:52,345 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-05-03 15:41:52,347 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 15:41:52,348 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 15:41:52,349 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 15:41:52,350 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-05-03 15:41:52,352 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-05-03 15:41:52,353 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:41:52,354 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 15:41:52,517 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-05-03 15:41:52,520 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:41:52,565 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 15:41:52,572 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 15:41:52,574 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 15:41:52,575 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 15:41:52,580 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 15:41:52,582 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 15:41:52,583 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 15:41:52,586 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 15:41:52,717 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 15:41:52,720 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 15:41:52,723 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 15:41:52,725 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 15:41:52,727 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 15:41:52,728 [Thread: 8       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 15:41:52,730 [Thread: 8       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 15:41:52,732 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 15:41:52,917 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 15:41:52,923 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 15:41:52,926 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 15:41:52,929 [Thread: 8       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 15:41:52,931 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 15:41:52,965 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:41:52,968 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:41:52,970 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 15:41:53,118 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 15:41:53,121 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 15:41:53,123 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 15:41:53,126 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:41:53,130 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 15:41:53,133 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 15:41:53,318 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 15:41:53,326 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 15:41:53,329 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 15:41:53,334 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 15:41:53,339 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 15:41:53,341 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 15:41:53,518 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:41:53,535 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:41:53,537 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:41:53,539 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:41:53,540 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 15:41:53,717 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 15:41:53,720 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 15:41:53,723 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 15:41:53,735 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 15:41:53,740 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:41:53,743 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 15:41:53,745 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:41:53,918 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:41:53,973 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 15:41:53,974 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 15:41:53,976 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:41:53,977 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:41:53,978 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:41:53,979 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:41:54,117 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:41:54,120 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 15:41:54,123 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 15:41:54,127 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 15:41:54,316 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 15:41:54,319 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 15:41:54,323 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 15:41:54,326 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:41:54,329 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:41:54,332 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:41:54,334 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:41:54,337 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 15:41:54,517 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 15:41:54,520 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 15:41:54,528 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:41:54,532 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:41:54,715 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:41:54,716 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:41:54,723 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:41:54,725 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:41:54,726 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:41:54,728 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:53:38,246 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 15:53:38,285 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 15:53:38,293 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 15:53:38,301 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 15:53:38,303 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 15:53:38,305 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 15:53:38,306 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 15:53:38,307 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 15:53:38,308 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 15:53:38,309 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:53:38,310 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:53:38,311 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 15:53:38,459 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:53:38,462 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:53:38,504 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 15:53:38,510 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 15:53:38,513 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 15:53:38,514 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 15:53:38,519 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 15:53:38,521 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 15:53:38,522 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 15:53:38,525 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 15:53:38,659 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 15:53:38,662 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 15:53:38,666 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 15:53:38,669 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 15:53:38,673 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 15:53:38,676 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 15:53:38,679 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 15:53:38,683 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 15:53:38,858 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 15:53:38,864 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 15:53:38,867 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 15:53:38,870 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 15:53:38,872 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 15:53:38,905 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:53:38,909 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:53:38,912 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 15:53:39,060 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 15:53:39,062 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 15:53:39,064 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 15:53:39,067 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:53:39,070 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 15:53:39,073 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 15:53:39,260 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 15:53:39,270 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 15:53:39,273 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 15:53:39,282 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 15:53:39,285 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 15:53:39,288 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 15:53:39,476 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:53:39,480 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:53:39,483 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:53:39,485 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:53:39,487 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 15:53:39,658 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 15:53:39,662 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 15:53:39,666 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 15:53:39,678 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 15:53:39,683 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:53:39,686 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 15:53:39,688 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:53:39,859 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:53:39,920 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 15:53:39,921 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 15:53:39,922 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:53:39,923 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:53:39,924 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:53:39,925 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:53:40,059 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:53:40,062 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 15:53:40,065 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 15:53:40,068 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 15:53:40,259 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 15:53:40,261 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-05-03 15:53:40,264 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:53:40,269 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:53:40,273 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:53:40,276 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:53:40,280 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 15:53:40,283 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 15:53:40,459 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:53:40,462 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:53:40,465 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:53:40,468 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:53:40,471 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 15:53:40,473 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 15:53:40,658 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 15:53:40,664 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:53:40,666 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:53:40,667 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:53:40,669 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:53:40,869 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:53:40,872 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:53:40,875 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:53:40,885 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:53:59,975 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 15:53:59,976 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 15:53:59,977 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 15:53:59,980 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 15:54:00,397 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:54:00,398 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:54:00,399 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:55:13,619 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 15:55:13,660 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 15:55:13,668 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 15:55:13,672 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 15:55:13,674 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 15:55:13,675 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 15:55:13,677 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 15:55:13,678 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 15:55:13,679 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 15:55:13,680 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:55:13,681 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:55:13,682 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 15:55:13,845 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:55:13,848 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:55:13,884 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 15:55:13,890 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 15:55:13,892 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 15:55:13,894 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 15:55:13,899 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 15:55:13,900 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 15:55:13,901 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 15:55:13,904 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 15:55:14,045 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 15:55:14,048 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 15:55:14,052 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 15:55:14,055 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 15:55:14,058 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 15:55:14,061 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 15:55:14,064 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 15:55:14,089 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 15:55:14,244 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 15:55:14,250 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 15:55:14,253 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 15:55:14,255 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 15:55:14,258 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 15:55:14,278 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:55:14,282 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:55:14,284 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 15:55:14,446 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 15:55:14,448 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 15:55:14,449 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 15:55:14,452 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:55:14,455 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 15:55:14,458 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 15:55:14,646 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 15:55:14,655 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 15:55:14,659 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 15:55:14,666 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 15:55:14,672 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 15:55:14,676 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 15:55:14,847 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:55:14,865 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:55:14,867 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:55:14,869 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:55:14,871 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 15:55:15,045 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 15:55:15,048 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 15:55:15,051 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 15:55:15,063 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 15:55:15,068 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:55:15,071 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 15:55:15,073 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:55:15,244 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:55:15,326 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 15:55:15,327 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 15:55:15,329 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:55:15,330 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:55:15,331 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:55:15,332 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:55:15,444 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:55:15,447 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 15:55:15,450 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 15:55:15,453 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 15:55:15,643 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 15:55:15,644 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-05-03 15:55:15,645 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:55:15,646 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:55:15,647 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:55:15,648 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:55:15,649 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 15:55:15,650 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 15:55:15,845 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:55:15,847 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:55:15,850 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:55:15,853 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:55:15,856 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 15:55:15,859 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 15:55:16,051 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 15:55:16,060 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:55:16,063 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:55:16,065 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:55:16,066 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:55:16,251 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:55:16,254 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:55:16,255 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:55:16,266 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:55:24,271 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 15:55:27,413 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 15:55:27,414 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 15:55:27,416 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 15:55:27,417 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:55:27,418 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:55:27,419 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:55:27,420 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:55:27,421 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 15:55:27,422 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 15:55:27,423 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 15:55:27,424 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:55:27,426 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:55:27,427 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:55:27,427 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:55:27,428 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 15:55:27,625 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 15:55:27,678 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 15:55:27,679 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 15:55:27,680 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 15:55:27,681 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 15:55:27,825 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 15:55:27,828 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:55:27,831 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:55:27,834 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:55:27,837 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:55:27,840 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 15:55:27,843 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 15:55:28,025 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 15:55:28,028 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 15:55:28,032 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:55:28,034 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 15:55:28,036 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:55:28,224 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:55:28,269 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 15:55:28,271 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 15:55:28,272 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 15:55:28,273 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 15:55:28,423 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 15:55:28,425 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 15:55:28,426 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:55:28,427 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:55:28,428 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:55:28,429 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 15:55:28,430 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 15:55:28,624 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 15:55:28,628 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 15:55:28,631 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 15:55:28,634 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 15:55:28,637 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:55:28,640 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:55:28,823 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:55:28,825 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:55:28,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 15:55:28,828 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 15:55:28,830 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 15:55:28,831 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:55:28,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:55:28,834 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 15:55:29,023 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:55:29,024 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 15:55:29,026 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 15:55:29,027 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 15:55:29,225 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 15:55:29,229 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 15:55:29,238 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:55:29,240 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:55:29,242 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:55:29,245 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:55:29,250 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 15:55:29,252 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 15:55:29,425 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:55:29,428 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 15:55:29,430 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 15:55:29,433 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:55:29,436 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 15:55:29,439 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 15:55:29,625 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 15:55:29,628 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 15:55:29,631 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 15:55:29,634 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 15:55:29,637 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 15:55:29,640 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 15:55:29,824 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:55:29,825 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:55:29,828 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 15:55:29,831 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 15:55:29,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:55:29,834 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 15:55:29,835 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:55:29,836 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:55:29,837 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:55:30,026 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 15:55:30,029 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:55:30,031 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:55:30,035 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:55:30,038 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 15:55:30,041 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:55:30,043 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:59:19,492 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 15:59:19,530 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 15:59:19,538 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 15:59:19,542 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 15:59:19,544 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 15:59:19,545 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 15:59:19,546 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 15:59:19,547 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 15:59:19,548 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 15:59:19,549 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:59:19,550 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:59:19,551 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 15:59:19,719 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 15:59:19,722 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 15:59:19,753 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 15:59:19,759 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 15:59:19,761 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 15:59:19,763 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 15:59:19,767 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 15:59:19,769 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 15:59:19,770 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 15:59:19,773 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 15:59:19,919 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 15:59:19,922 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 15:59:19,925 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 15:59:19,928 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 15:59:19,932 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 15:59:19,935 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 15:59:19,937 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 15:59:19,940 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 15:59:20,118 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 15:59:20,125 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 15:59:20,128 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 15:59:20,130 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 15:59:20,132 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 15:59:20,157 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:59:20,161 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 15:59:20,164 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 15:59:20,321 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 15:59:20,324 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 15:59:20,327 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 15:59:20,330 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:59:20,334 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 15:59:20,338 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 15:59:20,520 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 15:59:20,529 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 15:59:20,533 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 15:59:20,541 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 15:59:20,546 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 15:59:20,550 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 15:59:20,734 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:59:20,738 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:59:20,741 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:59:20,743 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:59:20,745 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 15:59:20,919 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 15:59:20,922 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 15:59:20,925 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 15:59:20,935 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 15:59:20,939 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 15:59:20,941 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 15:59:20,944 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 15:59:21,119 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 15:59:21,183 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 15:59:21,185 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 15:59:21,186 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 15:59:21,187 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:59:21,188 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:59:21,189 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:59:21,318 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:59:21,321 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 15:59:21,328 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 15:59:21,332 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 15:59:21,519 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 15:59:21,522 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-05-03 15:59:21,525 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:59:21,528 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:59:21,531 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:59:21,534 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:59:21,537 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 15:59:21,540 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 15:59:21,718 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 15:59:21,721 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:59:21,724 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:59:21,726 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:59:21,729 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 15:59:21,732 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 15:59:21,918 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 15:59:21,922 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:59:21,924 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:59:21,926 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:59:21,928 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:59:22,130 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 15:59:22,134 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 15:59:22,137 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 15:59:22,151 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 15:59:22,602 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 15:59:22,779 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 15:59:22,782 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 15:59:22,785 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 15:59:22,787 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:59:22,790 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:59:22,793 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:59:22,795 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 15:59:22,978 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 15:59:22,979 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 15:59:22,980 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 15:59:22,982 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:59:22,984 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:59:22,985 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:59:22,987 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:59:22,988 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 15:59:23,179 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 15:59:23,244 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 15:59:23,245 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 15:59:23,247 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 15:59:23,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 15:59:23,382 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 15:59:23,385 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 15:59:23,388 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:59:23,391 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:59:23,394 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:59:23,397 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 15:59:23,411 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 15:59:23,579 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 15:59:23,582 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 15:59:23,586 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 15:59:23,589 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 15:59:23,779 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 15:59:23,783 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 15:59:23,826 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 15:59:23,827 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 15:59:23,829 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 15:59:23,831 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 15:59:23,979 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 15:59:23,982 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 15:59:23,985 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:59:23,988 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:59:23,991 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:59:23,994 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 15:59:23,997 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 15:59:24,179 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 15:59:24,183 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 15:59:24,186 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 15:59:24,188 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 15:59:24,191 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:59:24,380 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:59:24,383 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:59:24,386 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:59:24,390 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 15:59:24,393 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 15:59:24,396 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 15:59:24,399 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:59:24,402 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:59:24,405 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 15:59:24,578 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:59:24,581 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 15:59:24,584 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 15:59:24,587 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 15:59:24,779 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 15:59:24,784 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 15:59:24,787 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 15:59:24,790 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 15:59:24,793 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 15:59:24,796 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 15:59:24,803 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 15:59:24,978 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 15:59:24,981 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 15:59:24,984 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 15:59:24,987 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 15:59:25,009 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:59:25,010 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 15:59:25,012 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 15:59:25,178 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 15:59:25,181 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 15:59:25,182 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 15:59:25,184 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 15:59:25,187 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 15:59:25,189 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 15:59:25,379 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:59:25,382 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:59:25,386 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 15:59:25,392 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 15:59:25,396 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 15:59:25,398 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 15:59:25,401 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 15:59:25,404 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 15:59:25,578 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 15:59:25,582 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 15:59:25,586 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 15:59:25,588 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 15:59:25,591 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 15:59:25,594 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 15:59:25,597 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 15:59:25,599 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 15:59:25,827 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 15:59:25,829 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 15:59:25,830 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 15:59:25,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:00:08,288 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 16:00:08,326 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 16:00:08,335 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 16:00:08,338 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 16:00:08,340 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 16:00:08,342 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 16:00:08,343 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 16:00:08,344 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 16:00:08,346 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 16:00:08,347 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 16:00:08,348 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:00:08,349 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 16:00:08,520 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 16:00:08,523 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:00:08,561 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 16:00:08,568 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 16:00:08,570 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 16:00:08,572 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 16:00:08,577 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 16:00:08,581 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 16:00:08,583 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 16:00:08,586 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 16:00:08,720 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 16:00:08,724 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 16:00:08,727 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 16:00:08,731 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 16:00:08,734 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 16:00:08,737 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 16:00:08,740 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 16:00:08,743 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 16:00:08,919 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 16:00:08,925 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 16:00:08,928 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 16:00:08,930 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 16:00:08,933 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 16:00:08,963 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:00:08,967 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:00:08,971 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 16:00:09,124 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 16:00:09,128 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 16:00:09,131 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 16:00:09,135 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:00:09,138 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 16:00:09,141 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 16:00:09,321 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 16:00:09,330 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 16:00:09,334 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 16:00:09,342 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 16:00:09,346 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 16:00:09,349 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 16:00:09,521 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:00:09,540 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:00:09,543 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:00:09,546 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:00:09,548 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 16:00:09,719 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 16:00:09,723 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 16:00:09,726 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 16:00:09,738 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 16:00:09,742 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:00:09,745 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 16:00:09,748 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:00:09,919 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:00:09,971 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 16:00:09,973 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 16:00:09,974 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:00:09,975 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:00:09,976 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:00:09,977 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:00:10,119 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:00:10,122 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 16:00:10,125 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 16:00:10,128 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 16:00:10,320 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 16:00:10,322 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-05-03 16:00:10,325 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:00:10,328 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:00:10,331 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:00:10,334 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:00:10,346 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 16:00:10,348 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 16:00:10,520 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:00:10,522 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:00:10,525 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:00:10,528 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:00:10,531 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 16:00:10,534 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 16:00:10,719 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 16:00:10,724 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:00:10,725 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:00:10,727 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:00:10,728 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:00:10,931 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:00:10,936 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:00:10,940 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:00:10,944 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:00:11,417 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 16:01:34,861 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 16:01:34,899 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 16:01:34,907 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 16:01:34,910 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 16:01:34,912 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 16:01:34,914 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 16:01:34,915 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 16:01:34,916 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 16:01:34,917 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 16:01:34,918 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 16:01:34,919 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:01:34,920 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 16:01:35,076 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 16:01:35,078 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:01:35,114 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 16:01:35,119 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 16:01:35,121 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 16:01:35,123 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 16:01:35,127 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 16:01:35,129 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 16:01:35,130 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 16:01:35,133 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 16:01:35,275 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 16:01:35,279 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 16:01:35,282 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 16:01:35,285 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 16:01:35,288 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 16:01:35,291 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 16:01:35,293 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 16:01:35,294 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 16:01:35,475 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 16:01:35,481 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 16:01:35,484 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 16:01:35,487 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 16:01:35,490 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 16:01:35,515 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:01:35,518 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:01:35,521 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 16:01:35,680 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 16:01:35,685 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 16:01:35,688 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 16:01:35,693 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:01:35,699 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 16:01:35,705 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 16:01:35,877 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 16:01:35,886 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 16:01:35,890 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 16:01:35,895 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 16:01:35,899 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 16:01:35,901 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 16:01:36,077 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:01:36,095 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:01:36,098 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:01:36,101 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:01:36,103 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 16:01:36,275 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 16:01:36,278 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 16:01:36,280 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 16:01:36,290 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 16:01:36,294 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:01:36,296 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 16:01:36,299 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:01:36,475 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:01:36,532 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 16:01:36,533 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 16:01:36,534 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:01:36,535 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:01:36,536 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:01:36,537 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:01:36,675 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:01:36,678 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 16:01:36,681 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 16:01:36,684 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 16:01:36,875 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 16:01:36,877 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-05-03 16:01:36,880 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:01:36,882 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:01:36,885 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:01:36,887 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:01:36,891 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 16:01:36,893 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 16:01:37,076 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:01:37,079 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:01:37,081 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:01:37,083 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:01:37,086 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 16:01:37,088 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 16:01:37,276 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 16:01:37,284 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:01:37,288 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:01:37,290 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:01:37,294 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:01:37,486 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:01:37,489 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:01:37,492 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:01:37,505 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:01:44,768 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 16:01:44,770 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 16:01:44,771 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 16:01:44,773 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 16:01:44,774 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:01:44,776 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:01:44,777 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:01:44,778 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:01:44,971 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 16:01:44,974 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 16:01:44,977 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 16:01:44,979 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 16:01:44,985 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 16:01:44,988 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 16:01:44,991 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 16:01:44,994 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 16:01:45,170 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 16:01:45,217 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 16:01:45,219 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 16:01:45,220 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 16:01:45,368 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 16:01:45,369 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 16:01:45,371 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 16:01:45,372 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 16:01:45,374 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 16:01:45,375 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:01:45,376 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 16:01:45,377 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 16:01:45,570 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 16:01:45,572 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 16:01:45,576 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 16:01:45,579 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 16:01:45,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 16:01:45,772 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 16:01:45,803 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 16:01:45,804 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 16:01:45,805 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 16:01:45,805 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 16:01:45,970 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 16:01:45,973 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 16:01:45,976 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:01:45,979 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:01:45,982 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:01:45,985 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 16:01:45,989 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 16:01:46,170 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 16:01:46,173 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 16:01:46,176 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 16:01:46,179 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 16:01:46,182 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:01:46,369 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 16:01:46,373 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:01:46,378 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:01:46,381 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 16:01:46,385 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 16:01:46,388 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 16:01:46,390 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:01:46,393 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:01:46,570 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 16:01:46,573 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 16:01:46,576 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 16:01:46,579 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 16:01:46,583 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 16:01:46,770 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 16:01:46,775 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 16:01:46,786 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:01:46,789 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 16:01:46,793 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:01:46,796 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:01:46,802 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 16:01:46,968 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 16:01:46,970 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 16:01:46,971 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 16:01:46,972 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 16:01:46,973 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:01:46,975 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 16:01:46,976 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 16:01:47,170 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 16:01:47,174 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 16:01:47,177 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 16:01:47,180 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 16:01:47,183 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 16:01:47,370 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 16:01:47,373 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:01:47,375 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:01:47,380 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 16:01:47,385 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 16:01:47,389 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:01:47,392 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:01:47,394 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:01:47,570 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:01:47,573 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:01:47,576 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 16:01:47,578 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:01:47,581 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:01:47,584 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:01:47,587 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 16:01:47,589 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 16:01:47,770 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 16:01:47,773 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:01:47,775 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:01:47,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:01:47,781 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:26:31,364 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 16:26:31,402 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 16:26:31,411 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 16:26:31,414 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-05-03 16:26:31,416 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-05-03 16:26:31,417 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 16:26:31,418 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 16:26:31,419 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-05-03 16:26:31,420 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-05-03 16:26:31,422 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 16:26:31,423 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:26:31,424 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 16:26:31,576 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-05-03 16:26:31,579 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:26:31,607 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 16:26:31,612 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 16:26:31,614 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 16:26:31,616 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 16:26:31,620 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 16:26:31,621 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 16:26:31,623 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 16:26:31,625 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 16:26:31,777 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 16:26:31,780 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 16:26:31,783 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 16:26:31,786 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 16:26:31,789 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 16:26:31,792 [Thread: 9       ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 16:26:31,795 [Thread: 9       ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 16:26:31,798 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 16:26:31,976 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 16:26:31,982 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 16:26:31,984 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 16:26:31,987 [Thread: 9       ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 16:26:31,989 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 16:26:32,023 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:26:32,026 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:26:32,028 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 16:26:32,181 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 16:26:32,185 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 16:26:32,189 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 16:26:32,193 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:26:32,199 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 16:26:32,204 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 16:26:32,378 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 16:26:32,385 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 16:26:32,388 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 16:26:32,394 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 16:26:32,399 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 16:26:32,401 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 16:26:32,594 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:26:32,597 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:26:32,599 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:26:32,600 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:26:32,602 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 16:26:32,776 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 16:26:32,780 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 16:26:32,783 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 16:26:32,796 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 16:26:32,801 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:26:32,803 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 16:26:32,805 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:26:32,977 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:26:33,036 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 16:26:33,038 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 16:26:33,039 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:26:33,040 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:26:33,041 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:26:33,043 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:26:33,176 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:26:33,179 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 16:26:33,182 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 16:26:33,185 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 16:26:33,376 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 16:26:33,379 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-05-03 16:26:33,382 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:26:33,385 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:26:33,388 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:26:33,390 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:26:33,394 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 16:26:33,397 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 16:26:33,577 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:26:33,580 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:26:33,582 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:26:33,586 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:26:33,589 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 16:26:33,592 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 16:26:33,776 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 16:26:33,783 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:26:33,786 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:26:33,789 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:26:33,791 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:26:33,987 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:26:33,991 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:26:33,993 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:26:34,004 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:26:34,458 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 16:26:34,639 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 16:26:34,642 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 16:26:34,645 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 16:26:34,648 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:26:34,651 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:26:34,655 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:26:34,658 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:26:34,837 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 16:26:34,840 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 16:26:34,842 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 16:26:34,844 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 16:26:34,847 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 16:26:34,849 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 16:26:34,850 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 16:26:34,852 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 16:26:35,036 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 16:26:35,089 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 16:26:35,090 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 16:26:35,091 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 16:26:35,237 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 16:26:35,240 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 16:26:35,243 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 16:26:35,246 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 16:26:35,248 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 16:26:35,251 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:26:35,254 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 16:26:35,265 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 16:26:35,436 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 16:26:35,437 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 16:26:35,440 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 16:26:35,441 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 16:26:35,637 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 16:26:35,640 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 16:26:35,691 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 16:26:35,693 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 16:26:35,695 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 16:26:35,696 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 16:26:35,837 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 16:26:35,840 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 16:26:35,843 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:26:35,846 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:26:35,848 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:26:35,851 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 16:26:35,855 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 16:26:36,037 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 16:26:36,040 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 16:26:36,043 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 16:26:36,046 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 16:26:36,048 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:26:36,237 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 16:26:36,240 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:26:36,243 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:26:36,247 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 16:26:36,250 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 16:26:36,253 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 16:26:36,255 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:26:36,258 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:26:36,260 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 16:26:36,437 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 16:26:36,440 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 16:26:36,443 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 16:26:36,446 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 16:26:36,637 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 16:26:36,641 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 16:26:36,644 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:26:36,646 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 16:26:36,649 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:26:36,651 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:26:36,656 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 16:26:36,836 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 16:26:36,840 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 16:26:36,844 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 16:26:36,862 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 16:26:36,864 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:26:36,866 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 16:26:36,868 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 16:26:37,035 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 16:26:37,037 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 16:26:37,038 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 16:26:37,040 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 16:26:37,042 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 16:26:37,043 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 16:26:37,237 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:26:37,240 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:26:37,244 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 16:26:37,249 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 16:26:37,253 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:26:37,256 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:26:37,259 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:26:37,261 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:26:37,436 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:26:37,437 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 16:26:37,438 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:26:37,440 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:26:37,441 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:26:37,442 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 16:26:37,444 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 16:26:37,445 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 16:26:37,636 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:26:37,638 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:26:37,640 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:26:37,642 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:26:43,339 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:26:43,341 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:26:43,343 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:26:43,345 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:26:48,489 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:26:48,492 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:26:48,495 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:26:48,498 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:26:51,214 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:26:51,217 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:26:51,220 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:26:51,223 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:26:51,327 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:26:51,330 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 16:26:51,333 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:26:51,336 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:46:28,954 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 16:46:29,009 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 16:46:29,017 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 16:46:29,021 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 16:46:29,023 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 16:46:29,024 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 16:46:29,025 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 16:46:29,027 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 16:46:29,028 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 16:46:29,029 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 16:46:29,030 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:46:29,031 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 16:46:29,172 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 16:46:29,175 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:46:29,207 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 16:46:29,213 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 16:46:29,215 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 16:46:29,216 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 16:46:29,221 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 16:46:29,222 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 16:46:29,224 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 16:46:29,227 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 16:46:29,373 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 16:46:29,376 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 16:46:29,380 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 16:46:29,383 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 16:46:29,385 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 16:46:29,387 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 16:46:29,389 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 16:46:29,391 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 16:46:29,573 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 16:46:29,579 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 16:46:29,582 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 16:46:29,586 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 16:46:29,590 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 16:46:29,612 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:46:29,615 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:46:29,618 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 16:46:29,775 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 16:46:29,777 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 16:46:29,779 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 16:46:29,781 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:46:29,785 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 16:46:29,787 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 16:46:29,975 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 16:46:29,983 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 16:46:29,986 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 16:46:29,992 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 16:46:29,996 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 16:46:29,999 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 16:46:30,192 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:46:30,195 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:46:30,196 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:46:30,198 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:46:30,199 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 16:46:30,372 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 16:46:30,375 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 16:46:30,378 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 16:46:30,391 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 16:46:30,395 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:46:30,398 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 16:46:30,401 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:46:30,574 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:46:30,639 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 16:46:30,640 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 16:46:30,641 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:46:30,643 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:46:30,644 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:46:30,645 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:46:30,774 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:46:30,777 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 16:46:30,780 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 16:46:30,784 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 16:46:30,974 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 16:46:30,977 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-05-03 16:46:30,980 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:46:30,983 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:46:30,986 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:46:30,989 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:46:30,993 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 16:46:30,996 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 16:46:31,174 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:46:31,177 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:46:31,180 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:46:31,183 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:46:31,185 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 16:46:31,187 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 16:46:31,373 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 16:46:31,379 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:46:31,383 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:46:31,385 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:46:31,387 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:46:31,586 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:46:31,593 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:46:31,597 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:46:31,607 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:46:32,037 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 16:46:32,038 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 16:46:32,039 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 16:46:32,040 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 16:46:32,234 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:46:32,237 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:46:32,240 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:46:32,244 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:46:32,248 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 16:46:32,251 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 16:46:32,254 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 16:46:32,433 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 16:46:32,439 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 16:46:32,442 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 16:46:32,445 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 16:46:32,448 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 16:46:32,634 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 16:46:32,694 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 16:46:32,696 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 16:46:32,697 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 16:46:32,698 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 16:46:32,699 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 16:46:32,700 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 16:46:32,701 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 16:46:32,834 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 16:46:32,837 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:46:32,839 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 16:46:32,851 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 16:46:33,033 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 16:46:33,034 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 16:46:33,037 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 16:46:33,038 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 16:46:33,040 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 16:46:33,042 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 16:46:33,252 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 16:46:33,255 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 16:46:33,257 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 16:46:33,260 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 16:46:33,262 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 16:46:33,265 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 16:46:33,267 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:46:33,434 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:46:33,437 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:46:33,440 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 16:46:33,442 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 16:46:33,445 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 16:46:33,634 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 16:46:33,637 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 16:46:33,640 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 16:46:33,643 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:46:33,645 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 16:46:33,648 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:46:33,651 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:46:33,654 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 16:46:33,834 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 16:46:33,837 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 16:46:33,840 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:46:33,843 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:46:33,846 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 16:46:33,849 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 16:46:33,852 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 16:46:34,034 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 16:46:34,037 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 16:46:34,040 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 16:46:34,045 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 16:46:34,048 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:46:34,234 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 16:46:34,237 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:46:34,240 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:46:34,247 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 16:46:34,250 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 16:46:34,253 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 16:46:34,256 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 16:46:34,259 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 16:46:34,434 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:46:34,436 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 16:46:34,439 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 16:46:34,443 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 16:46:34,634 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 16:46:34,637 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 16:46:34,639 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 16:46:34,641 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 16:46:34,644 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 16:46:34,646 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:46:34,649 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:46:34,653 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 16:46:34,836 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 16:46:34,840 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:46:34,843 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:46:34,845 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:46:34,848 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:46:34,851 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:46:34,853 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 16:46:34,855 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:46:35,034 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:46:35,037 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:46:35,039 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 16:46:35,042 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 16:46:35,045 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 16:46:35,047 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:46:35,050 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:46:35,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:46:35,233 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:46:39,500 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:46:39,504 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:46:39,506 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:46:39,509 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:46:39,616 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:46:39,617 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 16:46:39,618 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:46:39,619 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:49:51,515 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-05-03 16:49:51,554 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml]
2019-05-03 16:49:51,562 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-05-03 16:49:51,566 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-05-03 16:49:51,568 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-05-03 16:49:51,569 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-05-03 16:49:51,571 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-05-03 16:49:51,572 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-05-03 16:49:51,573 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-05-03 16:49:51,574 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 16:49:51,575 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:49:51,576 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-05-03 16:49:51,750 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-05-03 16:49:51,753 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-05-03 16:49:51,777 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-05-03 16:49:51,784 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-05-03 16:49:51,786 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-05-03 16:49:51,788 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-05-03 16:49:51,793 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-05-03 16:49:51,795 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-05-03 16:49:51,796 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-05-03 16:49:51,798 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-05-03 16:49:51,951 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-05-03 16:49:51,955 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-05-03 16:49:51,958 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-05-03 16:49:51,961 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-05-03 16:49:51,965 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-05-03 16:49:51,968 [Thread: 10      ] [DEBUG] -- Found 13 <object> elements defining objects.
2019-05-03 16:49:51,971 [Thread: 10      ] [DEBUG] -- Loaded 13 object definitions from location [spring-objects.xml]
2019-05-03 16:49:51,974 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-05-03 16:49:52,150 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-05-03 16:49:52,156 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-05-03 16:49:52,159 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-05-03 16:49:52,162 [Thread: 10      ] [DEBUG] -- 13 objects defined in application context [spring.root].
2019-05-03 16:49:52,165 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-05-03 16:49:52,192 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:49:52,196 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-05-03 16:49:52,198 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-05-03 16:49:52,351 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-05-03 16:49:52,354 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-05-03 16:49:52,355 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-05-03 16:49:52,358 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:49:52,361 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-05-03 16:49:52,363 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-05-03 16:49:52,552 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-05-03 16:49:52,561 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-05-03 16:49:52,566 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-05-03 16:49:52,574 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-05-03 16:49:52,577 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-05-03 16:49:52,579 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-05-03 16:49:52,750 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:49:52,764 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:49:52,767 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:49:52,769 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:49:52,772 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-05-03 16:49:52,951 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-05-03 16:49:52,954 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-05-03 16:49:52,957 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-05-03 16:49:52,967 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[PortStatusChange]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-05-03 16:49:52,970 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-05-03 16:49:52,973 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-05-03 16:49:52,975 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-05-03 16:49:53,151 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname portStatusChange
2019-05-03 16:49:53,210 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-05-03 16:49:53,211 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-05-03 16:49:53,212 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-05-03 16:49:53,214 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:49:53,215 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:49:53,216 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:49:53,350 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:49:53,353 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 34].
2019-05-03 16:49:53,355 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-05-03 16:49:53,358 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-05-03 16:49:53,551 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-05-03 16:49:53,554 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-05-03 16:49:53,557 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:49:53,559 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:49:53,562 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:49:53,565 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:49:53,568 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-05-03 16:49:53,571 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-05-03 16:49:53,751 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-05-03 16:49:53,754 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:49:53,756 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:49:53,759 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:49:53,762 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-05-03 16:49:53,765 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-05-03 16:49:53,951 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-05-03 16:49:53,958 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:49:53,962 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:49:53,965 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:49:53,968 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:49:54,158 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-05-03 16:49:54,161 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-05-03 16:49:54,163 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-05-03 16:49:54,168 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManagerFactory
2019-05-03 16:49:54,681 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-05-03 16:49:54,682 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-05-03 16:49:54,683 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-05-03 16:49:54,684 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-05-03 16:49:54,872 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:49:54,875 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:49:54,877 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:49:54,880 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:49:54,884 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-05-03 16:49:54,887 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-05-03 16:49:54,889 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-05-03 16:49:55,069 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 16:49:55,072 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 16:49:55,073 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 16:49:55,074 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-05-03 16:49:55,076 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 47].
2019-05-03 16:49:55,270 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-05-03 16:49:55,323 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-05-03 16:49:55,325 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-05-03 16:49:55,326 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-05-03 16:49:55,327 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-05-03 16:49:55,329 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-05-03 16:49:55,330 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-05-03 16:49:55,332 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 16:49:55,470 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 16:49:55,473 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:49:55,475 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-05-03 16:49:55,485 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 52].
2019-05-03 16:49:55,669 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-05-03 16:49:55,673 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-05-03 16:49:55,676 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-05-03 16:49:55,678 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-05-03 16:49:55,682 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-05-03 16:49:55,684 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-05-03 16:49:55,882 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-05-03 16:49:55,884 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-05-03 16:49:55,885 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-05-03 16:49:55,887 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-05-03 16:49:55,889 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-05-03 16:49:55,891 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-05-03 16:49:55,893 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:49:56,070 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:49:56,073 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:49:56,076 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-05-03 16:49:56,078 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 57].
2019-05-03 16:49:56,081 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-05-03 16:49:56,271 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-05-03 16:49:56,274 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-05-03 16:49:56,276 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-05-03 16:49:56,279 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:49:56,282 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 16:49:56,285 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:49:56,288 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:49:56,292 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-05-03 16:49:56,470 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-05-03 16:49:56,473 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-05-03 16:49:56,475 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:49:56,478 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:49:56,480 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-05-03 16:49:56,483 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-05-03 16:49:56,485 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 62].
2019-05-03 16:49:56,670 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-05-03 16:49:56,674 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-05-03 16:49:56,676 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-05-03 16:49:56,680 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-05-03 16:49:56,683 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-05-03 16:49:56,871 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-05-03 16:49:56,874 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-05-03 16:49:56,877 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-05-03 16:49:56,884 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-05-03 16:49:56,887 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-05-03 16:49:56,889 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-05-03 16:49:56,892 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-05-03 16:49:56,908 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-05-03 16:49:57,070 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:49:57,073 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-05-03 16:49:57,076 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\develop\CSTCleanerProject\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-05-03 16:49:57,079 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-05-03 16:49:57,269 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-05-03 16:49:57,271 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-05-03 16:49:57,272 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-05-03 16:49:57,273 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-05-03 16:49:57,275 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-05-03 16:49:57,276 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:49:57,277 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:49:57,279 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-05-03 16:49:57,473 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-05-03 16:49:57,477 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-05-03 16:49:57,479 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-05-03 16:49:57,482 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-05-03 16:49:57,485 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-05-03 16:49:57,488 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:49:57,491 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 16:49:57,493 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:49:57,671 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-05-03 16:49:57,673 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-05-03 16:49:57,676 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-05-03 16:49:57,679 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-05-03 16:49:57,682 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-05-03 16:49:57,684 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:49:57,687 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:49:57,690 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:49:57,870 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:50:19,537 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-05-03 16:50:19,540 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-05-03 16:50:19,543 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-05-03 16:50:19,546 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-05-03 16:50:19,648 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-05-03 16:50:19,649 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-05-03 16:50:19,650 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-05-03 16:50:19,651 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
