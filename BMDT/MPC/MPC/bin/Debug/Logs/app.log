2019-07-30 16:11:25,935 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:11:25,976 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:11:26,018 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:11:26,034 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-30 16:11:26,037 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-30 16:11:26,038 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:11:26,039 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:11:26,040 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:11:26,040 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:11:26,041 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 16:11:26,042 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:11:26,043 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:11:26,143 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 16:11:26,144 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:11:26,304 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:11:26,309 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:11:26,311 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:11:26,312 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:11:26,314 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:11:26,336 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:11:26,349 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:11:26,352 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:11:26,354 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:11:26,356 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:11:26,358 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:11:26,359 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:11:26,361 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:11:26,363 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:11:26,364 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:11:26,563 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:11:26,565 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:11:26,567 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:11:26,569 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:11:26,571 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:11:26,573 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:11:26,575 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:11:26,576 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:11:26,577 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:11:26,745 [Thread: 10      ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:11:26,747 [Thread: 10      ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:11:26,749 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:11:26,751 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:11:26,755 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:11:26,757 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:11:26,758 [Thread: 10      ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:11:26,760 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:11:26,970 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:11:26,972 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:11:26,975 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:11:26,978 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:11:26,980 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:11:26,981 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:11:26,983 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:11:27,147 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:11:27,151 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:11:27,154 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:11:27,161 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:11:27,343 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:11:27,346 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:11:27,347 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:11:27,348 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:11:27,349 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:11:27,350 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:11:27,351 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:11:27,352 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:11:27,546 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:11:27,547 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:11:27,548 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:11:27,550 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:11:27,551 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:11:27,743 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:11:27,744 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:11:27,744 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:11:27,745 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:11:27,745 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:11:27,746 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:11:27,747 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:11:27,943 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:11:27,946 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:11:27,947 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:11:27,948 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:11:27,948 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:11:27,949 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:11:28,143 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:11:28,144 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:11:28,144 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:11:28,145 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:11:28,145 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:11:28,347 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:11:28,349 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:11:28,350 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:11:28,351 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:11:28,352 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:11:28,353 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:11:28,544 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:11:28,545 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:11:28,547 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:11:28,548 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:11:28,550 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:11:28,743 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:11:28,744 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:11:28,745 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:11:28,745 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:11:28,746 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:11:28,746 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:11:28,747 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:11:28,943 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:11:28,944 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:11:28,944 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:11:28,945 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:11:29,144 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:11:29,145 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:11:29,145 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:11:29,206 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:11:29,207 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:11:29,207 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:11:29,208 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:11:29,343 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:11:29,344 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:11:29,345 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:11:29,345 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:11:29,346 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:11:29,543 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:11:29,544 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:11:29,545 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:11:29,546 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:11:29,547 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:11:29,547 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:11:29,548 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:11:29,743 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:11:29,744 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:11:29,744 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:11:29,745 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:11:29,745 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:11:29,746 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:11:29,943 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:11:29,944 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:11:29,944 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:11:29,946 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:11:29,947 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:11:29,947 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:11:29,948 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:11:30,149 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:11:30,150 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:11:30,151 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:11:30,151 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:11:30,152 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:11:30,152 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:11:30,153 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:11:30,343 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:11:30,345 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:11:30,346 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:11:30,346 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:11:30,347 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:11:30,347 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:11:30,348 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:11:30,349 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:11:30,543 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:11:30,544 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:11:30,545 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:11:30,545 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:11:30,743 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:11:30,744 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:11:30,744 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:11:30,745 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:11:30,950 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:11:30,951 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:11:30,951 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:11:30,952 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:11:31,148 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:11:31,149 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:11:31,150 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:11:31,150 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:11:31,151 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:11:31,151 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:11:31,152 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:11:31,153 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:11:31,348 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:11:31,349 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:11:31,349 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:11:31,350 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:11:31,354 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:11:31,354 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:11:31,355 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:11:31,548 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:11:32,261 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:11:32,262 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:11:32,379 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:11:32,381 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:11:32,384 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:11:32,386 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:11:32,387 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:11:32,389 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:11:32,528 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:11:32,578 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:11:32,579 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:11:32,580 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:11:32,582 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:11:32,584 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:11:32,584 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:11:32,585 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:11:32,586 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:11:32,778 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:11:32,779 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:11:32,780 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:11:32,781 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:11:33,012 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:11:33,013 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:11:33,014 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:11:33,014 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:11:33,015 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:11:33,178 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:11:33,180 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:11:33,186 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:11:33,187 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:33,378 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:11:33,379 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:11:33,379 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:11:33,385 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:11:33,386 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:11:33,578 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:11:33,579 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:11:33,580 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:11:33,580 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:11:33,778 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:11:33,780 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:11:33,780 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:11:33,781 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:11:33,782 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:33,782 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:11:33,978 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:33,979 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:33,979 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:11:33,980 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:11:33,981 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:11:33,981 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:11:33,982 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:11:33,982 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:11:34,178 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:11:34,179 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:11:34,179 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:11:34,378 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:11:34,379 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:11:34,379 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:11:34,380 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:11:34,380 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:34,381 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:11:34,381 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:34,586 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:34,588 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:11:34,588 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:11:34,589 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:11:34,590 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:11:34,591 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:11:34,591 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:11:34,778 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:11:34,779 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:11:34,780 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:11:34,780 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:11:34,978 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:11:34,980 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:11:34,981 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:11:34,982 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:34,982 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:11:34,983 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:34,983 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:35,178 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:11:35,181 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:11:35,181 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:11:35,182 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:11:35,183 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:11:35,184 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:11:35,185 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:11:35,378 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:11:35,379 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:11:35,380 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:11:35,381 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:11:35,578 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:11:35,579 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:11:35,580 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:35,580 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:11:35,581 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:35,582 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:35,583 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:11:35,778 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:11:35,779 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:11:35,779 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:11:35,780 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:11:35,781 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:11:35,781 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:11:35,782 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:11:35,978 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:11:35,979 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:11:35,979 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:11:35,980 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:11:36,183 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:11:36,183 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:36,184 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:11:36,185 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:36,186 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:36,187 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:11:36,378 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:11:36,379 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:11:36,379 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:11:36,380 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:11:36,384 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:11:36,385 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:11:36,524 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:11:36,526 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:11:36,578 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:36,579 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:36,580 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:11:36,581 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:11:36,581 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:11:36,778 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:11:36,779 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:11:36,780 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:11:36,781 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:11:36,781 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:36,782 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:11:36,782 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:36,979 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:36,982 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:11:36,983 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:11:36,985 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:11:36,987 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:11:36,988 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:11:36,989 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:11:36,991 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:11:37,199 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:11:37,200 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:11:37,201 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:11:37,202 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:11:37,379 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:11:37,381 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:37,383 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:11:37,385 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:37,386 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:37,388 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:11:37,390 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:11:37,392 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:11:37,579 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:11:37,581 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:11:37,583 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:11:37,585 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:11:37,590 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:11:37,779 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:11:37,781 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:11:37,782 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:11:37,784 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:11:37,785 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:11:37,786 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:11:37,978 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:11:37,979 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:11:37,980 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:11:37,980 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:11:37,981 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:11:37,981 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:11:37,982 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:11:37,983 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:11:38,179 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:11:38,180 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:11:38,180 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:11:38,181 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:11:38,181 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:14:31,979 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:14:31,980 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:14:31,981 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:14:31,983 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:14:32,116 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:14:32,117 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:14:32,118 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:14:32,119 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:17:18,648 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:17:18,685 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:17:18,696 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:17:18,700 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 16:17:18,702 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 16:17:18,703 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:17:18,704 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:17:18,705 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:17:18,706 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:17:18,707 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:17:18,707 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:17:18,708 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:17:18,871 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:17:18,872 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:17:18,886 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:17:18,889 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:17:18,890 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:17:18,891 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:17:18,892 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:17:18,895 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:17:18,920 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:17:18,967 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:17:19,074 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:17:19,076 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:17:19,077 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:17:19,079 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:17:19,081 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:17:19,083 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:17:19,085 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:17:19,108 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:17:19,273 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:17:19,275 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:17:19,277 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:17:19,279 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:17:19,281 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:17:19,283 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:17:19,284 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:17:19,286 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:17:19,288 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:17:19,472 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:17:19,474 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:17:19,476 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:17:19,480 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:17:19,482 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:17:19,484 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:17:19,486 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:17:19,517 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:17:19,677 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:17:19,680 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:17:19,687 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:17:19,690 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:17:19,693 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:17:19,696 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:17:19,701 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:17:19,875 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:17:19,878 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:17:19,884 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:17:19,887 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:17:19,893 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:17:20,073 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:17:20,074 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:17:20,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:17:20,076 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:17:20,077 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:17:20,078 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:17:20,078 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:17:20,271 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:17:20,272 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:17:20,273 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:17:20,274 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:17:20,275 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:17:20,471 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:17:20,472 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:17:20,473 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:17:20,474 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:17:20,474 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:17:20,475 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:17:20,671 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:17:20,672 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:17:20,673 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:17:20,674 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:17:20,675 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:17:20,676 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:17:20,677 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:17:20,871 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:17:20,872 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:17:20,873 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:17:20,876 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:17:21,071 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:17:21,072 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:17:21,073 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:17:21,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:17:21,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:17:21,075 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:17:21,076 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:17:21,271 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:17:21,272 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:17:21,272 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:17:21,273 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:17:21,471 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:17:21,472 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:17:21,473 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:17:21,473 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:17:21,474 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:17:21,474 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:17:21,475 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:17:21,476 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:17:21,671 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:17:21,672 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:17:21,673 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:17:21,673 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:17:21,871 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:17:21,872 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:17:21,903 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:17:21,903 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:17:21,904 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:17:21,905 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:17:21,905 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:17:22,071 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:17:22,072 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:17:22,073 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:17:22,074 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:17:22,272 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:17:22,272 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:17:22,274 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:17:22,274 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:17:22,275 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:17:22,276 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:17:22,276 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:17:22,277 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:17:22,471 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:17:22,472 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:17:22,473 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:17:22,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:17:22,474 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:17:22,474 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:17:22,671 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:17:22,681 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:17:22,682 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:17:22,683 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:17:22,683 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:17:22,684 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:17:22,685 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:17:22,871 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:17:22,872 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:17:22,872 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:17:22,873 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:17:22,874 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:17:22,874 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:17:22,875 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:17:23,071 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:17:23,072 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:17:23,073 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:17:23,073 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:17:23,074 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:17:23,075 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:17:23,075 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:17:23,271 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:17:23,272 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:17:23,273 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:17:23,275 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:17:23,276 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:17:23,471 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:17:23,473 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:17:23,474 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:17:23,476 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:17:23,681 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:17:23,682 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:17:23,683 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:17:23,684 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:17:23,871 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:17:23,872 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:17:23,873 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:17:23,873 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:17:23,874 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:17:23,875 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:17:23,876 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:17:24,071 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:17:24,072 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:17:24,072 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:17:24,073 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:17:24,077 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:17:24,078 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:17:24,078 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:17:24,079 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:17:24,778 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:17:24,780 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:17:24,784 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:17:24,963 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:17:24,965 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:17:24,968 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:17:24,971 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:17:24,973 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:17:24,976 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:17:25,176 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:17:25,197 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:17:25,361 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:17:25,363 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:17:25,364 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:17:25,365 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:17:25,366 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:17:25,366 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:17:25,367 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:17:25,368 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:17:25,561 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:17:25,562 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:17:25,562 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:17:25,563 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:17:25,564 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:17:25,761 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:17:25,762 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:17:25,762 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:17:25,763 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:17:25,763 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:17:25,764 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:25,764 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:17:25,765 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:17:25,961 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:17:25,967 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:17:25,967 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:17:25,968 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:17:26,168 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:17:26,174 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:17:26,175 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:17:26,176 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:17:26,368 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:17:26,368 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:17:26,369 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:17:26,370 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:26,370 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:17:26,371 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:26,372 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:26,567 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:17:26,568 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:17:26,569 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:17:26,574 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:17:26,575 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:17:26,576 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:17:26,576 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:17:26,767 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:17:26,768 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:17:26,769 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:17:26,770 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:17:26,967 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:17:26,968 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:17:26,969 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:26,969 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:17:26,970 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:26,971 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:26,972 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:17:27,167 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:17:27,168 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:17:27,169 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:17:27,170 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:17:27,170 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:17:27,171 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:17:27,172 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:17:27,367 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:17:27,368 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:17:27,369 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:17:27,370 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:17:27,581 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:17:27,582 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:27,582 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:17:27,583 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:27,584 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:27,589 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:17:27,590 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:17:27,767 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:17:27,768 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:17:27,769 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:17:27,769 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:17:27,770 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:17:27,771 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:17:27,771 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:17:27,967 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:17:27,968 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:17:27,969 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:17:27,970 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:17:28,170 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:28,174 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:17:28,175 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:28,176 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:28,177 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:17:28,177 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:17:28,178 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:17:28,368 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:17:28,369 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:17:28,370 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:17:28,371 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:17:28,371 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:17:28,372 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:17:28,567 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:17:28,568 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:17:28,570 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:17:28,571 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:17:28,767 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:28,768 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:17:28,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:28,769 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:28,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:17:28,772 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:17:28,773 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:17:28,967 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:17:28,968 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:17:28,970 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:17:28,971 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:17:29,014 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:17:29,016 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:17:29,017 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:29,167 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:29,168 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:17:29,169 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:17:29,170 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:17:29,170 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:17:29,369 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:17:29,370 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:17:29,372 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:17:29,373 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:29,375 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:17:29,376 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:29,382 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:29,569 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:17:29,571 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:17:29,572 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:17:29,574 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:17:29,576 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:17:29,577 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:17:29,579 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:17:29,580 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:17:29,768 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:17:29,770 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:17:29,772 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:17:29,774 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:17:29,968 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:29,970 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:17:29,972 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:29,974 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:29,976 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:17:29,978 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:17:29,980 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:17:29,981 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:17:30,168 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:17:30,170 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:17:30,172 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:17:30,174 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:17:30,176 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:17:30,367 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:17:30,368 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:17:30,369 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:17:30,369 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:17:30,370 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:17:30,371 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:17:30,371 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:17:30,567 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:17:30,568 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:17:30,569 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:17:30,569 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:17:30,570 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:17:30,571 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:17:30,572 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:17:30,573 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:17:30,767 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:17:30,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:17:30,770 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:20:35,674 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:20:35,676 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:20:35,677 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:20:35,678 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:20:35,817 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:20:35,818 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:20:35,819 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:20:35,819 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:20:56,729 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:20:56,759 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:20:56,769 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:20:56,772 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-30 16:20:56,773 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-30 16:20:56,774 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:20:56,775 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:20:56,776 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:20:56,776 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:20:56,777 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 16:20:56,778 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:20:56,778 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:20:56,944 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 16:20:56,945 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:20:56,956 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:20:56,960 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:20:56,961 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:20:56,961 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:20:56,962 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:20:56,964 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:20:56,968 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:20:56,972 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:20:57,145 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:20:57,146 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:20:57,147 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:20:57,148 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:20:57,149 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:20:57,150 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:20:57,151 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:20:57,164 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:20:57,345 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:20:57,347 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:20:57,352 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:20:57,354 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:20:57,356 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:20:57,357 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:20:57,358 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:20:57,359 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:20:57,361 [Thread: 10      ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:20:57,545 [Thread: 10      ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:20:57,547 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:20:57,549 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:20:57,553 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:20:57,555 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:20:57,558 [Thread: 10      ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:20:57,560 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:20:57,591 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:20:57,749 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:20:57,752 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:20:57,758 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:20:57,762 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:20:57,764 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:20:57,767 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:20:57,771 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:20:57,948 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:20:57,950 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:20:57,957 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:20:57,959 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:20:57,965 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:20:58,147 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:20:58,149 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:20:58,152 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:20:58,154 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:20:58,157 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:20:58,160 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:20:58,163 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:20:58,345 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:20:58,346 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:20:58,347 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:20:58,348 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:20:58,348 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:20:58,544 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:20:58,545 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:20:58,545 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:20:58,546 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:20:58,548 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:20:58,548 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:20:58,745 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:20:58,746 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:20:58,746 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:20:58,747 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:20:58,749 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:20:58,750 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:20:58,751 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:20:58,944 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:20:58,945 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:20:58,946 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:20:58,949 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:20:59,144 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:20:59,145 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:20:59,146 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:20:59,146 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:20:59,147 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:20:59,147 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:20:59,148 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:20:59,344 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:20:59,345 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:20:59,346 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:20:59,347 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:20:59,544 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:20:59,545 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:20:59,546 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:20:59,546 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:20:59,547 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:20:59,547 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:20:59,548 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:20:59,548 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:20:59,744 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:20:59,745 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:20:59,745 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:20:59,746 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:20:59,944 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:20:59,950 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:20:59,982 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:20:59,983 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:20:59,983 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:20:59,984 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:20:59,985 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:21:00,144 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:21:00,145 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:21:00,146 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:21:00,146 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:21:00,345 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:21:00,346 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:21:00,347 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:21:00,347 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:21:00,348 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:21:00,348 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:21:00,349 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:21:00,350 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:21:00,544 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:21:00,545 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:21:00,546 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:21:00,546 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:21:00,547 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:21:00,548 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:21:00,744 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:21:00,745 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:21:00,746 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:21:00,746 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:21:00,747 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:21:00,747 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:21:00,748 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:21:00,944 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:21:00,945 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:21:00,945 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:21:00,946 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:21:00,946 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:21:00,947 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:21:00,947 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:21:01,144 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:21:01,145 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:21:01,145 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:21:01,146 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:21:01,146 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:21:01,147 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:21:01,147 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:21:01,344 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:21:01,345 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:21:01,347 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:21:01,347 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:21:01,348 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:21:01,546 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:21:01,547 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:21:01,547 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:21:01,549 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:21:01,744 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:21:01,745 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:21:01,745 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:21:01,746 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:21:01,944 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:21:01,945 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:21:01,945 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:21:01,946 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:21:01,946 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:21:01,947 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:21:01,948 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:21:02,144 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:21:02,145 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:21:02,145 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:21:02,146 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:21:02,149 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:21:02,150 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:21:02,152 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:21:02,152 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:21:02,843 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:21:02,849 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:21:02,852 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:21:02,852 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:21:03,036 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:21:03,037 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:21:03,039 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:21:03,041 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:21:03,043 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:21:03,045 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:21:03,235 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:21:03,237 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:21:03,241 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:21:03,244 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:21:03,246 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:21:03,248 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:21:03,436 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:21:03,441 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:21:03,445 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:21:03,447 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:21:03,634 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:21:03,635 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:21:03,636 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:21:03,636 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:21:03,637 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:21:03,834 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:21:03,835 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:21:03,835 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:21:03,836 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:21:03,836 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:03,861 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:21:03,861 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:21:04,034 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:21:04,042 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:21:04,043 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:21:04,044 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:21:04,044 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:21:04,234 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:21:04,239 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:21:04,244 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:21:04,249 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:21:04,434 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:21:04,435 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:21:04,436 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:04,437 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:21:04,437 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:04,438 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:04,439 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:21:04,634 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:21:04,635 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:21:04,636 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:21:04,636 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:21:04,637 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:21:04,637 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:21:04,834 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:21:04,835 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:21:04,836 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:21:04,836 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:21:04,837 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:21:05,034 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:21:05,035 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:05,036 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:21:05,036 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:05,037 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:05,038 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:21:05,038 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:21:05,234 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:21:05,235 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:21:05,235 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:21:05,236 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:21:05,236 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:21:05,237 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:21:05,237 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:21:05,434 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:21:05,435 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:21:05,436 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:21:05,437 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:21:05,634 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:05,635 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:21:05,636 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:05,636 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:05,637 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:21:05,638 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:21:05,638 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:21:05,834 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:21:05,835 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:21:05,835 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:21:05,836 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:21:05,836 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:21:05,837 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:21:06,034 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:21:06,038 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:21:06,041 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:21:06,042 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:21:06,042 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:06,234 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:21:06,235 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:06,235 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:06,236 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:21:06,237 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:21:06,237 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:21:06,238 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:21:06,450 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:21:06,453 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:21:06,454 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:21:06,455 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:21:06,456 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:21:06,646 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:21:06,647 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:21:06,648 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:21:06,649 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:21:06,649 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:06,846 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:21:06,847 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:06,847 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:06,848 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:21:06,850 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:21:06,850 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:21:06,851 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:21:07,046 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:21:07,048 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:21:07,049 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:21:07,099 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:21:07,101 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:21:07,103 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:07,105 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:07,246 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:21:07,247 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:21:07,248 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:21:07,249 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:21:07,447 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:21:07,448 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:21:07,448 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:21:07,449 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:07,449 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:21:07,450 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:07,450 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:07,451 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:21:07,646 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:21:07,647 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:21:07,648 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:21:07,648 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:21:07,649 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:21:07,649 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:21:07,650 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:21:07,848 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:21:07,850 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:21:07,852 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:21:07,854 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:21:07,856 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:08,047 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:21:08,048 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:08,049 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:08,050 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:21:08,051 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:21:08,052 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:21:08,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:21:08,054 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:21:08,247 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:21:08,249 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:21:08,251 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:21:08,252 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:21:08,448 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:21:08,450 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:21:08,451 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:21:08,453 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:21:08,455 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:21:08,456 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:21:08,458 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:21:08,460 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:21:08,655 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:21:08,667 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:21:08,674 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:21:08,681 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:21:08,683 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:21:08,692 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:21:08,697 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:21:08,697 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:21:08,846 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:21:08,847 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:22:08,600 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:22:08,602 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:22:08,604 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:22:08,605 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:22:08,734 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:22:08,735 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:22:08,737 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:22:08,739 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:23:36,723 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:23:36,753 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:23:36,761 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:23:36,764 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 16:23:36,765 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 16:23:36,766 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:23:36,767 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:23:36,768 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:23:36,768 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:23:36,769 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:23:36,770 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:23:36,770 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:23:36,933 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:23:36,934 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:23:36,945 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:23:36,948 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:23:36,949 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:23:36,949 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:23:36,950 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:23:36,952 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:23:36,958 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:23:36,963 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:23:37,134 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:23:37,135 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:23:37,136 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:23:37,137 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:23:37,138 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:23:37,139 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:23:37,140 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:23:37,153 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:23:37,333 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:23:37,334 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:23:37,335 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:23:37,336 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:23:37,337 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:23:37,338 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:23:37,339 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:23:37,340 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:23:37,341 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:23:37,533 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:23:37,534 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:23:37,535 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:23:37,536 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:23:37,537 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:23:37,537 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:23:37,538 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:23:37,549 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:23:37,734 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:23:37,736 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:23:37,738 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:23:37,740 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:23:37,741 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:23:37,742 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:23:37,743 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:23:37,934 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:23:37,935 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:23:37,937 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:23:37,938 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:23:37,940 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:23:38,134 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:23:38,135 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:23:38,136 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:23:38,137 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:23:38,138 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:23:38,138 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:23:38,139 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:23:38,333 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:23:38,334 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:23:38,334 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:23:38,335 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:23:38,336 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:23:38,533 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:23:38,534 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:23:38,534 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:23:38,535 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:23:38,535 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:23:38,536 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:23:38,733 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:23:38,734 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:23:38,735 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:23:38,735 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:23:38,736 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:23:38,736 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:23:38,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:23:38,933 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:23:38,934 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:23:38,934 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:23:38,937 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:23:39,133 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:23:39,134 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:23:39,134 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:23:39,135 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:23:39,136 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:23:39,159 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:23:39,162 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:23:39,333 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:23:39,334 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:23:39,334 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:23:39,335 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:23:39,533 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:23:39,535 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:23:39,536 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:23:39,537 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:23:39,537 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:23:39,538 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:23:39,538 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:23:39,539 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:23:39,733 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:23:39,734 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:23:39,734 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:23:39,735 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:23:39,933 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:23:39,934 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:23:39,966 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:23:39,967 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:23:39,968 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:23:39,969 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:23:39,969 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:23:40,133 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:23:40,134 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:23:40,135 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:23:40,136 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:23:40,335 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:23:40,336 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:23:40,339 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:23:40,341 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:23:40,342 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:23:40,343 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:23:40,345 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:23:40,346 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:23:40,534 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:23:40,536 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:23:40,538 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:23:40,539 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:23:40,541 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:23:40,543 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:23:40,734 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:23:40,736 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:23:40,737 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:23:40,738 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:23:40,739 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:23:40,740 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:23:40,741 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:23:40,934 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:23:40,936 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:23:40,938 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:23:40,939 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:23:40,941 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:23:40,942 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:23:40,945 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:23:41,135 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:23:41,136 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:23:41,138 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:23:41,139 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:23:41,141 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:23:41,143 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:23:41,145 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:23:41,333 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:23:41,334 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:23:41,335 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:23:41,336 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:23:41,337 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:23:41,533 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:23:41,534 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:23:41,534 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:23:41,536 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:23:41,733 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:23:41,734 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:23:41,734 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:23:41,735 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:23:41,933 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:23:41,934 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:23:41,934 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:23:41,935 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:23:41,935 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:23:41,936 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:23:41,936 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:23:42,133 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:23:42,134 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:23:42,134 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:23:42,135 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:23:42,138 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:23:42,139 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:23:42,140 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:23:42,140 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:23:42,890 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:23:42,891 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:23:42,891 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:23:42,892 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:23:43,083 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:23:43,084 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:23:43,085 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:23:43,085 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:23:43,087 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:23:43,087 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:23:43,316 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:23:43,317 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:23:43,319 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:23:43,484 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:23:43,487 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:23:43,488 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:23:43,488 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:23:43,489 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:23:43,490 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:23:43,490 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:23:43,683 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:23:43,684 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:23:43,685 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:23:43,685 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:23:43,686 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:23:43,887 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:23:43,888 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:23:43,888 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:23:43,889 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:23:43,889 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:43,890 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:23:43,891 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:23:44,083 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:23:44,088 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:23:44,095 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:23:44,096 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:23:44,097 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:23:44,283 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:23:44,284 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:23:44,284 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:23:44,285 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:23:44,483 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:23:44,484 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:23:44,484 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:44,485 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:23:44,485 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:44,490 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:44,500 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:23:44,683 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:23:44,684 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:23:44,684 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:23:44,685 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:23:44,685 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:23:44,686 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:23:44,883 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:23:44,884 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:23:44,884 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:23:44,885 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:23:44,886 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:23:45,083 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:23:45,084 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:45,084 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:23:45,085 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:45,085 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:45,086 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:23:45,087 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:23:45,283 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:23:45,284 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:23:45,285 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:23:45,286 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:23:45,286 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:23:45,287 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:23:45,287 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:23:45,484 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:23:45,485 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:23:45,485 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:23:45,486 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:23:45,684 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:45,685 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:23:45,686 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:45,687 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:45,688 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:23:45,689 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:23:45,690 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:23:45,884 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:23:45,886 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:23:45,887 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:23:45,889 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:23:45,890 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:23:45,892 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:23:46,085 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:23:46,087 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:23:46,089 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:23:46,090 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:23:46,092 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:46,285 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:23:46,286 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:46,288 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:46,290 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:23:46,291 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:23:46,293 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:23:46,295 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:23:46,498 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:23:46,498 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:23:46,499 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:23:46,500 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:23:46,501 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:23:46,683 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:23:46,684 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:23:46,685 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:23:46,685 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:23:46,686 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:46,883 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:23:46,884 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:46,884 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:46,885 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:23:46,885 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:23:46,886 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:23:46,887 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:23:47,084 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:23:47,086 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:23:47,087 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:23:47,144 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:23:47,146 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:23:47,147 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:47,150 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:47,283 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:23:47,284 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:23:47,285 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:23:47,285 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:23:47,483 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:23:47,484 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:23:47,485 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:23:47,485 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:47,486 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:23:47,486 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:47,488 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:47,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:23:47,683 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:23:47,684 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:23:47,684 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:23:47,685 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:23:47,685 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:23:47,687 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:23:47,687 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:23:47,883 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:23:47,884 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:23:47,885 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:23:47,885 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:23:47,886 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:48,083 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:23:48,084 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:48,084 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:48,085 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:23:48,085 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:23:48,086 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:23:48,086 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:23:48,087 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:23:48,283 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:23:48,284 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:23:48,285 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:23:48,285 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:23:48,484 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:23:48,484 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:23:48,485 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:23:48,486 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:23:48,486 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:23:48,487 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:23:48,487 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:23:48,488 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:23:48,683 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:23:48,684 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:23:48,684 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:23:48,685 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:23:48,686 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:23:48,687 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:23:48,688 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:23:48,689 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:23:48,883 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:23:48,884 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:25:00,998 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:25:01,004 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:25:01,005 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:25:01,005 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:25:01,131 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:25:01,132 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:25:01,132 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:25:01,133 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:25:36,057 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:25:36,094 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:25:36,102 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:25:36,106 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 16:25:36,108 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 16:25:36,108 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:25:36,109 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:25:36,110 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:25:36,111 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:25:36,111 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:25:36,112 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:25:36,113 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:25:36,271 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:25:36,273 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:25:36,299 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:25:36,302 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:25:36,303 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:25:36,304 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:25:36,305 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:25:36,308 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:25:36,313 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:25:36,337 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:25:36,472 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:25:36,473 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:25:36,474 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:25:36,476 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:25:36,478 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:25:36,479 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:25:36,481 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:25:36,506 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:25:36,675 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:25:36,677 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:25:36,678 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:25:36,681 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:25:36,684 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:25:36,686 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:25:36,688 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:25:36,690 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:25:36,692 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:25:36,871 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:25:36,874 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:25:36,875 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:25:36,880 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:25:36,882 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:25:36,884 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:25:36,885 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:25:36,908 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:25:37,075 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:25:37,079 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:25:37,085 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:25:37,088 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:25:37,091 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:25:37,094 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:25:37,098 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:25:37,271 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:25:37,273 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:25:37,276 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:25:37,277 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:25:37,280 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:25:37,471 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:25:37,472 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:25:37,473 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:25:37,474 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:25:37,475 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:25:37,476 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:25:37,477 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:25:37,670 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:25:37,671 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:25:37,672 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:25:37,673 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:25:37,674 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:25:37,870 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:25:37,871 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:25:37,872 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:25:37,872 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:25:37,873 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:25:37,874 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:25:38,070 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:25:38,071 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:25:38,072 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:25:38,073 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:25:38,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:25:38,074 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:25:38,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:25:38,270 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:25:38,272 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:25:38,273 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:25:38,277 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:25:38,470 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:25:38,471 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:25:38,472 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:25:38,473 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:25:38,473 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:25:38,474 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:25:38,474 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:25:38,670 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:25:38,671 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:25:38,672 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:25:38,672 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:25:38,870 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:25:38,871 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:25:38,872 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:25:38,873 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:25:38,873 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:25:38,874 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:25:38,875 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:25:38,875 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:25:39,070 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:25:39,071 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:25:39,072 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:25:39,072 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:25:39,270 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:25:39,271 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:25:39,302 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:25:39,303 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:25:39,303 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:25:39,304 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:25:39,304 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:25:39,470 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:25:39,471 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:25:39,472 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:25:39,472 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:25:39,671 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:25:39,677 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:25:39,678 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:25:39,679 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:25:39,679 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:25:39,680 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:25:39,681 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:25:39,681 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:25:39,870 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:25:39,871 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:25:39,871 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:25:39,872 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:25:39,873 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:25:39,873 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:25:40,072 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:25:40,072 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:25:40,073 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:25:40,074 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:25:40,074 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:25:40,075 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:25:40,076 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:25:40,322 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:25:40,324 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:25:40,324 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:25:40,325 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:25:40,326 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:25:40,327 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:25:40,328 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:25:40,470 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:25:40,471 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:25:40,472 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:25:40,472 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:25:40,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:25:40,474 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:25:40,474 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:25:40,670 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:25:40,671 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:25:40,672 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:25:40,674 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:25:40,675 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:25:40,870 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:25:40,871 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:25:40,872 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:25:40,874 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:25:41,070 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:25:41,071 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:25:41,072 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:25:41,073 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:25:41,270 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:25:41,271 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:25:41,272 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:25:41,272 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:25:41,273 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:25:41,274 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:25:41,274 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:25:41,471 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:25:41,473 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:25:41,474 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:25:41,476 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:25:41,485 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:25:41,486 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:25:41,487 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:25:41,488 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:25:42,182 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:25:42,182 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:25:42,183 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:25:42,382 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:25:42,418 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:25:42,419 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:25:42,422 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:25:42,560 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:25:42,563 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:25:42,564 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:25:42,565 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:25:42,760 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:25:42,771 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:25:42,772 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:25:42,773 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:25:42,773 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:25:42,774 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:25:42,775 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:25:42,776 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:25:42,960 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:25:42,961 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:25:42,962 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:25:42,963 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:25:43,175 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:25:43,176 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:25:43,177 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:25:43,177 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:25:43,178 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:25:43,179 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:25:43,180 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:43,181 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:25:43,373 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:25:43,374 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:25:43,379 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:25:43,380 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:25:43,381 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:25:43,577 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:25:43,578 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:25:43,580 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:25:43,581 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:25:43,773 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:25:43,774 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:25:43,775 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:25:43,776 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:43,776 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:25:43,777 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:43,973 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:43,978 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:25:43,979 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:25:43,980 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:25:43,980 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:25:43,981 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:25:43,982 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:25:44,173 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:25:44,187 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:25:44,188 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:25:44,189 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:25:44,373 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:25:44,374 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:25:44,375 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:25:44,376 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:44,376 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:25:44,377 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:44,377 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:44,573 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:25:44,574 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:25:44,575 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:25:44,575 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:25:44,576 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:25:44,577 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:25:44,578 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:25:44,773 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:25:44,774 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:25:44,775 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:25:44,776 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:25:44,973 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:25:44,974 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:25:44,975 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:44,975 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:25:44,976 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:44,977 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:44,977 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:25:45,173 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:25:45,174 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:25:45,175 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:25:45,175 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:25:45,176 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:25:45,177 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:25:45,177 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:25:45,373 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:25:45,383 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:25:45,384 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:25:45,384 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:25:45,573 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:25:45,574 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:45,578 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:25:45,579 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:45,579 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:45,580 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:25:45,581 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:25:45,775 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:25:45,776 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:25:45,777 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:25:45,778 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:25:45,779 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:25:45,779 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:25:45,780 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:25:45,975 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:25:45,976 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:25:45,977 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:25:45,977 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:25:46,175 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:46,176 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:25:46,177 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:46,178 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:46,179 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:25:46,179 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:25:46,375 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:25:46,376 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:25:46,377 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:25:46,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:25:46,379 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:25:46,422 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:25:46,424 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:25:46,424 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:46,576 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:46,577 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:25:46,579 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:25:46,580 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:25:46,776 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:25:46,779 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:25:46,780 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:25:46,782 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:25:46,783 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:46,785 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:25:46,787 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:46,789 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:46,983 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:25:46,984 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:25:46,986 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:25:46,987 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:25:46,988 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:25:46,990 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:25:46,991 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:25:46,993 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:25:47,176 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:25:47,179 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:25:47,181 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:25:47,183 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:25:47,376 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:47,377 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:25:47,377 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:47,378 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:47,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:25:47,380 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:25:47,381 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:25:47,381 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:25:47,575 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:25:47,576 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:25:47,577 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:25:47,577 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:25:47,775 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:25:47,776 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:25:47,777 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:25:47,778 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:25:47,778 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:25:47,779 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:25:47,780 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:25:47,975 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:25:47,976 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:25:47,977 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:25:47,978 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:25:47,978 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:25:47,979 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:25:47,980 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:25:47,981 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:25:48,175 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:25:48,176 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:25:48,177 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:25:48,178 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:28:55,090 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:28:55,100 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:28:55,108 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:28:55,113 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:28:55,251 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:28:55,308 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:28:55,309 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:28:55,309 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:29:29,445 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:29:29,474 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:29:29,482 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:29:29,485 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-30 16:29:29,487 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-30 16:29:29,487 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:29:29,488 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:29:29,489 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:29:29,489 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:29:29,490 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 16:29:29,491 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:29:29,491 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:29:29,492 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 16:29:29,493 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:29:29,686 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:29:29,688 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:29:29,689 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:29:29,690 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:29:29,690 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:29:29,693 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:29:29,697 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:29:29,701 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:29:29,703 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:29:29,876 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:29:29,876 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:29:29,877 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:29:29,878 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:29:29,879 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:29:29,880 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:29:29,891 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:29:29,892 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:29:29,893 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:29:30,075 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:29:30,076 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:29:30,077 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:29:30,078 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:29:30,078 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:29:30,079 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:29:30,080 [Thread: 10      ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:29:30,080 [Thread: 10      ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:29:30,275 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:29:30,276 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:29:30,278 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:29:30,278 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:29:30,279 [Thread: 10      ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:29:30,280 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:29:30,292 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:29:30,294 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:29:30,476 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:29:30,480 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:29:30,482 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:29:30,483 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:29:30,485 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:29:30,487 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:29:30,488 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:29:30,675 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:29:30,678 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:29:30,679 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:29:30,681 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:29:30,683 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:29:30,876 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:29:30,879 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:29:30,881 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:29:30,882 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:29:30,883 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:29:30,885 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:29:31,077 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:29:31,079 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:29:31,083 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:29:31,085 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:29:31,086 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:29:31,095 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:29:31,276 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:29:31,278 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:29:31,280 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:29:31,282 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:29:31,283 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:29:31,476 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:29:31,479 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:29:31,480 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:29:31,483 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:29:31,484 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:29:31,486 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:29:31,488 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:29:31,490 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:29:31,676 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:29:31,680 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:29:31,681 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:29:31,682 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:29:31,876 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:29:31,878 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:29:31,880 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:29:31,881 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:29:31,883 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:29:31,885 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:29:31,886 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:29:32,075 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:29:32,076 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:29:32,077 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:29:32,077 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:29:32,275 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:29:32,276 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:29:32,276 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:29:32,277 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:29:32,278 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:29:32,278 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:29:32,279 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:29:32,279 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:29:32,475 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:29:32,476 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:29:32,476 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:29:32,477 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:29:32,675 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:29:32,712 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:29:32,713 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:29:32,714 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:29:32,714 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:29:32,715 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:29:32,715 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:29:32,875 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:29:32,876 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:29:32,877 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:29:32,878 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:29:33,075 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:29:33,076 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:29:33,077 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:29:33,078 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:29:33,078 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:29:33,079 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:29:33,079 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:29:33,080 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:29:33,275 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:29:33,277 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:29:33,277 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:29:33,278 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:29:33,279 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:29:33,279 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:29:33,475 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:29:33,476 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:29:33,476 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:29:33,477 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:29:33,477 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:29:33,479 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:29:33,480 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:29:33,691 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:29:33,691 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:29:33,692 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:29:33,692 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:29:33,693 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:29:33,694 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:29:33,694 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:29:33,875 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:29:33,876 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:29:33,876 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:29:33,877 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:29:33,877 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:29:33,878 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:29:34,075 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:29:34,078 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:29:34,078 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:29:34,079 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:29:34,079 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:29:34,080 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:29:34,275 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:29:34,276 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:29:34,278 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:29:34,278 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:29:34,475 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:29:34,476 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:29:34,476 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:29:34,477 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:29:34,675 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:29:34,676 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:29:34,676 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:29:34,677 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:29:34,677 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:29:34,678 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:29:34,679 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:29:34,679 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:29:34,875 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:29:34,876 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:29:34,881 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:29:34,881 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:29:34,882 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:29:34,883 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:29:35,462 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:29:35,488 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:29:35,488 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:29:35,489 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:29:35,490 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:29:35,490 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:29:35,491 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:29:35,675 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:29:35,676 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:29:35,677 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:29:35,678 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:29:35,678 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:29:35,680 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:29:35,906 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:29:35,907 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:29:35,908 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:29:35,909 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:29:35,909 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:29:35,910 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:29:36,086 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:29:36,088 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:29:36,286 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:29:36,289 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:29:36,290 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:29:36,292 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:29:36,294 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:29:36,295 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:29:36,297 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:29:36,298 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:29:36,487 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:36,503 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:29:36,505 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:29:36,506 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:29:36,514 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:29:36,686 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:29:36,688 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:29:36,690 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:29:36,691 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:29:36,693 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:29:36,887 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:29:36,889 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:29:36,891 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:29:36,893 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:29:36,895 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:37,085 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:29:37,086 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:37,087 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:37,088 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:29:37,089 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:29:37,090 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:29:37,091 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:29:37,285 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:29:37,286 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:29:37,286 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:29:37,287 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:29:37,287 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:29:37,485 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:29:37,486 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:29:37,486 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:29:37,487 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:29:37,488 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:37,488 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:29:37,685 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:37,686 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:37,686 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:29:37,687 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:29:37,688 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:29:37,688 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:29:37,689 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:29:37,886 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:29:37,886 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:29:37,887 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:29:37,887 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:29:38,085 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:29:38,127 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:29:38,128 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:29:38,129 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:29:38,130 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:38,131 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:29:38,131 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:38,285 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:38,286 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:29:38,287 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:29:38,288 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:29:38,289 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:29:38,289 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:29:38,290 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:29:38,485 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:29:38,486 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:29:38,486 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:29:38,487 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:29:38,689 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:29:38,690 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:29:38,691 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:29:38,692 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:38,692 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:29:38,693 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:38,693 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:38,885 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:29:38,886 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:29:38,887 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:29:38,888 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:29:38,889 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:29:38,891 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:29:38,891 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:29:39,085 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:29:39,086 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:29:39,086 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:29:39,087 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:29:39,285 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:29:39,286 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:29:39,286 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:39,287 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:29:39,287 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:39,288 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:39,485 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:29:39,486 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:29:39,486 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:29:39,487 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:29:39,488 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:29:39,489 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:29:39,490 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:29:39,740 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:29:39,741 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:29:39,742 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:39,744 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:39,746 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:29:39,747 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:29:39,747 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:29:39,885 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:29:39,886 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:29:39,887 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:29:39,888 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:29:39,888 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:40,085 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:29:40,086 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:40,086 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:40,087 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:29:40,088 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:29:40,088 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:29:40,089 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:29:40,089 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:29:40,090 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:29:40,285 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:29:40,286 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:29:40,287 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:29:40,288 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:29:40,485 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:29:40,486 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:29:40,487 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:40,487 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:29:40,488 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:40,488 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:40,489 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:29:40,685 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:29:40,708 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:29:40,710 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:29:40,711 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:29:40,712 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:29:40,713 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:29:40,714 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:29:40,885 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:29:40,887 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:29:40,887 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:29:40,888 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:29:40,889 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:29:41,085 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:29:41,086 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:29:41,086 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:29:41,090 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:29:41,091 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:29:41,092 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:29:41,092 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:29:41,093 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:29:41,287 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:29:41,290 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:29:41,293 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:29:41,294 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:29:41,296 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:29:41,297 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:34:17,731 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:34:17,733 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:34:17,734 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:34:17,735 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:34:17,877 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:34:17,878 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:34:17,879 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:34:17,880 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:37:06,722 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:37:06,758 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:37:06,769 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:37:06,774 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-30 16:37:06,776 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-30 16:37:06,777 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:37:06,778 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:37:06,779 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:37:06,779 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:37:06,780 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 16:37:06,781 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:37:06,782 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:37:06,936 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 16:37:06,937 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:37:06,948 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:37:06,951 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:37:06,952 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:37:06,952 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:37:06,953 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:37:06,956 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:37:06,961 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:37:06,976 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:37:07,137 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:37:07,138 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:37:07,139 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:37:07,140 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:37:07,141 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:37:07,142 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:37:07,142 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:37:07,155 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:37:07,337 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:37:07,337 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:37:07,338 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:37:07,339 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:37:07,340 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:37:07,341 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:37:07,341 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:37:07,342 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:37:07,343 [Thread: 10      ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:37:07,536 [Thread: 10      ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:37:07,537 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:37:07,538 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:37:07,539 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:37:07,540 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:37:07,541 [Thread: 10      ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:37:07,542 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:37:07,553 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:37:07,738 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:37:07,739 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:37:07,742 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:37:07,743 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:37:07,744 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:37:07,746 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:37:07,748 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:37:07,937 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:37:07,938 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:37:07,941 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:37:07,942 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:37:07,944 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:37:08,137 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:37:08,138 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:37:08,139 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:37:08,140 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:37:08,141 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:37:08,142 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:37:08,142 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:37:08,336 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:37:08,337 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:37:08,338 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:37:08,338 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:37:08,339 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:37:08,536 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:37:08,537 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:37:08,538 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:37:08,538 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:37:08,539 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:37:08,540 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:37:08,736 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:37:08,737 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:37:08,738 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:37:08,738 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:37:08,739 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:37:08,740 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:37:08,740 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:37:08,936 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:37:08,937 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:37:08,938 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:37:08,941 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:37:09,136 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:37:09,137 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:37:09,138 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:37:09,138 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:37:09,139 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:37:09,139 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:37:09,140 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:37:09,336 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:37:09,337 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:37:09,338 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:37:09,338 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:37:09,537 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:37:09,539 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:37:09,541 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:37:09,543 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:37:09,544 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:37:09,546 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:37:09,547 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:37:09,549 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:37:09,737 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:37:09,738 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:37:09,738 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:37:09,739 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:37:09,937 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:37:09,939 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:37:09,980 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:37:09,981 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:37:09,982 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:37:09,983 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:37:09,983 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:37:10,138 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:37:10,140 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:37:10,142 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:37:10,144 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:37:10,338 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:37:10,340 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:37:10,343 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:37:10,345 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:37:10,347 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:37:10,349 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:37:10,351 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:37:10,353 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:37:10,536 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:37:10,537 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:37:10,538 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:37:10,538 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:37:10,539 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:37:10,540 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:37:10,737 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:37:10,748 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:37:10,753 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:37:10,753 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:37:10,754 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:37:10,755 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:37:10,755 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:37:10,936 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:37:10,937 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:37:10,938 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:37:10,938 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:37:10,939 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:37:10,940 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:37:10,941 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:37:11,136 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:37:11,137 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:37:11,138 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:37:11,138 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:37:11,139 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:37:11,140 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:37:11,143 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:37:11,336 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:37:11,337 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:37:11,339 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:37:11,340 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:37:11,341 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:37:11,536 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:37:11,537 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:37:11,538 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:37:11,540 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:37:11,736 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:37:11,737 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:37:11,738 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:37:11,738 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:37:11,936 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:37:11,937 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:37:11,938 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:37:11,938 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:37:11,939 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:37:11,940 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:37:11,941 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:37:12,136 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:37:12,137 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:37:12,138 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:37:12,138 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:37:12,142 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:37:12,143 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:37:12,144 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:37:12,145 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:37:12,857 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:37:12,858 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:37:12,859 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:37:12,859 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:37:12,860 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:37:12,860 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:37:12,861 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:37:13,056 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:37:13,058 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:37:13,059 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:37:13,059 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:37:13,060 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:37:13,062 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:37:13,286 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:37:13,287 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:37:13,288 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:37:13,289 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:37:13,457 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:37:13,458 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:37:13,460 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:37:13,461 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:37:13,656 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:37:13,657 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:37:13,658 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:37:13,659 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:37:13,659 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:37:13,660 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:37:13,661 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:37:13,856 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:37:13,857 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:13,858 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:37:13,858 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:37:13,859 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:37:14,062 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:37:14,063 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:37:14,063 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:37:14,064 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:37:14,065 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:37:14,065 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:37:14,256 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:37:14,257 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:37:14,258 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:37:14,259 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:37:14,456 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:14,457 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:37:14,458 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:14,458 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:14,459 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:37:14,460 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:37:14,463 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:37:14,657 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:37:14,658 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:37:14,658 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:37:14,659 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:37:14,660 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:37:14,660 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:37:14,857 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:37:14,859 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:37:14,861 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:37:14,863 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:37:14,864 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:15,057 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:37:15,059 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:15,061 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:15,063 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:37:15,064 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:37:15,066 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:37:15,068 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:37:15,257 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:37:15,259 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:37:15,261 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:37:15,263 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:37:15,264 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:37:15,457 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:37:15,459 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:37:15,460 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:37:15,462 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:37:15,463 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:15,464 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:37:15,658 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:15,659 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:15,660 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:37:15,661 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:37:15,662 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:37:15,662 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:37:15,663 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:37:15,856 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:37:15,857 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:37:15,858 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:37:15,858 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:37:16,056 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:37:16,067 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:37:16,094 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:37:16,095 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:37:16,096 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:16,097 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:37:16,097 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:16,256 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:16,257 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:37:16,258 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:37:16,259 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:37:16,259 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:37:16,260 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:37:16,261 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:37:16,456 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:37:16,457 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:37:16,458 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:37:16,459 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:37:16,656 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:37:16,666 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:37:16,667 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:37:16,669 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:16,670 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:37:16,671 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:16,856 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:16,857 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:37:16,858 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:37:16,859 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:37:16,859 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:37:16,860 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:37:16,862 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:37:17,056 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:37:17,100 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:37:17,102 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:37:17,103 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:17,106 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:17,107 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:37:17,107 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:37:17,108 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:37:17,256 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:37:17,257 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:37:17,258 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:37:17,260 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:37:17,461 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:17,462 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:37:17,463 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:17,464 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:17,465 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:37:17,466 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:37:17,466 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:37:17,467 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:37:17,658 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:37:17,659 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:37:17,660 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:37:17,661 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:37:17,662 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:37:17,858 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:37:17,859 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:37:17,860 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:37:17,860 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:17,861 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:37:17,862 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:17,863 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:18,058 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:37:18,059 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:37:18,060 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:37:18,061 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:37:18,061 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:37:18,062 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:37:18,064 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:37:18,065 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:37:18,264 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:37:18,265 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:37:18,265 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:37:18,266 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:37:18,463 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:37:18,464 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:37:18,465 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:37:18,465 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:37:18,466 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:37:18,467 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:37:18,468 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:37:18,663 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:37:18,664 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:37:18,665 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:37:18,666 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:37:18,667 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:37:18,668 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:37:18,669 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:37:18,670 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:37:21,314 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:37:21,316 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:37:21,317 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:37:21,320 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:37:21,449 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:37:21,450 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:37:21,450 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:37:21,451 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:38:54,364 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:38:54,398 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:38:54,406 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:38:54,408 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-07-30 16:38:54,410 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-07-30 16:38:54,411 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:38:54,411 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:38:54,412 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:38:54,413 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:38:54,413 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-30 16:38:54,414 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:38:54,415 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:38:54,590 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-07-30 16:38:54,591 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:38:54,602 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:38:54,605 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:38:54,605 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:38:54,606 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:38:54,607 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:38:54,610 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:38:54,637 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:38:54,641 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:38:54,791 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:38:54,792 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:38:54,792 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:38:54,793 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:38:54,794 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:38:54,795 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:38:54,796 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:38:54,807 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:38:54,990 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:38:54,991 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:38:54,992 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:38:54,993 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:38:54,994 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:38:54,994 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:38:54,995 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:38:54,996 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:38:54,997 [Thread: 8       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:38:55,190 [Thread: 8       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:38:55,191 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:38:55,192 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:38:55,193 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:38:55,194 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:38:55,195 [Thread: 8       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:38:55,196 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:38:55,207 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:38:55,392 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:38:55,393 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:38:55,396 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:38:55,397 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:38:55,398 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:38:55,399 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:38:55,402 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:38:55,591 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:38:55,592 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:38:55,595 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:38:55,596 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:38:55,598 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:38:55,792 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:38:55,797 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:38:55,799 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:38:55,800 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:38:55,800 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:38:55,801 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:38:55,802 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:38:55,991 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:38:55,993 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:38:55,995 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:38:55,996 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:38:56,002 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:38:56,191 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:38:56,193 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:38:56,195 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:38:56,196 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:38:56,198 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:38:56,200 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:38:56,391 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:38:56,394 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:38:56,395 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:38:56,397 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:38:56,399 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:38:56,400 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:38:56,402 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:38:56,592 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:38:56,593 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:38:56,595 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:38:56,603 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:38:56,791 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:38:56,793 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:38:56,795 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:38:56,796 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:38:56,798 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:38:56,800 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:38:56,801 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:38:56,990 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:38:56,995 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:38:56,996 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:38:56,996 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:38:57,190 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:38:57,191 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:38:57,192 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:38:57,193 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:38:57,193 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:38:57,194 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:38:57,195 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:38:57,195 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:38:57,390 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:38:57,391 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:38:57,392 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:38:57,393 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:38:57,590 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:38:57,591 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:38:57,622 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:38:57,623 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:38:57,624 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:38:57,625 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:38:57,626 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:38:57,790 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:38:57,791 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:38:57,792 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:38:57,793 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:38:57,990 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:38:57,991 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:38:57,993 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:38:57,994 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:38:57,994 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:38:57,995 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:38:57,996 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:38:57,997 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:38:58,190 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:38:58,191 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:38:58,192 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:38:58,192 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:38:58,193 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:38:58,194 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:38:58,390 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:38:58,391 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:38:58,392 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:38:58,392 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:38:58,393 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:38:58,394 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:38:58,394 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:38:58,590 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:38:58,592 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:38:58,598 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:38:58,599 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:38:58,600 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:38:58,601 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:38:58,602 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:38:58,791 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:38:58,792 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:38:58,794 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:38:58,795 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:38:58,796 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:38:58,797 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:38:58,797 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:38:58,990 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:38:58,991 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:38:58,992 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:38:58,994 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:38:58,995 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:38:59,190 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:38:59,191 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:38:59,192 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:38:59,194 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:38:59,396 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:38:59,397 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:38:59,398 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:38:59,399 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:38:59,590 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:38:59,591 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:38:59,592 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:38:59,593 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:38:59,593 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:38:59,594 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:38:59,595 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:38:59,790 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:38:59,791 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:38:59,792 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:38:59,793 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:38:59,797 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:38:59,798 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:38:59,799 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:38:59,799 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:39:00,536 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:39:00,541 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:39:00,542 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:39:00,746 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:39:00,910 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:39:00,911 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:39:00,912 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:39:00,913 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:39:00,914 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:39:00,915 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:39:00,916 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:39:01,111 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:39:01,112 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:39:01,114 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:39:01,115 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:39:01,115 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:39:01,116 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:39:01,117 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:39:01,117 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:39:01,311 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:39:01,313 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:39:01,315 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:39:01,317 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:39:01,319 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:39:01,511 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:39:01,513 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:39:01,515 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:39:01,517 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:39:01,519 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:39:01,520 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:01,522 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:39:01,524 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:39:01,711 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:39:01,729 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:39:01,731 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:39:01,732 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:39:01,911 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:39:01,913 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:39:01,915 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:39:01,917 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:39:02,111 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:39:02,120 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:39:02,127 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:39:02,132 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:02,137 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:39:02,142 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:02,147 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:02,311 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:39:02,312 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:39:02,313 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:39:02,313 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:39:02,314 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:39:02,315 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:39:02,315 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:39:02,510 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:39:02,515 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:39:02,516 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:39:02,517 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:39:02,726 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:39:02,792 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:39:02,802 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:02,803 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:39:02,803 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:02,804 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:02,805 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:39:02,910 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:39:02,911 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:39:02,912 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:39:02,913 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:39:02,913 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:39:02,914 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:39:02,915 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:39:03,110 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:39:03,115 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:39:03,116 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:39:03,122 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:39:03,318 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:39:03,327 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:03,327 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:39:03,328 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:03,329 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:03,330 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:39:03,330 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:39:03,510 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:39:03,511 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:39:03,512 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:39:03,513 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:39:03,513 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:39:03,514 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:39:03,515 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:39:03,710 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:39:03,711 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:39:03,716 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:39:03,717 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:39:03,910 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:03,914 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:39:03,919 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:03,925 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:03,926 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:39:03,931 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:39:03,936 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:39:04,110 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:39:04,115 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:39:04,116 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:39:04,121 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:39:04,126 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:39:04,128 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:39:04,311 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:39:04,316 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:39:04,318 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:39:04,319 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:39:04,510 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:04,511 [Thread: 8       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:39:04,516 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:04,521 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:04,522 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:39:04,523 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:39:04,524 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:39:04,710 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:39:04,711 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:39:04,713 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:39:04,713 [Thread: 8       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:39:04,770 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:39:04,773 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:39:04,774 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:04,910 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:04,911 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:39:04,912 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:39:04,913 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:39:04,913 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:39:05,110 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:39:05,112 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:39:05,112 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:39:05,113 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:05,114 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:39:05,115 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:05,115 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:05,312 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:39:05,313 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:39:05,314 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:39:05,314 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:39:05,315 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:39:05,316 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:39:05,316 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:39:05,317 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:39:05,510 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:39:05,511 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:39:05,512 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:39:05,513 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:39:05,710 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:05,711 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:39:05,712 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:05,712 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:05,713 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:39:05,714 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:39:05,715 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:39:05,716 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:39:05,910 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:39:05,911 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:39:05,912 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:39:05,912 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:39:05,913 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:39:06,110 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:39:06,115 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:39:06,120 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:39:06,125 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:39:06,135 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:39:06,136 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:39:06,137 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:39:06,312 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:39:06,314 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:39:06,315 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:39:06,317 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:39:06,318 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:39:06,321 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:39:06,324 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:39:06,326 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:39:06,511 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:39:06,513 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:39:06,515 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:39:56,980 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:39:56,981 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:39:56,982 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:39:56,984 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:39:57,104 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:39:57,105 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:39:57,105 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:39:57,106 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:43:52,252 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:43:52,287 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:43:52,296 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:43:52,299 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 16:43:52,300 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 16:43:52,301 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:43:52,302 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:43:52,303 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:43:52,304 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:43:52,304 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:43:52,305 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:43:52,306 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:43:52,480 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:43:52,481 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:43:52,492 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:43:52,495 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:43:52,495 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:43:52,496 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:43:52,497 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:43:52,500 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:43:52,520 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:43:52,524 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:43:52,681 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:43:52,682 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:43:52,683 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:43:52,684 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:43:52,685 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:43:52,686 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:43:52,687 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:43:52,699 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:43:52,880 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:43:52,881 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:43:52,882 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:43:52,883 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:43:52,884 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:43:52,885 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:43:52,886 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:43:52,886 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:43:52,887 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:43:53,080 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:43:53,082 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:43:53,083 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:43:53,085 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:43:53,086 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:43:53,086 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:43:53,087 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:43:53,099 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:43:53,282 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:43:53,285 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:43:53,289 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:43:53,291 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:43:53,292 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:43:53,294 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:43:53,296 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:43:53,481 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:43:53,482 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:43:53,485 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:43:53,487 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:43:53,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:43:53,681 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:43:53,682 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:43:53,683 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:43:53,684 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:43:53,685 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:43:53,686 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:43:53,686 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:43:53,880 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:43:53,881 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:43:53,882 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:43:53,882 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:43:53,883 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:43:54,080 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:43:54,081 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:43:54,081 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:43:54,082 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:43:54,083 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:43:54,084 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:43:54,280 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:43:54,281 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:43:54,282 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:43:54,282 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:43:54,283 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:43:54,283 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:43:54,284 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:43:54,480 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:43:54,481 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:43:54,481 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:43:54,485 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:43:54,680 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:43:54,681 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:43:54,682 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:43:54,682 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:43:54,683 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:43:54,684 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:43:54,684 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:43:54,880 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:43:54,881 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:43:54,881 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:43:54,882 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:43:55,080 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:43:55,081 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:43:55,082 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:43:55,083 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:43:55,084 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:43:55,084 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:43:55,085 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:43:55,085 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:43:55,280 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:43:55,281 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:43:55,282 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:43:55,283 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:43:55,480 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:43:55,482 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:43:55,512 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:43:55,514 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:43:55,515 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:43:55,516 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:43:55,517 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:43:55,680 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:43:55,681 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:43:55,682 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:43:55,683 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:43:55,881 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:43:55,881 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:43:55,882 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:43:55,883 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:43:55,884 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:43:55,884 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:43:55,885 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:43:55,886 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:43:56,080 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:43:56,081 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:43:56,081 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:43:56,082 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:43:56,083 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:43:56,083 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:43:56,281 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:43:56,283 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:43:56,284 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:43:56,286 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:43:56,288 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:43:56,289 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:43:56,291 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:43:56,481 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:43:56,483 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:43:56,485 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:43:56,486 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:43:56,488 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:43:56,489 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:43:56,491 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:43:56,682 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:43:56,683 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:43:56,685 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:43:56,686 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:43:56,688 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:43:56,690 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:43:56,692 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:43:56,881 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:43:56,884 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:43:56,888 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:43:56,890 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:43:56,892 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:43:57,081 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:43:57,082 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:43:57,083 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:43:57,085 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:43:57,296 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:43:57,297 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:43:57,298 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:43:57,299 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:43:57,480 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:43:57,481 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:43:57,482 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:43:57,483 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:43:57,483 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:43:57,484 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:43:57,485 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:43:57,680 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:43:57,681 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:43:57,681 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:43:57,682 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:43:57,686 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:43:57,687 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:43:57,687 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:43:57,688 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:43:58,451 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:43:58,452 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:43:58,630 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:43:58,632 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:43:58,634 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:43:58,635 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:43:58,635 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:43:58,836 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:43:58,837 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:43:58,838 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:43:58,839 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:43:58,840 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:43:58,842 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:43:58,843 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:43:59,036 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:43:59,036 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:43:59,037 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:43:59,038 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:43:59,230 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:43:59,231 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:43:59,231 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:43:59,232 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:43:59,233 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:43:59,430 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:43:59,431 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:43:59,431 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:43:59,432 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:43:59,433 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:43:59,433 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:43:59,434 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:43:59,630 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:43:59,631 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:43:59,632 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:43:59,639 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:43:59,640 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:43:59,830 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:43:59,831 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:43:59,831 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:43:59,832 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:44:00,030 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:44:00,031 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:44:00,032 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:44:00,032 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:44:00,033 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:44:00,034 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:44:00,230 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:00,231 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:00,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:44:00,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:44:00,233 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:44:00,234 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:44:00,234 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:44:00,235 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:44:00,430 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:44:00,431 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:44:00,431 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:44:00,630 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:44:00,631 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:44:00,632 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:44:00,632 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:44:00,633 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:44:00,633 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:44:00,634 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:00,830 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:00,831 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:44:00,832 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:44:00,833 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:44:00,834 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:44:00,835 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:44:00,835 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:44:01,030 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:44:01,031 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:44:01,031 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:44:01,032 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:44:01,231 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:44:01,232 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:44:01,232 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:44:01,233 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:44:01,234 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:44:01,235 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:01,236 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:01,431 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:44:01,431 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:44:01,432 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:44:01,433 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:44:01,433 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:44:01,434 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:44:01,434 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:44:01,632 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:44:01,633 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:44:01,635 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:44:01,637 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:44:01,831 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:44:01,833 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:44:01,842 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:44:01,843 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:44:01,845 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:01,846 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:01,849 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:44:02,031 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:44:02,033 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:44:02,035 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:44:02,036 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:44:02,038 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:44:02,040 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:44:02,041 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:44:02,231 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:44:02,233 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:44:02,236 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:44:02,238 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:44:02,430 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:44:02,431 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:44:02,432 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:44:02,433 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:02,434 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:02,436 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:44:02,630 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:44:02,631 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:44:02,631 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:44:02,632 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:44:02,634 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:44:02,635 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:44:02,679 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:44:02,681 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:44:02,830 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:02,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:02,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:44:02,834 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:44:02,835 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:44:03,030 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:44:03,031 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:44:03,035 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:44:03,036 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:44:03,037 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:44:03,037 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:44:03,038 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:03,230 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:03,231 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:44:03,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:44:03,232 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:44:03,233 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:44:03,234 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:44:03,234 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:44:03,235 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:44:03,430 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:44:03,431 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:44:03,432 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:44:03,433 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:44:03,630 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:44:03,631 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:44:03,632 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:44:03,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:03,633 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:03,634 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:44:03,635 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:44:03,636 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:44:03,830 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:44:03,831 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:44:03,832 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:44:03,832 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:44:03,833 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:44:04,030 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:44:04,031 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:44:04,032 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:44:04,032 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:44:04,033 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:44:04,033 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:44:04,230 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:44:04,231 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:44:04,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:44:04,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:44:04,233 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:44:04,234 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:44:04,234 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:44:04,235 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:44:04,431 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:44:04,432 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:44:04,432 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:44:04,433 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:44:04,434 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:44:45,510 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:44:45,511 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:44:45,512 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:44:45,513 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:44:45,639 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:44:45,641 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:44:45,641 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:44:45,642 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:49:31,741 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:49:31,774 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:49:31,782 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:49:31,786 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 16:49:31,788 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 16:49:31,789 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:49:31,789 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:49:31,790 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:49:31,791 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:49:31,792 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:49:31,793 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:49:31,794 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:49:31,965 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:49:31,966 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:49:31,978 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:49:31,980 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:49:31,981 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:49:31,982 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:49:31,983 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:49:31,985 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:49:31,991 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:49:31,997 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:49:32,167 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:49:32,168 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:49:32,169 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:49:32,170 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:49:32,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:49:32,172 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:49:32,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:49:32,184 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:49:32,366 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:49:32,367 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:49:32,368 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:49:32,368 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:49:32,369 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:49:32,370 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:49:32,371 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:49:32,372 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:49:32,372 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:49:32,565 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:49:32,566 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:49:32,567 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:49:32,568 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:49:32,573 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:49:32,574 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:49:32,575 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:49:32,587 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:49:32,767 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:49:32,768 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:49:32,771 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:49:32,772 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:49:32,773 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:49:32,775 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:49:32,776 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:49:32,966 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:49:32,967 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:49:32,969 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:49:32,970 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:49:32,973 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:49:33,166 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:49:33,167 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:49:33,170 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:49:33,171 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:49:33,172 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:49:33,173 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:49:33,173 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:49:33,365 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:49:33,366 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:49:33,367 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:49:33,368 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:49:33,369 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:49:33,565 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:49:33,566 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:49:33,566 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:49:33,567 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:49:33,568 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:49:33,568 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:49:33,765 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:49:33,766 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:49:33,767 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:49:33,767 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:49:33,768 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:49:33,769 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:49:33,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:49:33,965 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:49:33,966 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:49:33,966 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:49:33,970 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:49:34,165 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:49:34,166 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:49:34,167 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:49:34,167 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:49:34,168 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:49:34,168 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:49:34,169 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:49:34,365 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:49:34,366 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:49:34,366 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:49:34,367 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:49:34,565 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:49:34,566 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:49:34,567 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:49:34,567 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:49:34,568 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:49:34,569 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:49:34,570 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:49:34,570 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:49:34,765 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:49:34,766 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:49:34,773 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:49:34,774 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:49:34,966 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:49:34,966 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:49:35,000 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:49:35,002 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:49:35,003 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:49:35,004 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:49:35,004 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:49:35,165 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:49:35,166 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:49:35,166 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:49:35,167 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:49:35,366 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:49:35,367 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:49:35,368 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:49:35,369 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:49:35,370 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:49:35,371 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:49:35,372 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:49:35,373 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:49:35,566 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:49:35,568 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:49:35,570 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:49:35,571 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:49:35,573 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:49:35,574 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:49:35,766 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:49:35,767 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:49:35,768 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:49:35,769 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:49:35,770 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:49:35,771 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:49:35,772 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:49:35,966 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:49:35,970 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:49:35,972 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:49:35,973 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:49:35,974 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:49:35,976 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:49:35,978 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:49:36,167 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:49:36,168 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:49:36,170 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:49:36,172 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:49:36,174 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:49:36,176 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:49:36,177 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:49:36,366 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:49:36,380 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:49:36,386 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:49:36,387 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:49:36,388 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:49:36,565 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:49:36,566 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:49:36,567 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:49:36,570 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:49:36,765 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:49:36,766 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:49:36,767 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:49:36,768 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:49:36,965 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:49:36,966 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:49:36,966 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:49:36,967 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:49:36,968 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:49:36,968 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:49:36,969 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:49:37,178 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:49:37,179 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:49:37,180 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:49:37,181 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:49:37,187 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:49:37,188 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:49:37,189 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:49:37,190 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:49:37,915 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:49:37,916 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:49:37,917 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:49:37,917 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:49:37,918 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:49:37,918 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:49:37,919 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:49:38,130 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:49:38,156 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:49:38,315 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:49:38,318 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:49:38,319 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:49:38,322 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:49:38,323 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:49:38,324 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:49:38,515 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:49:38,516 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:49:38,516 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:49:38,517 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:49:38,518 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:49:38,518 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:49:38,715 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:49:38,716 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:49:38,717 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:49:38,717 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:49:38,718 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:49:38,719 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:49:38,719 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:49:38,917 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:49:38,918 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:38,919 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:49:38,919 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:49:38,920 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:49:39,120 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:49:39,121 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:49:39,122 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:49:39,122 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:49:39,123 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:49:39,124 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:49:39,315 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:49:39,316 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:49:39,317 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:49:39,317 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:49:39,515 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:39,516 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:49:39,516 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:39,517 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:39,518 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:49:39,518 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:49:39,519 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:49:39,715 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:49:39,716 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:49:39,716 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:49:39,717 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:49:39,718 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:49:39,718 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:49:39,920 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:49:39,921 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:49:39,922 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:49:39,922 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:49:39,923 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:40,120 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:49:40,121 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:40,121 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:40,129 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:49:40,129 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:49:40,132 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:49:40,133 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:49:40,320 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:49:40,321 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:49:40,321 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:49:40,322 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:49:40,323 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:49:40,520 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:49:40,521 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:49:40,522 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:49:40,522 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:49:40,523 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:40,523 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:49:40,721 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:40,722 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:40,724 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:49:40,725 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:49:40,727 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:49:40,728 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:49:40,730 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:49:40,921 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:49:40,923 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:49:40,925 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:49:40,926 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:49:41,121 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:49:41,124 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:49:41,126 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:49:41,128 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:49:41,137 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:41,139 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:49:41,140 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:41,322 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:41,324 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:49:41,326 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:49:41,328 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:49:41,329 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:49:41,331 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:49:41,333 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:49:41,521 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:49:41,523 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:49:41,525 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:49:41,527 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:49:41,726 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:49:41,727 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:49:41,728 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:49:41,729 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:41,730 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:49:41,730 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:41,920 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:41,921 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:49:41,922 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:49:41,923 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:49:41,924 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:49:41,924 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:49:41,926 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:49:42,120 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:49:42,193 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:49:42,201 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:49:42,208 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:42,209 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:42,211 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:49:42,212 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:49:42,213 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:49:42,320 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:49:42,321 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:49:42,322 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:49:42,323 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:49:42,520 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:42,521 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:49:42,521 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:42,522 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:42,523 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:49:42,524 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:49:42,524 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:49:42,525 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:49:42,720 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:49:42,721 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:49:42,721 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:49:42,722 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:49:42,723 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:49:42,920 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:49:42,925 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:49:42,930 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:49:42,931 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:42,936 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:49:42,937 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:42,937 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:43,120 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:49:43,121 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:49:43,122 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:49:43,122 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:49:43,123 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:49:43,123 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:49:43,124 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:49:43,125 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:49:43,320 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:49:43,321 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:49:43,322 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:49:43,322 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:49:43,520 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:49:43,521 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:49:43,521 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:49:43,522 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:49:43,523 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:49:43,523 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:49:43,524 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:49:43,723 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:49:43,733 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:49:43,735 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:49:43,736 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:49:43,737 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:49:43,738 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:49:43,738 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:49:43,739 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:52:34,954 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:52:34,956 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:52:34,957 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:52:34,958 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:52:35,096 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:52:35,097 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:52:35,098 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:52:35,098 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:54:00,193 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 16:54:00,223 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 16:54:00,231 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 16:54:00,234 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 16:54:00,236 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 16:54:00,237 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 16:54:00,238 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 16:54:00,238 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 16:54:00,239 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 16:54:00,240 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:54:00,241 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:54:00,241 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 16:54:00,242 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 16:54:00,242 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 16:54:00,440 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 16:54:00,442 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 16:54:00,443 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 16:54:00,444 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 16:54:00,445 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 16:54:00,448 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 16:54:00,458 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 16:54:00,459 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 16:54:00,460 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 16:54:00,629 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 16:54:00,630 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 16:54:00,631 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 16:54:00,632 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 16:54:00,633 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 16:54:00,633 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 16:54:00,644 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 16:54:00,645 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 16:54:00,646 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 16:54:00,829 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 16:54:00,830 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 16:54:00,831 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 16:54:00,832 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 16:54:00,833 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 16:54:00,833 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 16:54:00,834 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 16:54:00,835 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 16:54:01,029 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 16:54:01,030 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 16:54:01,032 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 16:54:01,033 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 16:54:01,034 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 16:54:01,034 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 16:54:01,046 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:54:01,048 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 16:54:01,230 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 16:54:01,232 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 16:54:01,234 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 16:54:01,235 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 16:54:01,236 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 16:54:01,238 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 16:54:01,240 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 16:54:01,429 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 16:54:01,432 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 16:54:01,433 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 16:54:01,435 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 16:54:01,437 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 16:54:01,629 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 16:54:01,631 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 16:54:01,632 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 16:54:01,632 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:54:01,642 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 16:54:01,643 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 16:54:01,829 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 16:54:01,830 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 16:54:01,831 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 16:54:01,832 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 16:54:01,832 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 16:54:01,833 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 16:54:02,029 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:54:02,030 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:54:02,031 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:54:02,031 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:54:02,032 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 16:54:02,229 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 16:54:02,230 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 16:54:02,231 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 16:54:02,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 16:54:02,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 16:54:02,233 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 16:54:02,233 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:54:02,234 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:54:02,429 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:54:02,430 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:54:02,433 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 16:54:02,434 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 16:54:02,630 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 16:54:02,631 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 16:54:02,632 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:54:02,633 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 16:54:02,633 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 16:54:02,634 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:54:02,634 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:54:02,829 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:54:02,830 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:54:02,830 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 16:54:02,831 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 16:54:03,030 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 16:54:03,030 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 16:54:03,031 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:54:03,032 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 16:54:03,032 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 16:54:03,033 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:54:03,034 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:54:03,034 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:54:03,229 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:54:03,230 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 16:54:03,231 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 16:54:03,232 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 16:54:03,450 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 16:54:03,484 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:54:03,484 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 16:54:03,485 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 16:54:03,486 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:54:03,486 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:54:03,487 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:54:03,629 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:54:03,630 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 16:54:03,631 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 16:54:03,632 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 16:54:03,829 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 16:54:03,831 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 16:54:03,832 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 16:54:03,832 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 16:54:03,833 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 16:54:03,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 16:54:03,834 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 16:54:03,835 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 16:54:04,030 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 16:54:04,032 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 16:54:04,034 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 16:54:04,036 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 16:54:04,037 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 16:54:04,039 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 16:54:04,230 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 16:54:04,232 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 16:54:04,234 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 16:54:04,235 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 16:54:04,237 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 16:54:04,238 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 16:54:04,240 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 16:54:04,430 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:54:04,432 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 16:54:04,434 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 16:54:04,436 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 16:54:04,438 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 16:54:04,440 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 16:54:04,442 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 16:54:04,631 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 16:54:04,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:54:04,634 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:54:04,636 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 16:54:04,638 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 16:54:04,640 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 16:54:04,830 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 16:54:04,857 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 16:54:04,858 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 16:54:04,860 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 16:54:04,861 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 16:54:04,862 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 16:54:05,029 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 16:54:05,030 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 16:54:05,032 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:54:05,033 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:54:05,229 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 16:54:05,230 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 16:54:05,231 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 16:54:05,232 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 16:54:05,429 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 16:54:05,439 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:54:05,440 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:54:05,441 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:54:05,442 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:54:05,443 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 16:54:05,443 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 16:54:05,444 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 16:54:05,629 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:54:05,630 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:54:05,634 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 16:54:05,635 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 16:54:05,635 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 16:54:05,636 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 16:54:06,214 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 16:54:06,229 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 16:54:06,230 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 16:54:06,231 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 16:54:06,231 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:54:06,232 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:54:06,232 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:54:06,465 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:54:06,630 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 16:54:06,630 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 16:54:06,631 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 16:54:06,632 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 16:54:06,633 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 16:54:06,634 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 16:54:06,635 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 16:54:06,635 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 16:54:06,829 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 16:54:06,838 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 16:54:06,842 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:54:06,846 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 16:54:06,847 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 16:54:07,043 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 16:54:07,044 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 16:54:07,045 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 16:54:07,045 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 16:54:07,046 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 16:54:07,047 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 16:54:07,047 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:54:07,048 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 16:54:07,229 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:07,230 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 16:54:07,231 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 16:54:07,232 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 16:54:07,238 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 16:54:07,429 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 16:54:07,430 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 16:54:07,431 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 16:54:07,431 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:54:07,432 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 16:54:07,629 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 16:54:07,631 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 16:54:07,632 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 16:54:07,632 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 16:54:07,633 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:07,829 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:54:07,830 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:07,831 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:07,832 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:54:07,832 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 16:54:07,833 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 16:54:07,834 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 16:54:08,029 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 16:54:08,030 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 16:54:08,030 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 16:54:08,031 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:54:08,032 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 16:54:08,229 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 16:54:08,230 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 16:54:08,231 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 16:54:08,232 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 16:54:08,232 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:08,233 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:54:08,429 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:08,430 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:08,431 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:54:08,431 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 16:54:08,434 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 16:54:08,435 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 16:54:08,435 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 16:54:08,629 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 16:54:08,630 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 16:54:08,631 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:54:08,631 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 16:54:08,829 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 16:54:08,830 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 16:54:08,831 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 16:54:08,832 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 16:54:08,832 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:08,833 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:54:08,834 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:09,029 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:09,030 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 16:54:09,031 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 16:54:09,032 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 16:54:09,032 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 16:54:09,033 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 16:54:09,034 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 16:54:09,230 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 16:54:09,232 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:54:09,233 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 16:54:09,235 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 16:54:09,430 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 16:54:09,431 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 16:54:09,432 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 16:54:09,433 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:09,433 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:54:09,438 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:09,439 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:09,630 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 16:54:09,632 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 16:54:09,634 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 16:54:09,636 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 16:54:09,637 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 16:54:09,639 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 16:54:09,640 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 16:54:09,830 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:54:09,832 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 16:54:09,834 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 16:54:09,836 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 16:54:10,030 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 16:54:10,032 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 16:54:10,034 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:10,036 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 16:54:10,037 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:10,039 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:10,229 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:54:10,230 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 16:54:10,231 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 16:54:10,232 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 16:54:10,232 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 16:54:10,235 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 16:54:10,235 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 16:54:10,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 16:54:10,490 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 16:54:10,492 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:10,492 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:10,493 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:54:10,494 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 16:54:10,494 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 16:54:10,629 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 16:54:10,630 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 16:54:10,631 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 16:54:10,632 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 16:54:10,632 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:10,829 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:54:10,830 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:10,831 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:10,832 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 16:54:10,832 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 16:54:10,833 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 16:54:10,834 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:54:10,834 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:54:10,835 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 16:54:11,029 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:54:11,030 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 16:54:11,031 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 16:54:11,032 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 16:54:11,229 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 16:54:11,230 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 16:54:11,231 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:11,231 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:54:11,232 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:11,233 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:11,233 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 16:54:11,429 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 16:54:11,430 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 16:54:11,430 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 16:54:11,431 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 16:54:11,432 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 16:54:11,432 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:54:11,433 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 16:54:11,629 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 16:54:11,630 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 16:54:11,631 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 16:54:11,632 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 16:54:11,632 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 16:54:11,829 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 16:54:11,830 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 16:54:11,830 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 16:54:11,831 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 16:54:11,832 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 16:54:11,833 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 16:54:11,833 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 16:54:11,834 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 16:54:12,030 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 16:54:12,031 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 16:54:12,032 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 16:54:12,033 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 16:54:12,034 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 16:54:12,034 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 16:56:17,141 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 16:56:17,143 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 16:56:17,145 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 16:56:17,146 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 16:56:17,275 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 16:56:17,345 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 16:56:17,350 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 16:56:17,351 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:01:22,933 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 17:01:22,964 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 17:01:22,972 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 17:01:22,975 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 17:01:22,976 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 17:01:22,977 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 17:01:22,978 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 17:01:22,979 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 17:01:22,979 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 17:01:22,980 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 17:01:22,981 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:01:22,981 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 17:01:23,143 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 17:01:23,144 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:01:23,155 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 17:01:23,158 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 17:01:23,159 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 17:01:23,160 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 17:01:23,161 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 17:01:23,164 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 17:01:23,168 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 17:01:23,172 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 17:01:23,344 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 17:01:23,344 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 17:01:23,345 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 17:01:23,346 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 17:01:23,347 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 17:01:23,347 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 17:01:23,348 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 17:01:23,358 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 17:01:23,543 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 17:01:23,544 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 17:01:23,545 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 17:01:23,546 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 17:01:23,546 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 17:01:23,547 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 17:01:23,548 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 17:01:23,548 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 17:01:23,549 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 17:01:23,743 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 17:01:23,744 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 17:01:23,745 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 17:01:23,746 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 17:01:23,747 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 17:01:23,748 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 17:01:23,748 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 17:01:23,762 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:01:23,945 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:01:23,947 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 17:01:23,950 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 17:01:23,952 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 17:01:23,953 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 17:01:23,955 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 17:01:23,957 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 17:01:24,144 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 17:01:24,145 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 17:01:24,148 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 17:01:24,149 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 17:01:24,151 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 17:01:24,344 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 17:01:24,345 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 17:01:24,346 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 17:01:24,347 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 17:01:24,348 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:01:24,348 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 17:01:24,349 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 17:01:24,543 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 17:01:24,544 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 17:01:24,545 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 17:01:24,545 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 17:01:24,546 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 17:01:24,743 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 17:01:24,744 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:01:24,744 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:01:24,745 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:01:24,746 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:01:24,746 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 17:01:24,943 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 17:01:24,944 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 17:01:24,945 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 17:01:24,946 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 17:01:24,946 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 17:01:24,947 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:01:24,947 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:01:25,144 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:01:25,146 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:01:25,147 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:01:25,154 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 17:01:25,344 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 17:01:25,347 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 17:01:25,348 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 17:01:25,350 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:01:25,352 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:01:25,354 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:01:25,356 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:01:25,544 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:01:25,546 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:01:25,548 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:01:25,550 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 17:01:25,744 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 17:01:25,747 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 17:01:25,748 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 17:01:25,750 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:01:25,752 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:01:25,754 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:01:25,755 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:01:25,757 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:01:25,943 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:01:25,945 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:01:25,946 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 17:01:25,946 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 17:01:26,144 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 17:01:26,154 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 17:01:26,187 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:01:26,191 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:01:26,192 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:01:26,193 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:01:26,194 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:01:26,343 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:01:26,344 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:01:26,345 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 17:01:26,346 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 17:01:26,543 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 17:01:26,544 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 17:01:26,546 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 17:01:26,546 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:01:26,547 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 17:01:26,548 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:01:26,548 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:01:26,549 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 17:01:26,743 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:01:26,744 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 17:01:26,744 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:01:26,745 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:01:26,746 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 17:01:26,746 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:01:26,969 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 17:01:26,970 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:01:26,991 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:01:26,992 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 17:01:26,993 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:01:26,994 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 17:01:27,012 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:01:27,143 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:01:27,144 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:01:27,145 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:01:27,146 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:01:27,147 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:01:27,147 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:01:27,148 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 17:01:27,343 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 17:01:27,344 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:01:27,344 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:01:27,345 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:01:27,345 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 17:01:27,346 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 17:01:27,347 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 17:01:27,543 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 17:01:27,544 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 17:01:27,546 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 17:01:27,547 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 17:01:27,547 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 17:01:27,746 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 17:01:27,747 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 17:01:27,748 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 17:01:27,751 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:01:27,943 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:01:27,944 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 17:01:27,945 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 17:01:27,946 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 17:01:28,143 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 17:01:28,144 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 17:01:28,144 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:01:28,145 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:01:28,146 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:01:28,146 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:01:28,148 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 17:01:28,343 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 17:01:28,344 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:01:28,344 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:01:28,345 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:01:28,349 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:01:28,349 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 17:01:28,350 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:01:28,350 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:01:29,111 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 17:01:29,112 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 17:01:29,114 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 17:01:29,263 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 17:01:29,264 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:01:29,265 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:01:29,266 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:01:29,267 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:01:29,269 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 17:01:29,474 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 17:01:29,475 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 17:01:29,496 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 17:01:29,666 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 17:01:29,668 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 17:01:29,669 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 17:01:29,670 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 17:01:29,670 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 17:01:29,671 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 17:01:29,672 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:01:29,863 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 17:01:29,864 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 17:01:29,865 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 17:01:29,866 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 17:01:29,866 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 17:01:30,067 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 17:01:30,067 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 17:01:30,068 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 17:01:30,069 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:01:30,069 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:01:30,070 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:30,071 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 17:01:30,071 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 17:01:30,264 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 17:01:30,269 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 17:01:30,270 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 17:01:30,271 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 17:01:30,464 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 17:01:30,466 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:01:30,468 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 17:01:30,470 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 17:01:30,665 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 17:01:30,667 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 17:01:30,669 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 17:01:30,671 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:30,673 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:01:30,675 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:30,677 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:30,864 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:01:30,866 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:01:30,867 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:01:30,867 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 17:01:30,868 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 17:01:30,869 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 17:01:30,870 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 17:01:31,064 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:01:31,066 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 17:01:31,068 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 17:01:31,070 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 17:01:31,265 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 17:01:31,267 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 17:01:31,269 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:31,271 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:01:31,273 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:31,275 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:31,278 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:01:31,463 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:01:31,464 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:01:31,465 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 17:01:31,465 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 17:01:31,466 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 17:01:31,467 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 17:01:31,467 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:01:31,663 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 17:01:31,664 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 17:01:31,665 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 17:01:31,665 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 17:01:31,863 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 17:01:31,864 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:31,864 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:01:31,865 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:31,866 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:31,866 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 17:01:31,867 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 17:01:32,063 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:01:32,064 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 17:01:32,064 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 17:01:32,065 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 17:01:32,066 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 17:01:32,067 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:01:32,068 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 17:01:32,263 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 17:01:32,264 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 17:01:32,268 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 17:01:32,269 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 17:01:32,463 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:32,464 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:01:32,464 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:32,465 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:32,466 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 17:01:32,467 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 17:01:32,467 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:01:32,663 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 17:01:32,664 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 17:01:32,664 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 17:01:32,665 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 17:01:32,666 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:01:32,666 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 17:01:32,863 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 17:01:32,864 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 17:01:32,865 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 17:01:32,865 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 17:01:33,064 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:33,065 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:01:33,065 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:33,066 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:33,067 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:01:33,067 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:01:33,068 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:01:33,263 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 17:01:33,264 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 17:01:33,265 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 17:01:33,266 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 17:01:33,310 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 17:01:33,311 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 17:01:33,312 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:33,463 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:33,464 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:01:33,465 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 17:01:33,465 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 17:01:33,466 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 17:01:33,663 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 17:01:33,664 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 17:01:33,665 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 17:01:33,665 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:33,666 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:01:33,666 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:33,667 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:33,863 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 17:01:33,864 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 17:01:33,865 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 17:01:33,865 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:01:33,866 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:01:33,867 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 17:01:33,867 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:01:33,868 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 17:01:34,063 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 17:01:34,064 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 17:01:34,065 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 17:01:34,065 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 17:01:34,263 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:34,264 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:01:34,264 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:34,265 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:34,266 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 17:01:34,267 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 17:01:34,267 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:01:34,268 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 17:01:34,463 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 17:01:34,464 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 17:01:34,464 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:01:34,465 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 17:01:34,466 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 17:01:34,663 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 17:01:34,664 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 17:01:34,665 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 17:01:34,665 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:01:34,666 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:01:34,667 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:01:34,667 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:01:34,863 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 17:01:34,867 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 17:01:34,868 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:01:34,869 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 17:01:34,869 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 17:01:34,871 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 17:01:34,872 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 17:01:34,873 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:01:35,063 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:01:35,064 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:01:35,064 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:02:31,204 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:02:31,213 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 17:02:31,221 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:02:31,226 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:02:31,551 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:02:31,562 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 17:02:31,566 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:02:31,571 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:04:45,071 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 17:04:45,105 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 17:04:45,115 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 17:04:45,119 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 17:04:45,120 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 17:04:45,121 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 17:04:45,122 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 17:04:45,123 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 17:04:45,123 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 17:04:45,124 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 17:04:45,125 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:04:45,126 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 17:04:45,291 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 17:04:45,292 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:04:45,310 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 17:04:45,312 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 17:04:45,313 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 17:04:45,314 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 17:04:45,314 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 17:04:45,317 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 17:04:45,321 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 17:04:45,324 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 17:04:45,492 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 17:04:45,493 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 17:04:45,493 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 17:04:45,494 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 17:04:45,495 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 17:04:45,496 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 17:04:45,504 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 17:04:45,516 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 17:04:45,691 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 17:04:45,692 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 17:04:45,693 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 17:04:45,694 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 17:04:45,695 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 17:04:45,696 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 17:04:45,697 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 17:04:45,698 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 17:04:45,699 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 17:04:45,891 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 17:04:45,892 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 17:04:45,893 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 17:04:45,895 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 17:04:45,895 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 17:04:45,896 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 17:04:45,897 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 17:04:45,908 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:04:46,092 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:04:46,094 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 17:04:46,096 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 17:04:46,098 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 17:04:46,099 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 17:04:46,100 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 17:04:46,102 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 17:04:46,292 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 17:04:46,293 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 17:04:46,296 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 17:04:46,297 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 17:04:46,299 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 17:04:46,492 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 17:04:46,493 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 17:04:46,494 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 17:04:46,496 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 17:04:46,496 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:04:46,497 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 17:04:46,498 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 17:04:46,691 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 17:04:46,692 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 17:04:46,693 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 17:04:46,694 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 17:04:46,694 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 17:04:46,891 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 17:04:46,892 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:04:46,893 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:04:46,893 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:04:46,894 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:04:46,895 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 17:04:47,091 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 17:04:47,092 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 17:04:47,093 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 17:04:47,093 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 17:04:47,094 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 17:04:47,095 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:04:47,096 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:04:47,291 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:04:47,292 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:04:47,293 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:04:47,295 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 17:04:47,491 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 17:04:47,492 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 17:04:47,493 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 17:04:47,494 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:04:47,494 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:04:47,495 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:04:47,503 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:04:47,691 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:04:47,692 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:04:47,693 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:04:47,693 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 17:04:47,891 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 17:04:47,892 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 17:04:47,893 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 17:04:47,894 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:04:47,894 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:04:47,895 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:04:47,895 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:04:47,896 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:04:48,091 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:04:48,092 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:04:48,093 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 17:04:48,093 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 17:04:48,291 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 17:04:48,293 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 17:04:48,324 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:04:48,325 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:04:48,326 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:04:48,327 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:04:48,328 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:04:48,491 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:04:48,492 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:04:48,493 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 17:04:48,494 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 17:04:48,691 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 17:04:48,692 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 17:04:48,694 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 17:04:48,695 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:04:48,696 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 17:04:48,696 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:04:48,697 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:04:48,698 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 17:04:48,892 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:04:48,894 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 17:04:48,896 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:04:48,898 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:04:48,899 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 17:04:48,901 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:04:49,092 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 17:04:49,094 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:04:49,096 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:04:49,098 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 17:04:49,099 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:04:49,101 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 17:04:49,102 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:04:49,292 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:04:49,294 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:04:49,296 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:04:49,297 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:04:49,299 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:04:49,301 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:04:49,303 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 17:04:49,492 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 17:04:49,494 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:04:49,496 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:04:49,497 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:04:49,499 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 17:04:49,501 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 17:04:49,502 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 17:04:49,692 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 17:04:49,694 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 17:04:49,695 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 17:04:49,698 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 17:04:49,699 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 17:04:49,891 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 17:04:49,892 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 17:04:49,893 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 17:04:49,895 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:04:50,091 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:04:50,092 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 17:04:50,093 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 17:04:50,094 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 17:04:50,291 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 17:04:50,292 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 17:04:50,293 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:04:50,293 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:04:50,294 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:04:50,295 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:04:50,296 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 17:04:50,491 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 17:04:50,492 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:04:50,493 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:04:50,497 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:04:50,501 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:04:50,502 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 17:04:50,503 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:04:50,504 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:04:51,294 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 17:04:51,296 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 17:04:51,297 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 17:04:51,472 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 17:04:51,473 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:04:51,474 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:04:51,474 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:04:51,475 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:04:51,476 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 17:04:51,477 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 17:04:51,683 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 17:04:51,707 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 17:04:51,873 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 17:04:51,876 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 17:04:51,877 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 17:04:51,877 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 17:04:51,878 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 17:04:51,879 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 17:04:51,879 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:04:52,072 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 17:04:52,073 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 17:04:52,074 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 17:04:52,075 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 17:04:52,076 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 17:04:52,272 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 17:04:52,273 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 17:04:52,274 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 17:04:52,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:04:52,275 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:04:52,276 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:52,276 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 17:04:52,277 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 17:04:52,472 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 17:04:52,477 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 17:04:52,478 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 17:04:52,479 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 17:04:52,672 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 17:04:52,673 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:04:52,674 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 17:04:52,675 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 17:04:52,872 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 17:04:52,877 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 17:04:52,878 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 17:04:52,879 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:52,879 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:04:52,880 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:52,881 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:53,072 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:04:53,073 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:04:53,074 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:04:53,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 17:04:53,075 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 17:04:53,076 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 17:04:53,077 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 17:04:53,276 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:04:53,279 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 17:04:53,280 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 17:04:53,280 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 17:04:53,492 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 17:04:53,493 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 17:04:53,494 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:53,494 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:04:53,495 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:53,496 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:53,496 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:04:53,672 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:04:53,673 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:04:53,674 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 17:04:53,674 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 17:04:53,675 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 17:04:53,676 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 17:04:53,677 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:04:53,872 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 17:04:53,877 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 17:04:53,878 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 17:04:53,879 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 17:04:54,073 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 17:04:54,075 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:54,077 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:04:54,078 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:54,080 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:54,082 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 17:04:54,083 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 17:04:54,273 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:04:54,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 17:04:54,276 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 17:04:54,278 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 17:04:54,279 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 17:04:54,280 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:04:54,282 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 17:04:54,473 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 17:04:54,475 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 17:04:54,477 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 17:04:54,479 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 17:04:54,673 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:54,683 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:04:54,685 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:54,687 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:54,689 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 17:04:54,691 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 17:04:54,692 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:04:54,873 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 17:04:54,875 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 17:04:54,876 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 17:04:54,877 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 17:04:54,879 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:04:54,881 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 17:04:55,072 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 17:04:55,073 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 17:04:55,074 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 17:04:55,075 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 17:04:55,272 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:55,273 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:04:55,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:55,274 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:55,275 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:04:55,276 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:04:55,277 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:04:55,472 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 17:04:55,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 17:04:55,475 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 17:04:55,476 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 17:04:55,527 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 17:04:55,529 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 17:04:55,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:55,672 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:55,673 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:04:55,674 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 17:04:55,675 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 17:04:55,675 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 17:04:55,880 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 17:04:55,881 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 17:04:55,882 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 17:04:55,882 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:55,883 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:04:55,884 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:55,884 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:56,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 17:04:56,080 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 17:04:56,082 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 17:04:56,082 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:04:56,083 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:04:56,084 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 17:04:56,085 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:04:56,085 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 17:04:56,273 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 17:04:56,274 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 17:04:56,275 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 17:04:56,276 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 17:04:56,473 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:56,474 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:04:56,475 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:56,475 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:56,476 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 17:04:56,477 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 17:04:56,477 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:04:56,478 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 17:04:56,673 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 17:04:56,674 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 17:04:56,675 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:04:56,675 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 17:04:56,676 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 17:04:56,873 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 17:04:56,874 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 17:04:56,875 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 17:04:56,875 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:04:56,876 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:04:56,877 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:04:56,877 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:04:57,073 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 17:04:57,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 17:04:57,075 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:04:57,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 17:04:57,076 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 17:04:57,077 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 17:04:57,078 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 17:04:57,079 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:04:57,273 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:04:57,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:04:57,275 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:05:51,025 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:05:51,027 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 17:05:51,028 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:05:51,029 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:05:51,180 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:05:51,181 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 17:05:51,182 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:05:51,182 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:16:20,964 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 17:16:20,999 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 17:16:21,008 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 17:16:21,011 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-30 17:16:21,013 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-30 17:16:21,014 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 17:16:21,015 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 17:16:21,015 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-30 17:16:21,016 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-30 17:16:21,017 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 17:16:21,018 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:16:21,018 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 17:16:21,177 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 17:16:21,178 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:16:21,190 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 17:16:21,192 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 17:16:21,193 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 17:16:21,194 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 17:16:21,195 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 17:16:21,198 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 17:16:21,247 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 17:16:21,249 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 17:16:21,378 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 17:16:21,379 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 17:16:21,380 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 17:16:21,381 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 17:16:21,381 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 17:16:21,382 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 17:16:21,383 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 17:16:21,410 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 17:16:21,577 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 17:16:21,582 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 17:16:21,587 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 17:16:21,593 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 17:16:21,596 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 17:16:21,597 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 17:16:21,598 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 17:16:21,599 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 17:16:21,600 [Thread: 10      ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 17:16:21,777 [Thread: 10      ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 17:16:21,778 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 17:16:21,779 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 17:16:21,781 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 17:16:21,782 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 17:16:21,783 [Thread: 10      ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 17:16:21,783 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 17:16:21,799 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:16:21,978 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:16:21,980 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 17:16:21,982 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 17:16:21,984 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 17:16:21,985 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 17:16:21,986 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 17:16:21,988 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 17:16:22,178 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 17:16:22,179 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 17:16:22,181 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 17:16:22,182 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 17:16:22,185 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 17:16:22,378 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 17:16:22,379 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 17:16:22,380 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 17:16:22,381 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 17:16:22,382 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:16:22,382 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 17:16:22,392 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 17:16:22,577 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 17:16:22,578 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 17:16:22,578 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 17:16:22,579 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 17:16:22,580 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 17:16:22,777 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 17:16:22,778 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:16:22,778 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:16:22,779 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:16:22,779 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:16:22,780 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 17:16:22,977 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 17:16:22,978 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 17:16:22,978 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 17:16:22,979 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 17:16:22,979 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 17:16:22,980 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:16:22,980 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:16:23,177 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:16:23,178 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:16:23,181 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:16:23,182 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 17:16:23,377 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 17:16:23,378 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 17:16:23,378 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 17:16:23,379 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:16:23,379 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:16:23,380 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:16:23,380 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:16:23,577 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:16:23,578 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:16:23,578 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:16:23,579 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 17:16:23,777 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 17:16:23,778 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 17:16:23,778 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 17:16:23,779 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:16:23,780 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:16:23,780 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:16:23,781 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:16:23,781 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:16:23,977 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:16:23,978 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:16:23,979 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 17:16:23,980 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 17:16:24,177 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 17:16:24,178 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 17:16:24,210 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:16:24,211 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:16:24,211 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:16:24,212 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:16:24,213 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:16:24,377 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:16:24,378 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:16:24,379 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 17:16:24,379 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 17:16:24,577 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 17:16:24,578 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 17:16:24,580 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 17:16:24,581 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:16:24,582 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 17:16:24,588 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:16:24,589 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:16:24,594 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 17:16:24,778 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:16:24,780 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 17:16:24,782 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:16:24,784 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:16:24,785 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 17:16:24,787 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:16:24,978 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 17:16:24,979 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:16:24,980 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:16:24,981 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 17:16:24,982 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:16:24,983 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 17:16:24,983 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:16:25,178 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:16:25,180 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:16:25,182 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:16:25,183 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:16:25,185 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:16:25,186 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:16:25,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 17:16:25,379 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 17:16:25,380 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:16:25,382 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:16:25,384 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:16:25,385 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 17:16:25,387 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 17:16:25,389 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 17:16:25,580 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 17:16:25,581 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 17:16:25,583 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 17:16:25,584 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 17:16:25,585 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 17:16:25,777 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 17:16:25,782 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 17:16:25,787 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 17:16:25,793 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:16:25,977 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:16:25,979 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 17:16:25,980 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 17:16:25,983 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 17:16:26,177 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 17:16:26,182 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 17:16:26,187 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:16:26,193 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:16:26,198 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:16:26,203 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:16:26,208 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 17:16:26,377 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 17:16:26,378 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:16:26,378 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:16:26,379 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:16:26,383 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:16:26,384 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 17:16:26,384 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:16:26,385 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:16:27,210 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 17:16:27,216 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 17:16:27,387 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 17:16:27,388 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 17:16:27,389 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:16:27,390 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:16:27,390 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:16:27,391 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:16:27,587 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 17:16:27,597 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 17:16:27,603 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 17:16:27,608 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 17:16:27,614 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 17:16:27,621 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 17:16:27,787 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 17:16:27,791 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 17:16:27,793 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 17:16:27,794 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 17:16:27,987 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:16:27,988 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 17:16:27,988 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 17:16:27,989 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 17:16:27,990 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 17:16:28,187 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 17:16:28,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 17:16:28,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 17:16:28,189 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 17:16:28,189 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:16:28,190 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:16:28,190 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:28,387 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 17:16:28,388 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 17:16:28,389 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 17:16:28,396 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 17:16:28,397 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 17:16:28,587 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 17:16:28,592 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 17:16:28,597 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:16:28,602 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 17:16:28,787 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 17:16:28,792 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 17:16:28,816 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 17:16:28,821 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 17:16:28,826 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:28,827 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:16:28,987 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:28,988 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:28,989 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:16:28,990 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:16:28,991 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:16:28,991 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 17:16:28,992 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 17:16:28,992 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 17:16:29,187 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 17:16:29,192 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:16:29,197 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 17:16:29,387 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 17:16:29,388 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 17:16:29,389 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 17:16:29,390 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 17:16:29,390 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:29,391 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:16:29,392 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:29,587 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:29,588 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:16:29,589 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:16:29,590 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:16:29,590 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 17:16:29,591 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 17:16:29,592 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 17:16:29,787 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 17:16:29,788 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:16:29,788 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 17:16:29,789 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 17:16:29,988 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 17:16:29,988 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 17:16:29,989 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 17:16:29,990 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:29,990 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:16:29,991 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:29,991 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:30,189 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 17:16:30,190 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 17:16:30,192 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:16:30,193 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 17:16:30,194 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 17:16:30,196 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 17:16:30,197 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 17:16:30,389 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:16:30,390 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 17:16:30,399 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 17:16:30,401 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 17:16:30,588 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 17:16:30,590 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 17:16:30,592 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:30,594 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:16:30,595 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:30,597 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:30,598 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 17:16:30,789 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 17:16:30,790 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:16:30,792 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 17:16:30,794 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 17:16:30,795 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 17:16:30,797 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 17:16:30,799 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:16:30,988 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 17:16:30,990 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 17:16:30,993 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 17:16:30,995 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 17:16:31,187 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 17:16:31,188 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:31,188 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:16:31,189 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:31,189 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:31,190 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:16:31,387 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:16:31,388 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:16:31,388 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 17:16:31,389 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 17:16:31,390 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 17:16:31,391 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 17:16:31,466 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 17:16:31,468 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 17:16:31,587 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:31,588 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:31,589 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:16:31,590 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 17:16:31,590 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 17:16:31,787 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 17:16:31,792 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 17:16:31,797 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 17:16:31,802 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 17:16:31,807 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:31,816 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:16:31,821 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:31,987 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:31,988 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 17:16:31,989 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 17:16:31,990 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 17:16:31,991 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:16:31,991 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:16:31,992 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 17:16:31,993 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:16:32,187 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 17:16:32,192 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 17:16:32,197 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 17:16:32,202 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 17:16:32,387 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 17:16:32,392 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:32,397 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:16:32,411 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:32,416 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:32,421 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 17:16:32,426 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 17:16:32,427 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:16:32,587 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 17:16:32,588 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 17:16:32,589 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 17:16:32,589 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:16:32,590 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 17:16:32,787 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 17:16:32,792 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 17:16:32,797 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 17:16:32,802 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 17:16:32,807 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:16:32,812 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:16:32,987 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:16:32,991 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:16:32,992 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 17:16:32,993 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 17:16:32,994 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:16:32,994 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 17:16:32,995 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 17:16:32,997 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 17:16:33,188 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 17:16:33,193 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:16:33,198 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:16:33,202 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:16:33,207 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:22:19,231 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:22:19,232 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 17:22:19,233 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:22:19,234 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:22:21,956 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:22:21,957 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 17:22:21,957 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:22:21,958 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:23:31,583 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 17:23:31,616 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 17:23:31,625 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 17:23:31,628 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-30 17:23:31,629 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-30 17:23:31,630 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 17:23:31,631 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 17:23:31,632 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-30 17:23:31,632 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-30 17:23:31,633 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 17:23:31,634 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:23:31,634 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 17:23:31,635 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-30 17:23:31,636 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:23:31,830 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 17:23:31,833 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 17:23:31,834 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 17:23:31,835 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 17:23:31,836 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 17:23:31,838 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 17:23:31,843 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 17:23:31,865 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 17:23:31,866 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 17:23:32,019 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 17:23:32,020 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 17:23:32,021 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 17:23:32,022 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 17:23:32,023 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 17:23:32,024 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 17:23:32,038 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 17:23:32,039 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 17:23:32,040 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 17:23:32,219 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 17:23:32,220 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 17:23:32,221 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 17:23:32,221 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 17:23:32,222 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 17:23:32,223 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 17:23:32,223 [Thread: 10      ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 17:23:32,224 [Thread: 10      ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 17:23:32,420 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 17:23:32,420 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 17:23:32,422 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 17:23:32,423 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 17:23:32,424 [Thread: 10      ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 17:23:32,425 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 17:23:32,438 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:23:32,440 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:23:32,620 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 17:23:32,623 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 17:23:32,624 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 17:23:32,625 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 17:23:32,627 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 17:23:32,629 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 17:23:32,631 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 17:23:32,819 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 17:23:32,822 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 17:23:32,823 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 17:23:32,826 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 17:23:32,828 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 17:23:33,019 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 17:23:33,021 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 17:23:33,022 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 17:23:33,023 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:23:33,023 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 17:23:33,024 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 17:23:33,219 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 17:23:33,220 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 17:23:33,221 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 17:23:33,222 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 17:23:33,222 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 17:23:33,223 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 17:23:33,419 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:23:33,420 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:23:33,421 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:23:33,421 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:23:33,422 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 17:23:33,619 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 17:23:33,620 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 17:23:33,621 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 17:23:33,622 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 17:23:33,623 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 17:23:33,624 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:23:33,624 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:23:33,625 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:23:33,819 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:23:33,820 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:23:33,823 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 17:23:33,824 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 17:23:34,019 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 17:23:34,020 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 17:23:34,021 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:23:34,022 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:23:34,022 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:23:34,023 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:23:34,059 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:23:34,219 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:23:34,220 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:23:34,221 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 17:23:34,221 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 17:23:34,419 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 17:23:34,420 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 17:23:34,421 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:23:34,421 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:23:34,422 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:23:34,423 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:23:34,423 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:23:34,424 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:23:34,619 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:23:34,620 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 17:23:34,621 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 17:23:34,622 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 17:23:34,819 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 17:23:34,850 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:23:34,851 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:23:34,852 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:23:34,852 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:23:34,853 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:23:34,854 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:23:35,019 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:23:35,020 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 17:23:35,021 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 17:23:35,022 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 17:23:35,220 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 17:23:35,223 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 17:23:35,224 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:23:35,225 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 17:23:35,227 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:23:35,228 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:23:35,229 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 17:23:35,231 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:23:35,420 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 17:23:35,422 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:23:35,423 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:23:35,425 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 17:23:35,426 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:23:35,428 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 17:23:35,620 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:23:35,621 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:23:35,622 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 17:23:35,623 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:23:35,624 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 17:23:35,624 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:23:35,625 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:23:35,820 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:23:35,822 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:23:35,823 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:23:35,825 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:23:35,827 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:23:35,829 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 17:23:35,830 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 17:23:36,020 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:23:36,022 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:23:36,023 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:23:36,025 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 17:23:36,026 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 17:23:36,028 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 17:23:36,219 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 17:23:36,221 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 17:23:36,224 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 17:23:36,226 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 17:23:36,227 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 17:23:36,228 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 17:23:36,419 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 17:23:36,420 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 17:23:36,422 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:23:36,423 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:23:36,619 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 17:23:36,620 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 17:23:36,621 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 17:23:36,622 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 17:23:36,819 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 17:23:36,820 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:23:36,821 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:23:36,821 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:23:36,822 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:23:36,823 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 17:23:36,824 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 17:23:36,825 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:23:37,019 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:23:37,020 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:23:37,024 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:23:37,025 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 17:23:37,026 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:23:37,027 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:23:37,550 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 17:23:37,650 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 17:23:37,655 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 17:23:37,676 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 17:23:37,677 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:23:37,678 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:23:37,678 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:23:37,819 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:23:37,821 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 17:23:37,822 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 17:23:37,823 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 17:23:37,823 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 17:23:38,028 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 17:23:38,032 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 17:23:38,033 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 17:23:38,033 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 17:23:38,219 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 17:23:38,220 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 17:23:38,221 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:23:38,221 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 17:23:38,222 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 17:23:38,419 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 17:23:38,420 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 17:23:38,421 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 17:23:38,422 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 17:23:38,422 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 17:23:38,423 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 17:23:38,424 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:23:38,424 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:23:38,620 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:38,620 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 17:23:38,621 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 17:23:38,622 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 17:23:38,627 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 17:23:38,819 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 17:23:38,820 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 17:23:38,821 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 17:23:38,821 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:23:38,822 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 17:23:39,019 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 17:23:39,020 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 17:23:39,021 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 17:23:39,022 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 17:23:39,022 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:39,219 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:23:39,220 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:39,221 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:39,222 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:23:39,222 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:23:39,223 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:23:39,223 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 17:23:39,419 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 17:23:39,420 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 17:23:39,421 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 17:23:39,421 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:23:39,422 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 17:23:39,619 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 17:23:39,620 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 17:23:39,621 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 17:23:39,622 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 17:23:39,622 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:39,623 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:23:39,819 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:39,820 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:39,821 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:23:39,822 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:23:39,822 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:23:39,823 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 17:23:39,824 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 17:23:40,019 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 17:23:40,020 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 17:23:40,021 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:23:40,022 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 17:23:40,219 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 17:23:40,220 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 17:23:40,221 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 17:23:40,222 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 17:23:40,222 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:40,223 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:23:40,224 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:40,419 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:40,420 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 17:23:40,421 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 17:23:40,422 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:23:40,422 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 17:23:40,423 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 17:23:40,423 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 17:23:40,620 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 17:23:40,622 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:23:40,623 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 17:23:40,625 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 17:23:40,820 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 17:23:40,830 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 17:23:40,831 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 17:23:40,832 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:40,832 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:23:40,833 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:40,834 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:41,021 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 17:23:41,023 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 17:23:41,025 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:23:41,026 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 17:23:41,028 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 17:23:41,030 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 17:23:41,031 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 17:23:41,220 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:23:41,222 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 17:23:41,224 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 17:23:41,226 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 17:23:41,420 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 17:23:41,421 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 17:23:41,422 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:41,423 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:23:41,424 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:41,425 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:41,619 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:23:41,620 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:23:41,621 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:23:41,622 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 17:23:41,622 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 17:23:41,624 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 17:23:41,625 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 17:23:41,880 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 17:23:41,882 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 17:23:41,884 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:41,890 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:41,896 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:23:41,897 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 17:23:41,898 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 17:23:42,019 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 17:23:42,020 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 17:23:42,021 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 17:23:42,022 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 17:23:42,022 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:42,219 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:23:42,220 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:42,221 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:42,222 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 17:23:42,222 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 17:23:42,223 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 17:23:42,224 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:23:42,225 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:23:42,225 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 17:23:42,419 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:23:42,420 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 17:23:42,421 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 17:23:42,422 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 17:23:42,628 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 17:23:42,629 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 17:23:42,630 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:42,631 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:23:42,631 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:42,632 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:42,633 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 17:23:42,819 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 17:23:42,820 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:23:42,821 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 17:23:42,821 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 17:23:42,822 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 17:23:42,823 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:23:42,823 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 17:23:43,019 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 17:23:43,020 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 17:23:43,021 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 17:23:43,022 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 17:23:43,022 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:23:43,219 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:23:43,220 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:23:43,221 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:23:43,222 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 17:23:43,226 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 17:23:43,226 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:23:43,227 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 17:23:43,228 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 17:23:43,420 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 17:23:43,421 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 17:23:43,422 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:23:43,423 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:23:43,424 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:23:43,424 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:46:49,502 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:46:49,512 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 17:46:49,520 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:46:49,527 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:46:49,676 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:46:49,676 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 17:46:49,727 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:46:49,728 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:48:10,131 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 17:48:10,171 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 17:48:10,179 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 17:48:10,183 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 17:48:10,185 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 17:48:10,185 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 17:48:10,186 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 17:48:10,187 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 17:48:10,188 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 17:48:10,188 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 17:48:10,189 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:48:10,190 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 17:48:10,350 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 17:48:10,350 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:48:10,362 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 17:48:10,365 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 17:48:10,365 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 17:48:10,366 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 17:48:10,367 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 17:48:10,371 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 17:48:10,380 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 17:48:10,381 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 17:48:10,550 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 17:48:10,550 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 17:48:10,551 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 17:48:10,552 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 17:48:10,552 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 17:48:10,553 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 17:48:10,553 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 17:48:10,565 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 17:48:10,753 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 17:48:10,754 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 17:48:10,755 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 17:48:10,756 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 17:48:10,756 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 17:48:10,757 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 17:48:10,758 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 17:48:10,759 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 17:48:10,759 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 17:48:10,951 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 17:48:10,952 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 17:48:10,953 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 17:48:10,954 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 17:48:10,955 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 17:48:10,955 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 17:48:10,956 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 17:48:10,968 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:48:11,152 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:48:11,154 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 17:48:11,156 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 17:48:11,158 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 17:48:11,159 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 17:48:11,160 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 17:48:11,161 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 17:48:11,353 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 17:48:11,354 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 17:48:11,357 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 17:48:11,358 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 17:48:11,361 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 17:48:11,552 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 17:48:11,553 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 17:48:11,554 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 17:48:11,555 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 17:48:11,555 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:48:11,556 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 17:48:11,557 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 17:48:11,751 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 17:48:11,752 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 17:48:11,752 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 17:48:11,753 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 17:48:11,753 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 17:48:11,951 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 17:48:11,952 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:48:11,953 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:48:11,953 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:48:11,954 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:48:11,954 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 17:48:12,151 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 17:48:12,152 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 17:48:12,152 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 17:48:12,153 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 17:48:12,153 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 17:48:12,154 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:48:12,154 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:48:12,351 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:48:12,352 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:48:12,352 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:48:12,355 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 17:48:12,551 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 17:48:12,552 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 17:48:12,552 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 17:48:12,553 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:48:12,554 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:48:12,554 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:48:12,554 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:48:12,751 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:48:12,752 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:48:12,752 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:48:12,753 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 17:48:12,951 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 17:48:12,952 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 17:48:12,952 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 17:48:12,953 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:48:12,953 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:48:12,954 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:48:12,954 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:48:12,955 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:48:13,151 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:48:13,152 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:48:13,153 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 17:48:13,153 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 17:48:13,352 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 17:48:13,352 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 17:48:13,389 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:48:13,390 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:48:13,390 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:48:13,391 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:48:13,392 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:48:13,551 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:48:13,552 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:48:13,552 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 17:48:13,553 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 17:48:13,752 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 17:48:13,753 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 17:48:13,754 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 17:48:13,755 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:48:13,756 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 17:48:13,757 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:48:13,757 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:48:13,758 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 17:48:13,952 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:48:13,954 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 17:48:13,955 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:48:13,956 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:48:13,957 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 17:48:13,958 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:48:14,152 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 17:48:14,153 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:48:14,154 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:48:14,156 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 17:48:14,156 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:48:14,157 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 17:48:14,158 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:48:14,352 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:48:14,354 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:48:14,355 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:48:14,356 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:48:14,358 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:48:14,359 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:48:14,361 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 17:48:14,552 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 17:48:14,554 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:48:14,555 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:48:14,556 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:48:14,557 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 17:48:14,559 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 17:48:14,560 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 17:48:14,752 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 17:48:14,753 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 17:48:14,754 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 17:48:14,757 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 17:48:14,758 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 17:48:14,951 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 17:48:14,952 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 17:48:14,952 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 17:48:14,954 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:48:15,151 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:48:15,152 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 17:48:15,152 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 17:48:15,153 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 17:48:15,351 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 17:48:15,352 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 17:48:15,352 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:48:15,353 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:48:15,353 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:48:15,353 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:48:15,354 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 17:48:15,551 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 17:48:15,552 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:48:15,552 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:48:15,553 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:48:15,556 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:48:15,557 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 17:48:15,557 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:48:15,558 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:48:16,332 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 17:48:16,520 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 17:48:16,521 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 17:48:16,522 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 17:48:16,522 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:48:16,701 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:48:16,702 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:48:16,703 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:48:16,703 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 17:48:16,901 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 17:48:16,902 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 17:48:16,903 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 17:48:16,904 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 17:48:16,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 17:48:16,906 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 17:48:16,907 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 17:48:16,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 17:48:17,101 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 17:48:17,102 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:48:17,102 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 17:48:17,103 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 17:48:17,103 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 17:48:17,301 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 17:48:17,302 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 17:48:17,302 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 17:48:17,303 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 17:48:17,303 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 17:48:17,304 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:48:17,304 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:48:17,305 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:17,501 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 17:48:17,502 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 17:48:17,502 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 17:48:17,507 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 17:48:17,714 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 17:48:17,716 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 17:48:17,717 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 17:48:17,718 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:48:17,718 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 17:48:17,901 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 17:48:17,902 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 17:48:17,903 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 17:48:17,904 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 17:48:17,904 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:17,905 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:48:18,101 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:18,102 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:18,102 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:48:18,103 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:48:18,103 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:48:18,104 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 17:48:18,104 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 17:48:18,301 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 17:48:18,302 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 17:48:18,302 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:48:18,303 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 17:48:18,501 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 17:48:18,502 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 17:48:18,502 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 17:48:18,503 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 17:48:18,503 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:18,504 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:48:18,701 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:18,702 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:18,703 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:48:18,704 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:48:18,704 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:48:18,705 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 17:48:18,706 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 17:48:18,706 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 17:48:18,901 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 17:48:18,902 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:48:18,902 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 17:48:18,903 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 17:48:19,101 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 17:48:19,102 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 17:48:19,103 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 17:48:19,103 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:19,104 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:48:19,104 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:19,105 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:19,303 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 17:48:19,304 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 17:48:19,306 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:48:19,307 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 17:48:19,308 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 17:48:19,309 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 17:48:19,310 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 17:48:19,503 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:48:19,504 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 17:48:19,505 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 17:48:19,507 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 17:48:19,702 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 17:48:19,704 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 17:48:19,706 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:19,715 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:48:19,717 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:19,718 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:19,720 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 17:48:19,902 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 17:48:19,904 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:48:19,906 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 17:48:19,907 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 17:48:19,909 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 17:48:19,911 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 17:48:20,102 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:48:20,104 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 17:48:20,106 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 17:48:20,115 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 17:48:20,301 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 17:48:20,302 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 17:48:20,302 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:20,303 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:48:20,303 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:20,303 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:20,304 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:48:20,501 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:48:20,502 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:48:20,502 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 17:48:20,503 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 17:48:20,504 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 17:48:20,505 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 17:48:20,554 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 17:48:20,701 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 17:48:20,702 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:20,703 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:20,704 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:48:20,704 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 17:48:20,705 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 17:48:20,905 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 17:48:20,906 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 17:48:20,907 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 17:48:20,907 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 17:48:20,908 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:20,908 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:48:21,107 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:21,107 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:21,108 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 17:48:21,108 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 17:48:21,109 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 17:48:21,109 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:48:21,110 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:48:21,110 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 17:48:21,305 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:48:21,306 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 17:48:21,307 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 17:48:21,308 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 17:48:21,505 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 17:48:21,506 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 17:48:21,507 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:21,507 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:48:21,508 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:21,508 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:21,509 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 17:48:21,510 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 17:48:21,705 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:48:21,706 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 17:48:21,706 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 17:48:21,707 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 17:48:21,707 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:48:21,708 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 17:48:21,905 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 17:48:21,906 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 17:48:21,906 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 17:48:21,907 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 17:48:21,907 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:48:22,105 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:48:22,106 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:48:22,106 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:48:22,107 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 17:48:22,108 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 17:48:22,108 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:48:22,109 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 17:48:22,109 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 17:48:22,306 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 17:48:22,307 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 17:48:22,308 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:48:22,308 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:48:22,309 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:48:22,309 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:49:13,330 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:49:13,331 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 17:49:13,331 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:49:13,332 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:49:13,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:49:13,473 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 17:49:13,474 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:49:13,533 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:50:27,741 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-30 17:50:27,775 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-30 17:50:27,783 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-30 17:50:27,786 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-30 17:50:27,787 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-30 17:50:27,788 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-30 17:50:27,789 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-30 17:50:27,789 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-30 17:50:27,790 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-30 17:50:27,791 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 17:50:27,791 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:50:27,792 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-30 17:50:27,970 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-30 17:50:27,971 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-30 17:50:27,982 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-30 17:50:27,984 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-30 17:50:27,985 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-30 17:50:27,986 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-30 17:50:27,986 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-30 17:50:27,989 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_AlarmStatusChangeReport'.
2019-07-30 17:50:27,993 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-30 17:50:27,996 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-30 17:50:28,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-30 17:50:28,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-30 17:50:28,172 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-30 17:50:28,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-30 17:50:28,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-30 17:50:28,174 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-30 17:50:28,175 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-30 17:50:28,184 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-30 17:50:28,370 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-30 17:50:28,371 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-30 17:50:28,372 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-30 17:50:28,372 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-30 17:50:28,373 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-30 17:50:28,374 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-30 17:50:28,374 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-30 17:50:28,375 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-30 17:50:28,376 [Thread: 9       ] [DEBUG] -- Found 24 <object> elements defining objects.
2019-07-30 17:50:28,570 [Thread: 9       ] [DEBUG] -- Loaded 24 object definitions from location [spring-objects.xml]
2019-07-30 17:50:28,571 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-30 17:50:28,571 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-30 17:50:28,573 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-30 17:50:28,574 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-30 17:50:28,574 [Thread: 9       ] [DEBUG] -- 24 objects defined in application context [spring.root].
2019-07-30 17:50:28,575 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-30 17:50:28,586 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:50:28,771 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-30 17:50:28,773 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-30 17:50:28,775 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-30 17:50:28,777 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-30 17:50:28,778 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-30 17:50:28,779 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-30 17:50:28,781 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-30 17:50:28,971 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-30 17:50:28,972 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-30 17:50:28,974 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-30 17:50:28,975 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-30 17:50:28,978 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-30 17:50:29,171 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-30 17:50:29,172 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-30 17:50:29,173 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-30 17:50:29,174 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-30 17:50:29,175 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:50:29,175 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-30 17:50:29,176 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-30 17:50:29,370 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-30 17:50:29,371 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-30 17:50:29,371 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-30 17:50:29,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-30 17:50:29,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-30 17:50:29,571 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-30 17:50:29,573 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:50:29,575 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:50:29,576 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:50:29,578 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:50:29,579 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-30 17:50:29,771 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-30 17:50:29,773 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-30 17:50:29,775 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-30 17:50:29,777 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-30 17:50:29,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-30 17:50:29,780 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-30 17:50:29,781 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:50:29,971 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:50:29,972 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:50:29,972 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:50:29,976 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-30 17:50:30,171 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-30 17:50:30,174 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-30 17:50:30,175 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-30 17:50:30,177 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:50:30,178 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-30 17:50:30,179 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-30 17:50:30,181 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:50:30,371 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:50:30,373 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:50:30,375 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:50:30,376 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-30 17:50:30,570 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-30 17:50:30,571 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-30 17:50:30,571 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-30 17:50:30,572 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:50:30,573 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-30 17:50:30,573 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-30 17:50:30,574 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:50:30,574 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:50:30,770 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:50:30,771 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:50:30,771 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_AlarmStatusChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2AlarmStatusChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-30 17:50:30,772 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_AlarmStatusChangeReport'.
2019-07-30 17:50:30,971 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_AlarmStatusChangeReport' to allow for resolving potential circular references
2019-07-30 17:50:30,971 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_AlarmStatusChangeReport'
2019-07-30 17:50:31,018 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:50:31,018 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_AlarmStatusChangeReport'
2019-07-30 17:50:31,019 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_AlarmStatusChangeReport'
2019-07-30 17:50:31,020 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:50:31,020 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:50:31,170 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:50:31,171 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:50:31,172 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2019-07-30 17:50:31,173 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-30 17:50:31,370 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-30 17:50:31,371 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-30 17:50:31,373 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-30 17:50:31,373 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-30 17:50:31,374 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-30 17:50:31,375 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-30 17:50:31,376 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-30 17:50:31,377 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-30 17:50:31,570 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-30 17:50:31,571 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-30 17:50:31,572 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-30 17:50:31,572 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-30 17:50:31,573 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-30 17:50:31,574 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-30 17:50:31,770 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-30 17:50:31,777 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-30 17:50:31,778 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-30 17:50:31,779 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-30 17:50:31,780 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-30 17:50:31,780 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-30 17:50:31,781 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-30 17:50:31,970 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-30 17:50:31,971 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_AlarmStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:50:31,972 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_AlarmStatusChangeReport => canonical name L2_AlarmStatusChangeReport
2019-07-30 17:50:31,972 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_AlarmStatusChangeReport'.
2019-07-30 17:50:31,973 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_AlarmStatusChangeReport'.
2019-07-30 17:50:31,974 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_AlarmStatusChangeReport
2019-07-30 17:50:31,974 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-30 17:50:32,170 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-30 17:50:32,171 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-30 17:50:32,171 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:50:32,172 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:50:32,173 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-30 17:50:32,174 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-30 17:50:32,174 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-30 17:50:32,370 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-30 17:50:32,371 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-30 17:50:32,372 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-30 17:50:32,374 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-30 17:50:32,375 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-30 17:50:32,576 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-30 17:50:32,578 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-07-30 17:50:32,579 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-30 17:50:32,582 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:50:32,770 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:50:32,771 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-07-30 17:50:32,772 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-30 17:50:32,773 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-30 17:50:32,970 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-30 17:50:32,971 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-30 17:50:32,971 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:50:32,972 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:50:32,973 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:50:32,973 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:50:32,974 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-30 17:50:33,170 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-30 17:50:33,171 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-30 17:50:33,172 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:50:33,172 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:50:33,176 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-30 17:50:33,177 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-30 17:50:33,177 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-30 17:50:33,178 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-30 17:50:33,897 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-30 17:50:33,897 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-30 17:50:33,898 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-30 17:50:33,901 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-30 17:50:34,136 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:50:34,136 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:50:34,137 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:50:34,138 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:50:34,292 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-30 17:50:34,294 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-30 17:50:34,295 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-30 17:50:34,296 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-30 17:50:34,492 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-30 17:50:34,493 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-30 17:50:34,494 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-30 17:50:34,494 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-30 17:50:34,495 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-30 17:50:34,496 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-30 17:50:34,496 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:50:34,497 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-30 17:50:34,691 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 88].
2019-07-30 17:50:34,692 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-30 17:50:34,693 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-30 17:50:34,694 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-30 17:50:34,695 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-30 17:50:34,892 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-30 17:50:34,896 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-30 17:50:34,897 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:50:34,899 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-30 17:50:34,901 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:34,903 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-30 17:50:34,905 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-30 17:50:35,092 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-30 17:50:35,106 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-30 17:50:35,108 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-30 17:50:35,109 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-30 17:50:35,111 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-30 17:50:35,293 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:50:35,294 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-30 17:50:35,297 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-30 17:50:35,299 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-30 17:50:35,492 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-30 17:50:35,494 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-30 17:50:35,496 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:35,497 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:50:35,499 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:35,500 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:35,503 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:50:35,696 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-30 17:50:35,697 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-30 17:50:35,698 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-30 17:50:35,699 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-30 17:50:35,700 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-30 17:50:35,716 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-30 17:50:35,891 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:50:35,892 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 148].
2019-07-30 17:50:35,893 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-30 17:50:35,894 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-30 17:50:35,894 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-30 17:50:36,091 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-30 17:50:36,092 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:36,093 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:50:36,093 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:36,094 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:36,095 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:50:36,095 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-30 17:50:36,291 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-30 17:50:36,292 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-30 17:50:36,293 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-30 17:50:36,293 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-30 17:50:36,294 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-30 17:50:36,295 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:50:36,295 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-30 17:50:36,491 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-30 17:50:36,492 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-30 17:50:36,493 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-30 17:50:36,493 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-30 17:50:36,691 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:36,692 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:50:36,692 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:36,693 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:36,694 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-30 17:50:36,695 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-30 17:50:36,696 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-30 17:50:36,891 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-30 17:50:36,892 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-30 17:50:36,892 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-30 17:50:36,893 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-30 17:50:36,894 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:50:36,894 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 144].
2019-07-30 17:50:37,091 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-30 17:50:37,092 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-30 17:50:37,093 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-30 17:50:37,093 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-30 17:50:37,094 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:37,303 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:50:37,304 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:37,305 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:37,306 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-30 17:50:37,307 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-30 17:50:37,307 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-30 17:50:37,308 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-30 17:50:37,491 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-30 17:50:37,492 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-30 17:50:37,493 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-30 17:50:37,500 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:50:37,501 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-30 17:50:37,691 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-30 17:50:37,692 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-30 17:50:37,693 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-30 17:50:37,693 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-30 17:50:37,694 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:37,891 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-30 17:50:37,892 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:37,893 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:37,893 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:50:37,894 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-30 17:50:37,895 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-30 17:50:37,895 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-30 17:50:38,091 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-30 17:50:38,093 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-30 17:50:38,094 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-30 17:50:38,138 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-30 17:50:38,140 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-30 17:50:38,140 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:38,144 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:38,291 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:50:38,292 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-30 17:50:38,293 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-30 17:50:38,294 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-30 17:50:38,491 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-30 17:50:38,492 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-30 17:50:38,493 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-30 17:50:38,493 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:38,494 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:50:38,495 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:38,497 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:38,498 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-30 17:50:38,691 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-30 17:50:38,692 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-30 17:50:38,692 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:50:38,693 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:50:38,694 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-30 17:50:38,695 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:50:38,695 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-30 17:50:38,891 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-30 17:50:38,892 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-30 17:50:38,893 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-30 17:50:38,894 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-30 17:50:38,894 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:39,091 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:50:39,092 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:39,093 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:39,094 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-30 17:50:39,094 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-30 17:50:39,095 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-30 17:50:39,096 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-30 17:50:39,096 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-30 17:50:39,291 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-30 17:50:39,292 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:50:39,293 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-30 17:50:39,293 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-30 17:50:39,491 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-30 17:50:39,492 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-30 17:50:39,493 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-30 17:50:39,493 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-30 17:50:39,494 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-30 17:50:39,495 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-30 17:50:39,496 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-30 17:50:39,497 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-30 17:50:39,691 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-30 17:50:39,692 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-30 17:50:39,693 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-30 17:50:39,693 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-30 17:50:39,694 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-30 17:50:39,696 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-30 17:50:39,697 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-30 17:50:39,698 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-30 17:50:39,891 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-30 17:50:39,892 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-30 17:51:22,300 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-30 17:51:22,302 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-30 17:51:22,304 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-30 17:51:22,305 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-30 17:51:22,453 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-30 17:51:22,454 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-30 17:51:22,455 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-30 17:51:22,456 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
