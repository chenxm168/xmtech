2019-07-26 09:36:58,382 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 09:36:58,423 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 09:36:58,432 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 09:36:58,436 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-26 09:36:58,437 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-26 09:36:58,438 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 09:36:58,439 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 09:36:58,439 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-26 09:36:58,440 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-26 09:36:58,441 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 09:36:58,441 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 09:36:58,442 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 09:36:58,608 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 09:36:58,609 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 09:36:58,626 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 09:36:58,628 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 09:36:58,629 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 09:36:58,630 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 09:36:58,635 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 09:36:58,635 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 09:36:58,636 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 09:36:58,637 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 09:36:58,808 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 09:36:58,809 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 09:36:58,810 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 09:36:58,810 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 09:36:58,811 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 09:36:58,822 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 09:36:58,823 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 09:36:58,824 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 09:36:59,011 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 09:36:59,012 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 09:36:59,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 09:36:59,014 [Thread: 10      ] [DEBUG] -- Found 19 <object> elements defining objects.
2019-07-26 09:36:59,014 [Thread: 10      ] [DEBUG] -- Loaded 19 object definitions from location [spring-objects.xml]
2019-07-26 09:36:59,015 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 09:36:59,016 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 09:36:59,017 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 09:36:59,018 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 09:36:59,208 [Thread: 10      ] [DEBUG] -- 19 objects defined in application context [spring.root].
2019-07-26 09:36:59,216 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 09:36:59,235 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 09:36:59,237 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 09:36:59,238 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 09:36:59,241 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 09:36:59,243 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 09:36:59,409 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 09:36:59,410 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 09:36:59,412 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 09:36:59,414 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 09:36:59,415 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 09:36:59,610 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 09:36:59,611 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 09:36:59,613 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 09:36:59,615 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 09:36:59,615 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 09:36:59,616 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 09:36:59,617 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 09:36:59,808 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 09:36:59,809 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 09:36:59,809 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 09:36:59,810 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 09:36:59,811 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 09:37:00,009 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 09:37:00,009 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 09:37:00,010 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 09:37:00,010 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 09:37:00,011 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 09:37:00,011 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 09:37:00,012 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 09:37:00,013 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 09:37:00,208 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 09:37:00,209 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 09:37:00,210 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 09:37:00,210 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 09:37:00,211 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 09:37:00,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 09:37:00,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 09:37:00,409 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 09:37:00,410 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 09:37:00,410 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 09:37:00,411 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 09:37:00,412 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 09:37:00,609 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 09:37:00,610 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 09:37:00,612 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 09:37:00,614 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 09:37:00,809 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 09:37:00,812 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 09:37:00,814 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 09:37:00,815 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 09:37:00,816 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 09:37:00,818 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 09:37:00,822 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 09:37:01,009 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 09:37:01,012 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 09:37:01,014 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 09:37:01,029 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 09:37:01,030 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 09:37:01,208 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 09:37:01,209 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 09:37:01,209 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 09:37:01,211 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 09:37:01,212 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 09:37:01,212 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 09:37:01,213 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 09:37:01,408 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 09:37:01,409 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 09:37:01,409 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 09:37:01,410 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 09:37:01,410 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 09:37:01,411 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 09:37:01,437 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 09:37:01,608 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 09:37:01,609 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 09:37:01,609 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 09:37:01,610 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 09:37:01,611 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 09:37:01,611 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 09:37:01,612 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 09:37:01,808 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 09:37:01,809 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 09:37:01,810 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 09:37:01,811 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 09:37:01,811 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 09:37:02,008 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 09:37:02,009 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 09:37:02,010 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 09:37:02,012 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 09:37:02,208 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 09:37:02,209 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 09:37:02,210 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 09:37:02,211 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 09:37:02,408 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 09:37:02,409 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 09:37:02,409 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 09:37:02,410 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 09:37:02,410 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 09:37:02,411 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 09:37:02,412 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 09:37:02,412 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 09:37:02,608 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 09:37:02,609 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 09:37:02,609 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 09:37:02,613 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 09:37:02,613 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 09:37:02,614 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 09:37:02,614 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 09:37:03,305 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 09:37:03,319 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 09:37:03,320 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 09:37:03,321 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 09:37:03,499 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 09:37:03,501 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 09:37:03,505 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 09:37:03,506 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 09:37:03,699 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 09:37:03,703 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 09:37:03,704 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 09:37:03,705 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 09:37:03,899 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 09:37:03,900 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 09:37:03,901 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 09:37:03,902 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 09:37:03,902 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 09:37:03,903 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 09:37:03,905 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 09:37:03,906 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 09:37:04,098 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 09:37:04,103 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 09:37:04,104 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 09:37:04,106 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 09:37:04,107 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 09:37:04,298 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 09:37:04,299 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 09:37:04,300 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 09:37:04,300 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 09:37:04,301 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 09:37:04,302 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 09:37:04,303 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 09:37:04,498 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 09:37:04,508 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 09:37:04,518 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 09:37:04,519 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 09:37:04,520 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 09:37:04,698 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 09:37:04,699 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 09:37:04,700 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 09:37:04,701 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 09:37:04,898 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 09:37:04,903 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 09:37:04,904 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 09:37:04,904 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 09:37:04,905 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 09:37:04,906 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 09:37:05,100 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 09:37:05,102 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 09:37:05,103 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 09:37:05,105 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 09:37:05,107 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 09:37:05,108 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 09:37:05,110 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 09:37:05,300 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 09:37:05,301 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 09:37:05,303 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 09:37:05,309 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 09:37:05,499 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 09:37:05,503 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 09:37:05,504 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 09:37:05,505 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 09:37:05,507 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 09:37:05,512 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 09:37:05,513 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 09:37:05,698 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 09:37:05,699 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 09:37:05,700 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 09:37:05,700 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 09:37:05,702 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 09:37:05,703 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 09:37:05,762 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 09:37:05,768 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 09:37:05,898 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 09:37:05,899 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 09:37:05,899 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 09:37:05,900 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 09:37:05,901 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 106].
2019-07-26 09:37:06,098 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 09:37:06,099 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 09:37:06,100 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 09:37:06,101 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 09:37:06,101 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 09:37:06,102 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 09:37:06,103 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 09:37:06,298 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 09:37:06,299 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 09:37:06,300 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 09:37:06,301 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 09:37:06,302 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 09:37:06,302 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 09:37:06,303 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 09:37:06,304 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 09:37:06,498 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 09:37:06,499 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 09:37:06,500 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 09:37:06,501 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 09:37:06,698 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 09:37:06,699 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 09:37:06,700 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 09:37:06,700 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 09:37:06,701 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 09:37:06,702 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 09:37:06,703 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 09:37:06,704 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 09:37:06,898 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 09:37:06,899 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 09:37:06,900 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 09:37:06,900 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 09:37:06,905 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 09:37:07,098 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 09:37:07,103 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 09:37:07,104 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 09:37:07,105 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 09:37:07,106 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 09:37:07,106 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 09:37:07,298 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 09:37:07,299 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 09:37:07,300 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 09:37:07,301 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 09:37:07,301 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 09:37:07,302 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 09:37:07,303 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 09:37:07,304 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 09:37:07,502 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 09:37:07,504 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 09:37:07,504 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 09:37:07,505 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 09:37:07,506 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 09:38:47,212 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 09:38:47,213 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 09:38:47,214 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 09:38:47,214 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 09:41:37,343 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 09:41:37,344 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 09:41:37,345 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 09:41:37,346 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 09:42:54,424 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 09:42:54,425 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 09:42:54,426 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 09:42:54,427 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 09:42:54,633 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 09:42:54,640 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 09:42:54,641 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 09:42:54,641 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 09:42:55,020 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 09:42:55,024 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 09:42:55,221 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 09:42:55,425 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 09:43:50,947 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 09:43:50,948 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 09:43:50,948 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 09:43:50,949 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 09:44:01,196 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 09:44:01,197 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 09:44:01,198 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 09:44:01,198 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 09:44:40,676 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 09:44:40,677 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 09:44:40,678 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 09:44:40,679 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 09:44:40,804 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 09:44:40,807 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 09:44:40,807 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 09:44:40,808 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:21:06,621 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 10:21:06,654 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 10:21:06,665 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 10:21:06,669 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 10:21:06,671 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 10:21:06,672 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 10:21:06,673 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 10:21:06,674 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 10:21:06,674 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 10:21:06,675 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:21:06,676 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:21:06,676 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 10:21:06,829 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:21:06,830 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:21:06,842 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 10:21:06,844 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 10:21:06,845 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 10:21:06,846 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 10:21:06,850 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 10:21:06,851 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 10:21:06,852 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 10:21:06,853 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 10:21:07,029 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 10:21:07,030 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 10:21:07,031 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 10:21:07,031 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 10:21:07,032 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 10:21:07,043 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 10:21:07,044 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 10:21:07,045 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 10:21:07,233 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 10:21:07,238 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 10:21:07,239 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 10:21:07,240 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsControlLocalChangeReportAckHandler'.
2019-07-26 10:21:07,241 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 10:21:07,242 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 10:21:07,243 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 10:21:07,244 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 10:21:07,245 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 10:21:07,432 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 10:21:07,433 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 10:21:07,434 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 10:21:07,446 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:21:07,455 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:21:07,457 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 10:21:07,459 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 10:21:07,633 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 10:21:07,634 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 10:21:07,636 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 10:21:07,638 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 10:21:07,640 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 10:21:07,832 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 10:21:07,835 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 10:21:07,836 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 10:21:07,838 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 10:21:07,840 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 10:21:07,840 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 10:21:07,842 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 10:21:08,032 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 10:21:08,033 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:21:08,034 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 10:21:08,034 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 10:21:08,035 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 10:21:08,232 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 10:21:08,233 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 10:21:08,234 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 10:21:08,235 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 10:21:08,235 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 10:21:08,236 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:21:08,237 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:21:08,237 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:21:08,436 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:21:08,437 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 10:21:08,438 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 10:21:08,439 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 10:21:08,636 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 10:21:08,637 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 10:21:08,637 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 10:21:08,638 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:21:08,638 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:21:08,639 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:21:08,640 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:21:08,640 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:21:08,836 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 10:21:08,841 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 10:21:08,842 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 10:21:08,845 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 10:21:09,036 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:21:09,037 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:21:09,038 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:21:09,038 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:21:09,039 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:21:09,040 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:21:09,041 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:21:09,051 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 10:21:09,237 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 10:21:09,240 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 10:21:09,241 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 10:21:09,250 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 10:21:09,438 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:21:09,439 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 10:21:09,441 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:21:09,443 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:21:09,448 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 10:21:09,450 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:21:09,452 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 10:21:09,636 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:21:09,637 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:21:09,637 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 10:21:09,638 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:21:09,638 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 10:21:09,639 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:21:09,639 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:21:09,863 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 10:21:09,864 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 10:21:09,865 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:21:09,865 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:21:09,866 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:21:09,866 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:21:09,867 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 10:21:09,868 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 10:21:10,036 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 10:21:10,037 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 10:21:10,038 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 10:21:10,039 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 10:21:10,236 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 10:21:10,237 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 10:21:10,238 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 10:21:10,238 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 10:21:10,437 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:21:10,438 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:21:10,439 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 10:21:10,440 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 10:21:10,441 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 10:21:10,636 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 10:21:10,637 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 10:21:10,638 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:21:10,638 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:21:10,639 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:21:10,640 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:21:10,641 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 10:21:10,836 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 10:21:10,837 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:21:10,838 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:21:10,838 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:21:10,842 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:21:10,843 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 10:21:10,844 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:21:11,036 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:21:11,546 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 10:21:11,550 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 10:21:11,726 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 10:21:11,727 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 10:21:11,728 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:21:11,729 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:21:11,729 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:21:11,730 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:21:11,927 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 10:21:11,928 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 10:21:11,933 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 10:21:11,934 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 10:21:11,936 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 10:21:11,952 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 10:21:12,126 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 10:21:12,133 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 10:21:12,134 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:21:12,135 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:21:12,326 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:21:12,337 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 10:21:12,337 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 10:21:12,338 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 10:21:12,339 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 10:21:12,526 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 10:21:12,527 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 10:21:12,527 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 10:21:12,528 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 10:21:12,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:21:12,530 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:21:12,530 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:21:12,726 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 10:21:12,727 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 10:21:12,728 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 10:21:12,733 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 10:21:12,744 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 10:21:12,926 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsControlLocalChangeReportAckHandler'.
2019-07-26 10:21:12,927 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsControlLocalChangeReportAckHandler => canonical name secsControlLocalChangeReportAckHandler
2019-07-26 10:21:12,928 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:21:12,929 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsControlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 10:21:13,126 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsControlLocalChangeReportAckHandler'.
2019-07-26 10:21:13,127 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsControlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:21:13,128 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:21:13,129 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsControlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:21:13,129 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:21:13,130 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:21:13,326 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:21:13,327 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:21:13,328 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:21:13,329 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:21:13,330 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:21:13,330 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsControlLocalChangeReportAckHandler'.
2019-07-26 10:21:13,331 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsControlLocalChangeReportAckHandler
2019-07-26 10:21:13,526 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 10:21:13,527 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 10:21:13,528 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:21:13,537 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 10:21:13,727 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 10:21:13,729 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 10:21:13,730 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 10:21:13,733 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 10:21:13,734 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:21:13,736 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:21:13,927 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:21:13,929 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:21:13,931 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 10:21:13,932 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 10:21:13,934 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:21:13,935 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 10:21:13,937 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 10:21:13,938 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 10:21:14,127 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 10:21:14,129 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:21:14,131 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 10:21:14,327 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 10:21:14,329 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:21:14,330 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 10:21:14,332 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:21:14,333 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:21:14,335 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:21:14,526 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:21:14,528 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:21:14,529 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:21:14,531 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:21:14,532 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:21:14,533 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 10:21:14,534 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 10:21:14,536 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 10:21:14,726 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 10:21:14,799 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 10:21:14,801 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 10:21:14,802 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:21:14,805 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:21:14,807 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:21:14,808 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 10:21:14,809 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 10:21:14,926 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 10:21:14,927 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 10:21:14,928 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 10:21:14,928 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 10:21:15,126 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:21:15,127 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:21:15,128 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:21:15,128 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:21:15,129 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 10:21:15,130 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 10:21:15,131 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 10:21:15,132 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:21:15,326 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:21:15,327 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 10:21:15,328 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:21:15,329 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 10:21:15,526 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 10:21:15,527 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 10:21:15,528 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 10:21:15,529 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 10:21:15,529 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:21:15,530 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:21:15,531 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:21:15,532 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:21:15,726 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 10:21:15,727 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 10:21:15,728 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:21:15,729 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 10:21:15,730 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 10:21:15,731 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 10:21:15,731 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:21:15,926 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 10:21:15,927 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 10:21:15,928 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 10:21:15,929 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 10:21:16,126 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 10:21:16,127 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:21:16,128 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:21:16,129 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:21:16,129 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:21:16,130 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 10:21:16,131 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 10:21:16,131 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:21:16,328 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 10:21:16,329 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 10:21:16,330 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 10:21:16,333 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 10:21:16,334 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:21:16,335 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:21:16,335 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:21:16,336 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:21:32,705 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:21:32,707 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:21:32,709 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:21:32,710 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:21:32,892 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:21:32,893 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:21:32,894 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:21:32,895 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:21:33,292 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:21:33,293 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:21:33,492 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:21:33,494 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:21:34,748 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:21:34,749 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:21:34,750 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:21:34,750 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:21:59,598 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:21:59,600 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:21:59,602 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:21:59,604 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:21:59,812 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:21:59,999 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:00,001 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:00,003 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:00,609 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:00,612 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:00,612 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:00,620 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:00,834 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:00,844 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:00,845 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:00,845 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:01,623 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:01,626 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:01,626 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:01,627 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:01,845 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:01,846 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:01,848 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:01,848 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:02,637 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:02,640 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:02,640 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:02,641 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:02,855 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:02,856 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:02,858 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:02,863 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:03,651 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:03,654 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:03,655 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:03,655 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:03,869 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:03,872 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:03,877 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:03,878 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:04,665 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:04,668 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:04,668 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:04,669 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:04,878 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:04,887 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:04,888 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:04,889 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:05,679 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:05,682 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:05,682 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:05,683 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:05,896 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:05,898 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:05,900 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:05,901 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:06,693 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:06,696 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:06,698 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:06,699 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:06,912 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:06,914 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:06,915 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:06,916 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:07,707 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:07,709 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:07,710 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:07,711 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:07,922 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:07,923 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:07,925 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:07,926 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:08,727 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:08,729 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:08,731 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:08,732 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:08,933 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:08,935 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:08,936 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:09,136 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:27,891 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:27,892 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:27,897 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:27,897 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:35,472 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:35,485 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:35,490 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:35,490 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:35,690 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:35,690 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:35,892 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:35,894 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:22:46,799 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:22:46,807 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:22:46,807 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:22:46,808 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:22:47,023 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:22:47,025 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:22:47,030 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:22:47,031 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:23:11,952 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:23:11,960 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:23:11,961 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:23:11,961 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:23:12,176 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:23:12,368 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:23:12,370 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:23:12,372 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:23:20,450 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:23:20,451 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:23:20,452 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:23:20,452 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:23:20,599 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:23:20,600 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 10:23:20,600 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:23:20,601 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:23:31,522 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 10:23:31,552 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 10:23:31,562 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 10:23:31,566 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 10:23:31,568 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 10:23:31,568 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 10:23:31,569 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 10:23:31,570 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 10:23:31,570 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 10:23:31,571 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:23:31,572 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:23:31,572 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 10:23:31,751 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:23:31,755 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:23:31,767 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 10:23:31,771 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 10:23:31,772 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 10:23:31,772 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 10:23:31,778 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 10:23:31,779 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 10:23:31,780 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 10:23:31,781 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 10:23:31,966 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 10:23:31,968 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 10:23:31,968 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 10:23:31,969 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 10:23:31,970 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 10:23:31,985 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 10:23:31,986 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 10:23:31,987 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 10:23:32,151 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 10:23:32,152 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 10:23:32,158 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 10:23:32,159 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsControlLocalChangeReportAckHandler'.
2019-07-26 10:23:32,159 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 10:23:32,160 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 10:23:32,161 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 10:23:32,161 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 10:23:32,163 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 10:23:32,351 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 10:23:32,352 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 10:23:32,352 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 10:23:32,364 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:23:32,367 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:23:32,368 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 10:23:32,371 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 10:23:32,552 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 10:23:32,553 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 10:23:32,554 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 10:23:32,555 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 10:23:32,562 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 10:23:32,751 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 10:23:32,754 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 10:23:32,755 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 10:23:32,757 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 10:23:32,758 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 10:23:32,759 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 10:23:32,760 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 10:23:32,951 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 10:23:32,957 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:23:32,958 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 10:23:32,958 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 10:23:32,959 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 10:23:33,157 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 10:23:33,158 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 10:23:33,158 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 10:23:33,159 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 10:23:33,159 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 10:23:33,160 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:23:33,161 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:23:33,161 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:23:33,351 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:23:33,352 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 10:23:33,352 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 10:23:33,353 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 10:23:33,551 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 10:23:33,552 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 10:23:33,552 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 10:23:33,553 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:23:33,553 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:23:33,554 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:23:33,554 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:23:33,555 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:23:33,751 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 10:23:33,752 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 10:23:33,752 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 10:23:33,753 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 10:23:33,951 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:23:33,952 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:23:33,952 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:23:33,953 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:23:33,953 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:23:33,954 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:23:33,954 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:23:33,955 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 10:23:34,151 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 10:23:34,154 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 10:23:34,155 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 10:23:34,158 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 10:23:34,351 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:23:34,352 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 10:23:34,352 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:23:34,360 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:23:34,362 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 10:23:34,362 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:23:34,363 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 10:23:34,551 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:23:34,552 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:23:34,553 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 10:23:34,553 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:23:34,554 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 10:23:34,554 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:23:34,555 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:23:34,777 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 10:23:34,777 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 10:23:34,778 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:23:34,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:23:34,779 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:23:34,780 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:23:34,784 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 10:23:34,785 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 10:23:34,952 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 10:23:34,955 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 10:23:34,956 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 10:23:34,958 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 10:23:35,152 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 10:23:35,154 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 10:23:35,155 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 10:23:35,157 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 10:23:35,356 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:23:35,358 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:23:35,359 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 10:23:35,361 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 10:23:35,363 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 10:23:35,551 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 10:23:35,552 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 10:23:35,552 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:23:35,553 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:23:35,553 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:23:35,554 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:23:35,555 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 10:23:35,752 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 10:23:35,753 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:23:35,753 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:23:35,754 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:23:35,758 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:23:35,758 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 10:23:35,759 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:23:35,951 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:23:36,527 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 10:23:36,702 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 10:23:36,703 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 10:23:36,705 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 10:23:36,706 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:23:36,706 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:23:36,901 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:23:36,902 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:23:36,903 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 10:23:36,905 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 10:23:36,906 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 10:23:36,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 10:23:36,909 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 10:23:37,106 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 10:23:37,107 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 10:23:37,109 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 10:23:37,110 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:23:37,301 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:23:37,302 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:23:37,303 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 10:23:37,304 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 10:23:37,304 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 10:23:37,501 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 10:23:37,510 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 10:23:37,511 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 10:23:37,511 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 10:23:37,512 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 10:23:37,512 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:23:37,513 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:23:37,514 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:23:37,701 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 10:23:37,702 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 10:23:37,704 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 10:23:37,710 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 10:23:37,903 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 10:23:37,904 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsControlLocalChangeReportAckHandler'.
2019-07-26 10:23:37,905 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsControlLocalChangeReportAckHandler => canonical name secsControlLocalChangeReportAckHandler
2019-07-26 10:23:37,905 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:23:37,906 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsControlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 10:23:38,101 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsControlLocalChangeReportAckHandler'.
2019-07-26 10:23:38,102 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsControlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:23:38,103 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:23:38,104 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsControlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:23:38,104 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:23:38,301 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:23:38,302 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:23:38,303 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:23:38,304 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:23:38,304 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:23:38,305 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsControlLocalChangeReportAckHandler'
2019-07-26 10:23:38,306 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsControlLocalChangeReportAckHandler'.
2019-07-26 10:23:38,501 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsControlLocalChangeReportAckHandler
2019-07-26 10:23:38,502 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 10:23:38,503 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 10:23:38,503 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:23:38,505 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 10:23:38,701 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 10:23:38,709 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 10:23:38,710 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 10:23:38,711 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 10:23:38,711 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:23:38,712 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:23:38,901 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:23:38,902 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:23:38,903 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 10:23:38,904 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 10:23:38,904 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:23:38,905 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 10:23:38,906 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 10:23:39,101 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 10:23:39,102 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 10:23:39,103 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:23:39,103 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 10:23:39,301 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 10:23:39,302 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:23:39,303 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 10:23:39,303 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:23:39,304 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:23:39,305 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:23:39,502 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:23:39,503 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:23:39,504 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:23:39,505 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:23:39,506 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:23:39,507 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 10:23:39,508 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 10:23:39,705 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 10:23:39,707 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 10:23:39,796 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 10:23:39,799 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 10:23:39,800 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:23:39,803 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:23:39,803 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:23:39,804 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 10:23:39,902 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 10:23:39,904 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 10:23:39,906 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 10:23:39,908 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 10:23:40,102 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 10:23:40,104 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:23:40,105 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:23:40,107 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:23:40,108 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:23:40,110 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 10:23:40,112 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 10:23:40,113 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 10:23:40,302 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:23:40,303 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:23:40,304 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 10:23:40,305 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:23:40,307 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 10:23:40,502 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 10:23:40,503 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 10:23:40,504 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 10:23:40,504 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 10:23:40,505 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:23:40,505 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:23:40,506 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:23:40,701 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:23:40,702 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 10:23:40,703 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 10:23:40,703 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:23:40,704 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 10:23:40,704 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 10:23:40,705 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 10:23:40,901 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:23:40,902 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 10:23:40,902 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 10:23:40,903 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 10:23:40,904 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 10:23:41,101 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 10:23:41,102 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:23:41,102 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:23:41,103 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:23:41,104 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:23:41,105 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 10:23:41,106 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 10:23:41,301 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:23:41,302 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 10:23:41,302 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 10:23:41,303 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 10:23:41,305 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 10:23:41,305 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:23:41,306 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:23:41,307 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:23:41,501 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:23:58,023 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:23:58,025 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:23:58,027 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:23:58,028 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:23:58,208 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:23:58,212 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:23:58,213 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:23:58,214 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:23:58,602 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:23:58,604 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:23:58,806 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:23:58,807 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:24:04,119 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:24:04,120 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:24:04,120 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:24:04,121 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:24:04,334 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:24:04,336 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:24:04,337 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:24:04,339 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:24:26,090 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:24:26,091 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:24:26,092 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:24:26,092 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:24:26,248 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:24:26,249 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 10:24:26,249 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:24:26,250 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:25:27,433 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 10:25:27,466 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 10:25:27,477 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 10:25:27,480 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 10:25:27,482 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 10:25:27,482 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 10:25:27,483 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 10:25:27,484 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 10:25:27,484 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 10:25:27,485 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:25:27,486 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:25:27,486 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 10:25:27,643 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:25:27,644 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:25:27,655 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 10:25:27,658 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 10:25:27,658 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 10:25:27,659 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 10:25:27,664 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 10:25:27,667 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 10:25:27,668 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 10:25:27,669 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 10:25:27,848 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 10:25:27,850 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 10:25:27,851 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 10:25:27,851 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 10:25:27,852 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 10:25:27,864 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 10:25:27,865 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 10:25:27,866 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 10:25:28,045 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 10:25:28,046 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 10:25:28,047 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 10:25:28,047 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 10:25:28,048 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 10:25:28,055 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 10:25:28,061 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 10:25:28,062 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 10:25:28,064 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 10:25:28,245 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 10:25:28,246 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 10:25:28,254 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 10:25:28,266 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:25:28,269 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:25:28,271 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 10:25:28,273 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 10:25:28,446 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 10:25:28,448 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 10:25:28,449 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 10:25:28,451 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 10:25:28,454 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 10:25:28,645 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 10:25:28,648 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 10:25:28,649 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 10:25:28,651 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 10:25:28,653 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 10:25:28,653 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 10:25:28,655 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 10:25:28,845 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 10:25:28,846 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:25:28,847 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 10:25:28,847 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 10:25:28,848 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 10:25:29,052 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 10:25:29,053 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 10:25:29,053 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 10:25:29,054 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 10:25:29,054 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 10:25:29,055 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:25:29,055 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:25:29,056 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:25:29,245 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:25:29,246 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 10:25:29,246 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 10:25:29,247 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 10:25:29,445 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 10:25:29,446 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 10:25:29,446 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 10:25:29,447 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:25:29,447 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:25:29,448 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:25:29,448 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:25:29,449 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:25:29,645 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 10:25:29,646 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 10:25:29,646 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 10:25:29,647 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 10:25:29,845 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:25:29,846 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:25:29,846 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:25:29,847 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:25:29,847 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:25:29,848 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:25:29,848 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:25:29,849 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 10:25:30,045 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 10:25:30,049 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 10:25:30,050 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 10:25:30,053 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 10:25:30,251 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:25:30,252 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 10:25:30,252 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:25:30,253 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:25:30,255 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 10:25:30,255 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:25:30,256 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 10:25:30,468 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:25:30,474 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:25:30,475 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 10:25:30,476 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:25:30,476 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 10:25:30,477 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:25:30,477 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:25:30,676 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 10:25:30,677 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 10:25:30,677 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:25:30,678 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:25:30,678 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:25:30,679 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:25:30,679 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 10:25:30,680 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 10:25:30,850 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 10:25:30,851 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 10:25:30,852 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 10:25:30,852 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 10:25:31,050 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 10:25:31,051 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 10:25:31,051 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 10:25:31,052 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 10:25:31,251 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:25:31,252 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:25:31,253 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 10:25:31,253 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 10:25:31,254 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 10:25:31,451 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 10:25:31,452 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 10:25:31,453 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:25:31,454 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:25:31,455 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:25:31,456 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:25:31,457 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 10:25:31,652 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 10:25:31,653 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:25:31,655 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:25:31,656 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:25:31,665 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:25:31,666 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 10:25:31,667 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:25:31,851 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:25:32,413 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 10:25:32,414 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 10:25:32,415 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 10:25:32,416 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 10:25:32,611 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:25:32,612 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:25:32,613 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:25:32,613 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:25:32,801 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 10:25:32,803 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 10:25:32,803 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 10:25:32,804 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 10:25:33,002 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 10:25:33,002 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 10:25:33,003 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 10:25:33,004 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 10:25:33,004 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:25:33,005 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:25:33,006 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:25:33,006 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 10:25:33,200 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 10:25:33,201 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 10:25:33,201 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 10:25:33,202 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 10:25:33,203 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 10:25:33,400 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 10:25:33,401 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 10:25:33,401 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:25:33,402 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:25:33,402 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:25:33,403 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 10:25:33,403 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 10:25:33,600 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 10:25:33,605 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 10:25:33,606 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 10:25:33,606 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 10:25:33,607 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 10:25:33,815 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:25:33,816 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 10:25:33,817 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 10:25:33,817 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 10:25:34,001 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 10:25:34,002 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 10:25:34,002 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:25:34,003 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:25:34,004 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:25:34,004 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:25:34,005 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:25:34,201 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:25:34,202 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:25:34,202 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 10:25:34,203 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 10:25:34,203 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 10:25:34,204 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 10:25:34,401 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:25:34,402 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 10:25:34,402 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 10:25:34,404 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 10:25:34,405 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 10:25:34,601 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 10:25:34,602 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:25:34,602 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:25:34,603 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:25:34,603 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:25:34,604 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 10:25:34,605 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 10:25:34,801 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:25:34,802 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 10:25:34,802 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 10:25:34,803 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 10:25:34,803 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 10:25:34,804 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:25:35,008 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 10:25:35,009 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 10:25:35,010 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:25:35,011 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 10:25:35,201 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:25:35,202 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:25:35,202 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:25:35,203 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:25:35,203 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:25:35,204 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:25:35,204 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:25:35,401 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:25:35,402 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 10:25:35,402 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 10:25:35,404 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 10:25:35,405 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 10:25:35,468 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 10:25:35,469 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 10:25:35,601 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:25:35,602 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:25:35,603 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:25:35,603 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 10:25:35,604 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 10:25:35,801 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 10:25:35,802 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 10:25:35,802 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 10:25:35,803 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 10:25:35,804 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:25:35,804 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:25:35,805 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:25:36,003 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:25:36,005 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 10:25:36,007 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 10:25:36,008 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 10:25:36,010 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:25:36,012 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:25:36,013 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 10:25:36,015 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:25:36,202 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 10:25:36,203 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 10:25:36,205 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 10:25:36,206 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 10:25:36,207 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 10:25:36,402 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:25:36,404 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:25:36,405 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:25:36,407 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:25:36,408 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 10:25:36,410 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 10:25:36,411 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:25:36,601 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 10:25:36,602 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 10:25:36,603 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 10:25:36,603 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:25:36,604 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 10:25:36,801 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 10:25:36,802 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 10:25:36,802 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 10:25:36,803 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 10:25:36,804 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:25:36,804 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:25:36,805 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:25:37,002 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:25:37,004 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 10:25:37,005 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 10:25:37,005 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:25:37,006 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 10:25:37,006 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 10:25:37,007 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 10:25:37,202 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 10:25:37,203 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:25:37,203 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:25:37,204 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:25:37,204 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:25:41,724 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:25:41,724 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:25:41,725 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:25:41,725 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:26:54,521 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:26:54,521 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:26:54,522 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:26:54,523 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:26:54,721 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:26:54,722 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:26:54,723 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:26:54,724 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:26:55,116 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:26:55,118 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:26:55,316 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:26:55,317 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:27:33,275 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:27:33,277 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:27:33,277 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:27:33,278 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:27:33,411 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:27:33,411 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 10:27:33,412 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:27:33,413 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:27:44,153 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 10:27:44,183 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 10:27:44,191 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 10:27:44,194 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 10:27:44,196 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 10:27:44,196 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 10:27:44,197 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 10:27:44,198 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 10:27:44,199 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 10:27:44,199 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:27:44,200 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:27:44,201 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 10:27:44,373 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:27:44,386 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:27:44,420 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 10:27:44,422 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 10:27:44,423 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 10:27:44,424 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 10:27:44,430 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 10:27:44,433 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 10:27:44,437 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 10:27:44,439 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 10:27:44,572 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 10:27:44,573 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 10:27:44,574 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 10:27:44,574 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 10:27:44,575 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 10:27:44,586 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 10:27:44,587 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 10:27:44,587 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 10:27:44,773 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 10:27:44,774 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 10:27:44,774 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 10:27:44,775 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 10:27:44,776 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 10:27:44,776 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 10:27:44,777 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 10:27:44,778 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 10:27:44,779 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 10:27:45,004 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 10:27:45,012 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 10:27:45,013 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 10:27:45,025 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:27:45,027 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:27:45,029 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 10:27:45,032 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 10:27:45,174 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 10:27:45,174 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 10:27:45,178 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 10:27:45,179 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 10:27:45,181 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 10:27:45,372 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 10:27:45,375 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 10:27:45,376 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 10:27:45,378 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 10:27:45,380 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 10:27:45,380 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 10:27:45,382 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 10:27:45,573 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 10:27:45,575 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:27:45,576 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 10:27:45,576 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 10:27:45,577 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 10:27:45,772 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 10:27:45,773 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 10:27:45,773 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 10:27:45,774 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 10:27:45,774 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 10:27:45,775 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:27:45,775 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:27:45,776 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:27:45,977 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:27:45,981 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 10:27:45,982 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 10:27:45,983 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 10:27:46,172 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 10:27:46,173 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 10:27:46,173 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 10:27:46,174 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:27:46,176 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:27:46,177 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:27:46,177 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:27:46,178 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:27:46,372 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 10:27:46,373 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 10:27:46,374 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 10:27:46,374 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 10:27:46,572 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:27:46,581 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:27:46,582 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:27:46,583 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:27:46,583 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:27:46,584 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:27:46,585 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:27:46,585 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 10:27:46,775 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 10:27:46,776 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 10:27:46,777 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 10:27:46,780 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 10:27:46,972 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:27:46,973 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 10:27:46,973 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:27:46,974 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:27:46,976 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 10:27:46,976 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:27:46,977 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 10:27:47,172 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:27:47,173 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:27:47,173 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 10:27:47,174 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:27:47,174 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 10:27:47,175 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:27:47,175 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:27:47,397 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 10:27:47,398 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 10:27:47,399 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:27:47,399 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:27:47,400 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:27:47,400 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:27:47,401 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 10:27:47,401 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 10:27:47,572 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 10:27:47,573 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 10:27:47,574 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 10:27:47,574 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 10:27:47,772 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 10:27:47,773 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 10:27:47,774 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 10:27:47,775 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 10:27:47,973 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:27:47,974 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:27:47,975 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 10:27:47,976 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 10:27:47,977 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 10:27:48,172 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 10:27:48,173 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 10:27:48,174 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:27:48,175 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:27:48,176 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:27:48,177 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:27:48,177 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 10:27:48,372 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 10:27:48,373 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:27:48,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:27:48,374 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:27:48,378 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:27:48,378 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 10:27:48,379 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:27:48,573 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:27:49,127 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 10:27:49,130 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 10:27:49,132 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 10:27:49,132 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 10:27:49,344 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:27:49,346 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:27:49,347 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:27:49,348 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:27:49,522 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 10:27:49,526 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 10:27:49,526 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 10:27:49,527 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 10:27:49,723 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 10:27:49,724 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 10:27:49,725 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 10:27:49,725 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 10:27:49,726 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:27:49,726 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:27:49,727 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:27:49,727 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 10:27:49,922 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 10:27:49,923 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 10:27:49,924 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 10:27:49,924 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 10:27:49,925 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 10:27:50,122 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 10:27:50,123 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 10:27:50,123 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:27:50,124 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:27:50,125 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:27:50,125 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 10:27:50,126 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 10:27:50,322 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 10:27:50,327 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 10:27:50,329 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 10:27:50,330 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 10:27:50,331 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 10:27:50,522 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:27:50,523 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 10:27:50,523 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 10:27:50,524 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 10:27:50,722 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 10:27:50,732 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 10:27:50,732 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:27:50,733 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:27:50,734 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:27:50,735 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:27:50,736 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:27:50,922 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:27:50,923 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:27:50,923 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 10:27:50,924 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 10:27:50,924 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 10:27:50,925 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 10:27:51,122 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:27:51,123 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 10:27:51,125 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 10:27:51,126 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 10:27:51,126 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 10:27:51,322 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 10:27:51,323 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:27:51,323 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:27:51,324 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:27:51,324 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:27:51,325 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 10:27:51,325 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 10:27:51,522 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:27:51,523 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 10:27:51,523 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 10:27:51,524 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 10:27:51,524 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 10:27:51,525 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:27:51,722 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 10:27:51,723 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 10:27:51,724 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:27:51,724 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 10:27:51,922 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:27:51,923 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:27:51,923 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:27:51,924 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:27:51,924 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:27:51,927 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:27:51,928 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:27:52,122 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:27:52,123 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 10:27:52,123 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 10:27:52,125 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 10:27:52,125 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 10:27:52,194 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 10:27:52,202 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 10:27:52,322 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:27:52,323 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:27:52,323 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:27:52,324 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 10:27:52,325 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 10:27:52,522 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 10:27:52,523 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 10:27:52,524 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 10:27:52,524 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 10:27:52,525 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:27:52,525 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:27:52,526 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:27:52,722 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:27:52,723 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 10:27:52,724 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 10:27:52,724 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 10:27:52,725 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:27:52,725 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:27:52,726 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 10:27:52,726 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:27:52,922 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 10:27:52,923 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 10:27:52,924 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 10:27:52,924 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 10:27:52,925 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 10:27:53,122 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:27:53,123 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:27:53,123 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:27:53,124 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:27:53,124 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 10:27:53,125 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 10:27:53,126 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:27:53,322 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 10:27:53,323 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 10:27:53,324 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 10:27:53,324 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:27:53,325 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 10:27:53,523 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 10:27:53,525 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 10:27:53,527 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 10:27:53,528 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 10:27:53,530 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:27:53,531 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:27:53,533 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:27:53,723 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:27:53,726 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 10:27:53,728 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 10:27:53,729 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:27:53,731 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 10:27:53,732 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 10:27:53,735 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 10:27:53,923 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 10:27:53,924 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:27:53,925 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:27:53,926 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:27:53,927 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:27:56,603 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:27:56,604 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:27:56,605 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:27:56,605 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:27:56,752 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:27:56,753 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 10:27:56,753 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:27:56,754 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:28:10,596 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 10:28:10,634 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 10:28:10,641 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 10:28:10,644 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-26 10:28:10,646 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-26 10:28:10,647 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 10:28:10,647 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 10:28:10,648 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-26 10:28:10,649 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-26 10:28:10,649 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 10:28:10,650 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:28:10,650 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 10:28:10,813 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 10:28:10,814 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:28:10,831 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 10:28:10,833 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 10:28:10,834 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 10:28:10,834 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 10:28:10,842 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 10:28:10,843 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 10:28:10,845 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 10:28:10,846 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 10:28:11,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 10:28:11,014 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 10:28:11,015 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 10:28:11,016 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 10:28:11,017 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 10:28:11,027 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 10:28:11,028 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 10:28:11,029 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 10:28:11,213 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 10:28:11,214 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 10:28:11,215 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 10:28:11,216 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 10:28:11,217 [Thread: 10      ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 10:28:11,217 [Thread: 10      ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 10:28:11,218 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 10:28:11,219 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 10:28:11,220 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 10:28:11,413 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 10:28:11,414 [Thread: 10      ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 10:28:11,415 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 10:28:11,426 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:28:11,428 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:28:11,430 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 10:28:11,432 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 10:28:11,619 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 10:28:11,630 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 10:28:11,632 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 10:28:11,634 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 10:28:11,635 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 10:28:11,818 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 10:28:11,821 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 10:28:11,822 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 10:28:11,825 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 10:28:11,826 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 10:28:11,827 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 10:28:11,828 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 10:28:12,020 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 10:28:12,021 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:28:12,022 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 10:28:12,027 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 10:28:12,028 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 10:28:12,220 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 10:28:12,221 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 10:28:12,223 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 10:28:12,224 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 10:28:12,226 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 10:28:12,228 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:28:12,229 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:28:12,231 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:28:12,419 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:28:12,421 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 10:28:12,423 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 10:28:12,425 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 10:28:12,618 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 10:28:12,619 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 10:28:12,620 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 10:28:12,620 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:28:12,621 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:28:12,622 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:28:12,622 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:28:12,623 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:28:12,819 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 10:28:12,819 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 10:28:12,820 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 10:28:12,821 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 10:28:13,018 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:28:13,019 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:28:13,020 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:28:13,020 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:28:13,021 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:28:13,021 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:28:13,022 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:28:13,023 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 10:28:13,221 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 10:28:13,231 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 10:28:13,232 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 10:28:13,235 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 10:28:13,418 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:28:13,419 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 10:28:13,420 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:28:13,420 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:28:13,422 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 10:28:13,423 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:28:13,424 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 10:28:13,618 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:28:13,619 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:28:13,620 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 10:28:13,620 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:28:13,621 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 10:28:13,622 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:28:13,622 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:28:13,844 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 10:28:13,845 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 10:28:13,845 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:28:13,846 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:28:13,849 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:28:13,855 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:28:13,856 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 10:28:13,857 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 10:28:14,018 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 10:28:14,019 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 10:28:14,020 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 10:28:14,020 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 10:28:14,218 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 10:28:14,219 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 10:28:14,219 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 10:28:14,220 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 10:28:14,420 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:28:14,420 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:28:14,421 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 10:28:14,422 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 10:28:14,423 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 10:28:14,618 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 10:28:14,619 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 10:28:14,619 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:28:14,620 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:28:14,645 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:28:14,646 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:28:14,647 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 10:28:14,818 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 10:28:14,819 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:28:14,819 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:28:14,820 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:28:14,825 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:28:14,826 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 10:28:14,826 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:28:15,018 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:28:15,535 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 10:28:15,763 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 10:28:15,908 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 10:28:15,909 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 10:28:15,911 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:28:15,912 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:28:15,912 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:28:15,913 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:28:15,914 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 10:28:16,108 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 10:28:16,109 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 10:28:16,110 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 10:28:16,112 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 10:28:16,113 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 10:28:16,113 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 10:28:16,114 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 10:28:16,115 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:28:16,308 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:28:16,309 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:28:16,309 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 10:28:16,310 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 10:28:16,311 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 10:28:16,509 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 10:28:16,510 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 10:28:16,511 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 10:28:16,511 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 10:28:16,512 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 10:28:16,512 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:28:16,513 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:28:16,514 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:28:16,709 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 10:28:16,712 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 10:28:16,714 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 10:28:16,726 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 10:28:16,909 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 10:28:16,911 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 10:28:16,913 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 10:28:16,914 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:28:16,916 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 10:28:17,108 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 10:28:17,109 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 10:28:17,110 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 10:28:17,111 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 10:28:17,112 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:28:17,112 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:28:17,314 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:28:17,315 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:28:17,316 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:28:17,317 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:28:17,317 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:28:17,318 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 10:28:17,319 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 10:28:17,513 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 10:28:17,518 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 10:28:17,519 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:28:17,519 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 10:28:17,713 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 10:28:17,714 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 10:28:17,715 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 10:28:17,716 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 10:28:17,716 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:28:17,717 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:28:17,913 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:28:17,914 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:28:17,915 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 10:28:17,916 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 10:28:17,916 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:28:17,917 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 10:28:17,918 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 10:28:17,918 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 10:28:18,113 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 10:28:18,114 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:28:18,115 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 10:28:18,313 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 10:28:18,318 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:28:18,319 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 10:28:18,320 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:28:18,320 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:28:18,321 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:28:18,322 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:28:18,516 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:28:18,517 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:28:18,518 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:28:18,518 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:28:18,519 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 10:28:18,520 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 10:28:18,521 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 10:28:18,716 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 10:28:18,772 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 10:28:18,790 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 10:28:18,792 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:28:18,795 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:28:18,796 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:28:18,797 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 10:28:18,798 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 10:28:18,916 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 10:28:18,917 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 10:28:18,918 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 10:28:18,918 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 10:28:19,116 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:28:19,117 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:28:19,118 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:28:19,118 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:28:19,121 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 10:28:19,122 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 10:28:19,123 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 10:28:19,123 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:28:19,316 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:28:19,317 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 10:28:19,318 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:28:19,319 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 10:28:19,319 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 10:28:19,516 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 10:28:19,517 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 10:28:19,518 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 10:28:19,518 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:28:19,519 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:28:19,520 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:28:19,520 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:28:19,720 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 10:28:19,721 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 10:28:19,722 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:28:19,722 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 10:28:19,723 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 10:28:19,724 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 10:28:19,725 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:28:19,919 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 10:28:19,920 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 10:28:19,921 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 10:28:19,921 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 10:28:19,922 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 10:28:20,119 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:28:20,120 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:28:20,122 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:28:20,123 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:28:20,124 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 10:28:20,125 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 10:28:20,125 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:28:20,319 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 10:28:20,320 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 10:28:20,321 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 10:28:20,322 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 10:28:20,323 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:28:20,324 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:28:20,325 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:28:20,325 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:29:41,742 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:29:41,743 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:29:41,744 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:29:41,744 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:29:41,932 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:29:41,933 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:29:41,934 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:29:41,934 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:29:42,332 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:29:42,334 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:29:42,532 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:29:42,533 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:30:25,454 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:30:25,455 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:30:25,456 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:30:25,456 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:30:25,592 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:30:25,592 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 10:30:25,593 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:30:25,593 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:37:07,439 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 10:37:07,473 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 10:37:07,482 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 10:37:07,486 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 10:37:07,487 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 10:37:07,488 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 10:37:07,489 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 10:37:07,489 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 10:37:07,490 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 10:37:07,491 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:37:07,492 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:37:07,492 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 10:37:07,651 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:37:07,652 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:37:07,663 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 10:37:07,665 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 10:37:07,666 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 10:37:07,667 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 10:37:07,672 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 10:37:07,673 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 10:37:07,674 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 10:37:07,674 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 10:37:07,851 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 10:37:07,852 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 10:37:07,853 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 10:37:07,853 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 10:37:07,854 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 10:37:07,864 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 10:37:07,867 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 10:37:07,868 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 10:37:08,051 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 10:37:08,052 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 10:37:08,053 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 10:37:08,053 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 10:37:08,054 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 10:37:08,055 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 10:37:08,055 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 10:37:08,061 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 10:37:08,063 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 10:37:08,251 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 10:37:08,252 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 10:37:08,252 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 10:37:08,264 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:37:08,273 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:37:08,275 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 10:37:08,277 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 10:37:08,452 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 10:37:08,453 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 10:37:08,454 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 10:37:08,456 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 10:37:08,457 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 10:37:08,666 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 10:37:08,670 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 10:37:08,671 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 10:37:08,674 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 10:37:08,678 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 10:37:08,705 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 10:37:08,707 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 10:37:08,851 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 10:37:08,852 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:37:08,853 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 10:37:08,853 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 10:37:08,854 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 10:37:09,051 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 10:37:09,052 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 10:37:09,053 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 10:37:09,053 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 10:37:09,054 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 10:37:09,054 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:37:09,055 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:37:09,055 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:37:09,251 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:37:09,252 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 10:37:09,252 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 10:37:09,262 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 10:37:09,451 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 10:37:09,452 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 10:37:09,453 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 10:37:09,453 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:37:09,454 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:37:09,454 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:37:09,455 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:37:09,455 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:37:09,652 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 10:37:09,654 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 10:37:09,655 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 10:37:09,657 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 10:37:09,852 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:37:09,854 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:37:09,856 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:37:09,857 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:37:09,859 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:37:09,861 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:37:09,863 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:37:09,865 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 10:37:10,051 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 10:37:10,055 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 10:37:10,055 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 10:37:10,059 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 10:37:10,251 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:37:10,252 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 10:37:10,252 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:37:10,253 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:37:10,255 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 10:37:10,255 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:37:10,256 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 10:37:10,451 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:37:10,452 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:37:10,452 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 10:37:10,453 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:37:10,453 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 10:37:10,454 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:37:10,454 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:37:10,677 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 10:37:10,680 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 10:37:10,680 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:37:10,681 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:37:10,682 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:37:10,682 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:37:10,683 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 10:37:10,683 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 10:37:10,851 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 10:37:10,852 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 10:37:10,853 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 10:37:10,853 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 10:37:11,051 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 10:37:11,052 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 10:37:11,052 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 10:37:11,053 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 10:37:11,253 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:37:11,253 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:37:11,254 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 10:37:11,255 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 10:37:11,255 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 10:37:11,451 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 10:37:11,452 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 10:37:11,452 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:37:11,453 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:37:11,453 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:37:11,454 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:37:11,455 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 10:37:11,651 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 10:37:11,652 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:37:11,652 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:37:11,653 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:37:11,656 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:37:11,657 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 10:37:11,658 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:37:11,851 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:37:12,361 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 10:37:12,362 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 10:37:12,364 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 10:37:12,577 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 10:37:12,749 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:37:12,749 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:37:12,750 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:37:12,750 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:37:12,751 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 10:37:12,752 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 10:37:12,752 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 10:37:12,941 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 10:37:12,944 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 10:37:12,945 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 10:37:12,946 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 10:37:12,946 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 10:37:12,947 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:37:12,947 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:37:12,948 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:37:13,141 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 10:37:13,142 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 10:37:13,142 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 10:37:13,143 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 10:37:13,341 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 10:37:13,342 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 10:37:13,342 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 10:37:13,343 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 10:37:13,343 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:37:13,344 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:37:13,345 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:37:13,345 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 10:37:13,541 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 10:37:13,542 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 10:37:13,547 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 10:37:13,549 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 10:37:13,551 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 10:37:13,741 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 10:37:13,742 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:37:13,742 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 10:37:13,743 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 10:37:13,946 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 10:37:13,947 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 10:37:13,948 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 10:37:13,949 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:37:13,949 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:37:13,950 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:37:14,147 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:37:14,149 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:37:14,151 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:37:14,153 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:37:14,155 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 10:37:14,160 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 10:37:14,162 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 10:37:14,347 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 10:37:14,349 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:37:14,350 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 10:37:14,352 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 10:37:14,551 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 10:37:14,552 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 10:37:14,553 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 10:37:14,554 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:37:14,554 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:37:14,555 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:37:14,556 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:37:14,747 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 10:37:14,748 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 10:37:14,749 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:37:14,750 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 10:37:14,751 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 10:37:14,752 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 10:37:14,753 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 10:37:14,946 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:37:14,947 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 10:37:14,947 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 10:37:14,948 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:37:15,146 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 10:37:15,147 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:37:15,147 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:37:15,148 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:37:15,149 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:37:15,149 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:37:15,352 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:37:15,353 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:37:15,353 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:37:15,354 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 10:37:15,355 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 10:37:15,356 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 10:37:15,357 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 10:37:15,548 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 10:37:15,548 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 10:37:15,549 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:37:15,550 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:37:15,550 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:37:15,551 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 10:37:15,552 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 10:37:15,752 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 10:37:15,753 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 10:37:15,754 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 10:37:15,754 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 10:37:15,755 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:37:15,948 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:37:15,949 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:37:15,949 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:37:15,950 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 10:37:15,951 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 10:37:15,953 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 10:37:15,954 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:37:15,954 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:37:15,955 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 10:37:16,152 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:37:16,153 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 10:37:16,154 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 10:37:16,155 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 10:37:16,348 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 10:37:16,349 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 10:37:16,349 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:37:16,350 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:37:16,350 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:37:16,351 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:37:16,352 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 10:37:16,354 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 10:37:16,548 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:37:16,549 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 10:37:16,549 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 10:37:16,550 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 10:37:16,550 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:37:16,551 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 10:37:16,748 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 10:37:16,749 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 10:37:16,753 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 10:37:16,754 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 10:37:16,754 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:37:16,948 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:37:16,949 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:37:16,950 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:37:16,951 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 10:37:16,955 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 10:37:16,956 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:37:16,957 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 10:37:16,957 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 10:37:17,155 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 10:37:17,156 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 10:37:17,157 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:37:17,157 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:37:17,158 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:37:17,158 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:37:45,482 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:37:45,483 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:37:45,483 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:37:45,484 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:37:45,677 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:37:45,680 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:37:45,680 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:37:45,681 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:37:46,077 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:37:46,087 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:37:46,278 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:37:46,279 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:37:47,923 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:37:47,924 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:37:47,924 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:37:47,925 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:38:14,174 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:38:14,175 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:38:14,175 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:38:14,176 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:38:14,315 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:38:14,315 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 10:38:14,316 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:38:14,316 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:46:43,154 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 10:46:43,212 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 10:46:43,221 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 10:46:43,224 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-26 10:46:43,225 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-26 10:46:43,226 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 10:46:43,227 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 10:46:43,227 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-26 10:46:43,228 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-26 10:46:43,229 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 10:46:43,229 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:46:43,230 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 10:46:43,385 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 10:46:43,386 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:46:43,398 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 10:46:43,400 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 10:46:43,401 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 10:46:43,402 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 10:46:43,408 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 10:46:43,409 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 10:46:43,410 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 10:46:43,411 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 10:46:43,585 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 10:46:43,586 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 10:46:43,587 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 10:46:43,587 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 10:46:43,588 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 10:46:43,597 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 10:46:43,598 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 10:46:43,599 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 10:46:43,792 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 10:46:43,793 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 10:46:43,793 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 10:46:43,794 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 10:46:43,795 [Thread: 10      ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 10:46:43,795 [Thread: 10      ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 10:46:43,796 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 10:46:43,797 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 10:46:43,798 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 10:46:43,987 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 10:46:44,002 [Thread: 10      ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 10:46:44,013 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 10:46:44,025 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:46:44,028 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:46:44,029 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 10:46:44,031 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 10:46:44,188 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 10:46:44,189 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 10:46:44,191 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 10:46:44,193 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 10:46:44,194 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 10:46:44,389 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 10:46:44,395 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 10:46:44,397 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 10:46:44,403 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 10:46:44,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 10:46:44,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 10:46:44,412 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 10:46:44,588 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 10:46:44,589 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:46:44,590 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 10:46:44,590 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 10:46:44,591 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 10:46:44,792 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 10:46:44,793 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 10:46:44,793 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 10:46:44,794 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 10:46:44,794 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 10:46:44,795 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:46:44,795 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:46:44,796 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:46:44,987 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:46:44,988 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 10:46:44,989 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 10:46:44,989 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 10:46:45,187 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 10:46:45,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 10:46:45,188 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 10:46:45,189 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:46:45,189 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:46:45,190 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:46:45,190 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:46:45,191 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:46:45,387 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 10:46:45,388 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 10:46:45,388 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 10:46:45,389 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 10:46:45,588 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:46:45,589 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:46:45,589 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:46:45,590 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:46:45,590 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:46:45,591 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:46:45,592 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:46:45,592 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 10:46:45,811 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 10:46:45,821 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 10:46:45,822 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 10:46:45,825 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 10:46:46,001 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:46:46,002 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 10:46:46,003 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:46:46,003 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:46:46,006 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 10:46:46,006 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:46:46,007 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 10:46:46,201 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:46:46,202 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:46:46,202 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 10:46:46,203 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:46:46,203 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 10:46:46,204 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:46:46,204 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:46:46,427 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 10:46:46,428 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 10:46:46,428 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:46:46,429 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:46:46,429 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:46:46,430 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:46:46,431 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 10:46:46,432 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 10:46:46,601 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 10:46:46,602 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 10:46:46,603 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 10:46:46,603 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 10:46:46,801 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 10:46:46,802 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 10:46:46,802 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 10:46:46,803 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 10:46:47,003 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:46:47,003 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:46:47,004 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 10:46:47,004 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 10:46:47,005 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 10:46:47,201 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 10:46:47,202 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 10:46:47,202 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:46:47,203 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:46:47,203 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:46:47,204 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:46:47,205 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 10:46:47,401 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 10:46:47,402 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:46:47,403 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:46:47,403 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:46:47,407 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:46:47,407 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 10:46:47,408 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:46:47,601 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:46:48,228 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 10:46:48,230 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 10:46:48,230 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 10:46:48,231 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 10:46:48,416 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:46:48,417 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:46:48,417 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:46:48,418 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:46:48,419 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 10:46:48,420 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 10:46:48,633 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 10:46:48,638 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 10:46:48,646 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 10:46:48,647 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 10:46:48,648 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 10:46:48,649 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 10:46:48,817 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:46:48,819 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:46:48,820 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:46:48,821 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 10:46:49,018 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 10:46:49,020 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 10:46:49,022 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 10:46:49,024 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 10:46:49,026 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 10:46:49,218 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 10:46:49,227 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 10:46:49,228 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:46:49,229 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:46:49,231 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:46:49,233 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 10:46:49,235 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 10:46:49,417 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 10:46:49,422 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 10:46:49,423 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 10:46:49,424 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 10:46:49,424 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 10:46:49,617 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:46:49,618 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 10:46:49,618 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 10:46:49,619 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 10:46:49,817 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 10:46:49,818 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 10:46:49,818 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:46:49,819 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:46:49,819 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:46:49,820 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:46:49,821 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:46:50,017 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:46:50,018 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:46:50,018 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 10:46:50,019 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 10:46:50,019 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 10:46:50,020 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 10:46:50,217 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:46:50,220 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 10:46:50,224 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 10:46:50,230 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 10:46:50,233 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 10:46:50,417 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 10:46:50,418 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:46:50,418 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:46:50,419 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:46:50,419 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:46:50,420 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 10:46:50,421 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 10:46:50,617 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:46:50,618 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 10:46:50,618 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 10:46:50,619 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 10:46:50,619 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 10:46:50,620 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:46:50,819 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 10:46:50,819 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 10:46:50,820 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:46:50,821 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 10:46:51,019 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:46:51,023 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:46:51,023 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:46:51,024 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:46:51,024 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:46:51,025 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:46:51,026 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:46:51,217 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:46:51,218 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 10:46:51,218 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 10:46:51,220 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 10:46:51,221 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 10:46:51,279 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 10:46:51,281 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 10:46:51,417 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:46:51,418 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:46:51,418 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:46:51,419 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 10:46:51,419 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 10:46:51,617 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 10:46:51,618 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 10:46:51,619 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 10:46:51,619 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 10:46:51,620 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:46:51,620 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:46:51,621 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:46:51,817 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:46:51,818 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 10:46:51,819 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 10:46:51,819 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 10:46:51,820 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:46:51,820 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:46:51,821 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 10:46:51,821 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:46:52,017 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 10:46:52,018 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 10:46:52,019 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 10:46:52,019 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 10:46:52,020 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 10:46:52,217 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:46:52,218 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:46:52,218 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:46:52,219 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:46:52,220 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 10:46:52,220 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 10:46:52,221 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:46:52,417 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 10:46:52,418 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 10:46:52,419 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 10:46:52,419 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:46:52,420 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 10:46:52,617 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 10:46:52,618 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 10:46:52,619 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 10:46:52,619 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 10:46:52,619 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:46:52,621 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:46:52,622 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:46:52,817 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:46:52,818 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 10:46:52,819 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 10:46:52,819 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:46:52,820 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 10:46:52,820 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 10:46:52,821 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 10:46:53,018 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 10:46:53,019 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:46:53,020 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:46:53,020 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:46:53,021 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:47:08,928 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:47:08,929 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:47:08,930 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:47:08,931 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:47:09,123 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:47:09,125 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:47:09,126 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:47:09,126 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:47:09,523 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:47:09,529 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:47:09,726 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:47:09,728 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:47:20,329 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:47:20,330 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:47:20,330 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:47:20,331 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:54:06,511 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:54:06,538 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:54:06,539 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:54:06,540 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:54:06,662 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:54:06,663 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 10:54:06,663 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:54:06,664 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:54:29,437 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 10:54:29,473 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 10:54:29,483 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 10:54:29,487 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 10:54:29,489 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 10:54:29,490 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 10:54:29,490 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 10:54:29,491 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 10:54:29,491 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 10:54:29,492 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:54:29,493 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:54:29,493 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 10:54:29,653 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 10:54:29,654 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 10:54:29,666 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 10:54:29,668 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 10:54:29,669 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 10:54:29,671 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 10:54:29,677 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 10:54:29,679 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 10:54:29,681 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 10:54:29,682 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 10:54:29,853 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 10:54:29,868 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 10:54:29,869 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 10:54:29,870 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 10:54:29,870 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 10:54:29,883 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 10:54:29,885 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 10:54:29,886 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 10:54:30,053 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 10:54:30,054 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 10:54:30,055 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 10:54:30,056 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 10:54:30,057 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 10:54:30,058 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 10:54:30,059 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 10:54:30,060 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 10:54:30,061 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 10:54:30,253 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 10:54:30,258 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 10:54:30,259 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 10:54:30,271 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:54:30,273 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 10:54:30,275 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 10:54:30,278 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 10:54:30,454 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 10:54:30,455 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 10:54:30,456 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 10:54:30,458 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 10:54:30,459 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 10:54:30,653 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 10:54:30,668 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 10:54:30,674 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 10:54:30,676 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 10:54:30,678 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 10:54:30,679 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 10:54:30,680 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 10:54:30,855 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 10:54:30,856 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:54:30,857 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 10:54:30,857 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 10:54:30,858 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 10:54:31,053 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 10:54:31,054 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 10:54:31,055 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 10:54:31,056 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 10:54:31,056 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 10:54:31,057 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:54:31,058 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:54:31,058 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:54:31,253 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:54:31,254 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 10:54:31,259 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 10:54:31,260 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 10:54:31,453 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 10:54:31,454 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 10:54:31,455 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 10:54:31,455 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 10:54:31,456 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:54:31,457 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:54:31,457 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:54:31,458 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:54:31,653 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 10:54:31,654 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 10:54:31,655 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 10:54:31,656 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 10:54:31,853 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:54:31,854 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 10:54:31,854 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 10:54:31,855 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:54:31,855 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:54:31,856 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:54:31,861 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:54:31,862 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 10:54:32,053 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 10:54:32,057 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 10:54:32,057 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 10:54:32,061 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 10:54:32,253 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 10:54:32,254 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 10:54:32,255 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 10:54:32,255 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 10:54:32,257 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 10:54:32,258 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 10:54:32,259 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 10:54:32,453 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 10:54:32,454 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 10:54:32,455 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 10:54:32,455 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 10:54:32,456 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 10:54:32,457 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 10:54:32,458 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 10:54:32,679 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 10:54:32,684 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 10:54:32,686 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 10:54:32,687 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:54:32,688 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:54:32,689 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:54:32,690 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 10:54:32,690 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 10:54:32,853 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 10:54:32,855 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 10:54:32,855 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 10:54:32,856 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 10:54:33,054 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 10:54:33,056 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 10:54:33,057 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 10:54:33,059 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 10:54:33,258 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:54:33,259 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:54:33,261 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 10:54:33,263 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 10:54:33,265 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 10:54:33,454 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 10:54:33,455 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 10:54:33,463 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:54:33,468 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:54:33,470 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:54:33,471 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:54:33,473 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 10:54:33,657 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 10:54:33,658 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 10:54:33,658 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:54:33,659 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:54:33,663 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 10:54:33,666 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 10:54:33,671 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 10:54:33,856 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 10:54:34,403 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 10:54:34,578 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 10:54:34,581 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 10:54:34,582 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 10:54:34,584 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:54:34,776 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:54:34,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:54:34,780 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:54:34,781 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 10:54:34,977 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 10:54:34,978 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 10:54:34,979 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 10:54:34,980 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 10:54:34,981 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 10:54:34,982 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 10:54:34,983 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 10:54:34,984 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:54:35,177 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:54:35,184 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 10:54:35,185 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 10:54:35,186 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 10:54:35,187 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 10:54:35,377 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 10:54:35,378 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 10:54:35,379 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 10:54:35,380 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 10:54:35,381 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 10:54:35,381 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 10:54:35,382 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 10:54:35,383 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:54:35,577 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 10:54:35,578 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 10:54:35,579 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 10:54:35,594 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 10:54:35,777 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 10:54:35,799 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 10:54:35,802 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 10:54:35,803 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:54:35,804 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 10:54:35,977 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 10:54:35,978 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 10:54:35,979 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 10:54:35,979 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 10:54:35,980 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:54:35,980 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:54:36,177 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:54:36,178 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:54:36,179 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:54:36,180 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 10:54:36,180 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 10:54:36,181 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 10:54:36,182 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 10:54:36,377 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 10:54:36,378 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 10:54:36,379 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:54:36,379 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 10:54:36,577 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 10:54:36,585 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 10:54:36,586 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 10:54:36,588 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 10:54:36,591 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:54:36,591 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:54:36,777 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:54:36,778 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:54:36,779 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 10:54:36,780 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 10:54:36,781 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 10:54:36,782 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 10:54:36,783 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 10:54:36,784 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 10:54:36,977 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 10:54:36,978 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:54:36,978 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 10:54:37,177 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 10:54:37,178 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 10:54:37,178 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 10:54:37,179 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 10:54:37,180 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:54:37,180 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 10:54:37,181 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:54:37,377 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:54:37,382 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:54:37,383 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 10:54:37,384 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 10:54:37,385 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 10:54:37,385 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 10:54:37,387 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 10:54:37,578 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 10:54:37,659 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 10:54:37,668 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 10:54:37,669 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:54:37,671 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:54:37,673 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:54:37,674 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 10:54:37,675 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 10:54:37,778 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 10:54:37,781 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 10:54:37,794 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 10:54:37,795 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 10:54:37,978 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:54:37,980 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:54:37,982 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:54:37,983 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:54:37,985 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 10:54:37,987 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 10:54:37,989 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 10:54:37,990 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:54:38,179 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:54:38,180 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 10:54:38,181 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:54:38,182 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 10:54:38,183 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 10:54:38,379 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 10:54:38,380 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 10:54:38,381 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 10:54:38,382 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:54:38,382 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:54:38,383 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:54:38,384 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:54:38,579 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 10:54:38,580 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 10:54:38,581 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 10:54:38,582 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 10:54:38,583 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 10:54:38,584 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 10:54:38,585 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:54:38,780 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 10:54:38,785 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 10:54:38,786 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 10:54:38,787 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 10:54:38,979 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 10:54:38,982 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 10:54:38,984 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 10:54:38,989 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 10:54:38,990 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 10:54:38,991 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 10:54:38,992 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 10:54:39,180 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 10:54:39,186 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 10:54:39,187 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 10:54:39,188 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 10:54:39,189 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 10:54:39,190 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 10:54:39,191 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 10:54:39,192 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 10:54:39,379 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 10:55:05,887 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:55:05,888 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:55:05,889 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:55:05,889 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:55:06,087 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:55:06,089 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:55:06,089 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:55:06,090 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 10:55:06,491 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 10:55:06,498 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 10:55:06,690 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 10:55:06,691 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 10:55:11,569 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 10:55:11,578 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 10:55:11,578 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 10:55:11,579 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:17:05,894 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:17:05,895 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:17:05,896 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:17:05,897 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:17:06,034 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 11:17:06,035 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 11:17:06,036 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 11:17:06,036 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 11:25:06,521 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 11:25:06,553 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 11:25:06,564 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 11:25:06,568 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 11:25:06,570 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 11:25:06,570 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 11:25:06,571 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 11:25:06,572 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 11:25:06,572 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 11:25:06,573 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 11:25:06,574 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 11:25:06,574 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 11:25:06,736 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 11:25:06,737 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 11:25:06,749 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 11:25:06,751 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 11:25:06,752 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 11:25:06,752 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 11:25:06,758 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 11:25:06,758 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 11:25:06,760 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 11:25:06,760 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 11:25:06,937 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 11:25:06,937 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 11:25:06,938 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 11:25:06,939 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 11:25:06,939 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 11:25:06,955 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 11:25:06,959 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 11:25:06,960 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 11:25:07,136 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 11:25:07,137 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 11:25:07,138 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 11:25:07,138 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 11:25:07,139 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 11:25:07,140 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 11:25:07,140 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 11:25:07,141 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 11:25:07,143 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 11:25:07,336 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 11:25:07,337 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 11:25:07,337 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 11:25:07,349 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 11:25:07,351 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 11:25:07,353 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 11:25:07,356 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 11:25:07,537 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 11:25:07,538 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 11:25:07,539 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 11:25:07,541 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 11:25:07,542 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 11:25:07,736 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 11:25:07,739 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 11:25:07,740 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 11:25:07,742 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 11:25:07,745 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 11:25:07,746 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 11:25:07,747 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 11:25:07,937 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 11:25:07,937 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 11:25:07,938 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 11:25:07,939 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 11:25:07,939 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 11:25:08,136 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 11:25:08,137 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 11:25:08,137 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 11:25:08,138 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 11:25:08,138 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 11:25:08,139 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 11:25:08,139 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 11:25:08,140 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 11:25:08,336 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 11:25:08,337 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 11:25:08,337 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 11:25:08,338 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 11:25:08,536 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 11:25:08,537 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 11:25:08,538 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 11:25:08,538 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 11:25:08,539 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 11:25:08,539 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 11:25:08,540 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 11:25:08,540 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 11:25:08,736 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 11:25:08,737 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 11:25:08,738 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 11:25:08,739 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 11:25:08,936 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 11:25:08,937 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 11:25:08,944 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 11:25:08,958 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 11:25:08,959 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 11:25:08,960 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 11:25:08,960 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 11:25:08,961 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 11:25:09,136 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 11:25:09,140 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 11:25:09,140 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 11:25:09,144 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 11:25:09,336 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 11:25:09,337 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 11:25:09,337 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 11:25:09,338 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 11:25:09,340 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 11:25:09,341 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 11:25:09,342 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 11:25:09,536 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 11:25:09,537 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 11:25:09,537 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 11:25:09,538 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 11:25:09,538 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 11:25:09,539 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 11:25:09,539 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 11:25:09,762 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 11:25:09,763 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 11:25:09,764 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 11:25:09,765 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 11:25:09,765 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 11:25:09,766 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:25:09,766 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 11:25:09,767 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 11:25:09,936 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 11:25:09,937 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 11:25:09,938 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 11:25:09,939 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 11:25:10,137 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 11:25:10,138 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 11:25:10,140 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 11:25:10,141 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 11:25:10,342 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 11:25:10,343 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 11:25:10,345 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 11:25:10,347 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 11:25:10,349 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 11:25:10,537 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 11:25:10,538 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 11:25:10,539 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 11:25:10,539 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 11:25:10,540 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 11:25:10,541 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 11:25:10,542 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 11:25:10,736 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 11:25:10,737 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 11:25:10,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 11:25:10,738 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 11:25:10,742 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 11:25:10,743 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 11:25:10,744 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 11:25:10,941 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 11:25:11,473 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 11:25:11,475 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 11:25:11,476 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 11:25:11,477 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 11:25:11,663 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 11:25:11,664 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 11:25:11,665 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 11:25:11,666 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 11:25:11,667 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 11:25:11,861 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 11:25:11,898 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 11:25:11,901 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 11:25:12,074 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 11:25:12,076 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 11:25:12,076 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 11:25:12,077 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 11:25:12,078 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:25:12,078 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:25:12,079 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 11:25:12,079 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 11:25:12,261 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 11:25:12,262 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 11:25:12,263 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 11:25:12,263 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 11:25:12,264 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 11:25:12,461 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 11:25:12,462 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 11:25:12,463 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 11:25:12,463 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 11:25:12,464 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 11:25:12,464 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 11:25:12,465 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 11:25:12,661 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 11:25:12,666 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 11:25:12,667 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 11:25:12,668 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 11:25:12,668 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 11:25:12,861 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 11:25:12,862 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 11:25:12,862 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 11:25:12,863 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 11:25:13,061 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 11:25:13,062 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 11:25:13,062 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 11:25:13,063 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 11:25:13,063 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 11:25:13,064 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 11:25:13,065 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 11:25:13,261 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 11:25:13,262 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 11:25:13,262 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 11:25:13,263 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 11:25:13,263 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 11:25:13,264 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 11:25:13,461 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 11:25:13,462 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 11:25:13,462 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 11:25:13,465 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 11:25:13,465 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 11:25:13,661 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 11:25:13,662 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 11:25:13,662 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 11:25:13,663 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 11:25:13,663 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 11:25:13,664 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 11:25:13,665 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 11:25:13,861 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 11:25:13,862 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 11:25:13,862 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 11:25:13,863 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 11:25:13,863 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 11:25:13,864 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 11:25:14,061 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 11:25:14,062 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 11:25:14,063 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 11:25:14,063 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 11:25:14,261 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 11:25:14,262 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 11:25:14,262 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 11:25:14,263 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 11:25:14,263 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 11:25:14,264 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 11:25:14,265 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 11:25:14,461 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 11:25:14,462 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 11:25:14,462 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 11:25:14,464 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 11:25:14,465 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 11:25:14,518 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 11:25:14,521 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 11:25:14,667 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 11:25:14,668 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 11:25:14,670 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:25:14,672 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 11:25:14,673 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 11:25:14,863 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 11:25:14,866 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 11:25:14,867 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 11:25:14,869 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 11:25:14,870 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 11:25:14,872 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 11:25:14,873 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 11:25:15,063 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 11:25:15,065 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 11:25:15,067 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 11:25:15,068 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 11:25:15,069 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:25:15,071 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:25:15,072 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 11:25:15,074 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 11:25:15,262 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 11:25:15,263 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 11:25:15,264 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 11:25:15,264 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 11:25:15,265 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 11:25:15,462 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 11:25:15,463 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 11:25:15,463 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 11:25:15,464 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 11:25:15,465 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 11:25:15,465 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 11:25:15,466 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 11:25:15,662 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 11:25:15,668 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 11:25:15,669 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 11:25:15,670 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 11:25:15,670 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 11:25:15,862 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 11:25:15,863 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 11:25:15,863 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 11:25:15,864 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 11:25:15,865 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 11:25:15,865 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 11:25:15,866 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 11:25:16,063 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 11:25:16,064 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 11:25:16,065 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 11:25:16,066 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 11:25:16,066 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 11:25:16,067 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 11:25:16,068 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 11:25:16,263 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 11:25:16,264 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 11:25:16,264 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 11:25:16,265 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 11:25:16,266 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 11:25:58,417 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:25:58,418 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:25:58,418 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:25:58,419 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:27:04,336 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:27:04,337 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:27:04,337 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:27:04,338 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:28:57,139 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:28:57,140 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:28:57,141 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:28:57,141 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:34:05,053 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:34:05,053 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:34:05,054 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:34:05,055 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:34:19,673 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:34:19,676 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:34:19,682 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:34:19,683 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:34:19,926 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:34:19,927 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:34:20,082 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:34:20,106 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:34:35,290 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:34:35,296 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:34:35,309 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:34:37,800 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:34:39,790 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:34:39,791 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:34:39,791 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:34:39,792 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:34:40,723 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:34:40,724 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:34:40,725 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:34:40,726 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:34:50,655 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:34:50,661 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:34:50,662 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:34:50,662 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:45:33,746 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:45:33,762 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:45:33,763 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:45:33,763 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:45:58,670 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:45:58,674 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:45:58,676 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:45:58,864 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:46:01,413 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:46:01,419 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:46:01,424 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:46:01,426 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:46:01,673 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:46:01,683 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:46:01,683 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:46:01,684 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:46:33,764 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:46:33,792 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:46:33,793 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:46:33,793 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:48:59,651 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:48:59,652 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:48:59,653 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:48:59,654 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:49:03,557 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:49:03,559 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:49:03,561 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:49:03,562 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:49:03,830 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:49:03,833 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:49:03,838 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:49:03,840 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:49:09,664 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:49:09,665 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:49:09,666 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:49:09,667 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:50:18,407 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:50:18,408 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:50:18,408 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:50:18,409 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:55:04,518 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:55:04,519 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:55:04,520 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:55:04,521 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:55:08,145 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:55:08,146 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:55:08,147 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:55:08,148 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:55:08,407 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:55:08,412 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:55:08,418 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:55:08,420 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:55:19,157 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:55:19,160 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:55:19,162 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:55:19,163 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:55:33,235 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:55:33,236 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:55:33,236 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:55:33,237 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:58:37,588 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:58:37,589 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:58:37,590 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:58:37,590 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:58:39,933 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:58:39,934 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:58:39,934 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:58:39,935 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:58:40,164 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:58:40,173 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:58:40,178 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:58:40,183 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 11:58:44,740 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 11:58:44,741 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 11:58:44,742 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 11:58:44,743 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 11:58:55,044 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 11:58:55,048 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 11:58:55,051 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 11:58:55,053 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 12:00:37,442 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 12:00:37,443 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 12:00:37,443 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 12:00:37,445 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 12:00:42,542 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 12:00:42,543 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 12:00:42,548 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 12:00:42,553 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 12:00:42,813 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 12:00:42,823 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 12:00:42,824 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 12:00:42,825 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 12:01:52,156 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 12:01:52,157 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 12:01:52,157 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 12:01:52,158 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 12:03:41,015 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 12:03:41,016 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 12:03:41,017 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 12:03:41,018 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 12:03:41,129 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 12:03:41,130 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 12:03:41,130 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 12:03:41,131 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 13:43:14,913 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 13:43:14,963 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 13:43:14,971 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 13:43:14,974 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-26 13:43:14,976 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-26 13:43:14,977 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 13:43:14,978 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 13:43:14,979 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-26 13:43:14,980 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-26 13:43:14,981 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 13:43:14,982 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 13:43:14,983 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 13:43:15,137 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 13:43:15,139 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 13:43:15,167 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 13:43:15,170 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 13:43:15,171 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 13:43:15,172 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 13:43:15,179 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 13:43:15,180 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 13:43:15,182 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 13:43:15,183 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 13:43:15,335 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 13:43:15,336 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 13:43:15,337 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 13:43:15,338 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 13:43:15,339 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 13:43:15,353 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 13:43:15,354 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 13:43:15,354 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 13:43:15,535 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 13:43:15,536 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 13:43:15,537 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 13:43:15,538 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 13:43:15,539 [Thread: 10      ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 13:43:15,540 [Thread: 10      ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 13:43:15,541 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 13:43:15,542 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 13:43:15,544 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 13:43:15,735 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 13:43:15,736 [Thread: 10      ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 13:43:15,737 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 13:43:15,749 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 13:43:15,751 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 13:43:15,753 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 13:43:15,756 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 13:43:15,936 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 13:43:15,937 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 13:43:15,938 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 13:43:15,940 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 13:43:15,942 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 13:43:16,135 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 13:43:16,138 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 13:43:16,139 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 13:43:16,141 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 13:43:16,143 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 13:43:16,144 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 13:43:16,146 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 13:43:16,335 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 13:43:16,336 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 13:43:16,337 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 13:43:16,338 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 13:43:16,339 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 13:43:16,535 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 13:43:16,536 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 13:43:16,537 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 13:43:16,538 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 13:43:16,538 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 13:43:16,539 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 13:43:16,540 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 13:43:16,541 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 13:43:16,735 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 13:43:16,736 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 13:43:16,737 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 13:43:16,738 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 13:43:16,935 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 13:43:16,936 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 13:43:16,937 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 13:43:16,937 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 13:43:16,938 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 13:43:16,939 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 13:43:16,940 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 13:43:16,940 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 13:43:17,135 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 13:43:17,136 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 13:43:17,137 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 13:43:17,138 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 13:43:17,353 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 13:43:17,357 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 13:43:17,358 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 13:43:17,360 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 13:43:17,360 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 13:43:17,361 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 13:43:17,362 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 13:43:17,362 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 13:43:17,538 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 13:43:17,539 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 13:43:17,540 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 13:43:17,543 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 13:43:17,738 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 13:43:17,739 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 13:43:17,740 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 13:43:17,741 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 13:43:17,743 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 13:43:17,744 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 13:43:17,744 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 13:43:17,938 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 13:43:17,939 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 13:43:17,939 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 13:43:17,940 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 13:43:17,941 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 13:43:17,941 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 13:43:17,942 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 13:43:18,166 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 13:43:18,167 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 13:43:18,167 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 13:43:18,168 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 13:43:18,168 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 13:43:18,169 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 13:43:18,170 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 13:43:18,170 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 13:43:18,338 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 13:43:18,339 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 13:43:18,340 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 13:43:18,341 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 13:43:18,539 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 13:43:18,540 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 13:43:18,542 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 13:43:18,543 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 13:43:18,744 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 13:43:18,746 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 13:43:18,747 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 13:43:18,749 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 13:43:18,752 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 13:43:18,939 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 13:43:18,940 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 13:43:18,940 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 13:43:18,941 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 13:43:18,943 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 13:43:18,944 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 13:43:18,946 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 13:43:19,138 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 13:43:19,139 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 13:43:19,140 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 13:43:19,140 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 13:43:19,144 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 13:43:19,145 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 13:43:19,150 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 13:43:19,338 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 13:43:19,921 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 13:43:19,924 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 13:43:19,925 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 13:43:19,926 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 13:43:20,124 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 13:43:20,125 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 13:43:20,126 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 13:43:20,127 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 13:43:20,319 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 13:43:20,319 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 13:43:20,325 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 13:43:20,330 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 13:43:20,519 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 13:43:20,520 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 13:43:20,521 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 13:43:20,522 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 13:43:20,522 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 13:43:20,523 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 13:43:20,524 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 13:43:20,525 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 13:43:20,724 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 13:43:20,724 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 13:43:20,725 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 13:43:20,726 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 13:43:20,727 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 13:43:20,918 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 13:43:20,919 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 13:43:20,920 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 13:43:20,920 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 13:43:20,921 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 13:43:20,922 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 13:43:20,923 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 13:43:21,118 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 13:43:21,124 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 13:43:21,125 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 13:43:21,126 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 13:43:21,126 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 13:43:21,318 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 13:43:21,319 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 13:43:21,320 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 13:43:21,321 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 13:43:21,522 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 13:43:21,523 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 13:43:21,524 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 13:43:21,524 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 13:43:21,525 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 13:43:21,526 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 13:43:21,527 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 13:43:21,718 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 13:43:21,720 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 13:43:21,721 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 13:43:21,722 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 13:43:21,722 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 13:43:21,723 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 13:43:21,918 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 13:43:21,919 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 13:43:21,920 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 13:43:21,921 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 13:43:21,922 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 13:43:22,118 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 13:43:22,119 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 13:43:22,120 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 13:43:22,120 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 13:43:22,121 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 13:43:22,122 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 13:43:22,123 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 13:43:22,318 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 13:43:22,319 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 13:43:22,320 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 13:43:22,320 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 13:43:22,321 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 13:43:22,322 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 13:43:22,535 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 13:43:22,540 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 13:43:22,541 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 13:43:22,542 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 13:43:22,722 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 13:43:22,723 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 13:43:22,723 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 13:43:22,724 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 13:43:22,724 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 13:43:22,725 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 13:43:22,726 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 13:43:22,922 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 13:43:22,923 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 13:43:22,924 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 13:43:22,926 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 13:43:22,927 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 13:43:22,981 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 13:43:22,985 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 13:43:23,123 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 13:43:23,124 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 13:43:23,126 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 13:43:23,127 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 13:43:23,128 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 13:43:23,323 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 13:43:23,324 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 13:43:23,325 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 13:43:23,326 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 13:43:23,327 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 13:43:23,328 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 13:43:23,329 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 13:43:23,523 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 13:43:23,526 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 13:43:23,528 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 13:43:23,530 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 13:43:23,531 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 13:43:23,533 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 13:43:23,535 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 13:43:23,536 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 13:43:23,722 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 13:43:23,727 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 13:43:23,730 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 13:43:23,731 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 13:43:23,732 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 13:43:23,922 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 13:43:23,923 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 13:43:23,923 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 13:43:23,924 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 13:43:23,925 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 13:43:23,925 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 13:43:23,926 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 13:43:24,122 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 13:43:24,123 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 13:43:24,123 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 13:43:24,124 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 13:43:24,126 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 13:43:24,328 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 13:43:24,329 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 13:43:24,330 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 13:43:24,331 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 13:43:24,332 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 13:43:24,333 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 13:43:24,333 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 13:43:24,522 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 13:43:24,523 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 13:43:24,524 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 13:43:24,525 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 13:43:24,526 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 13:43:24,527 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 13:43:24,528 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 13:43:24,723 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 13:43:24,728 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 13:43:24,729 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 13:43:24,730 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 13:43:24,730 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 13:43:43,250 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 13:43:43,250 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 13:43:43,251 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 13:43:43,252 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 13:43:48,481 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 13:43:48,482 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 13:43:48,482 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 13:43:48,483 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 13:43:48,754 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 13:43:48,762 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 13:43:48,763 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 13:43:48,763 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 13:44:26,883 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 13:44:26,884 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 13:44:26,886 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 13:44:26,887 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 13:45:29,790 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 13:45:29,792 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 13:45:29,793 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 13:45:29,795 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 13:45:29,938 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 13:45:29,939 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 13:45:29,940 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 13:45:29,941 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 14:51:24,738 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 14:51:24,769 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 14:51:24,777 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 14:51:24,780 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 14:51:24,782 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 14:51:24,783 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 14:51:24,784 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 14:51:24,785 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 14:51:24,786 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 14:51:24,786 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 14:51:24,787 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 14:51:24,788 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 14:51:24,993 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 14:51:24,999 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 14:51:25,012 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 14:51:25,014 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 14:51:25,015 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 14:51:25,016 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 14:51:25,021 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 14:51:25,021 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 14:51:25,022 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 14:51:25,023 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 14:51:25,168 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 14:51:25,169 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 14:51:25,170 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 14:51:25,170 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 14:51:25,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 14:51:25,181 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 14:51:25,182 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 14:51:25,183 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 14:51:25,368 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 14:51:25,369 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 14:51:25,372 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 14:51:25,373 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 14:51:25,374 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 14:51:25,375 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 14:51:25,375 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 14:51:25,376 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 14:51:25,377 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 14:51:25,568 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 14:51:25,569 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 14:51:25,570 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 14:51:25,581 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 14:51:25,585 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 14:51:25,587 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 14:51:25,589 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 14:51:25,770 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 14:51:25,772 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 14:51:25,773 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 14:51:25,774 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 14:51:25,776 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 14:51:25,969 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 14:51:25,972 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 14:51:25,973 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 14:51:25,976 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 14:51:25,977 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 14:51:25,979 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 14:51:25,980 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 14:51:26,174 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 14:51:26,174 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 14:51:26,175 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 14:51:26,176 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 14:51:26,176 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 14:51:26,369 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 14:51:26,373 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 14:51:26,374 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 14:51:26,374 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 14:51:26,375 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 14:51:26,375 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 14:51:26,376 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 14:51:26,377 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 14:51:26,569 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 14:51:26,570 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 14:51:26,570 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 14:51:26,571 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 14:51:26,769 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 14:51:26,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 14:51:26,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 14:51:26,771 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 14:51:26,771 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 14:51:26,772 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 14:51:26,772 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 14:51:26,773 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 14:51:26,973 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 14:51:26,977 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 14:51:26,981 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 14:51:26,982 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 14:51:27,172 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 14:51:27,173 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 14:51:27,173 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 14:51:27,174 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 14:51:27,177 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 14:51:27,177 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 14:51:27,178 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 14:51:27,179 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 14:51:27,375 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 14:51:27,376 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 14:51:27,377 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 14:51:27,380 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 14:51:27,572 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 14:51:27,573 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 14:51:27,573 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 14:51:27,574 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 14:51:27,576 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 14:51:27,576 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 14:51:27,577 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 14:51:27,772 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 14:51:27,773 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 14:51:27,773 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 14:51:27,774 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 14:51:27,774 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 14:51:27,775 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 14:51:27,775 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 14:51:27,998 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 14:51:27,999 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 14:51:28,005 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 14:51:28,006 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 14:51:28,007 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 14:51:28,008 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 14:51:28,009 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 14:51:28,010 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 14:51:28,172 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 14:51:28,173 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 14:51:28,174 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 14:51:28,174 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 14:51:28,372 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 14:51:28,373 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 14:51:28,373 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 14:51:28,374 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 14:51:28,577 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 14:51:28,579 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 14:51:28,581 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 14:51:28,582 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 14:51:28,585 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 14:51:28,773 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 14:51:28,774 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 14:51:28,775 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 14:51:28,776 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 14:51:28,777 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 14:51:28,777 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 14:51:28,779 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 14:51:28,973 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 14:51:28,974 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 14:51:28,976 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 14:51:28,978 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 14:51:28,987 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 14:51:28,989 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 14:51:28,991 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 14:51:29,173 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 14:51:29,729 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 14:51:29,732 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 14:51:29,734 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 14:51:29,736 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 14:51:29,922 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 14:51:29,923 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 14:51:29,924 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 14:51:29,924 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 14:51:29,926 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 14:51:29,926 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 14:51:30,136 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 14:51:30,163 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 14:51:30,323 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 14:51:30,324 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 14:51:30,325 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 14:51:30,326 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 14:51:30,327 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 14:51:30,327 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 14:51:30,328 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 14:51:30,329 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 14:51:30,522 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 14:51:30,523 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 14:51:30,524 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 14:51:30,524 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 14:51:30,525 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 14:51:30,722 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 14:51:30,729 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 14:51:30,730 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 14:51:30,730 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 14:51:30,731 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 14:51:30,732 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 14:51:30,732 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 14:51:30,922 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 14:51:30,960 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 14:51:30,961 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 14:51:30,961 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 14:51:30,962 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 14:51:31,122 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 14:51:31,123 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 14:51:31,123 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 14:51:31,126 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 14:51:31,322 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 14:51:31,323 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 14:51:31,323 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 14:51:31,324 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 14:51:31,324 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 14:51:31,325 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 14:51:31,325 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 14:51:31,522 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 14:51:31,523 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 14:51:31,523 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 14:51:31,524 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 14:51:31,527 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 14:51:31,527 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 14:51:31,722 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 14:51:31,723 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 14:51:31,723 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 14:51:31,724 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 14:51:31,725 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 14:51:31,928 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 14:51:31,928 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 14:51:31,929 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 14:51:31,930 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 14:51:31,930 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 14:51:31,931 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 14:51:31,931 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 14:51:32,122 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 14:51:32,123 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 14:51:32,123 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 14:51:32,124 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 14:51:32,124 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 14:51:32,125 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 14:51:32,322 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 14:51:32,323 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 14:51:32,324 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 14:51:32,324 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 14:51:32,522 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 14:51:32,523 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 14:51:32,523 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 14:51:32,524 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 14:51:32,524 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 14:51:32,525 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 14:51:32,526 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 14:51:32,722 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 14:51:32,723 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 14:51:32,723 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 14:51:32,725 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 14:51:32,725 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 14:51:32,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 14:51:32,779 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 14:51:32,922 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 14:51:32,927 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 14:51:32,927 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 14:51:32,928 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 14:51:32,929 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 14:51:33,122 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 14:51:33,123 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 14:51:33,129 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 14:51:33,130 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 14:51:33,130 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 14:51:33,131 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 14:51:33,131 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 14:51:33,322 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 14:51:33,323 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 14:51:33,324 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 14:51:33,326 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 14:51:33,327 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 14:51:33,328 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 14:51:33,328 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 14:51:33,329 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 14:51:33,523 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 14:51:33,525 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 14:51:33,527 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 14:51:33,529 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 14:51:33,530 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 14:51:33,724 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 14:51:33,725 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 14:51:33,727 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 14:51:33,728 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 14:51:33,731 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 14:51:33,732 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 14:51:33,734 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 14:51:33,923 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 14:51:33,924 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 14:51:33,925 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 14:51:33,926 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 14:51:33,927 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 14:51:34,128 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 14:51:34,129 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 14:51:34,131 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 14:51:34,131 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 14:51:34,132 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 14:51:34,132 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 14:51:34,133 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 14:51:34,322 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 14:51:34,323 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 14:51:34,324 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 14:51:34,325 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 14:51:34,326 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 14:51:34,327 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 14:51:34,523 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 14:51:34,524 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 14:51:34,525 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 14:51:34,526 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 14:51:34,526 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 14:51:34,527 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 14:57:40,112 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 14:57:40,113 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 14:57:40,114 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 14:57:40,114 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 14:57:40,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 14:57:40,259 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 14:57:40,260 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 14:57:40,260 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:03:09,400 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 15:03:09,431 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 15:03:09,439 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 15:03:09,442 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 15:03:09,444 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 15:03:09,445 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 15:03:09,445 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 15:03:09,446 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 15:03:09,446 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 15:03:09,447 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:03:09,448 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:03:09,448 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 15:03:09,622 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:03:09,623 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:03:09,634 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 15:03:09,636 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 15:03:09,637 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 15:03:09,638 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 15:03:09,644 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 15:03:09,645 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 15:03:09,647 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 15:03:09,647 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 15:03:09,822 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 15:03:09,823 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 15:03:09,824 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 15:03:09,824 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 15:03:09,825 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 15:03:09,836 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 15:03:09,837 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 15:03:09,838 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 15:03:10,022 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 15:03:10,023 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 15:03:10,024 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 15:03:10,024 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 15:03:10,025 [Thread: 9       ] [DEBUG] -- Found 20 <object> elements defining objects.
2019-07-26 15:03:10,026 [Thread: 9       ] [DEBUG] -- Loaded 20 object definitions from location [spring-objects.xml]
2019-07-26 15:03:10,026 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 15:03:10,027 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 15:03:10,028 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 15:03:10,222 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 15:03:10,223 [Thread: 9       ] [DEBUG] -- 20 objects defined in application context [spring.root].
2019-07-26 15:03:10,224 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 15:03:10,236 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:03:10,238 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:03:10,239 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 15:03:10,242 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 15:03:10,423 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 15:03:10,424 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 15:03:10,425 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 15:03:10,426 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 15:03:10,428 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 15:03:10,622 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 15:03:10,625 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 15:03:10,626 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 15:03:10,628 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 15:03:10,629 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 15:03:10,630 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 15:03:10,631 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 15:03:10,822 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 15:03:10,827 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:03:10,827 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 15:03:10,828 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 15:03:10,828 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 15:03:11,023 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 15:03:11,023 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 15:03:11,024 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 15:03:11,024 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 15:03:11,025 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 15:03:11,025 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:03:11,026 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:03:11,026 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:03:11,222 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:03:11,223 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 15:03:11,223 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 15:03:11,224 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 15:03:11,423 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 15:03:11,425 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 15:03:11,427 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 15:03:11,429 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:03:11,431 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:03:11,433 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:03:11,435 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:03:11,437 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:03:11,623 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 15:03:11,624 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 15:03:11,625 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 15:03:11,626 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 15:03:11,822 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:03:11,823 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:03:11,824 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:03:11,825 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:03:11,826 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:03:11,826 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:03:11,827 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:03:11,828 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 15:03:12,022 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 15:03:12,026 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 15:03:12,027 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 15:03:12,031 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 15:03:12,222 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:03:12,223 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 15:03:12,223 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:03:12,224 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:03:12,226 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 15:03:12,226 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:03:12,227 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 15:03:12,422 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:03:12,423 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:03:12,423 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 15:03:12,424 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:03:12,424 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 15:03:12,425 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:03:12,425 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:03:12,648 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 15:03:12,649 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 15:03:12,650 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:03:12,650 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:03:12,651 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:03:12,652 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:03:12,652 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 15:03:12,653 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 15:03:12,822 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 15:03:12,823 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 15:03:12,824 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 15:03:12,824 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 15:03:13,022 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 15:03:13,023 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 15:03:13,023 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 15:03:13,024 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 15:03:13,224 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:03:13,224 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:03:13,225 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 15:03:13,225 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 15:03:13,232 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 15:03:13,422 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 15:03:13,423 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 15:03:13,423 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:03:13,424 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:03:13,424 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:03:13,425 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:03:13,425 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 15:03:13,623 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 15:03:13,623 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:03:13,624 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:03:13,624 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:03:13,628 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:03:13,629 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 15:03:13,629 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:03:13,822 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:03:14,323 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 15:03:14,324 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 15:03:14,326 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 15:03:14,328 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 15:03:14,514 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:03:14,515 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:03:14,516 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:03:14,517 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:03:14,518 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 15:03:14,765 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 15:03:14,766 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 15:03:14,766 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 15:03:14,923 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 15:03:14,924 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 15:03:14,925 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 15:03:14,925 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 15:03:14,926 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:03:14,926 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:03:14,927 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:03:14,928 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 15:03:15,122 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 15:03:15,123 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 15:03:15,123 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 15:03:15,124 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 15:03:15,125 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 15:03:15,322 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 15:03:15,323 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 15:03:15,323 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:03:15,324 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:03:15,324 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:03:15,325 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 15:03:15,325 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 15:03:15,527 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 15:03:15,532 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 15:03:15,533 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 15:03:15,534 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 15:03:15,535 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 15:03:15,722 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:03:15,723 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 127].
2019-07-26 15:03:15,723 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 15:03:15,724 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 15:03:15,923 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 15:03:15,924 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 15:03:15,926 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:03:15,927 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:03:15,928 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:03:15,930 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:03:15,932 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:03:16,123 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:03:16,125 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:03:16,126 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 15:03:16,128 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 15:03:16,130 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 15:03:16,131 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 15:03:16,323 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:03:16,325 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 119].
2019-07-26 15:03:16,326 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 15:03:16,331 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 15:03:16,332 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 15:03:16,531 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 15:03:16,532 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:03:16,533 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:03:16,533 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:03:16,534 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:03:16,534 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 15:03:16,541 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 15:03:16,730 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:03:16,731 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 15:03:16,731 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 15:03:16,732 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 15:03:16,732 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 15:03:16,733 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:03:16,930 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 123].
2019-07-26 15:03:16,931 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 15:03:16,931 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 15:03:16,932 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 15:03:17,130 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 15:03:17,131 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:03:17,132 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:03:17,132 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:03:17,133 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:03:17,134 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:03:17,134 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:03:17,330 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:03:17,331 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 15:03:17,331 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 15:03:17,333 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 15:03:17,334 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 15:03:17,387 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 15:03:17,388 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 15:03:17,530 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:03:17,531 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:03:17,532 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:03:17,532 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 15:03:17,533 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 107].
2019-07-26 15:03:17,730 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 15:03:17,731 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 15:03:17,732 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 15:03:17,732 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 15:03:17,733 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:03:17,733 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:03:17,734 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:03:17,930 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:03:17,931 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 15:03:17,932 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 15:03:17,932 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 15:03:17,933 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:03:17,934 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:03:17,935 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 15:03:17,935 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:03:18,130 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 111].
2019-07-26 15:03:18,131 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 15:03:18,131 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 15:03:18,132 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 15:03:18,133 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 15:03:18,330 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:03:18,331 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:03:18,332 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:03:18,332 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:03:18,333 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 15:03:18,334 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 15:03:18,334 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:03:18,530 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 15:03:18,531 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 15:03:18,531 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 15:03:18,532 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:03:18,533 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 115].
2019-07-26 15:03:18,730 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 15:03:18,731 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 15:03:18,731 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 15:03:18,732 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 15:03:18,733 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:03:18,733 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:03:18,734 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:03:18,930 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:03:18,931 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 15:03:18,932 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 15:03:18,933 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:03:18,933 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 15:03:18,934 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 15:03:18,940 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 15:03:19,131 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 15:03:19,132 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:03:19,132 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:03:19,133 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:03:19,134 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:04:46,057 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:04:46,067 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:04:46,068 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:04:46,069 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:04:46,191 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:04:46,192 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 15:04:46,193 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:04:46,193 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:06:20,425 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 15:06:20,480 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 15:06:20,489 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 15:06:20,492 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 15:06:20,494 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 15:06:20,495 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 15:06:20,496 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 15:06:20,497 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 15:06:20,497 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 15:06:20,498 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:06:20,498 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:06:20,499 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 15:06:20,659 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:06:20,677 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:06:20,696 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 15:06:20,698 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 15:06:20,699 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 15:06:20,700 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 15:06:20,706 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 15:06:20,707 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 15:06:20,708 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 15:06:20,709 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 15:06:20,860 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 15:06:20,862 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 15:06:20,864 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 15:06:20,865 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 15:06:20,867 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 15:06:20,892 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 15:06:20,893 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 15:06:20,894 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 15:06:21,061 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 15:06:21,062 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 15:06:21,063 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 15:06:21,064 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 15:06:21,065 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 15:06:21,072 [Thread: 9       ] [DEBUG] -- Found 21 <object> elements defining objects.
2019-07-26 15:06:21,073 [Thread: 9       ] [DEBUG] -- Loaded 21 object definitions from location [spring-objects.xml]
2019-07-26 15:06:21,074 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 15:06:21,074 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 15:06:21,261 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 15:06:21,262 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 15:06:21,262 [Thread: 9       ] [DEBUG] -- 21 objects defined in application context [spring.root].
2019-07-26 15:06:21,263 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 15:06:21,275 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:06:21,277 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:06:21,278 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 15:06:21,460 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 15:06:21,461 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 15:06:21,462 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 15:06:21,464 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 15:06:21,465 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 15:06:21,467 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 15:06:21,658 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 15:06:21,661 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 15:06:21,663 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 15:06:21,665 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 15:06:21,667 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 15:06:21,668 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 15:06:21,859 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 15:06:21,860 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 15:06:21,860 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:06:21,861 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 15:06:21,862 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 15:06:22,058 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 15:06:22,059 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 15:06:22,060 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 15:06:22,060 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 15:06:22,061 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 15:06:22,061 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 15:06:22,062 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:06:22,063 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:06:22,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:06:22,259 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:06:22,260 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 15:06:22,261 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 15:06:22,261 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 15:06:22,458 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 15:06:22,459 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 15:06:22,460 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 15:06:22,461 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:06:22,461 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:06:22,462 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:06:22,463 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:06:22,658 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:06:22,659 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 15:06:22,659 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 15:06:22,660 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 15:06:22,858 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 15:06:22,859 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:06:22,859 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:06:22,860 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:06:22,861 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:06:22,861 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:06:22,862 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:06:22,865 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:06:23,058 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 15:06:23,059 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 15:06:23,060 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 15:06:23,060 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 15:06:23,262 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 15:06:23,263 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:06:23,263 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 15:06:23,264 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:06:23,264 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:06:23,266 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 15:06:23,266 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:06:23,458 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 15:06:23,459 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:06:23,459 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:06:23,460 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 15:06:23,460 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:06:23,461 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 15:06:23,461 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:06:23,664 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:06:23,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 15:06:23,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 15:06:23,693 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:06:23,694 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:06:23,694 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:06:23,695 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:06:23,695 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 15:06:23,858 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 15:06:23,859 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 15:06:23,860 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 15:06:23,860 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 15:06:24,058 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 15:06:24,059 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 15:06:24,059 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 15:06:24,060 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 15:06:24,060 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 15:06:24,260 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:06:24,260 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:06:24,261 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 15:06:24,262 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 15:06:24,458 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 15:06:24,459 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 15:06:24,459 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 15:06:24,460 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:06:24,460 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:06:24,461 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:06:24,461 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:06:24,658 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 15:06:24,659 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 15:06:24,661 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:06:24,662 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:06:24,663 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:06:24,667 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:06:24,667 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 15:06:24,858 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:06:24,859 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:06:25,396 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 15:06:25,398 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 15:06:25,400 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 15:06:25,579 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 15:06:25,581 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:06:25,584 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:06:25,586 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:06:25,587 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:06:25,590 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 15:06:25,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 15:06:25,779 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 15:06:25,780 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 15:06:25,781 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 15:06:25,799 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 15:06:25,819 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 15:06:25,991 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 15:06:25,991 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:06:25,992 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:06:25,993 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:06:26,178 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 15:06:26,179 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 15:06:26,179 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 15:06:26,180 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 15:06:26,378 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 15:06:26,380 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 15:06:26,382 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 15:06:26,382 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 15:06:26,383 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:06:26,384 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:06:26,384 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:06:26,385 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 15:06:26,578 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 15:06:26,579 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 15:06:26,584 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 15:06:26,585 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 15:06:26,586 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 15:06:26,778 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 15:06:26,779 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:06:26,779 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-26 15:06:26,780 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 15:06:26,992 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 15:06:26,993 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 15:06:26,993 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 15:06:26,997 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:06:26,997 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:06:26,998 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:06:27,178 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:06:27,179 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:06:27,180 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:06:27,180 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:06:27,181 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 15:06:27,182 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 15:06:27,182 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 15:06:27,378 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 15:06:27,380 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:06:27,381 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-26 15:06:27,382 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 15:06:27,578 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 15:06:27,579 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 15:06:27,580 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 15:06:27,580 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:06:27,581 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:06:27,581 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:06:27,582 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:06:27,813 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 15:06:27,814 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 15:06:27,815 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:06:27,815 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 15:06:27,816 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 15:06:27,817 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:06:27,817 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:06:27,978 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:06:27,979 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-26 15:06:27,979 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 15:06:27,980 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 15:06:28,178 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 15:06:28,179 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 15:06:28,180 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:06:28,180 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:06:28,181 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:06:28,181 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:06:28,182 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 15:06:28,378 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 15:06:28,379 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:06:28,379 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:06:28,380 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:06:28,380 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 15:06:28,381 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 15:06:28,381 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:06:28,578 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-26 15:06:28,579 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 15:06:28,579 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 15:06:28,580 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 15:06:28,783 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 15:06:28,784 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:06:28,785 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:06:28,785 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:06:28,786 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:06:28,787 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:06:28,978 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:06:28,979 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:06:28,980 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 15:06:28,980 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 15:06:28,982 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 15:06:28,983 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 15:06:29,037 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 15:06:29,179 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 15:06:29,179 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:06:29,180 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:06:29,182 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:06:29,182 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 15:06:29,183 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 108].
2019-07-26 15:06:29,378 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 15:06:29,379 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 15:06:29,380 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 15:06:29,380 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 15:06:29,381 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:06:29,381 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:06:29,382 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:06:29,579 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:06:29,580 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 15:06:29,581 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 15:06:29,581 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 15:06:29,583 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:06:29,601 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:06:29,601 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 15:06:29,602 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:06:29,779 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-26 15:06:29,781 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 15:06:29,805 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 15:06:29,807 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 15:06:29,979 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 15:06:29,980 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:06:29,981 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:06:29,982 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:06:29,984 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:06:29,985 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 15:06:29,987 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 15:06:29,988 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:06:30,178 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 15:06:30,179 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 15:06:30,179 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 15:06:30,180 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:06:30,181 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 116].
2019-07-26 15:06:30,381 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 15:06:30,383 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 15:06:30,385 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 15:06:30,386 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 15:06:30,388 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:06:30,389 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:06:30,579 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:06:30,581 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:06:30,584 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 15:06:30,586 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 15:06:30,588 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:06:30,590 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 15:06:30,591 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 15:06:30,594 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 15:06:30,781 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 15:06:30,784 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:06:30,785 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:06:30,787 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:06:30,789 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:10:43,993 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:10:43,994 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:10:43,995 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:10:43,996 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:10:44,259 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:10:44,260 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 15:10:44,260 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:10:44,261 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:11:30,336 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 15:11:30,368 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 15:11:30,379 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 15:11:30,382 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 15:11:30,384 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 15:11:30,385 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 15:11:30,386 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 15:11:30,386 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 15:11:30,387 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 15:11:30,388 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:11:30,388 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:11:30,389 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 15:11:30,553 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:11:30,554 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:11:30,568 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 15:11:30,570 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 15:11:30,571 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 15:11:30,572 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 15:11:30,579 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 15:11:30,580 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 15:11:30,581 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 15:11:30,582 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 15:11:30,753 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 15:11:30,754 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 15:11:30,755 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 15:11:30,755 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 15:11:30,756 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 15:11:30,815 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 15:11:30,816 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 15:11:30,817 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 15:11:30,953 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 15:11:30,954 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 15:11:30,955 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 15:11:30,956 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 15:11:30,957 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 15:11:30,958 [Thread: 9       ] [DEBUG] -- Found 21 <object> elements defining objects.
2019-07-26 15:11:30,959 [Thread: 9       ] [DEBUG] -- Loaded 21 object definitions from location [spring-objects.xml]
2019-07-26 15:11:30,959 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 15:11:30,960 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 15:11:31,154 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 15:11:31,155 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 15:11:31,156 [Thread: 9       ] [DEBUG] -- 21 objects defined in application context [spring.root].
2019-07-26 15:11:31,157 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 15:11:31,169 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:11:31,171 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:11:31,173 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 15:11:31,356 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 15:11:31,358 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 15:11:31,360 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 15:11:31,362 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 15:11:31,363 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 15:11:31,365 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 15:11:31,553 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 15:11:31,556 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 15:11:31,557 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 15:11:31,560 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 15:11:31,562 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 15:11:31,563 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 15:11:31,754 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 15:11:31,755 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 15:11:31,755 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:11:31,756 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 15:11:31,757 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 15:11:31,953 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 15:11:31,954 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 15:11:31,955 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 15:11:31,955 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 15:11:31,956 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 15:11:31,956 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 15:11:31,957 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:11:31,958 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:11:32,153 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:11:32,154 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:11:32,154 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 15:11:32,155 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 15:11:32,156 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 15:11:32,353 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 15:11:32,354 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 15:11:32,355 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 15:11:32,355 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:11:32,356 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:11:32,356 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:11:32,357 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:11:32,553 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:11:32,554 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 15:11:32,555 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 15:11:32,556 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 15:11:32,754 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 15:11:32,755 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:11:32,757 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:11:32,758 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:11:32,759 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:11:32,761 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:11:32,762 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:11:32,769 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:11:32,954 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 15:11:32,956 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 15:11:32,959 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 15:11:32,961 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 15:11:33,161 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 15:11:33,163 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:11:33,164 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 15:11:33,165 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:11:33,167 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:11:33,171 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 15:11:33,173 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:11:33,353 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 15:11:33,361 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:11:33,362 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:11:33,363 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 15:11:33,363 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:11:33,385 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 15:11:33,386 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:11:33,553 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:11:33,581 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 15:11:33,582 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 15:11:33,583 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:11:33,584 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:11:33,585 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:11:33,586 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:11:33,586 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 15:11:33,753 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 15:11:33,754 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 15:11:33,755 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 15:11:33,755 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 15:11:33,953 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 15:11:33,954 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 15:11:33,955 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 15:11:33,955 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 15:11:33,956 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 15:11:34,155 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:11:34,156 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:11:34,156 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 15:11:34,157 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 15:11:34,354 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 15:11:34,355 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 15:11:34,355 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 15:11:34,356 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:11:34,357 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:11:34,358 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:11:34,358 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:11:34,553 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 15:11:34,554 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 15:11:34,555 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:11:34,555 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:11:34,556 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:11:34,560 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:11:34,561 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 15:11:34,753 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:11:34,754 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:11:35,271 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 15:11:35,449 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 15:11:35,450 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 15:11:35,451 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 15:11:35,452 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:11:35,643 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:11:35,650 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:11:35,651 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:11:35,652 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 15:11:35,843 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 15:11:35,844 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 15:11:35,846 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 15:11:35,847 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 15:11:35,848 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 15:11:35,849 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 15:11:35,850 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 15:11:35,851 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:11:36,043 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:11:36,045 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:11:36,046 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 15:11:36,047 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 15:11:36,048 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 15:11:36,243 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 15:11:36,244 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 15:11:36,245 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 15:11:36,246 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 15:11:36,247 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 15:11:36,248 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:11:36,248 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:11:36,249 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:11:36,443 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 15:11:36,444 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 15:11:36,445 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 15:11:36,450 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 15:11:36,643 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 15:11:36,644 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 15:11:36,645 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 15:11:36,646 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:11:36,647 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 15:11:36,843 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 15:11:36,844 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 15:11:36,845 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 15:11:36,846 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 15:11:36,847 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:11:36,848 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:11:37,044 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:11:37,045 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:11:37,047 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:11:37,047 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:11:37,048 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:11:37,049 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 15:11:37,050 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 15:11:37,243 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:11:37,244 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:11:37,245 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:11:37,246 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 15:11:37,444 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 15:11:37,447 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 15:11:37,448 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 15:11:37,450 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 15:11:37,451 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:11:37,453 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:11:37,644 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:11:37,646 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:11:37,648 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 15:11:37,650 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 15:11:37,651 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:11:37,654 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:11:37,655 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:11:37,658 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 15:11:37,843 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 15:11:37,844 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:11:37,845 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 15:11:37,846 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 15:11:38,044 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 15:11:38,046 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 15:11:38,049 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 15:11:38,051 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:11:38,052 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:11:38,054 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:11:38,055 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:11:38,254 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 15:11:38,256 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 15:11:38,258 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:11:38,260 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 15:11:38,262 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 15:11:38,264 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:11:38,265 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:11:38,443 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsRequestOffineHandler'.
2019-07-26 15:11:38,444 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:11:38,445 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:11:38,445 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 15:11:38,446 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 15:11:38,447 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:11:38,643 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 15:11:38,644 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 15:11:38,645 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 15:11:38,645 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 15:11:38,843 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 15:11:38,844 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:11:38,844 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:11:38,845 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:11:38,846 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:11:38,846 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:11:38,847 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:11:39,043 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:11:39,044 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 15:11:39,045 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 15:11:39,047 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 15:11:39,048 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 15:11:39,103 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 15:11:39,105 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 15:11:39,243 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:11:39,244 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:11:39,245 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:11:39,245 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 15:11:39,246 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 15:11:47,686 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 15:11:47,687 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 15:11:47,688 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 15:11:47,688 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 15:11:47,689 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:11:47,690 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:11:51,366 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:11:51,376 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:11:51,377 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 15:11:51,378 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 15:11:51,379 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 15:11:51,380 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:11:51,380 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:11:51,381 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 15:11:51,394 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:11:51,395 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 15:11:51,396 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 15:11:51,397 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 15:11:51,591 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 15:11:51,592 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 15:11:51,592 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:11:51,593 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:11:51,594 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:11:51,594 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:11:51,595 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 15:11:51,596 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 15:11:51,792 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:11:51,793 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 15:11:51,793 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 15:11:51,794 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 15:11:51,795 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:11:51,796 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 15:11:51,992 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 15:11:51,994 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 15:11:51,996 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 15:11:51,998 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 15:11:51,999 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:11:52,192 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:11:52,195 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:11:52,209 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:11:52,211 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 15:11:52,212 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 15:11:52,214 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:11:52,214 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 15:11:52,215 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 15:11:52,392 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 15:11:52,393 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 15:11:52,394 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:11:52,395 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:11:52,395 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:11:52,396 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:12:08,817 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:12:08,833 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:12:08,834 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:12:08,835 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:12:35,622 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:12:35,623 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:12:35,624 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:12:35,625 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:12:35,795 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:12:35,796 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 15:12:35,802 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:12:35,803 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:14:14,014 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 15:14:14,054 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 15:14:14,066 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 15:14:14,069 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-26 15:14:14,071 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-26 15:14:14,072 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 15:14:14,073 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 15:14:14,073 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-26 15:14:14,074 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-26 15:14:14,074 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 15:14:14,075 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:14:14,076 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 15:14:14,234 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 15:14:14,235 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:14:14,264 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 15:14:14,266 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 15:14:14,267 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 15:14:14,268 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 15:14:14,275 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 15:14:14,276 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 15:14:14,277 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 15:14:14,278 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 15:14:14,432 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 15:14:14,433 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 15:14:14,434 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 15:14:14,435 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 15:14:14,436 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 15:14:14,448 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 15:14:14,449 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 15:14:14,450 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 15:14:14,632 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 15:14:14,633 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 15:14:14,634 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 15:14:14,634 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 15:14:14,635 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 15:14:14,636 [Thread: 10      ] [DEBUG] -- Found 21 <object> elements defining objects.
2019-07-26 15:14:14,636 [Thread: 10      ] [DEBUG] -- Loaded 21 object definitions from location [spring-objects.xml]
2019-07-26 15:14:14,637 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 15:14:14,638 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 15:14:14,833 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 15:14:14,834 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 15:14:14,835 [Thread: 10      ] [DEBUG] -- 21 objects defined in application context [spring.root].
2019-07-26 15:14:14,835 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 15:14:14,847 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:14:14,849 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:14:14,851 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 15:14:15,034 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 15:14:15,036 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 15:14:15,037 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 15:14:15,038 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 15:14:15,040 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 15:14:15,041 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 15:14:15,233 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 15:14:15,235 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 15:14:15,236 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 15:14:15,239 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 15:14:15,240 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 15:14:15,241 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 15:14:15,433 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 15:14:15,434 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 15:14:15,435 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:14:15,436 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 15:14:15,437 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 15:14:15,632 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 15:14:15,633 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 15:14:15,634 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 15:14:15,635 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 15:14:15,635 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 15:14:15,636 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 15:14:15,636 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:14:15,637 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:14:15,832 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:14:15,833 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:14:15,833 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 15:14:15,834 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 15:14:15,835 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 15:14:16,032 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 15:14:16,033 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 15:14:16,033 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 15:14:16,034 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:14:16,034 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:14:16,035 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:14:16,035 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:14:16,232 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:14:16,233 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 15:14:16,233 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 15:14:16,234 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 15:14:16,432 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 15:14:16,433 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:14:16,433 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:14:16,434 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:14:16,435 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:14:16,435 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:14:16,438 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:14:16,439 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:14:16,632 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 15:14:16,633 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 15:14:16,634 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 15:14:16,634 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 15:14:16,835 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 15:14:16,836 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:14:16,836 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 15:14:16,837 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:14:16,837 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:14:16,839 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 15:14:16,840 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:14:17,032 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 15:14:17,033 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:14:17,033 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:14:17,034 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 15:14:17,034 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:14:17,035 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 15:14:17,036 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:14:17,232 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:14:17,258 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 15:14:17,260 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 15:14:17,260 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:14:17,261 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:14:17,261 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:14:17,262 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:14:17,263 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 15:14:17,432 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 15:14:17,433 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 15:14:17,434 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 15:14:17,434 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 15:14:17,632 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 15:14:17,643 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 15:14:17,645 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 15:14:17,646 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 15:14:17,647 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 15:14:17,834 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:14:17,834 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:14:17,835 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 15:14:17,835 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 15:14:18,032 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 15:14:18,033 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 15:14:18,034 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 15:14:18,034 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:14:18,035 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:14:18,035 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:14:18,036 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:14:18,232 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 15:14:18,233 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 15:14:18,234 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:14:18,234 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:14:18,235 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:14:18,238 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:14:18,239 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 15:14:18,433 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:14:18,434 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:14:19,009 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 15:14:19,013 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 15:14:19,014 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 15:14:19,184 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 15:14:19,185 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:14:19,186 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:14:19,187 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:14:19,188 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:14:19,189 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 15:14:19,189 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 15:14:19,425 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 15:14:19,600 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 15:14:19,602 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 15:14:19,604 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 15:14:19,605 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 15:14:19,606 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 15:14:19,607 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:14:19,608 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:14:19,609 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:14:19,809 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 15:14:19,810 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 15:14:19,811 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 15:14:19,812 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 15:14:19,813 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 15:14:20,001 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 15:14:20,003 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 15:14:20,003 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 15:14:20,004 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:14:20,005 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:14:20,006 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:14:20,007 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 15:14:20,008 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 15:14:20,200 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 15:14:20,206 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 15:14:20,220 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 15:14:20,222 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 15:14:20,400 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 15:14:20,401 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:14:20,401 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 15:14:20,402 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 15:14:20,600 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 15:14:20,601 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 15:14:20,602 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 15:14:20,603 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:14:20,605 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:14:20,606 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:14:20,607 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:14:20,801 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:14:20,806 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:14:20,807 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:14:20,808 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 15:14:20,809 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 15:14:20,809 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:14:20,813 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:14:21,001 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:14:21,003 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 15:14:21,004 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 15:14:21,005 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 15:14:21,200 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 15:14:21,201 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 15:14:21,201 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:14:21,203 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:14:21,203 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:14:21,204 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:14:21,205 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 15:14:21,400 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 15:14:21,401 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:14:21,402 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:14:21,403 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:14:21,404 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 15:14:21,404 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 15:14:21,405 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:14:21,600 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 15:14:21,601 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 15:14:21,602 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 15:14:21,603 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 15:14:21,805 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 15:14:21,806 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:14:21,806 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:14:21,808 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:14:21,808 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:14:21,809 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 15:14:21,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 15:14:22,007 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:14:22,007 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 15:14:22,008 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 15:14:22,010 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:14:22,011 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:14:22,011 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsRequestOffineHandler'.
2019-07-26 15:14:22,013 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:14:22,200 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:14:22,201 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 15:14:22,202 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 15:14:22,203 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:14:22,204 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 15:14:22,400 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 15:14:22,401 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 15:14:22,402 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 15:14:22,403 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 15:14:22,404 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:14:22,600 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:14:22,601 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:14:22,602 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:14:22,603 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:14:22,604 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:14:22,605 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:14:22,606 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 15:14:22,809 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 15:14:22,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 15:14:22,812 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 15:14:22,860 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 15:14:22,867 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 15:14:22,868 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:14:22,869 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:14:23,009 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:14:23,011 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 15:14:23,012 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 15:14:23,013 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 15:14:23,210 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 15:14:23,212 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 15:14:23,213 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 15:14:23,215 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:14:23,216 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:14:23,217 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:14:23,232 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:14:23,233 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 15:14:23,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 15:14:23,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 15:14:23,410 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:14:23,410 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:14:23,411 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 15:14:23,411 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:14:23,412 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 15:14:23,609 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 15:14:23,611 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 15:14:23,611 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 15:14:23,613 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 15:14:23,613 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:14:23,808 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:14:23,809 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:14:23,809 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:14:23,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 15:14:23,811 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 15:14:23,812 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:14:23,812 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 15:14:23,813 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 15:14:24,009 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 15:14:24,010 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:14:24,011 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 15:14:24,011 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 15:14:24,208 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 15:14:24,209 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 15:14:24,210 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 15:14:24,210 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:14:24,211 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:14:24,211 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:14:24,212 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:14:24,213 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 15:14:24,408 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 15:14:24,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:14:24,410 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 15:14:24,410 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 15:14:24,411 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 15:14:24,413 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 15:14:24,413 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:14:24,414 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:14:24,608 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:14:24,609 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:14:37,823 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:14:37,824 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:14:37,825 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:14:37,825 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:19:30,344 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:19:30,351 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:19:30,352 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:19:30,353 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:19:30,490 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:19:30,495 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 15:19:30,496 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:19:30,496 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:25:02,970 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 15:25:03,006 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 15:25:03,015 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 15:25:03,018 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 15:25:03,020 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 15:25:03,021 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 15:25:03,022 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 15:25:03,022 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 15:25:03,023 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 15:25:03,024 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:25:03,024 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:25:03,025 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 15:25:03,186 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:25:03,187 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:25:03,199 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 15:25:03,201 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 15:25:03,202 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 15:25:03,202 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 15:25:03,207 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 15:25:03,208 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 15:25:03,209 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 15:25:03,210 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 15:25:03,386 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 15:25:03,391 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 15:25:03,392 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 15:25:03,393 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 15:25:03,394 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 15:25:03,405 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 15:25:03,407 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 15:25:03,412 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 15:25:03,586 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 15:25:03,590 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 15:25:03,592 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 15:25:03,592 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 15:25:03,593 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 15:25:03,594 [Thread: 9       ] [DEBUG] -- Found 21 <object> elements defining objects.
2019-07-26 15:25:03,595 [Thread: 9       ] [DEBUG] -- Loaded 21 object definitions from location [spring-objects.xml]
2019-07-26 15:25:03,596 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 15:25:03,596 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 15:25:03,801 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 15:25:03,802 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 15:25:03,803 [Thread: 9       ] [DEBUG] -- 21 objects defined in application context [spring.root].
2019-07-26 15:25:03,804 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 15:25:03,816 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:25:03,818 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:25:03,820 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 15:25:03,998 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 15:25:04,000 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 15:25:04,001 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 15:25:04,003 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 15:25:04,005 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 15:25:04,007 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 15:25:04,195 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 15:25:04,198 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 15:25:04,199 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 15:25:04,201 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 15:25:04,203 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 15:25:04,204 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 15:25:04,396 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 15:25:04,397 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 15:25:04,397 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:25:04,423 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 15:25:04,424 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 15:25:04,595 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 15:25:04,596 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 15:25:04,597 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 15:25:04,597 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 15:25:04,598 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 15:25:04,598 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 15:25:04,599 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:25:04,599 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:25:04,795 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:25:04,800 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:25:04,801 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 15:25:04,801 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 15:25:04,802 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 15:25:04,995 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 15:25:04,996 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 15:25:04,997 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 15:25:04,997 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:25:04,998 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:25:04,999 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:25:04,999 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:25:05,202 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:25:05,205 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 15:25:05,205 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 15:25:05,206 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 15:25:05,403 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 15:25:05,404 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:25:05,406 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:25:05,407 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:25:05,408 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:25:05,409 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:25:05,412 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:25:05,420 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:25:05,603 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 15:25:05,605 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 15:25:05,607 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 15:25:05,608 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 15:25:05,810 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 15:25:05,812 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:25:05,814 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 15:25:05,815 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:25:05,817 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:25:05,823 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 15:25:05,824 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:25:06,002 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 15:25:06,003 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:25:06,004 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:25:06,010 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 15:25:06,011 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:25:06,012 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 15:25:06,013 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:25:06,202 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:25:06,241 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 15:25:06,242 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 15:25:06,243 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:25:06,243 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:25:06,244 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:25:06,244 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:25:06,245 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 15:25:06,402 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 15:25:06,403 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 15:25:06,404 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 15:25:06,405 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 15:25:06,602 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 15:25:06,607 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 15:25:06,612 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 15:25:06,613 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 15:25:06,614 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 15:25:06,804 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:25:06,804 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:25:06,805 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 15:25:06,806 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 15:25:07,002 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 15:25:07,003 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 15:25:07,004 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 15:25:07,004 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:25:07,005 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:25:07,006 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:25:07,007 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:25:07,202 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 15:25:07,203 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 15:25:07,204 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:25:07,204 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:25:07,205 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:25:07,209 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:25:07,211 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 15:25:07,402 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:25:07,403 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:25:07,959 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 15:25:07,960 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 15:25:07,961 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 15:25:07,963 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 15:25:08,152 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:25:08,158 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:25:08,160 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:25:08,161 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:25:08,363 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 15:25:08,364 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 15:25:08,365 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 15:25:08,365 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 15:25:08,560 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 15:25:08,562 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 15:25:08,562 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 15:25:08,563 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 15:25:08,564 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:25:08,565 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:25:08,565 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:25:08,566 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 15:25:08,759 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 15:25:08,760 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 15:25:08,761 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 15:25:08,762 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 15:25:08,763 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 15:25:08,959 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 15:25:08,960 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 15:25:08,961 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:25:08,961 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:25:08,962 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:08,963 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 15:25:08,964 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 15:25:09,159 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 15:25:09,165 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 15:25:09,165 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 15:25:09,166 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 15:25:09,167 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 15:25:09,359 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:09,360 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 15:25:09,361 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 15:25:09,362 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 15:25:09,559 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:09,560 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 15:25:09,560 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:09,561 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:25:09,562 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:09,562 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:09,563 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:09,759 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:09,760 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:09,761 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 15:25:09,761 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 15:25:09,762 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:25:09,763 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:25:09,961 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:25:09,961 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 15:25:09,962 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 15:25:09,963 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 15:25:09,964 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 15:25:10,160 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 15:25:10,162 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:10,164 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:25:10,165 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:10,167 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:10,170 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 15:25:10,171 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 15:25:10,360 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:25:10,362 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:25:10,364 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:25:10,365 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 15:25:10,367 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 15:25:10,368 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:25:10,370 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 15:25:10,559 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 15:25:10,560 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 15:25:10,561 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 15:25:10,562 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 15:25:10,759 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:10,760 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:25:10,761 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:10,761 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:10,768 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 15:25:10,769 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 15:25:10,770 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:25:10,959 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 15:25:10,960 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 15:25:10,961 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:25:10,961 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:25:10,962 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsRequestOffineHandler'.
2019-07-26 15:25:10,963 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:25:10,964 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:25:11,159 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 15:25:11,160 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 15:25:11,161 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:11,161 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 15:25:11,359 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 15:25:11,360 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 15:25:11,361 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:11,362 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 15:25:11,362 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:11,363 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:25:11,559 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:11,560 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:11,561 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:11,562 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:11,563 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:11,563 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 15:25:11,564 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 15:25:11,760 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 15:25:11,761 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 15:25:11,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 15:25:11,832 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 15:25:11,834 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:11,835 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:11,836 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:25:11,959 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 15:25:11,960 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 15:25:11,960 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 15:25:11,961 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 15:25:12,159 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 15:25:12,160 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 15:25:12,161 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:12,161 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:25:12,162 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:12,163 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:12,164 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 15:25:12,164 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 15:25:12,359 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 15:25:12,360 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:25:12,361 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:25:12,361 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 15:25:12,362 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:25:12,363 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 15:25:12,559 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 15:25:12,560 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 15:25:12,561 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 15:25:12,562 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 15:25:12,563 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:12,564 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:25:12,759 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:12,760 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:12,761 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 15:25:12,762 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 15:25:12,763 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:25:12,764 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 15:25:12,764 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 15:25:12,765 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 15:25:12,959 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:25:12,960 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 15:25:12,961 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 15:25:12,962 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 15:25:13,159 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 15:25:13,160 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 15:25:13,161 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:13,162 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:25:13,162 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:13,163 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:13,164 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 15:25:13,165 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 15:25:13,359 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:25:13,360 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 15:25:13,360 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 15:25:13,361 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 15:25:13,363 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 15:25:13,364 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:25:13,364 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:25:13,365 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:25:13,559 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:25:18,876 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:25:18,877 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:25:18,878 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:25:18,879 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:25:19,041 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:25:19,042 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 15:25:19,042 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:25:19,043 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:25:38,618 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 15:25:38,648 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 15:25:38,656 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 15:25:38,659 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-26 15:25:38,660 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-26 15:25:38,661 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 15:25:38,662 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 15:25:38,663 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-26 15:25:38,664 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-26 15:25:38,664 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 15:25:38,665 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:25:38,666 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 15:25:38,830 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 15:25:38,832 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:25:38,859 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 15:25:38,863 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 15:25:38,864 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 15:25:38,865 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 15:25:38,870 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 15:25:38,871 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 15:25:38,872 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 15:25:38,881 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 15:25:39,029 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 15:25:39,030 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 15:25:39,031 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 15:25:39,032 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 15:25:39,032 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 15:25:39,041 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 15:25:39,044 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 15:25:39,045 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 15:25:39,229 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 15:25:39,230 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 15:25:39,231 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 15:25:39,232 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 15:25:39,233 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 15:25:39,233 [Thread: 10      ] [DEBUG] -- Found 21 <object> elements defining objects.
2019-07-26 15:25:39,234 [Thread: 10      ] [DEBUG] -- Loaded 21 object definitions from location [spring-objects.xml]
2019-07-26 15:25:39,235 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 15:25:39,235 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 15:25:39,430 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 15:25:39,431 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 15:25:39,432 [Thread: 10      ] [DEBUG] -- 21 objects defined in application context [spring.root].
2019-07-26 15:25:39,433 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 15:25:39,444 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:25:39,448 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:25:39,450 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 15:25:39,631 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 15:25:39,632 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 15:25:39,633 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 15:25:39,635 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 15:25:39,637 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 15:25:39,639 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 15:25:39,830 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 15:25:39,832 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 15:25:39,835 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 15:25:39,837 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 15:25:39,839 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 15:25:39,840 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 15:25:40,032 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 15:25:40,034 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 15:25:40,035 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:25:40,035 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 15:25:40,036 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 15:25:40,231 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 15:25:40,232 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 15:25:40,232 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 15:25:40,233 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 15:25:40,234 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 15:25:40,234 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 15:25:40,235 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:25:40,235 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:25:40,431 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:25:40,432 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:25:40,432 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 15:25:40,433 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 15:25:40,434 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 15:25:40,631 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 15:25:40,632 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 15:25:40,632 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 15:25:40,633 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:25:40,633 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:25:40,634 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:25:40,635 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:25:40,831 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:25:40,832 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 15:25:40,833 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 15:25:40,834 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 15:25:41,031 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 15:25:41,032 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:25:41,033 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:25:41,033 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:25:41,034 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:25:41,034 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:25:41,038 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:25:41,038 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:25:41,231 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 15:25:41,232 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 15:25:41,233 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 15:25:41,234 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 15:25:41,434 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 15:25:41,435 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:25:41,435 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 15:25:41,436 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:25:41,436 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:25:41,438 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 15:25:41,439 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:25:41,631 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 15:25:41,632 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:25:41,632 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:25:41,633 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 15:25:41,633 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:25:41,634 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 15:25:41,634 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:25:41,833 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:25:41,860 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 15:25:41,861 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 15:25:41,862 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:25:41,862 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:25:41,863 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:25:41,863 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:25:41,864 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 15:25:42,032 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 15:25:42,033 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 15:25:42,033 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 15:25:42,034 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 15:25:42,233 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 15:25:42,233 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 15:25:42,234 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 15:25:42,234 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 15:25:42,235 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 15:25:42,433 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:25:42,434 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:25:42,435 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 15:25:42,435 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 15:25:42,632 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 15:25:42,633 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 15:25:42,634 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 15:25:42,635 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:25:42,635 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:25:42,636 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:25:42,636 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:25:42,832 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 15:25:42,833 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 15:25:42,835 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:25:42,835 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:25:42,836 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:25:42,840 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:25:42,841 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 15:25:43,033 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:25:43,035 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:25:43,570 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 15:25:43,575 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 15:25:43,576 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 15:25:43,577 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 15:25:43,755 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:25:43,756 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:25:43,757 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:25:43,757 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:25:43,758 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 15:25:43,759 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 15:25:43,970 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 15:25:43,993 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 15:25:44,156 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 15:25:44,157 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 15:25:44,158 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 15:25:44,158 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 15:25:44,159 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:25:44,160 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:25:44,160 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:25:44,161 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 15:25:44,355 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 15:25:44,356 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 15:25:44,357 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 15:25:44,357 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 15:25:44,358 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 15:25:44,555 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 15:25:44,556 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 15:25:44,556 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:25:44,557 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:25:44,557 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:44,558 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 15:25:44,559 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 15:25:44,755 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 15:25:44,760 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 15:25:44,762 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 15:25:44,762 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 15:25:44,763 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 15:25:44,955 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:44,956 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 15:25:44,957 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 15:25:44,957 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 15:25:45,155 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:45,156 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 15:25:45,156 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:45,157 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:25:45,157 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:45,158 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:45,159 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:45,356 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:45,356 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:25:45,357 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 15:25:45,357 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 15:25:45,358 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:25:45,361 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:25:45,555 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:25:45,556 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 15:25:45,556 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 15:25:45,557 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 15:25:45,558 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 15:25:45,755 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 15:25:45,756 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:45,757 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:25:45,757 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:45,758 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:45,758 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 15:25:45,759 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 15:25:45,955 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:25:45,956 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:25:45,957 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:25:45,957 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 15:25:45,958 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 15:25:45,958 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:25:45,959 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 15:25:46,155 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 15:25:46,156 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 15:25:46,156 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 15:25:46,157 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 15:25:46,355 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:46,356 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:25:46,356 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:46,357 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:46,357 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 15:25:46,358 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 15:25:46,359 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:25:46,555 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 15:25:46,556 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 15:25:46,556 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:25:46,557 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:25:46,557 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsRequestOffineHandler'.
2019-07-26 15:25:46,558 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:25:46,558 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:25:46,755 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 15:25:46,756 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 15:25:46,756 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:46,757 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 15:25:46,956 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 15:25:46,956 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 15:25:46,957 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:46,958 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 15:25:46,958 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:46,959 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:25:47,155 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:47,156 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:47,157 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:47,157 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:47,158 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:25:47,158 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 15:25:47,159 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 15:25:47,356 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 15:25:47,357 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 15:25:47,404 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 15:25:47,405 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 15:25:47,406 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:47,406 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:47,407 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:25:47,556 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 15:25:47,558 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 15:25:47,559 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 15:25:47,561 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 15:25:47,756 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 15:25:47,757 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 15:25:47,759 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:47,760 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:25:47,761 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:47,763 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:47,764 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 15:25:47,766 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 15:25:47,955 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 15:25:47,956 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:25:47,957 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:25:47,958 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 15:25:47,959 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:25:47,960 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 15:25:48,155 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 15:25:48,156 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 15:25:48,156 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 15:25:48,157 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 15:25:48,158 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:48,160 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:25:48,355 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:48,356 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:48,357 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 15:25:48,357 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 15:25:48,358 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:25:48,358 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 15:25:48,359 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 15:25:48,367 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 15:25:48,555 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:25:48,556 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 15:25:48,556 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 15:25:48,557 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 15:25:48,755 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 15:25:48,756 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 15:25:48,756 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:25:48,757 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:25:48,757 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:25:48,758 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:25:48,759 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 15:25:48,759 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 15:25:48,955 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:25:48,956 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 15:25:48,956 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 15:25:48,957 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 15:25:48,958 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 15:25:48,959 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:25:48,960 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:25:48,960 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:25:49,155 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:26:09,862 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:26:09,863 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:26:09,868 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:26:09,869 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:26:21,563 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:26:21,564 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 15:26:21,565 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:26:21,565 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:26:21,861 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:26:21,862 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:26:21,862 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:26:21,863 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:26:36,005 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:26:36,006 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:26:36,008 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:26:36,009 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:29:00,446 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:29:00,447 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:29:00,459 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:29:00,460 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:29:00,762 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:29:00,762 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 15:29:00,764 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:29:00,765 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:31:07,424 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 15:31:07,458 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 15:31:07,466 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 15:31:07,469 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 15:31:07,471 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 15:31:07,472 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 15:31:07,472 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 15:31:07,473 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 15:31:07,474 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 15:31:07,474 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:31:07,475 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:31:07,476 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 15:31:07,644 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 15:31:07,645 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:31:07,656 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 15:31:07,658 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 15:31:07,659 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 15:31:07,660 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 15:31:07,671 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 15:31:07,672 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 15:31:07,673 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 15:31:07,674 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 15:31:07,844 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 15:31:07,845 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 15:31:07,846 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 15:31:07,846 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 15:31:07,847 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 15:31:07,857 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 15:31:07,858 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 15:31:07,859 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 15:31:08,044 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 15:31:08,045 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 15:31:08,046 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 15:31:08,046 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 15:31:08,047 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 15:31:08,048 [Thread: 9       ] [DEBUG] -- Found 21 <object> elements defining objects.
2019-07-26 15:31:08,049 [Thread: 9       ] [DEBUG] -- Loaded 21 object definitions from location [spring-objects.xml]
2019-07-26 15:31:08,050 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 15:31:08,050 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 15:31:08,245 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 15:31:08,246 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 15:31:08,247 [Thread: 9       ] [DEBUG] -- 21 objects defined in application context [spring.root].
2019-07-26 15:31:08,247 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 15:31:08,259 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:31:08,270 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:31:08,272 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 15:31:08,446 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 15:31:08,447 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 15:31:08,448 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 15:31:08,449 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 15:31:08,451 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 15:31:08,453 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 15:31:08,645 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 15:31:08,647 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 15:31:08,653 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 15:31:08,655 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 15:31:08,657 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 15:31:08,658 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 15:31:08,845 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 15:31:08,846 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 15:31:08,847 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:31:08,848 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 15:31:08,849 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 15:31:09,045 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 15:31:09,047 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 15:31:09,048 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 15:31:09,050 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 15:31:09,051 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 15:31:09,053 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 15:31:09,055 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:31:09,056 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:31:09,245 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:31:09,247 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:31:09,249 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 15:31:09,251 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 15:31:09,252 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 15:31:09,445 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 15:31:09,446 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 15:31:09,448 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 15:31:09,449 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:31:09,451 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:31:09,452 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:31:09,453 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:31:09,645 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:31:09,645 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 15:31:09,646 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 15:31:09,647 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 15:31:09,844 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 15:31:09,845 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:31:09,845 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:31:09,846 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:31:09,847 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:31:09,849 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:31:09,853 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:31:09,859 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:31:10,044 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 15:31:10,045 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 15:31:10,046 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 15:31:10,046 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 15:31:10,247 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 15:31:10,248 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:31:10,249 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 15:31:10,249 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:31:10,250 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:31:10,252 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 15:31:10,252 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:31:10,444 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 15:31:10,445 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:31:10,445 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:31:10,446 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 15:31:10,446 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:31:10,447 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 15:31:10,448 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:31:10,644 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:31:10,675 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 15:31:10,675 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 15:31:10,676 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:31:10,677 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:31:10,677 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:31:10,678 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:31:10,678 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 15:31:10,844 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 15:31:10,845 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 15:31:10,846 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 15:31:10,846 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 15:31:11,044 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 15:31:11,045 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 15:31:11,045 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 15:31:11,046 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 15:31:11,046 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 15:31:11,245 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:31:11,246 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:31:11,247 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 15:31:11,247 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 15:31:11,444 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 15:31:11,445 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 15:31:11,446 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 15:31:11,446 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:31:11,447 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:31:11,447 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:31:11,448 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:31:11,645 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 15:31:11,646 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 15:31:11,646 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:31:11,647 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:31:11,647 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:31:11,651 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:31:11,652 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 15:31:11,850 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:31:11,851 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:31:12,362 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 15:31:12,583 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 15:31:12,734 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 15:31:12,735 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 15:31:12,735 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:31:12,736 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:31:12,736 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:31:12,737 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:31:12,738 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 15:31:12,934 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 15:31:12,935 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 15:31:12,935 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 15:31:12,937 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 15:31:12,938 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 15:31:12,938 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 15:31:12,939 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 15:31:12,939 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:31:13,134 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:31:13,135 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:31:13,135 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 15:31:13,136 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 15:31:13,136 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 15:31:13,334 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 15:31:13,335 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 15:31:13,336 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 15:31:13,336 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 15:31:13,337 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 15:31:13,337 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:31:13,338 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:31:13,338 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:31:13,534 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 15:31:13,535 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 15:31:13,536 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 15:31:13,541 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 15:31:13,735 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 15:31:13,737 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 15:31:13,739 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 15:31:13,740 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:31:13,742 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 15:31:13,935 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 15:31:13,946 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 15:31:13,948 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 15:31:13,949 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 15:31:13,951 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:31:13,952 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:31:14,134 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:31:14,135 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:31:14,136 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:31:14,136 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:31:14,137 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:31:14,138 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 15:31:14,138 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 15:31:14,334 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:31:14,335 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:31:14,337 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:31:14,338 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 15:31:14,534 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 15:31:14,535 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 15:31:14,536 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 15:31:14,536 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 15:31:14,537 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:31:14,537 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:31:14,734 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:31:14,735 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:31:14,736 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 15:31:14,736 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 15:31:14,737 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:31:14,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:31:14,738 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:31:14,738 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 15:31:14,937 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 15:31:14,938 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:31:14,939 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 15:31:14,939 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 15:31:15,134 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 15:31:15,135 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 15:31:15,136 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 15:31:15,136 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:31:15,137 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:31:15,137 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:31:15,138 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:31:15,334 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 15:31:15,335 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 15:31:15,336 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:31:15,336 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 15:31:15,337 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 15:31:15,337 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:31:15,338 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:31:15,534 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsRequestOffineHandler'.
2019-07-26 15:31:15,535 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:31:15,535 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:31:15,536 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 15:31:15,536 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 15:31:15,537 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:31:15,734 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 15:31:15,735 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 15:31:15,735 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 15:31:15,736 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 15:31:15,934 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 15:31:15,935 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:31:15,935 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:31:15,936 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:31:15,936 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:31:15,937 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:31:15,938 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:31:16,139 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:31:16,139 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 15:31:16,140 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 15:31:16,142 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 15:31:16,142 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 15:31:16,200 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 15:31:16,206 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 15:31:16,334 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:31:16,335 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:31:16,336 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:31:16,336 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 15:31:16,337 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 15:31:16,534 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 15:31:16,535 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 15:31:16,536 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 15:31:16,536 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 15:31:16,537 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:31:16,537 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:31:16,538 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:31:16,734 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:31:16,735 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 15:31:16,736 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 15:31:16,736 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 15:31:16,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:31:16,737 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:31:16,738 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 15:31:16,738 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:31:16,934 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 15:31:16,935 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 15:31:16,935 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 15:31:16,936 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 15:31:17,142 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 15:31:17,143 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:31:17,143 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:31:17,144 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:31:17,144 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:31:17,145 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 15:31:17,146 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 15:31:17,146 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:31:17,334 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 15:31:17,335 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 15:31:17,335 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 15:31:17,336 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:31:17,337 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 15:31:17,534 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 15:31:17,535 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 15:31:17,535 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 15:31:17,536 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 15:31:17,537 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:31:17,537 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:31:17,734 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:31:17,735 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:31:17,735 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 15:31:17,736 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 15:31:17,736 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:31:17,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 15:31:17,737 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 15:31:17,738 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 15:31:17,935 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 15:31:17,936 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:31:17,936 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:31:17,937 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:31:17,938 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:31:30,468 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:31:30,469 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:31:30,469 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:31:30,470 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:31:30,663 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:31:30,666 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 15:31:30,868 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:31:30,869 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:31:31,263 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:31:31,265 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:31:31,267 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:31:31,267 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:32:15,919 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:32:15,920 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:32:15,921 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:32:15,921 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:32:20,719 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:32:20,720 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:32:20,721 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:32:20,721 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:32:20,908 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:32:20,908 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 15:32:20,909 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:32:20,909 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:32:38,688 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 15:32:38,721 [Thread: 11      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 15:32:38,731 [Thread: 11      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 15:32:38,734 [Thread: 11      ] [DEBUG] -- Loading object definitions.
2019-07-26 15:32:38,735 [Thread: 11      ] [DEBUG] -- Loading object definitions...
2019-07-26 15:32:38,736 [Thread: 11      ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 15:32:38,737 [Thread: 11      ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 15:32:38,738 [Thread: 11      ] [DEBUG] -- Default autowire 'no'.
2019-07-26 15:32:38,739 [Thread: 11      ] [DEBUG] -- Default merge 'false'.
2019-07-26 15:32:38,739 [Thread: 11      ] [DEBUG] -- Default init method ''.
2019-07-26 15:32:38,740 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:32:38,741 [Thread: 11      ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 15:32:38,742 [Thread: 11      ] [DEBUG] -- Default init method ''.
2019-07-26 15:32:38,742 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2019-07-26 15:32:38,933 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 15:32:38,936 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 15:32:38,937 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 15:32:38,937 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 15:32:38,945 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 15:32:38,946 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 15:32:38,948 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 15:32:38,948 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 15:32:38,949 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 15:32:39,122 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 15:32:39,123 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 15:32:39,124 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 15:32:39,124 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 15:32:39,135 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 15:32:39,136 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 15:32:39,136 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 15:32:39,137 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 15:32:39,138 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 15:32:39,322 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 15:32:39,323 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 15:32:39,324 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 15:32:39,325 [Thread: 11      ] [DEBUG] -- Found 21 <object> elements defining objects.
2019-07-26 15:32:39,325 [Thread: 11      ] [DEBUG] -- Loaded 21 object definitions from location [spring-objects.xml]
2019-07-26 15:32:39,326 [Thread: 11      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 15:32:39,327 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 15:32:39,328 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 15:32:39,522 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 15:32:39,523 [Thread: 11      ] [DEBUG] -- 21 objects defined in application context [spring.root].
2019-07-26 15:32:39,523 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 15:32:39,535 [Thread: 11      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:32:39,539 [Thread: 11      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 15:32:39,541 [Thread: 11      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 15:32:39,543 [Thread: 11      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 15:32:39,723 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 15:32:39,724 [Thread: 11      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 15:32:39,725 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 15:32:39,727 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 15:32:39,728 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 15:32:39,922 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 15:32:39,925 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 15:32:39,926 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 15:32:39,928 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 15:32:39,930 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 15:32:39,931 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 15:32:39,932 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 15:32:39,940 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 15:32:40,122 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:32:40,123 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 15:32:40,124 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 15:32:40,124 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 15:32:40,322 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 15:32:40,323 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 15:32:40,324 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 15:32:40,324 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 15:32:40,325 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 15:32:40,325 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:32:40,326 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:32:40,326 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:32:40,522 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:32:40,523 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 15:32:40,523 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 15:32:40,524 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 15:32:40,525 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 15:32:40,722 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 15:32:40,723 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 15:32:40,723 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 15:32:40,724 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:32:40,724 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:32:40,725 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:32:40,725 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:32:40,922 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 15:32:40,923 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 15:32:40,924 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 15:32:40,924 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 15:32:40,925 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:32:41,122 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 15:32:41,133 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 15:32:41,134 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:32:41,134 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:32:41,140 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:32:41,141 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:32:41,141 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 15:32:41,322 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 15:32:41,323 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 15:32:41,324 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 15:32:41,327 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 15:32:41,522 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 15:32:41,523 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 15:32:41,523 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 15:32:41,524 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 15:32:41,526 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 15:32:41,527 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 15:32:41,527 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 15:32:41,528 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 15:32:41,723 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 15:32:41,725 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 15:32:41,727 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 15:32:41,728 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 15:32:41,731 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 15:32:41,732 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 15:32:41,970 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 15:32:41,971 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 15:32:41,972 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 15:32:41,973 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:32:41,974 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:32:41,975 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:32:41,976 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 15:32:41,977 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 15:32:42,123 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 15:32:42,125 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 15:32:42,126 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 15:32:42,128 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 15:32:42,322 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 15:32:42,323 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 15:32:42,324 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 15:32:42,324 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 15:32:42,326 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:32:42,522 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:32:42,523 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 15:32:42,523 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 15:32:42,524 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 15:32:42,722 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 15:32:42,723 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 15:32:42,723 [Thread: 11      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:32:42,724 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:32:42,725 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:32:42,725 [Thread: 11      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:32:42,726 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 15:32:42,922 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 15:32:42,923 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 15:32:42,923 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:32:42,924 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:32:42,928 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 15:32:42,928 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 15:32:42,929 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 15:32:43,122 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 15:32:43,657 [Thread: 11      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 15:32:43,658 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 15:32:43,659 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 15:32:43,661 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 15:32:43,844 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:32:43,845 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:32:43,846 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:32:43,847 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:32:43,848 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 15:32:44,043 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 15:32:44,043 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 15:32:44,044 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 15:32:44,046 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 15:32:44,047 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 15:32:44,048 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 15:32:44,049 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 15:32:44,257 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:32:44,258 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:32:44,259 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:32:44,259 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 15:32:44,442 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 15:32:44,443 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 15:32:44,444 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 15:32:44,444 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 15:32:44,445 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 15:32:44,642 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 15:32:44,643 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 15:32:44,643 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:32:44,644 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 15:32:44,644 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:32:44,645 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 15:32:44,646 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 15:32:44,842 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 15:32:44,847 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 15:32:44,848 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 15:32:44,849 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 15:32:44,849 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 15:32:45,042 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:32:45,049 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 15:32:45,049 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 15:32:45,050 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 15:32:45,250 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 15:32:45,251 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 15:32:45,252 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:32:45,252 [Thread: 11      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:32:45,253 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:32:45,253 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:32:45,254 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:32:45,442 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 15:32:45,443 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 15:32:45,443 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 15:32:45,444 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 15:32:45,445 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:32:45,447 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:32:45,642 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:32:45,643 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 15:32:45,643 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 15:32:45,644 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 15:32:45,645 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 15:32:45,842 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 15:32:45,843 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:32:45,843 [Thread: 11      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:32:45,844 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:32:45,844 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:32:45,845 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 15:32:45,846 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 15:32:46,042 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 15:32:46,043 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:32:46,043 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:32:46,044 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 15:32:46,044 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 15:32:46,045 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:32:46,046 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 15:32:46,242 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 15:32:46,243 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 15:32:46,244 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 15:32:46,244 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 15:32:46,444 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:32:46,445 [Thread: 11      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:32:46,447 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:32:46,449 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:32:46,451 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 15:32:46,452 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 15:32:46,454 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 15:32:46,643 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 15:32:46,645 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 15:32:46,646 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 15:32:46,648 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 15:32:46,650 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'secsRequestOffineHandler'.
2019-07-26 15:32:46,652 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 15:32:46,653 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 15:32:46,842 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 15:32:46,843 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 15:32:46,844 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:32:46,844 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 15:32:47,042 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 15:32:47,043 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 15:32:47,044 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 15:32:47,044 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 15:32:47,045 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:32:47,045 [Thread: 11      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 15:32:47,242 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:32:47,243 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:32:47,243 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:32:47,244 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 15:32:47,245 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 15:32:47,245 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 15:32:47,246 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 15:32:47,443 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 15:32:47,445 [Thread: 11      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 15:32:47,500 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 15:32:47,502 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 15:32:47,511 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:32:47,512 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:32:47,514 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:32:47,642 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 15:32:47,643 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 15:32:47,644 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 15:32:47,646 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 15:32:47,842 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 15:32:47,843 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 15:32:47,843 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:32:47,844 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:32:47,845 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:32:47,857 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:32:47,858 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 15:32:47,859 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 15:32:48,042 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 15:32:48,043 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:32:48,044 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:32:48,044 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 15:32:48,045 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:32:48,045 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 15:32:48,242 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 15:32:48,243 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 15:32:48,243 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 15:32:48,244 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 15:32:48,245 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:32:48,245 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:32:48,442 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:32:48,443 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:32:48,443 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 15:32:48,444 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 15:32:48,445 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 15:32:48,445 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 15:32:48,446 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 15:32:48,446 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 15:32:48,644 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:32:48,645 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 15:32:48,646 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 15:32:48,647 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 15:32:48,842 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 15:32:48,843 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 15:32:48,843 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 15:32:48,844 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 15:32:48,844 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 15:32:48,845 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 15:32:48,846 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 15:32:48,846 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 15:32:49,042 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 15:32:49,043 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 15:32:49,043 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 15:32:49,044 [Thread: 11      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 15:32:49,045 [Thread: 11      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 15:32:49,046 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 15:32:49,047 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 15:32:49,048 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 15:32:49,242 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 15:33:00,728 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:33:00,730 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:33:00,732 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:33:00,733 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:33:00,911 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:33:01,112 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 15:33:01,113 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:33:01,113 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:33:01,511 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:33:01,512 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:33:01,514 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:33:01,516 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:33:22,978 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:33:23,003 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:33:23,004 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:33:23,005 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:33:23,131 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 15:33:23,132 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 15:33:23,132 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 15:33:23,133 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 15:34:17,975 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 15:34:17,977 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 15:34:17,978 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 15:34:17,979 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 15:34:18,113 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 15:34:18,114 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 15:34:18,115 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 15:34:18,115 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 16:15:35,293 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 16:15:35,332 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 16:15:35,342 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 16:15:35,346 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 16:15:35,348 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 16:15:35,349 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 16:15:35,350 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 16:15:35,351 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 16:15:35,351 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 16:15:35,352 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 16:15:35,353 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 16:15:35,354 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 16:15:35,355 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 16:15:35,355 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 16:15:35,550 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 16:15:35,552 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 16:15:35,553 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 16:15:35,554 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 16:15:35,559 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 16:15:35,560 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 16:15:35,561 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 16:15:35,562 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 16:15:35,563 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 16:15:35,738 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 16:15:35,739 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 16:15:35,740 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 16:15:35,741 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 16:15:35,750 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 16:15:35,757 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 16:15:35,758 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 16:15:35,759 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 16:15:35,760 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 16:15:35,938 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 16:15:35,939 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 16:15:35,940 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 16:15:35,941 [Thread: 9       ] [DEBUG] -- Found 21 <object> elements defining objects.
2019-07-26 16:15:35,941 [Thread: 9       ] [DEBUG] -- Loaded 21 object definitions from location [spring-objects.xml]
2019-07-26 16:15:35,942 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 16:15:35,943 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 16:15:35,945 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 16:15:36,142 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 16:15:36,143 [Thread: 9       ] [DEBUG] -- 21 objects defined in application context [spring.root].
2019-07-26 16:15:36,143 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 16:15:36,155 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 16:15:36,157 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 16:15:36,158 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 16:15:36,161 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 16:15:36,340 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 16:15:36,341 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 16:15:36,343 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 16:15:36,344 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 16:15:36,346 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 16:15:36,539 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 16:15:36,542 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 16:15:36,543 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 16:15:36,545 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 16:15:36,547 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 16:15:36,547 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 16:15:36,549 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 16:15:36,549 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 16:15:36,739 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 16:15:36,740 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 16:15:36,740 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 16:15:36,741 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 16:15:36,940 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 16:15:36,940 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 16:15:36,941 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 16:15:36,942 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 16:15:36,942 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 16:15:36,943 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 16:15:36,943 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 16:15:36,944 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 16:15:37,139 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 16:15:37,140 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 16:15:37,140 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 16:15:37,141 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 16:15:37,141 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 16:15:37,339 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 16:15:37,340 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 16:15:37,341 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 16:15:37,341 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 16:15:37,342 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 16:15:37,342 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 16:15:37,343 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 16:15:37,539 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 16:15:37,540 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 16:15:37,540 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 16:15:37,541 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 16:15:37,542 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 16:15:37,739 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 16:15:37,740 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 16:15:37,743 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 16:15:37,744 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 16:15:37,744 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 16:15:37,745 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 16:15:37,745 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 16:15:37,939 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 16:15:37,940 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 16:15:37,941 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 16:15:37,945 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 16:15:38,140 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 16:15:38,142 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 16:15:38,143 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 16:15:38,145 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 16:15:38,148 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 16:15:38,150 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 16:15:38,151 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 16:15:38,152 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 16:15:38,340 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 16:15:38,342 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 16:15:38,343 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 16:15:38,344 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 16:15:38,346 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 16:15:38,347 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 16:15:38,579 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 16:15:38,579 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 16:15:38,580 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 16:15:38,581 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 16:15:38,582 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 16:15:38,583 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 16:15:38,583 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 16:15:38,584 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 16:15:38,740 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 16:15:38,742 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 16:15:38,743 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 16:15:38,743 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 16:15:38,941 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 16:15:38,942 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 16:15:38,944 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 16:15:38,947 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 16:15:38,952 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 16:15:39,139 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 16:15:39,140 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 16:15:39,140 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 16:15:39,141 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 16:15:39,339 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 16:15:39,340 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 16:15:39,340 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 16:15:39,341 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 16:15:39,341 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 16:15:39,342 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 16:15:39,343 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 16:15:39,549 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 16:15:39,549 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 16:15:39,550 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 16:15:39,551 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 16:15:39,554 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 16:15:39,555 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 16:15:39,556 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 16:15:39,747 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 16:15:40,287 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 16:15:40,302 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 16:15:40,467 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 16:15:40,468 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 16:15:40,469 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 16:15:40,470 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 16:15:40,470 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 16:15:40,471 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 16:15:40,679 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 16:15:40,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 16:15:40,693 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 16:15:40,694 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 16:15:40,696 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 16:15:40,699 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 16:15:40,868 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 16:15:40,872 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 16:15:40,873 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 16:15:40,874 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 16:15:41,072 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 16:15:41,073 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 16:15:41,074 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 16:15:41,074 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 16:15:41,075 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 16:15:41,271 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 16:15:41,272 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 16:15:41,273 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 16:15:41,273 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 16:15:41,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 16:15:41,275 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 16:15:41,275 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:15:41,478 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 16:15:41,479 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 16:15:41,480 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 16:15:41,486 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 16:15:41,487 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 16:15:41,671 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 16:15:41,672 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 16:15:41,673 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 16:15:41,673 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 16:15:41,871 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 16:15:41,872 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 16:15:41,873 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 16:15:41,874 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 16:15:41,875 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:15:41,876 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:15:42,071 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:15:42,072 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:15:42,073 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 16:15:42,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 16:15:42,074 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 16:15:42,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 16:15:42,078 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 16:15:42,078 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 16:15:42,271 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 16:15:42,272 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 16:15:42,279 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 16:15:42,471 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 16:15:42,472 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 16:15:42,473 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 16:15:42,474 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 16:15:42,474 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:15:42,475 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:15:42,476 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:15:42,671 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:15:42,672 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 16:15:42,673 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 16:15:42,674 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 16:15:42,675 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 16:15:42,675 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 16:15:42,676 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 16:15:42,871 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 16:15:42,872 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 16:15:42,873 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 16:15:42,873 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 16:15:43,071 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 16:15:43,072 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 16:15:43,073 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 16:15:43,074 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:15:43,074 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:15:43,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:15:43,076 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:15:43,272 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 16:15:43,273 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 16:15:43,274 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 16:15:43,275 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 16:15:43,276 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 16:15:43,277 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 16:15:43,278 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 16:15:43,471 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsRequestOffineHandler'.
2019-07-26 16:15:43,475 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 16:15:43,476 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 16:15:43,478 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 16:15:43,479 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 16:15:43,480 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 16:15:43,481 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 16:15:43,672 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 16:15:43,684 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 16:15:43,685 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 16:15:43,692 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 16:15:43,871 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:15:43,872 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:15:43,872 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:15:43,873 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:15:43,874 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 16:15:43,875 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 16:15:44,071 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 16:15:44,072 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 16:15:44,073 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 16:15:44,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 16:15:44,075 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 16:15:44,128 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 16:15:44,135 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 16:15:44,136 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:15:44,271 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:15:44,272 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:15:44,273 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 16:15:44,273 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 16:15:44,476 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 16:15:44,477 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 16:15:44,478 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 16:15:44,479 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 16:15:44,480 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:15:44,481 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 16:15:44,482 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:15:44,482 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:15:44,671 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 16:15:44,672 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 16:15:44,673 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 16:15:44,673 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:15:44,674 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:15:44,675 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 16:15:44,675 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 16:15:44,676 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 16:15:44,871 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 16:15:44,872 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 16:15:44,873 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 16:15:44,874 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 16:15:45,071 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:15:45,072 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 16:15:45,073 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:15:45,073 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:15:45,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 16:15:45,075 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 16:15:45,076 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 16:15:45,077 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 16:15:45,271 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 16:15:45,272 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 16:15:45,273 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 16:15:45,273 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 16:15:45,471 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 16:15:45,472 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 16:15:45,473 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 16:15:45,474 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 16:15:45,474 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:15:45,475 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 16:15:45,476 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:15:45,674 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:15:45,675 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 16:15:45,676 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 16:15:45,677 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 16:15:45,678 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 16:15:45,678 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 16:15:45,680 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 16:15:45,681 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 16:15:45,872 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 16:15:45,873 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 16:15:45,874 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 16:15:45,874 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 16:16:10,835 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:16:10,836 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 16:16:10,837 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:16:10,838 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:16:10,979 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 16:16:10,991 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 16:16:10,992 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 16:16:10,994 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 16:17:01,030 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 16:17:01,068 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 16:17:01,078 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 16:17:01,081 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 16:17:01,082 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 16:17:01,083 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 16:17:01,084 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 16:17:01,085 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 16:17:01,085 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 16:17:01,086 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 16:17:01,087 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 16:17:01,087 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 16:17:01,247 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 16:17:01,248 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 16:17:01,260 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 16:17:01,265 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 16:17:01,267 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 16:17:01,268 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 16:17:01,275 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 16:17:01,276 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 16:17:01,277 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 16:17:01,278 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 16:17:01,447 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 16:17:01,448 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 16:17:01,449 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 16:17:01,449 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 16:17:01,450 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 16:17:01,459 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 16:17:01,460 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 16:17:01,460 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 16:17:01,647 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 16:17:01,648 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 16:17:01,649 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 16:17:01,650 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 16:17:01,651 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 16:17:01,652 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-26 16:17:01,652 [Thread: 9       ] [DEBUG] -- Found 22 <object> elements defining objects.
2019-07-26 16:17:01,653 [Thread: 9       ] [DEBUG] -- Loaded 22 object definitions from location [spring-objects.xml]
2019-07-26 16:17:01,654 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 16:17:01,854 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 16:17:01,856 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 16:17:01,857 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 16:17:01,858 [Thread: 9       ] [DEBUG] -- 22 objects defined in application context [spring.root].
2019-07-26 16:17:01,859 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 16:17:01,871 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 16:17:01,873 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 16:17:01,875 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 16:17:02,056 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 16:17:02,057 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 16:17:02,058 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 16:17:02,059 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 16:17:02,061 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 16:17:02,063 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 16:17:02,254 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 16:17:02,257 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 16:17:02,258 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 16:17:02,261 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 16:17:02,262 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 16:17:02,455 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 16:17:02,457 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 16:17:02,459 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 16:17:02,460 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 16:17:02,461 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 16:17:02,462 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 16:17:02,656 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 16:17:02,659 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 16:17:02,661 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 16:17:02,663 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 16:17:02,665 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 16:17:02,667 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 16:17:02,669 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 16:17:02,855 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 16:17:02,856 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 16:17:02,857 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 16:17:02,857 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 16:17:02,858 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 16:17:03,055 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 16:17:03,059 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 16:17:03,060 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 16:17:03,061 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 16:17:03,062 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 16:17:03,063 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 16:17:03,064 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 16:17:03,065 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 16:17:03,277 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 16:17:03,280 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 16:17:03,281 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 16:17:03,282 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 16:17:03,454 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 16:17:03,455 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 16:17:03,456 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 16:17:03,457 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 16:17:03,460 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 16:17:03,461 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 16:17:03,462 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 16:17:03,654 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 16:17:03,655 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 16:17:03,656 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 16:17:03,657 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 16:17:03,854 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 16:17:03,858 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 16:17:03,859 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 16:17:03,860 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 16:17:03,861 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 16:17:03,861 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 16:17:03,863 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 16:17:03,864 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 16:17:04,054 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 16:17:04,055 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 16:17:04,056 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 16:17:04,056 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 16:17:04,057 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 16:17:04,058 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 16:17:04,254 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 16:17:04,255 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 16:17:04,284 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 16:17:04,284 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 16:17:04,285 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 16:17:04,286 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 16:17:04,286 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 16:17:04,287 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 16:17:04,454 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 16:17:04,455 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 16:17:04,456 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 16:17:04,458 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 16:17:04,654 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 16:17:04,655 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 16:17:04,656 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 16:17:04,657 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 16:17:04,657 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 16:17:04,854 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 16:17:04,856 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 16:17:04,857 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 16:17:04,858 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 16:17:05,054 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 16:17:05,055 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 16:17:05,056 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 16:17:05,061 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 16:17:05,062 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 16:17:05,065 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 16:17:05,066 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 16:17:05,254 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 16:17:05,255 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 16:17:05,256 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 16:17:05,256 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 16:17:05,257 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 16:17:05,258 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 16:17:05,262 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 16:17:05,462 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 16:17:05,462 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 16:17:05,463 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 16:17:06,007 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 16:17:06,008 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 16:17:06,222 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 16:17:06,224 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 16:17:06,382 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 16:17:06,384 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 16:17:06,385 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 16:17:06,386 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 16:17:06,387 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 16:17:06,388 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 16:17:06,581 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 16:17:06,582 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 16:17:06,584 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 16:17:06,585 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 16:17:06,586 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 16:17:06,586 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 16:17:06,593 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 16:17:06,595 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 16:17:06,781 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 16:17:06,782 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 16:17:06,783 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 16:17:06,784 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 16:17:06,784 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 16:17:06,982 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 16:17:06,984 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 16:17:06,985 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 16:17:06,986 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 16:17:06,987 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 16:17:06,988 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 16:17:06,990 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:07,182 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 16:17:07,184 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 16:17:07,186 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 16:17:07,199 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 16:17:07,202 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 16:17:07,383 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 16:17:07,384 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 16:17:07,386 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 16:17:07,388 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 16:17:07,581 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 16:17:07,583 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 16:17:07,584 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 16:17:07,584 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 16:17:07,585 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:07,586 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:17:07,781 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:07,789 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:07,792 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 16:17:07,793 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 16:17:07,794 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 16:17:07,794 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 16:17:07,795 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 16:17:07,798 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-26 16:17:07,986 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-26 16:17:07,986 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-26 16:17:07,987 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 138].
2019-07-26 16:17:08,185 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-26 16:17:08,186 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-26 16:17:08,187 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-26 16:17:08,188 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-26 16:17:08,188 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:08,189 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:17:08,190 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:08,385 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:08,386 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-26 16:17:08,387 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-26 16:17:08,387 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-26 16:17:08,388 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-26 16:17:08,389 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-26 16:17:08,389 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 16:17:08,585 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 16:17:08,586 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 16:17:08,586 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 16:17:08,587 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 16:17:08,785 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 16:17:08,786 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 16:17:08,787 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 16:17:08,788 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:08,788 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:17:08,789 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:08,789 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:08,985 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 16:17:08,986 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 16:17:08,987 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 16:17:08,987 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 16:17:08,988 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 16:17:08,989 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 16:17:08,990 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 16:17:09,185 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 16:17:09,186 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 16:17:09,187 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 16:17:09,187 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 16:17:09,385 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 16:17:09,386 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 16:17:09,387 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:09,388 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:17:09,389 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:09,389 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:09,390 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 16:17:09,591 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 16:17:09,592 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 16:17:09,593 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 16:17:09,594 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 16:17:09,594 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 16:17:09,595 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 16:17:09,595 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 16:17:09,794 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 16:17:09,795 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 16:17:09,795 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 16:17:09,796 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 16:17:09,994 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 16:17:09,995 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:09,996 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 16:17:09,996 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:09,997 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:09,998 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 16:17:10,194 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 16:17:10,195 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 16:17:10,196 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 16:17:10,196 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 16:17:10,198 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 16:17:10,199 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 16:17:10,251 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 16:17:10,253 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 16:17:10,394 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:10,395 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:10,396 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:17:10,396 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 16:17:10,397 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 16:17:10,594 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 16:17:10,601 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 16:17:10,602 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 16:17:10,602 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 16:17:10,603 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:10,604 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 16:17:10,605 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:10,794 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:10,795 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 16:17:10,796 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 16:17:10,797 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 16:17:10,797 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:17:10,798 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:17:10,799 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 16:17:10,800 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 16:17:10,994 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 16:17:10,995 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 16:17:10,996 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 16:17:10,997 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 16:17:11,194 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 16:17:11,195 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:11,196 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 16:17:11,197 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:11,197 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:11,198 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 16:17:11,199 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 16:17:11,200 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 16:17:11,394 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 16:17:11,395 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 16:17:11,396 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 16:17:11,396 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 16:17:11,397 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 16:17:11,595 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 16:17:11,597 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 16:17:11,598 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 16:17:11,600 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 16:17:11,602 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 16:17:11,603 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 16:17:11,796 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 16:17:11,797 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 16:17:11,799 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 16:17:11,801 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 16:17:11,819 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 16:17:11,821 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 16:17:11,823 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 16:17:11,827 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 16:17:11,995 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 16:17:11,996 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 16:17:11,997 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 16:17:11,998 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 16:17:11,998 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 16:18:05,930 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:18:05,931 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 16:18:05,932 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:18:05,932 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:18:05,933 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 16:18:05,933 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 16:18:05,934 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 16:18:05,934 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 16:18:06,660 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 16:18:06,666 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 16:18:06,667 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 16:18:06,667 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 16:18:06,930 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:18:06,932 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 16:18:06,934 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:18:06,938 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:19:07,754 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:19:07,767 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 16:19:07,769 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:19:07,770 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:19:07,772 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 16:19:07,774 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 16:19:07,776 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 16:19:07,778 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 16:20:31,991 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:20:32,003 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 16:20:32,026 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:20:32,027 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:20:32,165 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 16:20:32,166 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 16:20:32,198 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 16:20:32,199 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 16:20:57,628 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:20:57,633 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 16:20:57,633 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:20:57,634 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:32:01,327 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 16:32:01,349 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 16:32:01,350 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 16:32:01,351 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 16:32:01,492 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 16:32:01,493 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 16:32:01,494 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 16:32:01,495 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 17:19:37,887 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 17:19:37,918 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 17:19:37,927 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 17:19:37,930 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-07-26 17:19:37,932 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-07-26 17:19:37,933 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 17:19:37,934 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 17:19:37,935 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-07-26 17:19:37,935 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-07-26 17:19:37,936 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 17:19:37,937 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 17:19:37,937 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 17:19:38,112 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-07-26 17:19:38,113 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-07-26 17:19:38,125 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 17:19:38,127 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 17:19:38,127 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 17:19:38,128 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'L2ControlStateChangeRequest'.
2019-07-26 17:19:38,134 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 17:19:38,135 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 17:19:38,136 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 17:19:38,137 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 17:19:38,312 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 17:19:38,313 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 17:19:38,314 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 17:19:38,315 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 17:19:38,316 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 17:19:38,327 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 17:19:38,329 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 17:19:38,330 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 17:19:38,512 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 17:19:38,513 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 17:19:38,514 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 17:19:38,515 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 17:19:38,516 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 17:19:38,517 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-26 17:19:38,518 [Thread: 10      ] [DEBUG] -- Found 22 <object> elements defining objects.
2019-07-26 17:19:38,519 [Thread: 10      ] [DEBUG] -- Loaded 22 object definitions from location [spring-objects.xml]
2019-07-26 17:19:38,520 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 17:19:38,714 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 17:19:38,726 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 17:19:38,727 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 17:19:38,728 [Thread: 10      ] [DEBUG] -- 22 objects defined in application context [spring.root].
2019-07-26 17:19:38,729 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 17:19:38,741 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 17:19:38,743 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 17:19:38,745 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 17:19:38,915 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 17:19:38,917 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 17:19:38,918 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 17:19:38,919 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 17:19:38,921 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 17:19:38,922 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 17:19:39,113 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 17:19:39,116 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 17:19:39,117 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 17:19:39,120 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 17:19:39,121 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 17:19:39,315 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 17:19:39,318 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 17:19:39,320 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 17:19:39,322 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 17:19:39,323 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 17:19:39,325 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 17:19:39,514 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 17:19:39,516 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 17:19:39,518 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 17:19:39,519 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 17:19:39,521 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 17:19:39,522 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 17:19:39,523 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 17:19:39,714 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 17:19:39,716 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 17:19:39,718 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 17:19:39,719 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 17:19:39,721 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 17:19:39,915 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 17:19:39,917 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 17:19:39,918 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 17:19:39,920 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 17:19:39,922 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 17:19:39,923 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 17:19:39,925 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 17:19:39,927 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 17:19:40,113 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 17:19:40,117 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'L2ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 17:19:40,118 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2ControlStateChangeRequest'.
2019-07-26 17:19:40,122 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'L2ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 17:19:40,327 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'L2ControlStateChangeRequest'
2019-07-26 17:19:40,328 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2ControlStateChangeRequest'
2019-07-26 17:19:40,329 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2ControlStateChangeRequest'
2019-07-26 17:19:40,330 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'L2ControlStateChangeRequest'
2019-07-26 17:19:40,330 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 17:19:40,337 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 17:19:40,338 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 17:19:40,513 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 17:19:40,514 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-07-26 17:19:40,515 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 17:19:40,516 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 17:19:40,713 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 17:19:40,717 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 17:19:40,718 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 17:19:40,719 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 17:19:40,726 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 17:19:40,727 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 17:19:40,729 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 17:19:40,729 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 17:19:40,913 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 17:19:40,914 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 17:19:40,915 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 17:19:40,915 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2ControlStateChangeRequest'.
2019-07-26 17:19:40,916 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2ControlStateChangeRequest => canonical name L2ControlStateChangeRequest
2019-07-26 17:19:40,917 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'L2ControlStateChangeRequest'.
2019-07-26 17:19:41,113 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'L2ControlStateChangeRequest'.
2019-07-26 17:19:41,114 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2ControlStateChangeRequest
2019-07-26 17:19:41,141 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 17:19:41,142 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 17:19:41,143 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 17:19:41,144 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 17:19:41,144 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 17:19:41,145 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 17:19:41,313 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 17:19:41,315 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 39].
2019-07-26 17:19:41,316 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 17:19:41,317 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 17:19:41,513 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 17:19:41,514 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 17:19:41,515 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 17:19:41,516 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 17:19:41,516 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 49].
2019-07-26 17:19:41,713 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 17:19:41,715 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 17:19:41,716 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 17:19:41,717 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-07-26 17:19:41,913 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 17:19:41,914 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 17:19:41,915 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 17:19:41,916 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 17:19:41,917 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 17:19:41,917 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 17:19:41,918 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 17:19:42,113 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 17:19:42,114 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 17:19:42,115 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 17:19:42,116 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 17:19:42,116 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 17:19:42,117 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 17:19:42,121 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 17:19:42,313 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 17:19:42,314 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 17:19:42,315 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 17:19:42,859 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 17:19:42,860 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 17:19:43,049 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 17:19:43,067 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 17:19:43,068 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 17:19:43,069 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 17:19:43,233 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 17:19:43,236 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 17:19:43,238 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 17:19:43,238 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 17:19:43,433 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 17:19:43,434 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 17:19:43,436 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 17:19:43,437 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 17:19:43,438 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 17:19:43,439 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 17:19:43,439 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 17:19:43,440 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 17:19:43,633 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 17:19:43,634 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 17:19:43,635 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 78].
2019-07-26 17:19:43,642 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 17:19:43,644 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 17:19:43,833 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 17:19:43,834 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 17:19:43,835 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 17:19:43,836 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 17:19:43,837 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 17:19:43,837 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 17:19:43,838 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:44,033 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 17:19:44,034 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 97].
2019-07-26 17:19:44,035 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 17:19:44,040 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 17:19:44,042 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 17:19:44,233 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 17:19:44,234 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 17:19:44,235 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 17:19:44,235 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 130].
2019-07-26 17:19:44,434 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 17:19:44,437 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 17:19:44,438 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 17:19:44,440 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 17:19:44,441 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:44,443 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:19:44,634 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:44,636 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:44,641 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 17:19:44,642 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 17:19:44,644 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 17:19:44,645 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 17:19:44,647 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 17:19:44,648 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-26 17:19:44,833 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-26 17:19:44,834 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-26 17:19:44,835 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 138].
2019-07-26 17:19:45,033 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-26 17:19:45,034 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-26 17:19:45,035 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-26 17:19:45,036 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-26 17:19:45,037 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:45,037 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:19:45,038 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:45,234 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:45,236 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-26 17:19:45,236 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-26 17:19:45,237 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-26 17:19:45,238 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-26 17:19:45,239 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-26 17:19:45,240 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 17:19:45,433 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 17:19:45,434 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 17:19:45,435 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 122].
2019-07-26 17:19:45,436 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 17:19:45,633 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 17:19:45,634 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 17:19:45,635 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 17:19:45,636 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:45,637 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:19:45,637 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:45,638 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:45,833 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 17:19:45,834 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 17:19:45,835 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 17:19:45,835 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 17:19:45,836 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 17:19:45,836 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 17:19:45,837 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 17:19:46,033 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 17:19:46,034 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 134].
2019-07-26 17:19:46,034 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 17:19:46,035 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 17:19:46,233 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 17:19:46,234 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 17:19:46,235 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:46,235 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:19:46,236 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:46,237 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:46,238 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 17:19:46,433 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 17:19:46,434 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 17:19:46,435 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 17:19:46,435 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 17:19:46,436 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 17:19:46,437 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 17:19:46,437 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 17:19:46,633 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 126].
2019-07-26 17:19:46,634 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 17:19:46,635 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 17:19:46,635 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 17:19:46,833 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 17:19:46,834 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:46,835 [Thread: 10      ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:19:46,835 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:46,836 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:46,837 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 17:19:47,033 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 17:19:47,034 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 17:19:47,035 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 17:19:47,036 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 17:19:47,038 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 17:19:47,040 [Thread: 10      ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 17:19:47,103 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 17:19:47,105 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 17:19:47,233 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:47,234 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:47,234 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:19:47,235 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 17:19:47,236 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 110].
2019-07-26 17:19:47,433 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 17:19:47,434 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 17:19:47,435 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 17:19:47,436 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 17:19:47,436 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:47,437 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 17:19:47,438 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:47,633 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:47,634 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 17:19:47,635 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 17:19:47,636 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 17:19:47,637 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:19:47,638 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:19:47,638 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 17:19:47,639 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 17:19:47,835 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 114].
2019-07-26 17:19:47,836 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 17:19:47,837 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 17:19:47,838 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 17:19:48,033 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 17:19:48,034 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:48,035 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 17:19:48,036 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:48,036 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:48,037 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 17:19:48,038 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 17:19:48,039 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 17:19:48,233 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 17:19:48,234 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 17:19:48,234 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 17:19:48,235 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 17:19:48,236 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 118].
2019-07-26 17:19:48,433 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 17:19:48,434 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 17:19:48,435 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 17:19:48,436 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 17:19:48,436 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:19:48,437 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 17:19:48,639 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:19:48,640 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:19:48,641 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 17:19:48,641 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 17:19:48,642 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 17:19:48,643 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 17:19:48,644 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 17:19:48,645 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 17:19:48,840 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 17:19:48,842 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 17:19:48,844 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 17:19:48,846 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 17:19:48,847 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 17:19:51,307 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:19:51,309 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 17:19:51,310 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:19:51,310 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:19:51,618 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 17:19:51,628 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-07-26 17:19:51,633 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 17:19:51,634 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 17:22:33,853 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-07-26 17:22:33,884 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml]
2019-07-26 17:22:33,892 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-07-26 17:22:33,895 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-07-26 17:22:33,897 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-07-26 17:22:33,898 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-07-26 17:22:33,899 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-07-26 17:22:33,900 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-07-26 17:22:33,901 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-07-26 17:22:33,902 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 17:22:33,903 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 17:22:33,903 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-07-26 17:22:33,904 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-07-26 17:22:33,905 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-07-26 17:22:34,096 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-07-26 17:22:34,098 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpConnected'.
2019-07-26 17:22:34,099 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'eqpDisconnected'.
2019-07-26 17:22:34,100 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_ControlStateChangeRequest'.
2019-07-26 17:22:34,100 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'L2_EQPStateChangeReport'.
2019-07-26 17:22:34,130 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-07-26 17:22:34,131 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'commandService'.
2019-07-26 17:22:34,132 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-07-26 17:22:34,133 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-07-26 17:22:34,285 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-07-26 17:22:34,286 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-07-26 17:22:34,287 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-07-26 17:22:34,288 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-07-26 17:22:34,288 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-07-26 17:22:34,298 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsWrapper'.
2019-07-26 17:22:34,300 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'SECService'.
2019-07-26 17:22:34,301 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsConnectedHandler'.
2019-07-26 17:22:34,301 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDisconnectedHandler'.
2019-07-26 17:22:34,485 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'dateTimeRequestHandler'.
2019-07-26 17:22:34,486 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlLocalChangeReportAckHandler'.
2019-07-26 17:22:34,487 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsDateTimeRequestAckHandler'.
2019-07-26 17:22:34,488 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOffineHandler'.
2019-07-26 17:22:34,488 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'secsRequestOnLineHandler'.
2019-07-26 17:22:34,489 [Thread: 9       ] [DEBUG] -- Found 23 <object> elements defining objects.
2019-07-26 17:22:34,490 [Thread: 9       ] [DEBUG] -- Loaded 23 object definitions from location [spring-objects.xml]
2019-07-26 17:22:34,490 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-07-26 17:22:34,685 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-07-26 17:22:34,687 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-07-26 17:22:34,688 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-07-26 17:22:34,688 [Thread: 9       ] [DEBUG] -- 23 objects defined in application context [spring.root].
2019-07-26 17:22:34,689 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-07-26 17:22:34,701 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-07-26 17:22:34,711 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-07-26 17:22:34,712 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-07-26 17:22:34,887 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-07-26 17:22:34,889 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-07-26 17:22:34,890 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-07-26 17:22:34,891 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-07-26 17:22:34,893 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-07-26 17:22:34,894 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-07-26 17:22:35,085 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-07-26 17:22:35,088 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-07-26 17:22:35,089 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-07-26 17:22:35,091 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-07-26 17:22:35,093 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-07-26 17:22:35,094 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-07-26 17:22:35,286 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-07-26 17:22:35,287 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-07-26 17:22:35,287 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 17:22:35,288 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpConnected'
2019-07-26 17:22:35,288 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpConnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPConnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-07-26 17:22:35,485 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpConnected'.
2019-07-26 17:22:35,486 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpConnected' to allow for resolving potential circular references
2019-07-26 17:22:35,487 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpConnected'
2019-07-26 17:22:35,487 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpConnected'
2019-07-26 17:22:35,488 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpConnected'
2019-07-26 17:22:35,488 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpConnected'
2019-07-26 17:22:35,489 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 17:22:35,685 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 17:22:35,686 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 17:22:35,687 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'eqpDisconnected'
2019-07-26 17:22:35,687 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'eqpDisconnected' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPDisconnected]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-07-26 17:22:35,688 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'eqpDisconnected'.
2019-07-26 17:22:35,885 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'eqpDisconnected' to allow for resolving potential circular references
2019-07-26 17:22:35,886 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'eqpDisconnected'
2019-07-26 17:22:35,887 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'eqpDisconnected'
2019-07-26 17:22:35,887 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'eqpDisconnected'
2019-07-26 17:22:35,888 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'eqpDisconnected'
2019-07-26 17:22:35,888 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 17:22:35,889 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 17:22:35,889 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-26 17:22:36,085 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-26 17:22:36,086 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_ControlStateChangeRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2ControlStateChangeRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-07-26 17:22:36,086 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_ControlStateChangeRequest'.
2019-07-26 17:22:36,087 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_ControlStateChangeRequest' to allow for resolving potential circular references
2019-07-26 17:22:36,288 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_ControlStateChangeRequest'
2019-07-26 17:22:36,289 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_ControlStateChangeRequest'
2019-07-26 17:22:36,289 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_ControlStateChangeRequest'
2019-07-26 17:22:36,290 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_ControlStateChangeRequest'
2019-07-26 17:22:36,290 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-26 17:22:36,291 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-26 17:22:36,291 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-26 17:22:36,485 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-26 17:22:36,486 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'L2_EQPStateChangeReport' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.L2EQPStateChangeReport]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 28].
2019-07-26 17:22:36,486 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'L2_EQPStateChangeReport'.
2019-07-26 17:22:36,487 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'L2_EQPStateChangeReport' to allow for resolving potential circular references
2019-07-26 17:22:36,686 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'L2_EQPStateChangeReport'
2019-07-26 17:22:36,688 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'L2_EQPStateChangeReport'
2019-07-26 17:22:36,689 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'L2_EQPStateChangeReport'
2019-07-26 17:22:36,691 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'L2_EQPStateChangeReport'
2019-07-26 17:22:36,692 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-26 17:22:36,694 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-26 17:22:36,696 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 17:22:36,697 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 17:22:36,887 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 30].
2019-07-26 17:22:36,888 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-07-26 17:22:36,891 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-07-26 17:22:36,893 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-07-26 17:22:37,090 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'eqpConnected'.
2019-07-26 17:22:37,091 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpConnected => canonical name eqpConnected
2019-07-26 17:22:37,092 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpConnected'.
2019-07-26 17:22:37,092 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpConnected'.
2019-07-26 17:22:37,093 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpConnected
2019-07-26 17:22:37,095 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_EquipmentStatusChangeReport]' in object 'm_EQPEventProcess' to object 'L2_EQPStateChangeReport'.
2019-07-26 17:22:37,095 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_EQPStateChangeReport => canonical name L2_EQPStateChangeReport
2019-07-26 17:22:37,285 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_EQPStateChangeReport'.
2019-07-26 17:22:37,286 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_EQPStateChangeReport'.
2019-07-26 17:22:37,286 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_EQPStateChangeReport
2019-07-26 17:22:37,287 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Disconnected]' in object 'm_EQPEventProcess' to object 'eqpDisconnected'.
2019-07-26 17:22:37,287 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name eqpDisconnected => canonical name eqpDisconnected
2019-07-26 17:22:37,288 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'eqpDisconnected'.
2019-07-26 17:22:37,288 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'eqpDisconnected'.
2019-07-26 17:22:37,485 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname eqpDisconnected
2019-07-26 17:22:37,486 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_ControlStateChangeRequest]' in object 'm_EQPEventProcess' to object 'L2_ControlStateChangeRequest'.
2019-07-26 17:22:37,486 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name L2_ControlStateChangeRequest => canonical name L2_ControlStateChangeRequest
2019-07-26 17:22:37,487 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'L2_ControlStateChangeRequest'.
2019-07-26 17:22:37,487 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'L2_ControlStateChangeRequest'.
2019-07-26 17:22:37,488 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname L2_ControlStateChangeRequest
2019-07-26 17:22:37,514 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-07-26 17:22:37,685 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-07-26 17:22:37,686 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-07-26 17:22:37,686 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 17:22:37,687 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 17:22:37,687 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 17:22:37,688 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'commandService'
2019-07-26 17:22:37,689 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'commandService' with merged definition [RootObjectDefinition : Class [BMDTEQP.Service.CommandServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 41].
2019-07-26 17:22:37,885 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'commandService'.
2019-07-26 17:22:37,886 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'commandService' to allow for resolving potential circular references
2019-07-26 17:22:37,887 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'commandService'
2019-07-26 17:22:37,887 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'PLCManager' in object 'commandService' to object 'controlManager'.
2019-07-26 17:22:37,888 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-07-26 17:22:38,085 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-07-26 17:22:38,086 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 51].
2019-07-26 17:22:38,086 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-07-26 17:22:38,088 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 17:22:38,285 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-07-26 17:22:38,286 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-07-26 17:22:38,286 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-07-26 17:22:38,287 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-07-26 17:22:38,485 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-07-26 17:22:38,486 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-07-26 17:22:38,486 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 17:22:38,487 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 17:22:38,487 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 17:22:38,488 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 17:22:38,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-07-26 17:22:38,685 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-07-26 17:22:38,686 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-07-26 17:22:38,686 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 17:22:38,687 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 17:22:38,692 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-07-26 17:22:38,692 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-07-26 17:22:38,693 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-07-26 17:22:38,693 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-07-26 17:22:39,418 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-07-26 17:22:39,420 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-07-26 17:22:39,421 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-07-26 17:22:39,421 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-07-26 17:22:39,605 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 17:22:39,606 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 17:22:39,607 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 17:22:39,608 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 17:22:39,608 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-07-26 17:22:39,609 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-07-26 17:22:39,805 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-07-26 17:22:39,806 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-07-26 17:22:39,808 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-07-26 17:22:39,809 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'commandService'
2019-07-26 17:22:39,810 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'commandService'
2019-07-26 17:22:39,811 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'commandService'
2019-07-26 17:22:40,024 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 17:22:40,025 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 17:22:40,026 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-07-26 17:22:40,026 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-07-26 17:22:40,206 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 80].
2019-07-26 17:22:40,206 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-07-26 17:22:40,207 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-07-26 17:22:40,208 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-07-26 17:22:40,208 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-07-26 17:22:40,405 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-07-26 17:22:40,406 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-07-26 17:22:40,406 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-07-26 17:22:40,407 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-07-26 17:22:40,407 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:40,408 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsWrapper'
2019-07-26 17:22:40,408 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsWrapper' with merged definition [RootObjectDefinition : Class [BMDT.SECS.SECSWrapper]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = Initialize3; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 99].
2019-07-26 17:22:40,605 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsWrapper'.
2019-07-26 17:22:40,610 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsWrapper' to allow for resolving potential circular references
2019-07-26 17:22:40,611 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsWrapper'
2019-07-26 17:22:40,612 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F18_DateTimeDataRequestAck]' in object 'secsWrapper' to object 'secsDateTimeRequestAckHandler'.
2019-07-26 17:22:40,612 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsDateTimeRequestAckHandler => canonical name secsDateTimeRequestAckHandler
2019-07-26 17:22:40,805 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 17:22:40,806 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDateTimeRequestAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDateTimeRequestAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 132].
2019-07-26 17:22:40,807 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDateTimeRequestAckHandler'.
2019-07-26 17:22:40,808 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDateTimeRequestAckHandler' to allow for resolving potential circular references
2019-07-26 17:22:41,005 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDateTimeRequestAckHandler'
2019-07-26 17:22:41,006 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDateTimeRequestAckHandler' to object 'secsWrapper'.
2019-07-26 17:22:41,006 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:41,007 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:22:41,008 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:41,008 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:41,009 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 17:22:41,206 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDateTimeRequestAckHandler'
2019-07-26 17:22:41,207 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDateTimeRequestAckHandler'
2019-07-26 17:22:41,209 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDateTimeRequestAckHandler'.
2019-07-26 17:22:41,210 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsDateTimeRequestAckHandler
2019-07-26 17:22:41,211 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F17_RequestOnLine]' in object 'secsWrapper' to object 'secsRequestOnLineHandler'.
2019-07-26 17:22:41,213 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOnLineHandler => canonical name secsRequestOnLineHandler
2019-07-26 17:22:41,406 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-26 17:22:41,408 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOnLineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOnLineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 140].
2019-07-26 17:22:41,410 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOnLineHandler'.
2019-07-26 17:22:41,412 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOnLineHandler' to allow for resolving potential circular references
2019-07-26 17:22:41,413 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOnLineHandler'
2019-07-26 17:22:41,607 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOnLineHandler' to object 'secsWrapper'.
2019-07-26 17:22:41,608 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:41,610 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:22:41,612 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:41,613 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:41,616 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOnLineHandler'
2019-07-26 17:22:41,617 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOnLineHandler'
2019-07-26 17:22:41,806 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOnLineHandler'
2019-07-26 17:22:41,807 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOnLineHandler'.
2019-07-26 17:22:41,808 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOnLineHandler
2019-07-26 17:22:41,809 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S2F17_DateTimeRequest]' in object 'secsWrapper' to object 'dateTimeRequestHandler'.
2019-07-26 17:22:41,810 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name dateTimeRequestHandler => canonical name dateTimeRequestHandler
2019-07-26 17:22:41,811 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 17:22:41,812 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'dateTimeRequestHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.DateTimeRequestHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 124].
2019-07-26 17:22:42,006 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'dateTimeRequestHandler'.
2019-07-26 17:22:42,008 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'dateTimeRequestHandler' to allow for resolving potential circular references
2019-07-26 17:22:42,010 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'dateTimeRequestHandler'
2019-07-26 17:22:42,012 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'dateTimeRequestHandler' to object 'secsWrapper'.
2019-07-26 17:22:42,205 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:42,206 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:22:42,207 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:42,208 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:42,209 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'dateTimeRequestHandler'
2019-07-26 17:22:42,209 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'dateTimeRequestHandler'
2019-07-26 17:22:42,210 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'dateTimeRequestHandler'
2019-07-26 17:22:42,405 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'dateTimeRequestHandler'.
2019-07-26 17:22:42,406 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname dateTimeRequestHandler
2019-07-26 17:22:42,407 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S1F15_RequestOffLine]' in object 'secsWrapper' to object 'secsRequestOffineHandler'.
2019-07-26 17:22:42,407 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsRequestOffineHandler => canonical name secsRequestOffineHandler
2019-07-26 17:22:42,408 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 17:22:42,408 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsRequestOffineHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsRequestOffineHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 136].
2019-07-26 17:22:42,607 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsRequestOffineHandler'.
2019-07-26 17:22:42,608 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsRequestOffineHandler' to allow for resolving potential circular references
2019-07-26 17:22:42,609 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsRequestOffineHandler'
2019-07-26 17:22:42,609 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsRequestOffineHandler' to object 'secsWrapper'.
2019-07-26 17:22:42,610 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:42,805 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:22:42,806 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:42,807 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:42,808 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsRequestOffineHandler'
2019-07-26 17:22:42,808 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsRequestOffineHandler'
2019-07-26 17:22:42,809 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsRequestOffineHandler'
2019-07-26 17:22:42,810 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsRequestOffineHandler'.
2019-07-26 17:22:43,005 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsRequestOffineHandler
2019-07-26 17:22:43,006 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Handlers[S6F12_ControlLocalChangeReportAck]' in object 'secsWrapper' to object 'controlLocalChangeReportAckHandler'.
2019-07-26 17:22:43,007 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlLocalChangeReportAckHandler => canonical name controlLocalChangeReportAckHandler
2019-07-26 17:22:43,008 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 17:22:43,008 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlLocalChangeReportAckHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsControlLocalChangeReportAckHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 128].
2019-07-26 17:22:43,205 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlLocalChangeReportAckHandler'.
2019-07-26 17:22:43,206 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlLocalChangeReportAckHandler' to allow for resolving potential circular references
2019-07-26 17:22:43,206 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlLocalChangeReportAckHandler'
2019-07-26 17:22:43,207 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'controlLocalChangeReportAckHandler' to object 'secsWrapper'.
2019-07-26 17:22:43,208 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:43,405 [Thread: 9       ] [DEBUG] -- Returning eagerly cached instance of singleton object 'secsWrapper' that is not fully initialized yet - a consequence of a circular reference
2019-07-26 17:22:43,406 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:43,406 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:43,407 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 17:22:43,407 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlLocalChangeReportAckHandler'
2019-07-26 17:22:43,408 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlLocalChangeReportAckHandler'
2019-07-26 17:22:43,409 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlLocalChangeReportAckHandler'.
2019-07-26 17:22:43,605 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlLocalChangeReportAckHandler
2019-07-26 17:22:43,607 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsWrapper'
2019-07-26 17:22:43,607 [Thread: 9       ] [DEBUG] -- Calling custom init method 'Initialize3 on object with name 'secsWrapper'.
2019-07-26 17:22:43,659 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsWrapper'
2019-07-26 17:22:43,662 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsWrapper'
2019-07-26 17:22:43,663 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:43,663 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:43,811 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:22:43,812 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'SECService'
2019-07-26 17:22:43,813 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'SECService' with merged definition [RootObjectDefinition : Class [BMDT.SECS.Service.SECSServiceImpl]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 112].
2019-07-26 17:22:43,814 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SECService'.
2019-07-26 17:22:44,005 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'SECService' to allow for resolving potential circular references
2019-07-26 17:22:44,006 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'SECService'
2019-07-26 17:22:44,006 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'SECService' to object 'secsWrapper'.
2019-07-26 17:22:44,007 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:44,008 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 17:22:44,008 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:44,009 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:44,010 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'SECService'
2019-07-26 17:22:44,205 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'SECService'
2019-07-26 17:22:44,206 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'SECService'
2019-07-26 17:22:44,207 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:22:44,207 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:22:44,208 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsConnectedHandler => canonical name secsConnectedHandler
2019-07-26 17:22:44,209 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsConnectedHandler'
2019-07-26 17:22:44,209 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsConnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsConnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 116].
2019-07-26 17:22:44,405 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsConnectedHandler'.
2019-07-26 17:22:44,406 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsConnectedHandler' to allow for resolving potential circular references
2019-07-26 17:22:44,406 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsConnectedHandler'
2019-07-26 17:22:44,407 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsConnectedHandler' to object 'secsWrapper'.
2019-07-26 17:22:44,407 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:44,605 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 17:22:44,606 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:44,606 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:44,607 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsConnectedHandler'
2019-07-26 17:22:44,607 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsConnectedHandler'
2019-07-26 17:22:44,608 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsConnectedHandler'
2019-07-26 17:22:44,608 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsConnectedHandler'.
2019-07-26 17:22:44,609 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsConnectedHandler
2019-07-26 17:22:44,805 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name secsDisconnectedHandler => canonical name secsDisconnectedHandler
2019-07-26 17:22:44,806 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 17:22:44,806 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'secsDisconnectedHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.SECS.Handlers.SecsDisconnectedHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\BMDT\MPC\MPC\bin\Debug\spring-objects.xml] line 120].
2019-07-26 17:22:44,807 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'secsDisconnectedHandler'.
2019-07-26 17:22:45,011 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'secsDisconnectedHandler' to allow for resolving potential circular references
2019-07-26 17:22:45,012 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'secsDisconnectedHandler'
2019-07-26 17:22:45,012 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Secs' in object 'secsDisconnectedHandler' to object 'secsWrapper'.
2019-07-26 17:22:45,013 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name secsWrapper => canonical name secsWrapper
2019-07-26 17:22:45,013 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'secsWrapper'.
2019-07-26 17:22:45,014 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsWrapper'.
2019-07-26 17:22:45,014 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname secsWrapper
2019-07-26 17:22:45,015 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'secsDisconnectedHandler'
2019-07-26 17:22:45,205 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'secsDisconnectedHandler'
2019-07-26 17:22:45,206 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'secsDisconnectedHandler'
2019-07-26 17:22:45,206 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'secsDisconnectedHandler'.
2019-07-26 17:22:45,207 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname secsDisconnectedHandler
2019-07-26 17:22:45,208 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-07-26 17:22:45,209 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-07-26 17:22:45,210 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-07-26 17:22:45,211 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-07-26 17:22:45,405 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-07-26 17:22:45,406 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-07-26 17:22:52,667 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:22:52,675 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 17:22:52,676 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:22:52,677 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:22:52,678 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 17:22:52,679 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 17:22:52,680 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 17:22:52,680 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 17:22:53,276 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name commandService => canonical name commandService
2019-07-26 17:22:53,277 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'commandService'.
2019-07-26 17:22:53,277 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'commandService'.
2019-07-26 17:22:53,278 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname commandService
2019-07-26 17:22:53,680 [Thread: CallBackActor] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:22:53,691 [Thread: CallBackActor] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 17:22:53,691 [Thread: CallBackActor] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:22:53,692 [Thread: CallBackActor] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:23:26,318 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:23:26,319 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 17:23:26,319 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:23:26,320 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:24:16,391 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:24:16,392 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 17:24:16,397 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:24:16,398 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:24:41,640 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:24:41,641 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 17:24:41,641 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:24:41,642 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:24:56,299 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:24:56,323 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 17:24:56,323 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:24:56,324 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
2019-07-26 17:34:56,183 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name SECService => canonical name SECService
2019-07-26 17:34:56,190 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'SECService'.
2019-07-26 17:34:56,191 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'SECService'.
2019-07-26 17:34:56,192 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname SECService
