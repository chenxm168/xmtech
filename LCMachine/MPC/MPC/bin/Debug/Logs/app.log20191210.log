2019-12-10 09:40:56,323 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 09:40:56,555 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 09:40:56,633 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 09:40:56,660 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 09:40:56,663 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 09:40:56,667 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 09:40:56,669 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 09:40:56,671 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 09:40:56,673 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 09:40:56,675 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 09:40:56,677 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 09:40:56,679 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 09:40:56,681 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 09:40:56,682 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 09:40:56,922 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 09:40:56,927 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 09:40:56,928 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 09:40:56,941 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 09:40:56,944 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 09:40:56,951 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 09:40:56,953 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 09:40:56,959 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 09:40:56,961 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 09:40:56,976 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 09:40:56,980 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 09:40:56,982 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 09:40:56,985 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 09:40:56,987 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 09:40:56,988 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 09:40:56,990 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 09:40:56,992 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 09:40:56,994 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 09:40:57,323 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 09:40:57,326 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 09:40:57,328 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 09:40:57,330 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 09:40:57,332 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 09:40:57,334 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 09:40:57,351 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 09:40:57,355 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 09:40:57,377 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 09:40:57,381 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 09:40:57,384 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 09:40:57,389 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 09:40:57,392 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:40:57,396 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 09:40:57,402 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 09:40:57,576 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 09:40:57,581 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 09:40:57,583 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 09:40:57,587 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 09:40:57,778 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 09:40:57,787 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 09:40:57,789 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:40:57,793 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:40:57,795 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 09:40:57,797 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 09:40:57,799 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 09:40:57,976 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 09:40:57,978 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 09:40:57,979 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 09:40:57,981 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 09:40:57,983 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 09:40:57,988 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 09:40:58,176 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 09:40:58,178 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 09:40:58,179 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 09:40:58,181 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 09:40:58,183 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 09:40:58,376 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 09:40:58,378 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 09:40:58,379 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 09:40:58,381 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 09:40:58,383 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 09:40:58,385 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 09:40:58,386 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 09:40:58,576 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 09:40:58,577 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 09:40:58,579 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 09:40:58,581 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 09:40:58,583 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 09:40:58,776 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 09:40:58,778 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 09:40:58,787 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 09:40:58,790 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 09:40:58,792 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 09:40:58,794 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 09:40:58,976 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 09:40:58,980 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 09:40:58,982 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 09:40:58,984 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 09:40:59,176 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 09:40:59,178 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 09:40:59,180 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 09:40:59,182 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 09:40:59,184 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 09:40:59,186 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 09:40:59,376 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 09:40:59,378 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 09:40:59,381 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 09:40:59,383 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 09:40:59,578 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 09:40:59,580 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 09:40:59,582 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 09:40:59,584 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 09:40:59,594 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 09:40:59,597 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:40:59,600 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:40:59,776 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:40:59,778 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:40:59,780 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:40:59,782 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:40:59,786 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:40:59,788 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:40:59,791 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:40:59,976 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:40:59,979 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 09:40:59,981 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 09:40:59,983 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 09:40:59,986 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 09:40:59,988 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 09:40:59,990 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:41:00,176 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:41:00,179 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:41:00,181 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:41:00,183 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:41:00,185 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:41:00,187 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:41:00,376 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:41:00,379 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:41:00,384 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:41:00,437 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 09:41:00,438 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 09:41:00,440 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 09:41:00,442 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 09:41:00,444 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 09:41:00,576 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 09:41:00,578 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 09:41:00,581 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 09:41:00,583 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 09:41:00,585 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 09:41:00,591 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 09:41:00,594 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 09:41:00,776 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 09:41:00,778 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 09:41:48,732 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 09:41:48,746 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 09:41:48,756 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 09:41:48,764 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 09:41:48,774 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 09:41:48,777 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 09:41:48,785 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 09:41:48,789 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 09:41:48,793 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 09:41:48,801 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 09:41:48,953 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 09:41:48,955 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 09:41:48,958 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 09:41:48,961 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 09:41:48,964 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 09:41:48,966 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 09:41:48,968 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 09:41:49,153 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 09:41:49,155 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 09:41:49,156 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 09:41:49,159 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 09:41:49,160 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 09:41:49,395 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 09:41:49,397 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 09:41:49,399 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 09:41:49,401 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 09:41:49,403 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 09:41:49,405 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 09:41:49,407 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 09:41:49,408 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 09:41:49,553 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:41:49,555 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 09:41:49,556 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 09:41:49,558 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 09:41:49,753 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 09:41:49,755 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 09:41:49,757 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 09:41:49,759 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 09:41:49,765 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 09:41:49,948 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 09:41:49,953 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 09:41:49,955 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 09:41:49,957 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 09:41:49,959 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 09:41:49,960 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 09:41:49,962 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:41:49,964 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:41:50,153 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 09:41:50,155 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 09:41:50,157 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 09:41:50,159 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 09:41:50,162 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 09:41:50,353 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 09:41:50,355 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 09:41:50,357 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:41:50,359 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 09:41:50,360 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:41:50,362 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:41:50,365 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 09:41:50,366 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 09:41:50,553 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 09:41:50,555 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 09:41:50,557 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 09:41:50,558 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 09:41:50,560 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 09:41:50,562 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 09:41:50,753 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 09:41:50,755 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 09:41:50,757 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 09:41:50,759 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 09:41:50,764 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:41:50,766 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 09:41:50,953 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:41:50,955 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:41:50,958 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 09:41:50,960 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 09:41:50,962 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 09:41:50,964 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 09:41:50,965 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 09:41:50,968 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 09:41:51,153 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 09:41:51,155 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 09:41:51,157 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 09:41:51,159 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 09:41:51,353 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 09:41:51,354 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 09:41:51,356 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 09:41:51,366 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 09:41:51,368 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 09:41:51,370 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 09:41:51,373 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 09:41:51,375 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 09:41:51,378 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 09:41:51,378 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 09:41:51,553 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 09:41:51,555 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 09:41:51,556 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 09:41:51,560 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 09:41:51,569 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 09:41:51,571 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 09:49:52,070 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 09:49:52,131 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 09:49:52,147 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 09:49:52,151 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-12-10 09:49:52,155 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-12-10 09:49:52,157 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 09:49:52,160 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 09:49:52,162 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 09:49:52,164 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-12-10 09:49:52,166 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-12-10 09:49:52,168 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-12-10 09:49:52,170 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 09:49:52,287 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-12-10 09:49:52,289 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-12-10 09:49:52,312 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 09:49:52,351 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 09:49:52,353 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 09:49:52,361 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 09:49:52,365 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 09:49:52,369 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 09:49:52,371 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 09:49:52,377 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 09:49:52,487 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 09:49:52,489 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 09:49:52,493 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 09:49:52,495 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 09:49:52,497 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 09:49:52,499 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 09:49:52,501 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 09:49:52,503 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 09:49:52,687 [Thread: 8       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 09:49:52,689 [Thread: 8       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 09:49:52,691 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 09:49:52,692 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 09:49:52,695 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 09:49:52,697 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 09:49:52,699 [Thread: 8       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 09:49:52,700 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 09:49:52,715 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 09:49:52,888 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 09:49:52,891 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 09:49:52,895 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 09:49:52,898 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 09:49:52,900 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 09:49:52,903 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:49:52,906 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 09:49:53,088 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 09:49:53,091 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 09:49:53,094 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 09:49:53,096 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 09:49:53,289 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 09:49:53,292 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 09:49:53,294 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 09:49:53,296 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:49:53,299 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:49:53,301 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 09:49:53,303 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 09:49:53,304 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 09:49:53,487 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 09:49:53,488 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 09:49:53,490 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 09:49:53,492 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 09:49:53,687 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 09:49:53,696 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 09:49:53,698 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 09:49:53,700 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 09:49:53,701 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 09:49:53,703 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 09:49:53,705 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 09:49:53,887 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 09:49:53,889 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 09:49:53,891 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 09:49:53,893 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 09:49:53,895 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 09:49:53,897 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 09:49:54,087 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 09:49:54,089 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 09:49:54,090 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 09:49:54,092 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 09:49:54,094 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 09:49:54,287 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 09:49:54,289 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 09:49:54,291 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 09:49:54,294 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 09:49:54,297 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 09:49:54,299 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 09:49:54,300 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 09:49:54,487 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 09:49:54,490 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 09:49:54,493 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 09:49:54,495 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 09:49:54,687 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 09:49:54,689 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 09:49:54,691 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 09:49:54,693 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 09:49:54,695 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 09:49:54,887 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 09:49:54,889 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 09:49:54,891 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 09:49:54,893 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 09:49:55,087 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 09:49:55,091 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 09:49:55,093 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 09:49:55,095 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 09:49:55,097 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 09:49:55,103 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 09:49:55,107 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:49:55,287 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:49:55,290 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:49:55,292 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:49:55,295 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:49:55,297 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:49:55,299 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:49:55,487 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:49:55,490 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:49:55,492 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:49:55,494 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 09:49:55,497 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 09:49:55,499 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 09:49:55,501 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 09:49:55,504 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 09:49:55,687 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:49:55,689 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:49:55,691 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:49:55,693 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:49:55,695 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:49:55,697 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:49:55,887 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:49:55,890 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:49:55,892 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:49:55,894 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:49:55,933 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 09:49:55,935 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 09:49:55,937 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 09:49:55,939 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 09:49:56,087 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 09:49:56,089 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 09:49:56,091 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 09:49:56,093 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 09:49:56,095 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 09:49:56,097 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 09:49:56,103 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 09:49:56,287 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 09:49:56,289 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 09:49:56,291 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 09:51:18,379 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 09:51:18,392 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 09:51:18,414 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 09:51:18,417 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 09:51:18,540 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 09:51:18,544 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 09:51:18,547 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 09:51:18,549 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 09:51:18,552 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 09:51:18,554 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 09:51:18,556 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 09:51:18,558 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 09:51:18,741 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 09:51:18,744 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 09:51:18,746 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 09:51:18,748 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 09:51:18,750 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 09:51:18,752 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 09:51:18,754 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 09:51:18,756 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 09:51:18,940 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 09:51:18,942 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 09:51:18,974 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 09:51:18,976 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 09:51:19,140 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 09:51:19,142 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 09:51:19,144 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 09:51:19,145 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 09:51:19,147 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 09:51:19,149 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 09:51:19,151 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:51:19,152 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 09:51:19,340 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 09:51:19,342 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 09:51:19,344 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 09:51:19,348 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 09:51:19,540 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 09:51:19,542 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 09:51:19,544 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 09:51:19,574 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 09:51:19,575 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 09:51:19,577 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 09:51:19,740 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 09:51:19,742 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 09:51:19,744 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 09:51:19,746 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:51:19,748 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:51:19,751 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 09:51:19,753 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 09:51:19,755 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 09:51:19,940 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 09:51:19,942 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 09:51:19,947 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 09:51:19,949 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 09:51:19,951 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:51:20,140 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 09:51:20,142 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:51:20,144 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:51:20,146 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 09:51:20,148 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 09:51:20,150 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 09:51:20,151 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 09:51:20,153 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 09:51:20,340 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 09:51:20,342 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 09:51:20,344 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 09:51:20,345 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 09:51:20,540 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 09:51:20,543 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 09:51:20,545 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 09:51:20,548 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:51:20,550 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 09:51:20,552 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:51:20,554 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:51:20,557 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 09:51:20,740 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 09:51:20,742 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 09:51:20,744 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 09:51:20,746 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 09:51:20,748 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 09:51:20,750 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 09:51:20,752 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 09:51:20,940 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 09:51:20,942 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 09:51:20,943 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 09:51:20,945 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 09:51:20,947 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 09:51:21,140 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 09:51:21,142 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 09:51:21,143 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 09:51:21,146 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 09:51:21,148 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 09:51:21,150 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 09:51:21,151 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 09:51:21,153 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 09:51:21,155 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 09:51:21,340 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 09:51:21,341 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 09:51:21,343 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 09:51:21,345 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 09:57:39,144 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 09:57:39,204 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 09:57:39,217 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 09:57:39,223 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-10 09:57:39,226 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-10 09:57:39,228 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 09:57:39,230 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 09:57:39,232 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 09:57:39,234 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-10 09:57:39,236 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 09:57:39,238 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 09:57:39,240 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 09:57:39,375 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 09:57:39,377 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 09:57:39,434 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 09:57:39,439 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 09:57:39,467 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 09:57:39,474 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 09:57:39,478 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 09:57:39,480 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 09:57:39,483 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 09:57:39,489 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 09:57:39,575 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 09:57:39,577 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 09:57:39,580 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 09:57:39,582 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 09:57:39,584 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 09:57:39,587 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 09:57:39,588 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 09:57:39,590 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 09:57:39,775 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 09:57:39,777 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 09:57:39,778 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 09:57:39,780 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 09:57:39,784 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 09:57:39,786 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 09:57:39,788 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 09:57:39,790 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 09:57:39,806 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 09:57:39,977 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 09:57:39,993 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 09:57:39,997 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 09:57:40,000 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 09:57:40,002 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 09:57:40,005 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:57:40,009 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 09:57:40,176 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 09:57:40,179 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 09:57:40,182 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 09:57:40,184 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 09:57:40,377 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 09:57:40,380 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 09:57:40,381 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 09:57:40,383 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:57:40,385 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:57:40,387 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 09:57:40,389 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 09:57:40,390 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 09:57:40,575 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 09:57:40,577 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 09:57:40,579 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 09:57:40,581 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 09:57:40,775 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 09:57:40,785 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 09:57:40,787 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 09:57:40,795 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 09:57:40,797 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 09:57:40,800 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 09:57:40,802 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 09:57:40,975 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 09:57:40,977 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 09:57:40,978 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 09:57:40,980 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 09:57:40,982 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 09:57:40,984 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 09:57:41,175 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 09:57:41,176 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 09:57:41,178 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 09:57:41,180 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 09:57:41,181 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 09:57:41,375 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 09:57:41,377 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 09:57:41,379 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 09:57:41,382 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 09:57:41,385 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 09:57:41,387 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 09:57:41,388 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 09:57:41,575 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 09:57:41,579 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 09:57:41,581 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 09:57:41,583 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 09:57:41,775 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 09:57:41,778 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 09:57:41,780 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 09:57:41,782 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 09:57:41,784 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 09:57:41,975 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 09:57:41,977 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 09:57:41,980 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 09:57:41,982 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 09:57:42,175 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 09:57:42,179 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 09:57:42,181 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 09:57:42,183 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 09:57:42,185 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 09:57:42,191 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 09:57:42,195 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:57:42,375 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:57:42,377 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:57:42,380 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:57:42,382 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:57:42,384 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:57:42,386 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:57:42,575 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:57:42,578 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:57:42,580 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:57:42,582 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 09:57:42,584 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 09:57:42,586 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 09:57:42,588 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 09:57:42,591 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 09:57:42,775 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:57:42,777 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:57:42,779 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:57:42,790 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:57:42,793 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:57:42,796 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 09:57:42,975 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 09:57:42,977 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 09:57:42,979 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 09:57:42,981 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 09:57:43,021 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 09:57:43,023 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 09:57:43,027 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 09:57:43,029 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 09:57:43,175 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 09:57:43,178 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 09:57:43,180 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 09:57:43,182 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 09:57:43,184 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 09:57:43,186 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 09:57:43,192 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 09:57:43,375 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 09:57:43,377 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 09:57:43,379 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 09:59:10,055 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 09:59:10,090 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 09:59:10,093 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 09:59:10,100 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 09:59:10,107 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 09:59:10,114 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 09:59:10,117 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 09:59:10,120 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 09:59:10,125 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 09:59:10,290 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 09:59:10,305 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 09:59:10,311 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 09:59:10,315 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 09:59:10,317 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 09:59:10,324 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 09:59:10,325 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 09:59:10,327 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 09:59:10,490 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 09:59:10,491 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 09:59:10,493 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 09:59:10,495 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 09:59:10,496 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 09:59:10,715 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 09:59:10,717 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 09:59:10,719 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 09:59:10,721 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 09:59:10,722 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 09:59:10,728 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 09:59:10,731 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 09:59:10,890 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 09:59:10,892 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:59:10,894 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 09:59:10,900 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 09:59:10,907 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 09:59:11,114 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 09:59:11,117 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 09:59:11,119 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 09:59:11,121 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 09:59:11,123 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 09:59:11,311 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 09:59:11,313 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 09:59:11,315 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 09:59:11,318 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 09:59:11,320 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 09:59:11,322 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 09:59:11,324 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:59:11,327 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:59:11,511 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 09:59:11,513 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 09:59:11,515 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 09:59:11,517 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 09:59:11,520 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 09:59:11,714 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 09:59:11,715 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 09:59:11,717 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:59:11,719 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 09:59:11,721 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:59:11,723 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:59:11,725 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 09:59:11,911 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 09:59:11,913 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 09:59:11,915 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 09:59:11,916 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 09:59:11,918 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 09:59:11,920 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 09:59:11,922 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 09:59:12,111 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 09:59:12,113 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 09:59:12,115 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 09:59:12,117 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 09:59:12,120 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 09:59:12,311 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 09:59:12,313 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 09:59:12,315 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 09:59:12,318 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 09:59:12,320 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 09:59:12,322 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 09:59:12,323 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 09:59:12,325 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 09:59:12,511 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 09:59:12,513 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 09:59:12,515 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 09:59:12,517 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 09:59:12,519 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 09:59:12,711 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 09:59:12,713 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 09:59:12,715 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 09:59:12,717 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 09:59:12,719 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 09:59:12,720 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 09:59:12,723 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 09:59:12,725 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 09:59:12,911 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 09:59:12,914 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 09:59:12,918 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 09:59:12,921 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 09:59:12,923 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 09:59:12,925 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 09:59:12,930 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 09:59:12,941 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:14:29,035 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 10:14:29,096 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 10:14:29,111 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 10:14:29,115 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 10:14:29,119 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 10:14:29,121 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 10:14:29,123 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 10:14:29,125 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 10:14:29,127 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 10:14:29,129 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 10:14:29,130 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:14:29,133 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 10:14:29,274 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 10:14:29,276 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:14:29,298 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 10:14:29,343 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 10:14:29,346 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 10:14:29,349 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 10:14:29,358 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 10:14:29,363 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 10:14:29,365 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 10:14:29,371 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 10:14:29,474 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 10:14:29,476 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 10:14:29,479 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 10:14:29,481 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 10:14:29,483 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 10:14:29,485 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 10:14:29,487 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 10:14:29,489 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 10:14:29,674 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 10:14:29,676 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 10:14:29,678 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 10:14:29,679 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 10:14:29,683 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 10:14:29,685 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 10:14:29,687 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 10:14:29,688 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 10:14:29,706 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:14:29,876 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:14:29,879 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 10:14:29,884 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 10:14:29,887 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 10:14:29,889 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 10:14:29,891 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:14:29,894 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 10:14:30,075 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 10:14:30,077 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 10:14:30,082 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 10:14:30,084 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 10:14:30,276 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 10:14:30,279 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 10:14:30,281 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 10:14:30,284 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:14:30,286 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:14:30,288 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:14:30,290 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 10:14:30,291 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 10:14:30,474 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 10:14:30,477 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 10:14:30,479 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 10:14:30,481 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 10:14:30,674 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 10:14:30,682 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 10:14:30,684 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:14:30,686 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:14:30,688 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:14:30,689 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 10:14:30,691 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 10:14:30,874 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 10:14:30,876 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 10:14:30,878 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 10:14:30,880 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 10:14:30,882 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 10:14:30,884 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 10:14:31,074 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:14:31,076 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:14:31,078 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:14:31,080 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 10:14:31,082 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 10:14:31,274 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 10:14:31,276 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 10:14:31,277 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 10:14:31,281 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 10:14:31,284 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:14:31,286 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 10:14:31,288 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 10:14:31,474 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 10:14:31,478 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:14:31,480 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:14:31,482 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 10:14:31,674 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 10:14:31,677 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 10:14:31,679 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 10:14:31,681 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 10:14:31,686 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:14:31,874 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:14:31,876 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 10:14:31,879 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 10:14:31,882 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 10:14:32,074 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 10:14:32,078 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 10:14:32,081 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:14:32,083 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 10:14:32,085 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:14:32,091 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:14:32,095 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:14:32,274 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:14:32,276 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:14:32,279 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:14:32,281 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:14:32,283 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:14:32,285 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:14:32,474 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:14:32,476 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:14:32,478 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:14:32,480 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 10:14:32,482 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:14:32,484 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 10:14:32,486 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:14:32,488 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:14:32,674 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:14:32,676 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:14:32,678 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:14:32,680 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:14:32,682 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:14:32,684 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:14:32,874 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:14:32,876 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:14:32,878 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:14:32,881 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:14:32,916 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 10:14:32,918 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 10:14:32,920 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:14:32,922 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:14:33,074 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:14:33,077 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 10:14:33,079 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 10:14:33,081 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:14:33,083 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:14:33,084 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:14:33,090 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:14:33,274 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 10:14:33,277 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:14:33,279 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:15:03,087 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 10:15:03,106 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 10:15:03,109 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 10:15:03,115 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 10:15:03,118 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:15:03,121 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 10:15:03,123 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:15:03,125 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:15:03,127 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 10:15:03,294 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 10:15:03,295 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 10:15:03,297 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 10:15:03,300 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 10:15:03,302 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 10:15:03,304 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 10:15:03,306 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 10:15:03,308 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 10:15:03,494 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:15:03,496 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 10:15:03,497 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 10:15:03,499 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 10:15:03,501 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 10:15:03,717 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 10:15:03,719 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 10:15:03,721 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 10:15:03,722 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 10:15:03,724 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 10:15:03,727 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 10:15:03,729 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 10:15:03,894 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 10:15:03,896 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:15:03,898 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 10:15:03,900 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 10:15:03,902 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 10:15:04,124 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 10:15:04,128 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 10:15:04,130 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 10:15:04,132 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 10:15:04,134 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 10:15:04,294 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 10:15:04,295 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 10:15:04,302 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 10:15:04,304 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 10:15:04,306 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 10:15:04,308 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 10:15:04,310 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:15:04,312 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:15:04,496 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 10:15:04,498 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 10:15:04,500 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 10:15:04,503 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 10:15:04,505 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 10:15:04,698 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 10:15:04,700 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 10:15:04,701 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:15:04,703 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 10:15:04,705 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:15:04,707 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:15:04,709 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 10:15:04,896 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 10:15:04,897 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 10:15:04,899 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 10:15:04,900 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 10:15:04,902 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 10:15:04,903 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 10:15:04,905 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 10:15:05,096 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 10:15:05,098 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 10:15:05,099 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 10:15:05,102 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 10:15:05,104 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:15:05,296 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 10:15:05,297 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:15:05,299 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:15:05,302 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 10:15:05,304 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 10:15:05,306 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 10:15:05,307 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 10:15:05,309 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 10:15:05,496 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 10:15:05,497 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 10:15:05,499 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 10:15:05,501 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 10:15:05,503 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 10:15:05,696 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 10:15:05,698 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 10:15:05,699 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 10:15:05,701 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 10:15:05,703 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 10:15:05,704 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 10:15:05,707 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 10:15:05,709 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 10:15:05,896 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:15:05,896 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:15:05,898 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 10:15:05,900 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 10:15:05,902 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 10:15:05,903 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 10:15:05,905 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 10:15:05,910 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:38:43,744 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 10:38:43,811 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 10:38:43,827 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 10:38:43,833 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 10:38:43,837 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 10:38:43,840 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 10:38:43,842 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 10:38:43,845 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 10:38:43,847 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 10:38:43,850 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 10:38:43,852 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:38:43,854 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 10:38:43,962 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 10:38:43,964 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:38:44,049 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 10:38:44,067 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 10:38:44,074 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 10:38:44,077 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 10:38:44,081 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 10:38:44,085 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 10:38:44,087 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 10:38:44,094 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 10:38:44,160 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 10:38:44,162 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 10:38:44,165 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 10:38:44,167 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 10:38:44,169 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 10:38:44,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 10:38:44,173 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 10:38:44,175 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 10:38:44,360 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 10:38:44,362 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 10:38:44,364 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 10:38:44,366 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 10:38:44,369 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 10:38:44,370 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 10:38:44,372 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 10:38:44,374 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 10:38:44,392 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:38:44,562 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:38:44,565 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 10:38:44,569 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 10:38:44,571 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 10:38:44,574 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 10:38:44,576 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:38:44,580 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 10:38:44,761 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 10:38:44,763 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 10:38:44,767 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 10:38:44,769 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 10:38:44,962 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 10:38:44,965 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 10:38:44,967 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 10:38:44,970 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:38:44,972 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:38:44,974 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:38:44,976 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 10:38:44,977 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 10:38:45,160 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 10:38:45,162 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 10:38:45,164 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 10:38:45,166 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 10:38:45,360 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 10:38:45,403 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 10:38:45,404 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:38:45,406 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:38:45,408 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:38:45,409 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 10:38:45,411 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 10:38:45,560 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 10:38:45,562 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 10:38:45,563 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 10:38:45,565 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 10:38:45,567 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 10:38:45,568 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 10:38:45,760 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:38:45,762 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:38:45,763 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:38:45,765 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 10:38:45,767 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 10:38:45,959 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 10:38:45,961 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 10:38:45,963 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 10:38:45,967 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 10:38:45,969 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:38:45,971 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 10:38:45,973 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 10:38:46,160 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 10:38:46,163 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:38:46,165 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:38:46,166 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 10:38:46,360 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 10:38:46,363 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 10:38:46,364 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 10:38:46,366 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 10:38:46,368 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:38:46,560 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:38:46,562 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 10:38:46,564 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 10:38:46,566 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 10:38:46,760 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 10:38:46,763 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 10:38:46,766 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:38:46,769 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 10:38:46,776 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:38:46,778 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:38:46,782 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:38:46,960 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:38:46,962 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:38:46,964 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:38:46,967 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:38:46,969 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:38:46,970 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:38:47,160 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:38:47,163 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:38:47,165 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:38:47,167 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 10:38:47,169 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:38:47,170 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 10:38:47,172 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:38:47,174 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:38:47,360 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:38:47,362 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:38:47,364 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:38:47,366 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:38:47,368 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:38:47,370 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:38:47,560 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:38:47,562 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:38:47,564 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:38:47,566 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:38:47,599 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 10:38:47,601 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 10:38:47,602 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:38:47,604 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:38:47,760 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:38:47,763 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 10:38:47,765 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 10:38:47,767 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:38:47,770 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:38:47,773 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:38:47,858 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:38:47,960 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 10:38:47,962 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:38:47,969 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:41:10,433 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 10:41:10,444 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 10:41:10,448 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 10:41:10,451 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 10:41:10,453 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:41:10,457 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 10:41:10,460 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:41:10,462 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:41:10,465 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 10:41:10,467 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 10:41:10,646 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 10:41:10,648 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 10:41:10,651 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 10:41:10,654 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 10:41:10,656 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 10:41:10,658 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 10:41:10,660 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 10:41:10,662 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:41:10,846 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 10:41:10,848 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 10:41:10,850 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 10:41:10,852 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 10:41:10,881 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 10:41:11,048 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 10:41:11,052 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 10:41:11,055 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 10:41:11,059 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 10:41:11,063 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 10:41:11,066 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 10:41:11,070 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 10:41:11,074 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:41:11,247 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 10:41:11,263 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 10:41:11,268 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 10:41:11,271 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 10:41:11,448 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 10:41:11,461 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 10:41:11,463 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 10:41:11,465 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 10:41:11,506 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 10:41:11,646 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 10:41:11,649 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 10:41:11,651 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 10:41:11,654 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 10:41:11,657 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 10:41:11,660 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:41:11,662 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:41:11,665 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 10:41:11,847 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 10:41:11,851 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 10:41:11,855 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 10:41:11,860 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 10:41:11,864 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 10:41:12,046 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 10:41:12,049 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:41:12,051 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 10:41:12,053 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:41:12,055 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:41:12,057 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 10:41:12,059 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 10:41:12,062 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 10:41:12,246 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 10:41:12,247 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 10:41:12,249 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 10:41:12,251 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 10:41:12,255 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 10:41:12,446 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 10:41:12,448 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 10:41:12,453 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 10:41:12,456 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 10:41:12,458 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:41:12,460 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 10:41:12,462 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:41:12,646 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:41:12,649 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 10:41:12,651 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 10:41:12,653 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 10:41:12,655 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 10:41:12,657 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 10:41:12,659 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 10:41:12,846 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 10:41:12,848 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 10:41:12,850 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 10:41:12,852 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 10:41:12,854 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 10:41:13,046 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 10:41:13,048 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 10:41:13,050 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 10:41:13,052 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 10:41:13,053 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 10:41:13,056 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 10:41:13,059 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 10:41:13,060 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:41:13,060 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:41:13,246 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 10:41:13,248 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 10:41:13,249 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 10:41:13,251 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 10:41:13,252 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 10:41:13,254 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:42:47,721 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 10:42:47,775 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 10:42:47,788 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 10:42:47,793 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 10:42:47,797 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 10:42:47,799 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 10:42:47,803 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 10:42:47,805 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 10:42:47,807 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 10:42:47,809 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 10:42:47,811 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:42:47,813 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 10:42:47,955 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 10:42:47,957 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:42:48,016 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 10:42:48,027 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 10:42:48,029 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 10:42:48,033 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 10:42:48,037 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 10:42:48,040 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 10:42:48,042 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 10:42:48,048 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 10:42:48,155 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 10:42:48,157 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 10:42:48,161 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 10:42:48,163 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 10:42:48,165 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 10:42:48,167 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 10:42:48,169 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 10:42:48,171 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 10:42:48,355 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 10:42:48,356 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 10:42:48,358 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 10:42:48,360 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 10:42:48,363 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 10:42:48,365 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 10:42:48,367 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 10:42:48,369 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 10:42:48,382 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:42:48,556 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:42:48,559 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 10:42:48,563 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 10:42:48,566 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 10:42:48,568 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 10:42:48,571 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:42:48,574 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 10:42:48,756 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 10:42:48,761 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 10:42:48,766 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 10:42:48,770 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 10:42:48,957 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 10:42:48,961 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 10:42:48,963 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 10:42:48,966 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:42:48,968 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:42:48,971 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:42:48,973 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 10:42:48,975 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 10:42:49,155 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 10:42:49,157 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 10:42:49,158 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 10:42:49,160 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 10:42:49,355 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 10:42:49,366 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 10:42:49,367 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:42:49,369 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:42:49,371 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:42:49,372 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 10:42:49,374 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 10:42:49,555 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 10:42:49,557 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 10:42:49,558 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 10:42:49,560 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 10:42:49,562 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 10:42:49,564 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 10:42:49,755 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:42:49,757 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:42:49,759 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:42:49,761 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 10:42:49,762 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 10:42:49,955 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 10:42:49,957 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 10:42:49,959 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 10:42:49,963 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 10:42:49,965 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:42:49,967 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 10:42:49,969 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 10:42:50,155 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 10:42:50,159 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:42:50,161 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:42:50,163 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 10:42:50,355 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 10:42:50,357 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 10:42:50,359 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 10:42:50,361 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 10:42:50,363 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:42:50,555 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:42:50,557 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 10:42:50,559 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 10:42:50,561 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 10:42:50,755 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 10:42:50,759 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 10:42:50,761 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:42:50,764 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 10:42:50,766 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:42:50,772 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:42:50,776 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:42:50,955 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:42:50,957 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:42:50,959 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:42:50,961 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:42:50,964 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:42:50,966 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:42:51,155 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:42:51,158 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:42:51,160 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:42:51,163 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 10:42:51,165 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:42:51,167 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 10:42:51,170 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:42:51,172 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:42:51,362 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:42:51,364 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:42:51,366 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:42:51,368 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:42:51,370 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:42:51,373 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:42:51,555 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:42:51,557 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:42:51,559 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:42:51,561 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:42:51,599 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 10:42:51,601 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 10:42:51,603 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:42:51,605 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:42:51,755 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:42:51,758 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 10:42:51,761 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 10:42:51,763 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:42:51,765 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:42:51,767 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:42:51,774 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:42:51,955 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 10:42:51,957 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:42:51,959 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:44:10,443 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 10:44:10,519 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 10:44:10,522 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 10:44:10,524 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 10:44:10,527 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:44:10,531 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 10:44:10,539 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:44:10,546 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:44:10,670 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 10:44:10,672 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 10:44:10,674 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 10:44:10,675 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 10:44:10,678 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 10:44:10,680 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 10:44:10,682 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 10:44:10,684 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 10:44:10,870 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 10:44:10,872 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:44:10,873 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 10:44:10,875 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 10:44:10,878 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 10:44:11,070 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 10:44:11,102 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 10:44:11,104 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 10:44:11,106 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 10:44:11,108 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 10:44:11,110 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 10:44:11,111 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 10:44:11,113 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 10:44:11,270 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 10:44:11,271 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:44:11,273 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 10:44:11,275 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 10:44:11,471 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 10:44:11,473 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 10:44:11,475 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 10:44:11,477 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 10:44:11,479 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 10:44:11,481 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 10:44:11,681 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 10:44:11,683 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 10:44:11,684 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 10:44:11,686 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 10:44:11,688 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 10:44:11,690 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 10:44:11,692 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:44:11,870 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:44:11,872 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 10:44:11,875 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 10:44:11,877 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 10:44:11,879 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 10:44:12,070 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 10:44:12,072 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 10:44:12,078 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 10:44:12,080 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:44:12,082 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 10:44:12,084 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:44:12,091 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:44:12,094 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 10:44:12,270 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 10:44:12,272 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 10:44:12,275 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 10:44:12,278 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 10:44:12,280 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 10:44:12,282 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 10:44:12,285 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 10:44:12,470 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 10:44:12,472 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 10:44:12,475 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 10:44:12,478 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 10:44:12,482 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:44:12,670 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 10:44:12,672 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:44:12,674 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:44:12,678 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 10:44:12,680 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 10:44:12,681 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 10:44:12,683 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 10:44:12,685 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 10:44:12,870 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 10:44:12,872 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 10:44:12,875 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 10:44:12,877 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 10:44:13,070 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 10:44:13,072 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 10:44:13,074 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 10:44:13,076 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 10:44:13,078 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 10:44:13,080 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 10:44:13,082 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 10:44:13,084 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 10:44:13,270 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 10:44:13,272 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:44:13,273 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:44:13,275 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 10:44:13,276 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 10:44:13,278 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 10:44:13,279 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 10:44:13,280 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 10:44:13,281 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:47:18,366 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 10:47:18,427 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 10:47:18,441 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 10:47:18,446 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-10 10:47:18,449 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-10 10:47:18,451 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 10:47:18,453 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 10:47:18,455 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 10:47:18,457 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-10 10:47:18,460 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 10:47:18,461 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:47:18,464 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 10:47:18,598 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 10:47:18,600 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:47:18,668 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 10:47:18,672 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 10:47:18,680 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 10:47:18,688 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 10:47:18,692 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 10:47:18,696 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 10:47:18,703 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 10:47:18,709 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 10:47:18,799 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 10:47:18,824 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 10:47:18,828 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 10:47:18,831 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 10:47:18,834 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 10:47:18,849 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 10:47:18,852 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 10:47:18,855 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 10:47:19,004 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 10:47:19,006 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 10:47:19,009 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 10:47:19,033 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 10:47:19,037 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 10:47:19,040 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 10:47:19,045 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 10:47:19,047 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 10:47:19,066 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:47:19,200 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:47:19,203 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 10:47:19,206 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 10:47:19,209 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 10:47:19,211 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 10:47:19,213 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:47:19,217 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 10:47:19,399 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 10:47:19,401 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 10:47:19,405 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 10:47:19,408 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 10:47:19,600 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 10:47:19,603 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 10:47:19,605 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 10:47:19,607 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:47:19,610 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:47:19,612 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:47:19,617 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 10:47:19,619 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 10:47:19,798 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 10:47:19,800 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 10:47:19,802 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 10:47:19,804 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 10:47:19,998 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 10:47:20,007 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 10:47:20,009 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:47:20,011 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:47:20,013 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:47:20,015 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 10:47:20,016 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 10:47:20,198 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 10:47:20,200 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 10:47:20,201 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 10:47:20,203 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 10:47:20,205 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 10:47:20,207 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 10:47:20,398 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:47:20,400 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:47:20,401 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:47:20,403 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 10:47:20,405 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 10:47:20,598 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 10:47:20,599 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 10:47:20,601 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 10:47:20,605 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 10:47:20,608 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:47:20,610 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 10:47:20,612 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 10:47:20,798 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 10:47:20,802 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:47:20,804 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:47:20,806 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 10:47:20,998 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 10:47:21,000 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 10:47:21,002 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 10:47:21,004 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 10:47:21,006 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:47:21,198 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:47:21,200 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 10:47:21,202 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 10:47:21,204 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 10:47:21,398 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 10:47:21,401 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 10:47:21,403 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:47:21,405 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 10:47:21,407 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:47:21,414 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:47:21,418 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:47:21,598 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:47:21,600 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:47:21,603 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:47:21,605 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:47:21,607 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:47:21,609 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:47:21,798 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:47:21,801 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:47:21,803 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:47:21,805 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 10:47:21,807 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:47:21,810 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 10:47:21,812 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:47:21,814 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:47:21,998 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:47:22,000 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:47:22,003 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:47:22,005 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:47:22,008 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:47:22,010 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:47:22,198 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:47:22,200 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:47:22,202 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:47:22,204 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:47:22,244 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 10:47:22,245 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 10:47:22,248 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:47:22,249 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:47:22,398 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:47:22,400 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 10:47:22,402 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 10:47:22,404 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:47:22,406 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:47:22,408 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:47:22,414 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:47:22,598 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 10:47:22,600 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:47:22,602 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:48:15,522 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 10:48:15,530 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 10:48:15,536 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 10:48:15,542 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 10:48:15,544 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:48:15,550 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 10:48:15,553 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:48:15,713 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:48:15,717 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 10:48:15,719 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 10:48:15,722 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 10:48:15,724 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 10:48:15,729 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 10:48:15,732 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 10:48:15,735 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 10:48:15,913 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 10:48:15,916 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 10:48:15,919 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:48:15,926 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 10:48:15,928 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 10:48:15,931 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 10:48:16,113 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 10:48:16,147 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 10:48:16,149 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 10:48:16,151 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 10:48:16,153 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 10:48:16,155 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 10:48:16,313 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 10:48:16,315 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 10:48:16,317 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 10:48:16,319 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:48:16,321 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 10:48:16,323 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 10:48:16,513 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 10:48:16,515 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 10:48:16,518 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 10:48:16,520 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 10:48:16,522 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 10:48:16,524 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 10:48:16,740 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 10:48:16,742 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 10:48:16,744 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 10:48:16,746 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 10:48:16,748 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 10:48:16,750 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 10:48:16,914 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:48:16,919 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:48:16,923 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 10:48:16,927 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 10:48:16,931 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 10:48:17,115 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 10:48:17,119 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 10:48:17,123 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 10:48:17,132 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 10:48:17,137 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:48:17,140 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 10:48:17,144 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:48:17,315 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:48:17,320 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 10:48:17,325 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 10:48:17,329 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 10:48:17,333 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 10:48:17,336 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 10:48:17,339 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 10:48:17,343 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 10:48:17,515 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 10:48:17,520 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 10:48:17,526 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 10:48:17,530 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 10:48:17,536 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 10:48:17,715 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 10:48:17,720 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 10:48:17,725 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 10:48:17,730 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 10:48:17,738 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 10:48:17,742 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 10:48:17,746 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 10:48:17,913 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 10:48:17,915 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 10:48:17,919 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 10:48:17,921 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 10:48:17,924 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 10:48:18,114 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 10:48:18,122 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 10:48:18,124 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 10:48:18,127 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 10:48:18,129 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 10:48:18,132 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 10:48:18,134 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 10:48:18,136 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 10:48:18,313 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 10:48:18,316 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 10:48:18,318 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:48:18,319 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:48:18,321 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 10:48:18,323 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 10:48:18,324 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 10:48:18,331 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 10:48:18,333 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 10:48:18,515 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 10:59:44,780 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 10:59:44,855 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 10:59:44,870 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 10:59:44,875 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 10:59:44,878 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 10:59:44,881 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 10:59:44,883 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 10:59:44,885 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 10:59:44,887 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 10:59:44,889 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 10:59:44,891 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:59:44,893 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 10:59:44,996 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 10:59:44,998 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 10:59:45,058 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 10:59:45,094 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 10:59:45,104 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 10:59:45,119 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 10:59:45,123 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 10:59:45,129 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 10:59:45,131 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 10:59:45,137 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 10:59:45,196 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 10:59:45,198 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 10:59:45,202 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 10:59:45,205 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 10:59:45,207 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 10:59:45,210 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 10:59:45,212 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 10:59:45,217 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 10:59:45,396 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 10:59:45,398 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 10:59:45,403 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 10:59:45,405 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 10:59:45,408 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 10:59:45,410 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 10:59:45,412 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 10:59:45,414 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 10:59:45,433 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:59:45,598 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 10:59:45,601 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 10:59:45,605 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 10:59:45,608 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 10:59:45,610 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 10:59:45,613 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:59:45,616 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 10:59:45,797 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 10:59:45,800 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 10:59:45,804 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 10:59:45,807 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 10:59:45,998 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 10:59:46,002 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 10:59:46,004 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 10:59:46,007 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:59:46,009 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:59:46,011 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:59:46,013 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 10:59:46,015 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 10:59:46,196 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 10:59:46,198 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 10:59:46,200 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 10:59:46,201 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 10:59:46,396 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 10:59:46,406 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 10:59:46,408 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:59:46,409 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:59:46,411 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:59:46,413 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 10:59:46,414 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 10:59:46,596 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 10:59:46,598 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 10:59:46,600 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 10:59:46,602 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 10:59:46,603 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 10:59:46,605 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 10:59:46,796 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:59:46,798 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:59:46,800 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 10:59:46,801 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 10:59:46,803 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 10:59:46,996 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 10:59:46,998 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 10:59:47,000 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 10:59:47,004 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 10:59:47,007 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 10:59:47,009 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 10:59:47,011 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 10:59:47,196 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 10:59:47,200 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:59:47,202 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:59:47,204 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 10:59:47,396 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 10:59:47,398 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 10:59:47,400 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 10:59:47,403 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 10:59:47,405 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 10:59:47,596 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:59:47,598 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 10:59:47,600 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 10:59:47,602 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 10:59:47,796 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 10:59:47,800 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 10:59:47,803 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 10:59:47,805 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 10:59:47,807 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 10:59:47,813 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 10:59:47,817 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:59:47,996 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:59:47,998 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:59:48,001 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:59:48,004 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:59:48,007 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:59:48,009 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:59:48,196 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:59:48,198 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:59:48,200 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:59:48,203 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 10:59:48,205 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 10:59:48,207 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 10:59:48,209 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 10:59:48,211 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 10:59:48,396 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:59:48,398 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:59:48,400 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:59:48,402 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:59:48,405 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:59:48,407 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 10:59:48,596 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 10:59:48,598 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 10:59:48,600 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 10:59:48,603 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 10:59:48,645 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 10:59:48,647 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 10:59:48,649 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 10:59:48,651 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 10:59:48,796 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 10:59:48,799 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 10:59:48,802 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 10:59:48,804 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 10:59:48,806 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:59:48,808 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 10:59:48,814 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 10:59:48,996 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 10:59:48,998 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 10:59:49,000 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:01:39,225 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 11:01:39,252 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 11:01:39,255 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 11:01:39,258 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 11:01:39,261 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:01:39,264 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 11:01:39,266 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:01:39,269 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:01:39,272 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 11:01:39,434 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 11:01:39,438 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 11:01:39,443 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:01:39,449 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:01:39,452 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 11:01:39,455 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 11:01:39,458 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 11:01:39,470 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 11:01:39,634 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 11:01:39,637 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:01:39,639 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:01:39,641 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 11:01:39,643 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 11:01:39,860 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 11:01:39,862 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 11:01:39,864 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 11:01:39,867 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 11:01:39,871 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 11:01:39,873 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:01:39,875 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:01:40,034 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:01:40,036 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:01:40,037 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 11:01:40,039 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 11:01:40,041 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 11:01:40,234 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 11:01:40,236 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:01:40,238 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 11:01:40,241 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:01:40,243 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:01:40,434 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 11:01:40,436 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 11:01:40,437 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 11:01:40,439 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 11:01:40,441 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 11:01:40,443 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 11:01:40,445 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:01:40,448 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:01:40,634 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 11:01:40,636 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 11:01:40,638 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 11:01:40,640 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 11:01:40,643 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 11:01:40,834 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 11:01:40,835 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 11:01:40,837 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:01:40,839 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:01:40,841 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:01:40,843 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:01:40,846 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 11:01:41,034 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 11:01:41,040 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 11:01:41,042 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 11:01:41,044 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 11:01:41,046 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 11:01:41,048 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:01:41,050 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 11:01:41,234 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 11:01:41,236 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 11:01:41,238 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 11:01:41,241 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 11:01:41,243 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:01:41,434 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:01:41,436 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:01:41,438 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:01:41,442 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 11:01:41,444 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 11:01:41,446 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:01:41,448 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 11:01:41,451 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 11:01:41,634 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 11:01:41,636 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 11:01:41,637 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 11:01:41,639 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 11:01:41,642 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 11:01:41,834 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 11:01:41,836 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 11:01:41,838 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 11:01:41,840 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 11:01:41,842 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 11:01:41,844 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 11:01:41,846 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 11:01:41,849 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 11:01:42,034 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:01:42,034 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 11:01:42,038 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 11:01:42,040 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 11:01:42,041 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:01:42,043 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 11:01:42,045 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 11:01:42,049 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:40:08,766 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 11:40:08,822 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 11:40:08,834 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 11:40:08,840 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 11:40:08,843 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 11:40:08,845 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 11:40:08,847 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 11:40:08,849 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 11:40:08,851 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 11:40:08,853 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 11:40:08,855 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:40:08,858 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 11:40:08,980 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 11:40:08,982 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:40:09,049 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 11:40:09,053 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 11:40:09,078 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 11:40:09,081 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 11:40:09,086 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 11:40:09,089 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 11:40:09,092 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 11:40:09,103 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 11:40:09,180 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 11:40:09,182 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 11:40:09,185 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 11:40:09,187 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 11:40:09,189 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 11:40:09,191 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 11:40:09,193 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 11:40:09,195 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 11:40:09,380 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 11:40:09,381 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 11:40:09,384 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 11:40:09,385 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 11:40:09,389 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 11:40:09,391 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 11:40:09,392 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 11:40:09,394 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 11:40:09,408 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:40:09,581 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:40:09,584 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 11:40:09,588 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 11:40:09,591 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 11:40:09,594 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 11:40:09,597 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:40:09,600 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 11:40:09,786 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 11:40:09,789 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 11:40:09,793 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 11:40:09,800 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 11:40:09,984 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 11:40:09,988 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 11:40:09,991 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 11:40:09,995 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:40:09,998 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:40:10,001 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:40:10,004 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 11:40:10,006 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 11:40:10,181 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 11:40:10,188 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 11:40:10,191 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 11:40:10,193 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 11:40:10,382 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 11:40:10,402 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 11:40:10,405 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:40:10,408 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:40:10,411 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:40:10,414 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 11:40:10,417 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 11:40:10,582 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 11:40:10,593 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 11:40:10,606 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 11:40:10,611 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 11:40:10,613 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 11:40:10,615 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 11:40:10,781 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:40:10,784 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:40:10,786 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 11:40:10,788 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 11:40:10,790 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 11:40:10,980 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 11:40:10,982 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 11:40:10,984 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 11:40:10,988 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 11:40:10,990 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:40:10,992 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 11:40:10,994 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 11:40:11,180 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 11:40:11,183 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:40:11,187 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:40:11,189 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 11:40:11,380 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 11:40:11,382 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 11:40:11,384 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 11:40:11,386 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 11:40:11,388 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:40:11,580 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:40:11,583 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 11:40:11,585 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 11:40:11,587 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 11:40:11,781 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 11:40:11,795 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 11:40:11,798 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:40:11,800 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 11:40:11,807 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:40:11,809 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:40:11,813 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:40:11,980 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:40:11,983 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:40:11,985 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:40:11,987 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:40:11,989 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:40:11,991 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:40:12,180 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:40:12,183 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:40:12,185 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:40:12,187 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 11:40:12,190 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:40:12,192 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 11:40:12,194 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:40:12,197 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:40:12,380 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:40:12,383 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:40:12,385 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:40:12,387 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:40:12,389 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:40:12,391 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:40:12,580 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:40:12,583 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:40:12,585 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:40:12,587 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:40:12,631 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 11:40:12,633 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 11:40:12,635 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:40:12,637 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:40:12,780 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:40:12,783 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 11:40:12,786 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 11:40:12,789 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:40:12,794 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:40:12,796 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:40:12,803 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:40:12,980 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 11:40:12,982 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:40:12,984 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:40:43,044 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 11:40:43,063 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 11:40:43,071 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 11:40:43,080 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 11:40:43,088 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:40:43,094 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 11:40:43,201 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:40:43,204 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:40:43,261 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 11:40:43,269 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 11:40:43,276 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 11:40:43,280 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:40:43,293 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:40:43,381 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 11:40:43,404 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 11:40:43,412 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 11:40:43,418 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 11:40:43,421 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 11:40:43,459 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:40:43,492 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:40:43,497 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 11:40:43,602 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 11:40:43,654 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 11:40:43,657 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 11:40:43,662 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 11:40:43,669 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 11:40:43,807 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 11:40:43,813 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:40:43,815 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:40:43,818 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:40:43,845 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:40:43,873 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 11:40:43,879 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 11:40:44,002 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 11:40:44,015 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 11:40:44,020 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:40:44,024 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 11:40:44,028 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:40:44,200 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:40:44,249 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 11:40:44,252 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 11:40:44,256 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 11:40:44,262 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 11:40:44,268 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 11:40:44,403 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 11:40:44,407 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:40:44,414 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:40:44,452 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 11:40:44,490 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 11:40:44,496 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 11:40:44,602 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 11:40:44,616 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 11:40:44,623 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 11:40:44,631 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 11:40:44,635 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:40:44,638 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:40:44,801 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:40:44,804 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:40:44,837 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 11:40:44,843 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 11:40:44,850 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 11:40:44,854 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 11:40:44,860 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 11:40:44,898 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 11:40:45,032 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:40:45,039 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 11:40:45,044 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 11:40:45,057 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 11:40:45,061 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 11:40:45,204 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 11:40:45,208 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:40:45,211 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:40:45,215 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:40:45,218 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:40:45,226 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 11:40:45,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 11:40:45,403 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:40:45,406 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 11:40:45,409 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 11:40:45,443 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 11:40:45,477 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 11:40:45,483 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 11:40:45,601 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 11:40:45,614 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 11:40:45,618 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 11:40:45,624 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 11:40:45,629 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 11:40:45,635 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 11:40:45,638 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 11:40:45,804 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 11:40:45,925 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 11:40:45,929 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 11:40:49,952 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:40:49,954 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 11:40:49,956 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:40:49,958 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:46:53,566 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 11:46:53,624 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 11:46:53,635 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 11:46:53,640 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-10 11:46:53,643 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-10 11:46:53,646 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 11:46:53,648 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 11:46:53,650 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 11:46:53,652 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-10 11:46:53,654 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 11:46:53,657 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:46:53,660 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 11:46:53,778 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 11:46:53,780 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:46:53,820 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 11:46:53,824 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 11:46:53,826 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 11:46:53,829 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 11:46:53,833 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 11:46:53,836 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 11:46:53,838 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 11:46:53,973 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 11:46:53,978 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 11:46:53,980 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 11:46:53,983 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 11:46:53,986 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 11:46:53,988 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 11:46:53,990 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 11:46:53,992 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 11:46:53,994 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 11:46:54,178 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 11:46:54,181 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 11:46:54,183 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 11:46:54,185 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 11:46:54,189 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 11:46:54,190 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 11:46:54,192 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 11:46:54,194 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 11:46:54,210 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:46:54,380 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:46:54,383 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 11:46:54,387 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 11:46:54,390 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 11:46:54,392 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 11:46:54,395 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:46:54,398 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 11:46:54,579 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 11:46:54,581 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 11:46:54,586 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 11:46:54,588 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 11:46:54,780 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 11:46:54,784 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 11:46:54,787 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 11:46:54,790 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:46:54,793 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:46:54,796 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:46:54,798 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 11:46:54,800 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 11:46:54,978 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 11:46:54,980 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 11:46:54,981 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 11:46:54,983 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 11:46:55,178 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 11:46:55,179 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 11:46:55,188 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:46:55,189 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:46:55,191 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:46:55,193 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 11:46:55,195 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 11:46:55,378 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 11:46:55,380 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 11:46:55,381 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 11:46:55,383 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 11:46:55,385 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 11:46:55,387 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 11:46:55,577 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:46:55,579 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:46:55,581 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 11:46:55,583 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 11:46:55,585 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 11:46:55,778 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 11:46:55,780 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 11:46:55,792 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 11:46:55,798 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 11:46:55,801 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:46:55,805 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 11:46:55,807 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 11:46:55,978 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 11:46:55,982 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:46:55,984 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:46:55,986 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 11:46:56,178 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 11:46:56,181 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 11:46:56,183 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 11:46:56,185 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 11:46:56,187 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:46:56,378 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:46:56,380 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 11:46:56,382 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 11:46:56,385 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 11:46:56,578 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 11:46:56,581 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 11:46:56,584 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:46:56,585 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 11:46:56,587 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:46:56,594 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:46:56,597 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:46:56,778 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:46:56,780 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:46:56,782 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:46:56,784 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:46:56,786 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:46:56,793 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:46:56,978 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:46:56,980 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:46:56,982 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:46:56,984 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 11:46:56,987 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:46:56,989 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 11:46:56,991 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:46:56,993 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:46:57,178 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:46:57,180 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:46:57,182 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:46:57,184 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:46:57,185 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:46:57,187 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:46:57,378 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:46:57,380 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:46:57,382 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:46:57,385 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:46:57,417 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 11:46:57,419 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 11:46:57,421 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:46:57,424 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:46:57,578 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:46:57,581 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 11:46:57,584 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 11:46:57,586 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:46:57,588 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:46:57,590 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:46:57,597 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:46:57,778 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 11:46:57,781 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:46:57,792 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:47:09,017 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 11:47:09,019 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 11:47:09,021 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 11:47:09,023 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 11:47:09,025 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:47:09,028 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 11:47:09,216 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:47:09,218 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:47:09,221 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 11:47:09,225 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 11:47:09,227 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 11:47:09,229 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:47:09,232 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:47:09,235 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 11:47:09,411 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 11:47:09,413 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 11:47:09,415 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 11:47:09,416 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 11:47:09,418 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:47:09,420 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:47:09,422 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 11:47:09,611 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 11:47:09,640 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 11:47:09,645 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 11:47:09,647 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 11:47:09,699 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 11:47:09,811 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 11:47:09,813 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:47:09,816 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:47:09,818 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:47:09,821 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:47:09,824 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 11:47:09,827 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 11:47:10,011 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 11:47:10,017 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 11:47:10,019 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:47:10,021 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 11:47:10,023 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:47:10,211 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:47:10,268 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 11:47:10,270 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 11:47:10,272 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 11:47:10,274 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 11:47:10,277 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 11:47:10,411 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 11:47:10,413 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:47:10,415 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:47:10,417 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 11:47:10,419 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 11:47:10,421 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 11:47:10,611 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 11:47:10,613 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 11:47:10,615 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 11:47:10,621 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 11:47:10,623 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:47:10,629 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:47:10,811 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:47:10,814 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:47:10,816 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 11:47:10,818 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 11:47:10,820 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 11:47:10,822 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 11:47:10,825 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 11:47:10,827 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 11:47:11,011 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:47:11,012 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 11:47:11,014 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 11:47:11,017 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 11:47:11,019 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 11:47:11,211 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 11:47:11,214 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:47:11,216 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:47:11,217 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:47:11,219 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:47:11,223 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 11:47:11,225 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 11:47:11,411 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:47:11,413 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 11:47:11,415 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 11:47:11,417 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 11:47:11,419 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 11:47:11,420 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 11:47:11,611 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 11:47:11,613 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 11:47:11,615 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 11:47:11,616 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 11:47:11,618 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 11:47:11,620 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 11:47:11,622 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 11:47:11,811 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 11:47:11,813 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 11:47:11,816 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 11:47:11,818 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:47:11,820 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 11:47:11,822 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:47:11,824 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:52:12,163 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 11:52:12,218 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 11:52:12,234 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 11:52:12,240 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 11:52:12,243 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 11:52:12,248 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 11:52:12,255 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 11:52:12,262 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 11:52:12,268 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 11:52:12,270 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 11:52:12,277 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:52:12,279 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 11:52:12,391 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 11:52:12,393 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:52:12,451 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 11:52:12,457 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 11:52:12,460 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 11:52:12,488 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 11:52:12,494 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 11:52:12,497 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 11:52:12,500 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 11:52:12,560 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 11:52:12,591 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 11:52:12,594 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 11:52:12,598 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 11:52:12,600 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 11:52:12,602 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 11:52:12,605 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 11:52:12,607 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 11:52:12,609 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 11:52:12,791 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 11:52:12,793 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 11:52:12,796 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 11:52:12,798 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 11:52:12,802 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 11:52:12,804 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 11:52:12,807 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 11:52:12,809 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 11:52:12,828 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:52:12,993 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:52:12,996 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 11:52:13,000 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 11:52:13,004 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 11:52:13,006 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 11:52:13,009 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:52:13,013 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 11:52:13,192 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 11:52:13,195 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 11:52:13,200 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 11:52:13,202 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 11:52:13,393 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 11:52:13,397 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 11:52:13,399 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 11:52:13,402 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:52:13,407 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:52:13,409 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:52:13,411 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 11:52:13,413 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 11:52:13,591 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 11:52:13,593 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 11:52:13,600 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 11:52:13,606 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 11:52:13,800 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 11:52:13,812 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 11:52:13,814 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:52:13,816 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:52:13,818 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:52:13,819 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 11:52:13,821 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 11:52:13,991 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 11:52:13,994 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 11:52:13,996 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 11:52:13,998 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 11:52:13,999 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 11:52:14,001 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 11:52:14,191 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:52:14,193 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:52:14,194 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 11:52:14,196 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 11:52:14,198 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 11:52:14,391 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 11:52:14,393 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 11:52:14,394 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 11:52:14,399 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 11:52:14,402 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:52:14,404 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 11:52:14,406 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 11:52:14,591 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 11:52:14,595 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:52:14,598 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:52:14,600 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 11:52:14,791 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 11:52:14,794 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 11:52:14,796 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 11:52:14,798 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 11:52:14,800 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:52:14,991 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:52:14,993 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 11:52:14,996 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 11:52:14,998 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 11:52:15,191 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 11:52:15,195 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 11:52:15,197 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:52:15,199 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 11:52:15,201 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:52:15,207 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:52:15,210 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:52:15,391 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:52:15,393 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:52:15,395 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:52:15,398 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:52:15,400 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:52:15,402 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:52:15,591 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:52:15,593 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:52:15,595 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:52:15,597 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 11:52:15,600 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:52:15,602 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 11:52:15,604 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:52:15,606 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:52:15,803 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:52:15,806 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:52:15,808 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:52:15,811 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:52:15,813 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:52:15,816 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:52:15,993 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:52:15,995 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:52:15,997 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:52:15,999 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:52:16,042 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 11:52:16,044 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 11:52:16,046 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:52:16,048 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:52:16,193 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:52:16,196 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 11:52:16,198 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 11:52:16,200 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:52:16,202 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:52:16,204 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:52:16,210 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:52:16,393 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 11:52:16,395 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:52:16,397 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:52:24,974 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 11:52:24,980 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 11:52:24,987 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 11:52:24,994 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 11:52:24,996 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:52:24,998 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 11:52:25,004 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:52:25,173 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:52:25,175 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 11:52:25,177 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 11:52:25,179 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 11:52:25,181 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:52:25,184 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:52:25,186 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 11:52:25,188 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 11:52:25,373 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 11:52:25,375 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 11:52:25,377 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 11:52:25,379 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:52:25,381 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:52:25,383 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 11:52:25,573 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 11:52:25,597 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 11:52:25,599 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 11:52:25,601 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 11:52:25,603 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 11:52:25,604 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 11:52:25,773 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:52:25,775 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:52:25,776 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:52:25,778 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:52:25,780 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 11:52:25,787 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 11:52:25,973 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 11:52:25,974 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 11:52:25,976 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:52:25,978 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 11:52:25,980 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:52:25,982 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:52:26,200 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 11:52:26,201 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 11:52:26,203 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 11:52:26,204 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 11:52:26,206 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 11:52:26,208 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 11:52:26,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:52:26,378 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:52:26,381 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 11:52:26,385 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 11:52:26,389 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 11:52:26,574 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 11:52:26,579 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 11:52:26,583 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 11:52:26,593 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 11:52:26,597 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:52:26,601 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:52:26,605 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:52:26,775 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:52:26,779 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 11:52:26,783 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 11:52:26,787 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 11:52:26,791 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 11:52:26,794 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 11:52:26,798 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 11:52:26,802 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:52:26,975 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 11:52:26,979 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 11:52:26,983 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 11:52:26,987 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 11:52:26,992 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 11:52:27,175 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:52:27,179 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:52:27,183 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:52:27,187 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:52:27,194 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 11:52:27,198 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 11:52:27,202 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:52:27,373 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 11:52:27,376 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 11:52:27,378 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 11:52:27,381 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 11:52:27,382 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 11:52:27,573 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 11:52:27,575 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 11:52:27,577 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 11:52:27,579 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 11:52:27,582 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 11:52:27,585 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 11:52:27,587 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 11:52:27,589 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 11:52:27,774 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 11:52:27,777 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 11:52:27,779 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:52:27,787 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 11:52:27,790 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:52:27,792 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:54:04,202 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 11:54:04,261 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 11:54:04,272 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 11:54:04,276 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-10 11:54:04,279 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-10 11:54:04,282 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 11:54:04,284 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 11:54:04,286 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 11:54:04,288 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-10 11:54:04,290 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 11:54:04,292 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:54:04,294 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 11:54:04,414 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 11:54:04,416 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:54:04,476 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 11:54:04,481 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 11:54:04,483 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 11:54:04,506 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 11:54:04,511 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 11:54:04,514 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 11:54:04,522 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 11:54:04,529 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 11:54:04,614 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 11:54:04,616 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 11:54:04,620 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 11:54:04,622 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 11:54:04,624 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 11:54:04,625 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 11:54:04,627 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 11:54:04,629 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 11:54:04,814 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 11:54:04,815 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 11:54:04,817 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 11:54:04,819 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 11:54:04,823 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 11:54:04,824 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 11:54:04,827 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 11:54:04,828 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 11:54:04,846 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:54:05,016 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:54:05,019 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 11:54:05,023 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 11:54:05,026 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 11:54:05,028 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 11:54:05,031 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:54:05,033 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 11:54:05,216 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 11:54:05,219 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 11:54:05,223 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 11:54:05,225 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 11:54:05,415 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 11:54:05,418 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 11:54:05,421 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 11:54:05,423 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:54:05,426 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:54:05,428 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:54:05,429 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 11:54:05,431 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 11:54:05,614 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 11:54:05,616 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 11:54:05,618 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 11:54:05,628 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 11:54:05,814 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 11:54:05,824 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 11:54:05,826 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:54:05,828 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:54:05,829 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:54:05,831 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 11:54:05,833 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 11:54:06,014 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 11:54:06,016 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 11:54:06,018 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 11:54:06,020 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 11:54:06,021 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 11:54:06,023 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 11:54:06,214 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:54:06,216 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:54:06,218 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 11:54:06,220 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 11:54:06,222 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 11:54:06,414 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 11:54:06,416 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 11:54:06,418 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 11:54:06,423 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 11:54:06,427 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:54:06,429 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 11:54:06,431 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 11:54:06,614 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 11:54:06,618 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:54:06,620 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:54:06,622 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 11:54:06,814 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 11:54:06,816 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 11:54:06,818 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 11:54:06,820 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 11:54:06,822 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:54:07,014 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:54:07,016 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 11:54:07,018 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 11:54:07,021 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 11:54:07,214 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 11:54:07,218 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 11:54:07,220 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:54:07,222 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 11:54:07,224 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:54:07,230 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:54:07,235 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:54:07,414 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:54:07,416 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:54:07,419 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:54:07,421 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:54:07,423 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:54:07,425 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:54:07,614 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:54:07,616 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:54:07,619 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:54:07,621 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 11:54:07,623 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:54:07,625 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 11:54:07,628 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:54:07,631 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:54:07,814 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:54:07,816 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:54:07,818 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:54:07,820 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:54:07,823 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:54:07,825 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:54:08,014 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:54:08,016 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:54:08,018 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:54:08,020 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:54:08,062 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 11:54:08,065 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 11:54:08,067 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:54:08,069 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:54:08,214 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:54:08,217 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 11:54:08,219 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 11:54:08,221 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:54:08,223 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:54:08,226 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:54:08,233 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:54:08,414 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 11:54:08,416 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:54:08,418 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:54:45,894 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 11:54:45,907 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 11:54:45,912 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 11:54:45,920 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 11:54:45,925 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:54:45,929 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 11:54:45,950 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:54:45,954 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:54:46,015 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 11:54:46,105 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 11:54:46,111 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 11:54:46,115 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:54:46,124 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:54:46,155 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 11:54:46,161 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 11:54:46,167 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 11:54:46,170 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 11:54:46,304 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 11:54:46,339 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:54:46,371 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:54:46,377 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 11:54:46,382 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 11:54:46,555 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 11:54:46,558 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 11:54:46,562 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 11:54:46,568 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 11:54:46,574 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 11:54:46,580 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:54:46,584 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:54:46,703 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:54:46,734 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:54:46,765 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 11:54:46,771 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 11:54:46,776 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 11:54:46,912 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 11:54:46,915 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:54:46,918 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 11:54:46,922 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:54:46,925 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:54:47,103 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 11:54:47,106 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 11:54:47,111 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 11:54:47,117 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 11:54:47,123 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 11:54:47,129 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 11:54:47,132 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:54:47,138 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:54:47,333 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 11:54:47,370 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 11:54:47,377 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 11:54:47,382 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 11:54:47,395 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 11:54:47,508 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 11:54:47,515 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 11:54:47,519 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:54:47,522 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:54:47,526 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:54:47,529 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:54:47,565 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 11:54:47,706 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 11:54:47,713 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 11:54:47,716 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 11:54:47,724 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 11:54:47,761 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 11:54:47,817 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:54:47,823 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 11:54:47,905 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 11:54:47,920 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 11:54:47,924 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 11:54:47,931 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 11:54:47,936 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:54:48,103 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:54:48,107 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:54:48,110 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:54:48,118 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 11:54:48,124 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 11:54:48,130 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:54:48,134 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 11:54:48,137 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 11:54:48,335 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 11:54:48,370 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 11:54:48,376 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 11:54:48,381 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 11:54:48,394 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 11:54:48,504 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 11:54:48,510 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 11:54:48,516 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 11:54:48,522 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 11:54:48,525 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 11:54:48,532 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 11:54:48,658 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 11:54:48,667 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 11:54:57,268 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:54:57,272 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 11:54:57,274 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:54:57,276 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:55:38,958 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 11:55:39,015 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 11:55:39,026 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 11:55:39,031 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-10 11:55:39,033 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-10 11:55:39,035 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 11:55:39,037 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 11:55:39,039 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 11:55:39,041 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-10 11:55:39,043 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 11:55:39,045 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:55:39,047 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 11:55:39,187 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 11:55:39,188 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:55:39,247 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 11:55:39,252 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 11:55:39,254 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 11:55:39,258 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 11:55:39,263 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 11:55:39,267 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 11:55:39,269 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 11:55:39,276 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 11:55:39,387 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 11:55:39,389 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 11:55:39,393 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 11:55:39,396 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 11:55:39,398 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 11:55:39,404 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 11:55:39,407 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 11:55:39,409 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 11:55:39,587 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 11:55:39,589 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 11:55:39,591 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 11:55:39,593 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 11:55:39,598 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 11:55:39,603 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 11:55:39,608 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 11:55:39,610 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 11:55:39,628 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:55:39,793 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:55:39,796 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 11:55:39,800 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 11:55:39,802 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 11:55:39,804 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 11:55:39,808 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:55:39,811 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 11:55:39,988 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 11:55:39,991 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 11:55:39,996 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 11:55:39,998 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 11:55:40,189 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 11:55:40,192 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 11:55:40,194 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 11:55:40,196 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:55:40,198 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:55:40,200 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:55:40,201 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 11:55:40,203 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 11:55:40,387 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 11:55:40,389 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 11:55:40,390 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 11:55:40,392 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 11:55:40,587 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 11:55:40,596 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 11:55:40,598 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:55:40,599 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:55:40,601 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:55:40,603 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 11:55:40,605 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 11:55:40,787 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 11:55:40,789 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 11:55:40,791 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 11:55:40,793 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 11:55:40,795 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 11:55:40,797 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 11:55:40,987 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:55:40,989 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:55:40,990 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 11:55:40,992 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 11:55:40,993 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 11:55:41,187 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 11:55:41,189 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 11:55:41,191 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 11:55:41,194 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 11:55:41,196 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:55:41,198 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 11:55:41,200 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 11:55:41,387 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 11:55:41,391 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:55:41,393 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:55:41,395 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 11:55:41,587 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 11:55:41,589 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 11:55:41,592 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 11:55:41,594 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 11:55:41,596 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:55:41,788 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:55:41,790 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 11:55:41,792 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 11:55:41,795 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 11:55:41,987 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 11:55:41,990 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 11:55:41,992 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:55:41,994 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 11:55:41,996 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:55:42,002 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:55:42,007 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:55:42,187 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:55:42,189 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:55:42,192 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:55:42,194 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:55:42,196 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:55:42,198 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:55:42,387 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:55:42,389 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:55:42,392 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:55:42,394 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 11:55:42,396 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:55:42,398 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 11:55:42,400 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:55:42,402 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:55:42,587 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:55:42,589 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:55:42,592 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:55:42,594 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:55:42,596 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:55:42,598 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:55:42,787 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:55:42,790 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:55:42,792 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:55:42,794 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:55:42,830 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 11:55:42,833 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 11:55:42,835 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:55:42,837 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:55:42,987 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:55:42,990 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 11:55:42,992 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 11:55:42,994 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:55:42,996 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:55:42,998 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:55:43,004 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:55:43,187 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 11:55:43,189 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:55:43,191 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:55:59,781 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 11:55:59,791 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 11:55:59,795 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 11:55:59,802 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 11:55:59,807 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:55:59,810 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 11:55:59,816 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:55:59,819 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:55:59,875 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 11:55:59,882 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 11:55:59,889 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 11:56:00,001 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 11:56:00,011 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 11:56:00,043 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 11:56:00,050 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 11:56:00,056 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 11:56:00,060 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 11:56:00,064 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 11:56:00,101 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:56:00,230 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:56:00,236 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 11:56:00,242 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 11:56:00,312 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 11:56:00,315 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 11:56:00,401 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 11:56:00,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 11:56:00,413 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 11:56:00,419 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 11:56:00,422 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:56:00,426 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:56:00,463 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:56:00,630 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 11:56:00,636 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 11:56:00,641 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 11:56:00,655 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 11:56:00,801 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 11:56:00,804 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 11:56:00,808 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 11:56:00,810 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 11:56:00,853 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 11:56:00,856 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 11:56:01,004 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 11:56:01,017 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 11:56:01,029 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 11:56:01,040 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 11:56:01,044 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:56:01,051 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:56:01,082 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 11:56:01,109 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 11:56:01,211 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 11:56:01,221 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 11:56:01,237 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 11:56:01,246 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 11:56:01,253 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 11:56:01,407 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:56:01,415 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:56:01,422 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:56:01,431 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:56:01,465 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 11:56:01,470 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 11:56:01,475 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 11:56:01,478 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 11:56:01,611 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 11:56:01,662 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 11:56:01,689 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:56:01,695 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 11:56:01,802 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 11:56:01,821 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 11:56:01,825 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 11:56:01,832 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 11:56:01,836 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 11:56:01,839 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 11:56:01,843 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 11:56:01,999 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 11:56:02,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 11:56:02,014 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 11:56:02,020 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 11:56:02,024 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 11:56:02,027 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 11:56:02,056 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 11:56:02,084 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 11:56:02,204 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 11:56:02,209 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 11:56:02,219 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 11:56:02,223 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 11:56:02,229 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 11:56:02,402 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 11:56:02,408 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 11:56:02,412 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 11:56:02,418 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 11:56:02,536 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 11:56:02,540 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 11:56:49,935 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 11:56:49,992 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 11:56:50,007 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 11:56:50,012 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 11:56:50,016 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 11:56:50,018 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 11:56:50,021 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 11:56:50,023 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 11:56:50,026 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 11:56:50,027 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 11:56:50,029 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:56:50,031 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 11:56:50,164 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 11:56:50,166 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 11:56:50,229 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 11:56:50,233 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 11:56:50,236 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 11:56:50,240 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 11:56:50,244 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 11:56:50,248 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 11:56:50,250 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 11:56:50,281 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 11:56:50,364 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 11:56:50,366 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 11:56:50,371 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 11:56:50,373 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 11:56:50,376 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 11:56:50,378 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 11:56:50,380 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 11:56:50,382 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 11:56:50,564 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 11:56:50,566 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 11:56:50,568 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 11:56:50,569 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 11:56:50,572 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 11:56:50,574 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 11:56:50,576 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 11:56:50,578 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 11:56:50,593 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:56:50,765 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 11:56:50,768 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 11:56:50,771 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 11:56:50,774 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 11:56:50,776 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 11:56:50,780 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:56:50,783 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 11:56:50,965 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 11:56:50,967 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 11:56:50,976 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 11:56:50,978 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 11:56:51,166 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 11:56:51,169 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 11:56:51,171 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 11:56:51,174 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:56:51,176 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:56:51,178 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:56:51,180 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 11:56:51,182 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 11:56:51,364 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 11:56:51,366 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 11:56:51,369 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 11:56:51,370 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 11:56:51,564 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 11:56:51,574 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 11:56:51,577 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:56:51,578 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:56:51,580 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:56:51,581 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 11:56:51,583 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 11:56:51,764 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 11:56:51,766 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 11:56:51,768 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 11:56:51,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 11:56:51,772 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 11:56:51,774 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 11:56:51,964 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:56:51,965 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:56:51,967 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 11:56:51,969 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 11:56:51,971 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 11:56:52,164 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 11:56:52,166 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 11:56:52,168 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 11:56:52,172 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 11:56:52,174 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 11:56:52,176 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 11:56:52,177 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 11:56:52,364 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 11:56:52,367 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:56:52,370 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:56:52,372 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 11:56:52,564 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 11:56:52,567 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 11:56:52,569 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 11:56:52,571 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 11:56:52,573 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 11:56:52,764 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:56:52,766 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 11:56:52,769 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 11:56:52,771 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 11:56:52,964 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 11:56:52,968 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 11:56:52,970 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 11:56:52,972 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 11:56:52,974 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 11:56:52,980 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 11:56:52,984 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:56:53,164 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:56:53,167 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:56:53,169 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:56:53,171 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:56:53,174 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:56:53,176 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:56:53,364 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:56:53,366 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:56:53,368 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:56:53,370 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 11:56:53,372 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 11:56:53,375 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 11:56:53,377 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 11:56:53,379 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 11:56:53,564 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:56:53,566 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:56:53,568 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:56:53,570 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:56:53,572 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:56:53,574 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 11:56:53,764 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 11:56:53,766 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 11:56:53,768 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 11:56:53,770 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 11:56:53,813 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 11:56:53,815 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 11:56:53,817 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 11:56:53,819 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 11:56:53,964 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 11:56:53,967 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 11:56:53,969 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 11:56:53,971 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 11:56:53,973 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:56:53,975 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 11:56:53,981 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 11:56:54,164 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 11:56:54,166 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 11:56:54,168 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 12:01:46,170 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 12:01:46,219 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 12:01:46,231 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 12:01:46,235 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-12-10 12:01:46,238 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-12-10 12:01:46,241 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 12:01:46,243 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 12:01:46,246 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 12:01:46,248 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-12-10 12:01:46,250 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-12-10 12:01:46,252 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-12-10 12:01:46,254 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 12:01:46,401 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-12-10 12:01:46,403 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-12-10 12:01:46,465 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 12:01:46,471 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 12:01:46,478 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 12:01:46,481 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 12:01:46,485 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 12:01:46,488 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 12:01:46,494 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 12:01:46,502 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 12:01:46,601 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 12:01:46,605 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 12:01:46,609 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 12:01:46,611 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 12:01:46,612 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 12:01:46,615 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 12:01:46,617 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 12:01:46,619 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 12:01:46,801 [Thread: 8       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 12:01:46,804 [Thread: 8       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 12:01:46,806 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 12:01:46,808 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 12:01:46,811 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 12:01:46,813 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 12:01:46,815 [Thread: 8       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 12:01:46,817 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 12:01:46,832 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 12:01:47,002 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 12:01:47,006 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 12:01:47,010 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 12:01:47,013 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 12:01:47,015 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 12:01:47,018 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:01:47,021 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 12:01:47,202 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 12:01:47,204 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 12:01:47,209 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 12:01:47,211 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 12:01:47,403 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 12:01:47,406 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 12:01:47,408 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 12:01:47,411 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:01:47,413 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:01:47,415 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 12:01:47,417 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 12:01:47,419 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 12:01:47,601 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 12:01:47,603 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 12:01:47,604 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 12:01:47,606 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 12:01:47,801 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 12:01:47,810 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 12:01:47,813 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 12:01:47,814 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 12:01:47,816 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 12:01:47,818 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 12:01:47,821 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 12:01:48,001 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 12:01:48,004 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 12:01:48,006 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 12:01:48,007 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 12:01:48,009 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 12:01:48,011 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 12:01:48,201 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 12:01:48,202 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 12:01:48,204 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 12:01:48,206 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 12:01:48,207 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 12:01:48,401 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 12:01:48,403 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 12:01:48,405 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 12:01:48,409 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 12:01:48,411 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 12:01:48,413 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 12:01:48,415 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 12:01:48,601 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 12:01:48,605 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 12:01:48,608 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 12:01:48,611 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 12:01:48,801 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 12:01:48,804 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 12:01:48,806 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 12:01:48,808 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 12:01:48,811 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 12:01:49,002 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 12:01:49,004 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 12:01:49,006 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 12:01:49,009 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 12:01:49,201 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 12:01:49,205 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 12:01:49,207 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 12:01:49,210 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 12:01:49,212 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 12:01:49,218 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 12:01:49,222 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 12:01:49,401 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:01:49,403 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 12:01:49,405 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:01:49,408 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:01:49,410 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 12:01:49,412 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:01:49,601 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 12:01:49,603 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:01:49,605 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:01:49,608 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 12:01:49,610 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 12:01:49,612 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 12:01:49,615 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 12:01:49,617 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 12:01:49,801 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 12:01:49,803 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:01:49,806 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 12:01:49,808 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:01:49,810 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:01:49,812 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 12:01:50,001 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:01:50,004 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 12:01:50,007 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:01:50,010 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:01:50,045 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 12:01:50,047 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 12:01:50,049 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 12:01:50,051 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 12:01:50,201 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 12:01:50,204 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 12:01:50,206 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 12:01:50,208 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 12:01:50,210 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 12:01:50,212 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 12:01:50,217 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 12:01:50,401 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 12:01:50,403 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 12:01:50,404 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 12:01:58,107 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 12:02:01,095 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 12:02:01,099 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 12:02:01,103 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 12:02:01,107 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 12:02:01,110 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 12:02:01,112 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 12:02:01,114 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 12:02:01,119 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 12:02:01,282 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 12:02:01,284 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 12:02:01,286 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 12:02:01,288 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 12:02:01,290 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 12:02:01,292 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 12:02:01,293 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 12:02:01,295 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 12:02:01,482 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 12:02:01,484 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 12:02:01,485 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 12:02:01,487 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 12:02:01,489 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 12:02:01,714 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 12:02:01,716 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 12:02:01,718 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 12:02:01,720 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 12:02:01,722 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 12:02:01,724 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 12:02:01,725 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 12:02:01,881 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 12:02:01,883 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 12:02:01,885 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 12:02:01,887 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 12:02:01,889 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 12:02:02,082 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 12:02:02,096 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 12:02:02,108 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 12:02:02,109 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 12:02:02,111 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 12:02:02,292 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 12:02:02,302 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 12:02:02,305 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 12:02:02,310 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 12:02:02,312 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 12:02:02,315 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 12:02:02,316 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 12:02:02,482 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 12:02:02,484 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 12:02:02,486 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 12:02:02,488 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 12:02:02,490 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 12:02:02,683 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 12:02:02,685 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 12:02:02,686 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 12:02:02,688 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 12:02:02,690 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 12:02:02,691 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 12:02:02,693 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 12:02:02,882 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 12:02:02,884 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 12:02:02,886 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 12:02:02,887 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 12:02:02,889 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 12:02:02,890 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 12:02:02,892 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 12:02:02,894 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 12:02:03,082 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 12:02:03,084 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 12:02:03,086 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 12:02:03,088 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 12:02:03,282 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 12:02:03,284 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 12:02:03,288 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 12:02:03,289 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 12:02:03,292 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 12:02:03,294 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 12:02:03,295 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 12:02:03,297 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 12:02:03,482 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 12:02:03,483 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 12:02:03,485 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 12:02:03,487 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 12:02:03,488 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 12:02:03,682 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 12:02:03,684 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 12:02:03,686 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 12:02:03,687 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 12:02:03,689 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 12:02:03,691 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 12:02:03,693 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 12:02:03,695 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 12:02:03,888 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 12:02:03,890 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 12:02:03,892 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 12:02:03,893 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 12:02:03,895 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-10 12:06:40,896 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 12:06:40,955 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 12:06:40,969 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 12:06:40,973 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 12:06:40,976 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 12:06:40,979 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 12:06:40,981 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 12:06:40,983 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 12:06:40,985 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 12:06:40,987 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 12:06:40,989 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 12:06:40,991 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 12:06:41,123 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 12:06:41,125 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 12:06:41,190 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 12:06:41,195 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 12:06:41,198 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 12:06:41,201 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 12:06:41,225 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 12:06:41,228 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 12:06:41,231 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 12:06:41,238 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 12:06:41,323 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 12:06:41,325 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 12:06:41,329 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 12:06:41,331 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 12:06:41,333 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 12:06:41,335 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 12:06:41,337 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 12:06:41,339 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 12:06:41,523 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 12:06:41,525 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 12:06:41,527 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 12:06:41,528 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 12:06:41,531 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 12:06:41,534 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 12:06:41,536 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 12:06:41,538 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 12:06:41,551 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 12:06:41,725 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 12:06:41,727 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 12:06:41,731 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 12:06:41,734 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 12:06:41,736 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 12:06:41,739 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:06:41,743 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 12:06:41,924 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 12:06:41,927 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 12:06:41,931 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 12:06:41,933 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 12:06:42,125 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 12:06:42,128 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 12:06:42,130 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 12:06:42,133 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:06:42,136 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:06:42,137 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 12:06:42,139 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 12:06:42,141 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 12:06:42,323 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 12:06:42,325 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 12:06:42,327 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 12:06:42,329 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 12:06:42,523 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 12:06:42,533 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 12:06:42,535 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 12:06:42,537 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 12:06:42,539 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 12:06:42,541 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 12:06:42,543 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 12:06:42,723 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 12:06:42,725 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 12:06:42,726 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 12:06:42,728 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 12:06:42,730 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 12:06:42,732 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 12:06:42,923 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 12:06:42,925 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 12:06:42,926 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 12:06:42,928 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 12:06:42,930 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 12:06:43,123 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 12:06:43,125 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 12:06:43,127 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 12:06:43,130 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 12:06:43,133 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 12:06:43,135 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 12:06:43,136 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 12:06:43,323 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 12:06:43,326 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 12:06:43,328 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 12:06:43,330 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 12:06:43,523 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 12:06:43,525 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 12:06:43,527 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 12:06:43,529 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 12:06:43,531 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 12:06:43,723 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 12:06:43,725 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 12:06:43,727 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 12:06:43,729 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 12:06:43,923 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 12:06:43,927 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 12:06:43,929 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 12:06:43,931 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 12:06:43,933 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 12:06:43,939 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 12:06:43,943 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 12:06:44,123 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:06:44,125 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 12:06:44,127 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:06:44,129 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:06:44,132 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 12:06:44,134 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:06:44,323 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 12:06:44,325 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:06:44,327 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:06:44,330 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 12:06:44,332 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 12:06:44,334 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 12:06:44,336 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 12:06:44,338 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 12:06:44,523 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 12:06:44,525 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:06:44,527 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 12:06:44,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:06:44,531 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:06:44,533 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 12:06:44,723 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 12:06:44,725 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 12:06:44,728 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 12:06:44,730 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 12:06:44,772 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 12:06:44,776 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 12:06:44,779 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 12:06:44,781 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 12:06:44,923 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 12:06:44,928 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 12:06:44,930 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 12:06:44,932 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 12:06:44,934 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 12:06:44,938 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 12:06:44,944 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 12:06:45,123 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 12:06:45,125 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 12:06:45,127 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 12:06:58,042 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 12:06:58,052 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 12:06:58,069 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 12:06:58,071 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 12:06:58,073 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 12:06:58,077 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 12:06:58,079 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 12:06:58,081 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 12:06:58,083 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 12:06:58,251 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 12:06:58,253 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 12:06:58,255 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 12:06:58,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 12:06:58,260 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 12:06:58,262 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 12:06:58,263 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 12:06:58,265 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 12:06:58,451 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 12:06:58,452 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 12:06:58,454 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 12:06:58,456 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 12:06:58,457 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 12:06:58,685 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 12:06:58,687 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 12:06:58,689 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 12:06:58,690 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 12:06:58,692 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 12:06:58,694 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 12:06:58,695 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 12:06:58,851 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 12:06:58,856 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 12:06:58,858 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 12:06:58,860 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 12:06:58,861 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 12:06:59,051 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 12:06:59,057 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 12:06:59,059 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 12:06:59,061 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 12:06:59,063 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 12:06:59,250 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 12:06:59,252 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 12:06:59,254 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 12:06:59,255 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 12:06:59,257 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 12:06:59,259 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 12:06:59,260 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 12:06:59,262 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 12:06:59,451 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 12:06:59,456 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 12:06:59,458 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 12:06:59,460 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 12:06:59,462 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 12:06:59,651 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 12:06:59,657 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 12:06:59,659 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 12:06:59,660 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 12:06:59,662 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 12:06:59,664 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 12:06:59,666 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 12:06:59,851 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 12:06:59,853 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 12:06:59,854 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 12:06:59,856 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 12:06:59,858 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 12:06:59,860 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 12:06:59,862 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 12:07:00,051 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 12:07:00,053 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 12:07:00,054 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 12:07:00,056 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 12:07:00,058 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 12:07:00,251 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 12:07:00,252 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 12:07:00,254 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 12:07:00,257 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 12:07:00,259 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 12:07:00,261 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 12:07:00,263 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 12:07:00,264 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 12:07:00,451 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 12:07:00,452 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 12:07:00,454 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 12:07:00,455 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 12:07:00,457 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 12:07:00,651 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 12:07:00,652 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 12:07:00,654 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 12:07:00,656 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 12:07:00,658 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 12:07:00,660 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 12:07:00,663 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 12:07:00,665 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 12:07:00,852 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 12:07:00,852 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 12:07:00,856 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 12:07:00,862 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 12:07:00,864 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 12:07:00,889 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 12:07:00,891 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 12:07:00,919 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 13:48:55,049 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 13:48:55,106 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 13:48:55,119 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 13:48:55,125 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 13:48:55,128 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 13:48:55,130 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 13:48:55,132 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 13:48:55,134 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 13:48:55,136 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 13:48:55,138 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 13:48:55,140 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 13:48:55,142 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 13:48:55,267 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 13:48:55,269 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 13:48:55,332 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 13:48:55,338 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 13:48:55,340 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 13:48:55,344 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 13:48:55,350 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 13:48:55,353 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 13:48:55,356 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 13:48:55,363 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 13:48:55,467 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 13:48:55,468 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 13:48:55,472 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 13:48:55,474 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 13:48:55,476 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 13:48:55,478 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 13:48:55,480 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 13:48:55,482 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 13:48:55,667 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 13:48:55,669 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 13:48:55,671 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 13:48:55,673 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 13:48:55,675 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 13:48:55,677 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 13:48:55,678 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 13:48:55,680 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 13:48:55,696 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 13:48:55,869 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 13:48:55,872 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 13:48:55,876 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 13:48:55,879 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 13:48:55,881 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 13:48:55,884 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:48:55,887 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 13:48:56,068 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 13:48:56,070 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 13:48:56,073 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 13:48:56,076 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 13:48:56,269 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 13:48:56,272 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 13:48:56,274 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 13:48:56,276 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:48:56,278 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:48:56,280 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 13:48:56,282 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 13:48:56,283 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 13:48:56,467 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 13:48:56,469 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 13:48:56,470 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 13:48:56,480 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 13:48:56,667 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 13:48:56,669 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 13:48:56,671 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 13:48:56,673 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 13:48:56,675 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 13:48:56,676 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 13:48:56,679 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 13:48:56,867 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 13:48:56,869 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 13:48:56,871 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 13:48:56,873 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 13:48:56,875 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 13:48:56,876 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 13:48:57,067 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 13:48:57,069 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 13:48:57,070 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 13:48:57,072 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 13:48:57,074 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 13:48:57,267 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 13:48:57,269 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 13:48:57,270 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 13:48:57,274 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 13:48:57,276 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 13:48:57,278 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 13:48:57,280 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 13:48:57,467 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 13:48:57,471 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 13:48:57,474 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 13:48:57,476 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 13:48:57,667 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 13:48:57,669 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 13:48:57,671 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 13:48:57,673 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 13:48:57,674 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 13:48:57,870 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 13:48:57,872 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 13:48:57,874 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 13:48:57,876 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 13:48:58,071 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 13:48:58,078 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 13:48:58,083 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 13:48:58,087 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 13:48:58,097 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 13:48:58,101 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 13:48:58,105 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 13:48:58,272 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:48:58,276 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 13:48:58,281 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:48:58,285 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:48:58,290 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 13:48:58,294 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:48:58,473 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 13:48:58,478 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:48:58,482 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:48:58,487 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 13:48:58,491 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 13:48:58,496 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 13:48:58,500 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 13:48:58,505 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 13:48:58,673 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 13:48:58,692 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:48:58,697 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 13:48:58,701 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:48:58,703 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:48:58,705 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 13:48:58,870 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:48:58,873 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 13:48:58,875 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:48:58,877 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:48:58,911 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 13:48:58,913 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 13:48:58,915 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 13:48:58,917 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 13:48:59,088 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 13:48:59,095 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 13:48:59,098 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 13:48:59,101 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 13:48:59,103 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 13:48:59,106 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 13:48:59,113 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 13:48:59,275 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 13:48:59,279 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 13:48:59,281 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 13:50:15,655 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 13:50:15,684 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 13:50:15,688 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 13:50:15,695 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 13:50:15,703 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 13:50:15,706 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 13:50:15,709 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 13:50:15,711 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 13:50:15,716 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 13:50:15,871 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 13:50:15,877 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 13:50:15,886 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 13:50:15,890 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 13:50:15,892 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 13:50:15,894 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 13:50:15,896 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 13:50:15,898 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 13:50:16,066 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 13:50:16,068 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 13:50:16,073 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 13:50:16,075 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 13:50:16,077 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 13:50:16,297 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 13:50:16,302 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 13:50:16,311 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 13:50:16,315 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 13:50:16,317 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 13:50:16,322 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 13:50:16,324 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 13:50:16,467 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 13:50:16,469 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 13:50:16,471 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 13:50:16,477 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 13:50:16,479 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 13:50:16,667 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 13:50:16,669 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 13:50:16,671 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 13:50:16,674 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 13:50:16,675 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 13:50:16,867 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 13:50:16,868 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 13:50:16,870 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 13:50:16,872 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 13:50:16,874 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 13:50:16,875 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 13:50:16,877 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 13:50:16,878 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 13:50:17,067 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 13:50:17,068 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 13:50:17,070 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 13:50:17,075 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 13:50:17,077 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 13:50:17,267 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 13:50:17,268 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 13:50:17,271 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 13:50:17,272 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 13:50:17,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 13:50:17,276 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 13:50:17,278 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 13:50:17,467 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 13:50:17,469 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 13:50:17,472 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 13:50:17,473 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 13:50:17,475 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 13:50:17,477 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 13:50:17,479 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 13:50:17,667 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 13:50:17,669 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 13:50:17,671 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 13:50:17,673 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 13:50:17,676 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 13:50:17,867 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 13:50:17,869 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 13:50:17,871 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 13:50:17,873 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 13:50:17,875 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 13:50:17,876 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 13:50:17,878 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 13:50:17,880 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 13:50:18,066 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 13:50:18,068 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 13:50:18,070 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 13:50:18,072 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 13:50:18,074 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 13:50:18,267 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 13:50:18,269 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 13:50:18,271 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 13:50:18,273 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 13:50:18,275 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 13:50:18,277 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 13:50:18,279 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 13:50:18,282 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 13:50:18,467 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 13:50:18,467 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 13:50:18,472 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 13:50:18,483 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 13:50:18,515 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 13:50:18,524 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 13:50:18,530 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 13:50:18,541 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 13:52:53,194 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 13:52:53,251 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 13:52:53,264 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 13:52:53,269 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 13:52:53,272 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 13:52:53,275 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 13:52:53,277 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 13:52:53,279 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 13:52:53,281 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 13:52:53,283 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 13:52:53,284 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 13:52:53,286 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 13:52:53,426 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 13:52:53,428 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 13:52:53,486 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 13:52:53,490 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 13:52:53,493 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 13:52:53,496 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 13:52:53,502 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 13:52:53,505 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 13:52:53,508 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 13:52:53,516 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 13:52:53,626 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 13:52:53,628 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 13:52:53,632 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 13:52:53,634 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 13:52:53,636 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 13:52:53,638 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 13:52:53,639 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 13:52:53,641 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 13:52:53,826 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 13:52:53,828 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 13:52:53,829 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 13:52:53,831 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 13:52:53,834 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 13:52:53,836 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 13:52:53,837 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 13:52:53,839 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 13:52:53,852 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 13:52:54,028 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 13:52:54,031 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 13:52:54,035 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 13:52:54,038 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 13:52:54,040 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 13:52:54,043 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:52:54,046 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 13:52:54,227 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 13:52:54,230 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 13:52:54,234 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 13:52:54,236 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 13:52:54,428 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 13:52:54,432 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 13:52:54,434 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 13:52:54,436 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:52:54,438 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:52:54,440 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 13:52:54,441 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 13:52:54,443 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 13:52:54,626 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 13:52:54,628 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 13:52:54,630 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 13:52:54,631 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 13:52:54,826 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 13:52:54,837 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 13:52:54,838 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 13:52:54,841 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 13:52:54,843 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 13:52:54,845 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 13:52:54,847 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 13:52:55,025 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 13:52:55,027 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 13:52:55,029 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 13:52:55,030 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 13:52:55,032 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 13:52:55,034 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 13:52:55,269 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 13:52:55,283 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 13:52:55,299 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 13:52:55,304 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 13:52:55,306 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 13:52:55,426 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 13:52:55,428 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 13:52:55,429 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 13:52:55,433 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 13:52:55,436 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 13:52:55,437 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 13:52:55,439 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 13:52:55,626 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 13:52:55,630 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 13:52:55,632 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 13:52:55,634 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 13:52:55,826 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 13:52:55,829 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 13:52:55,831 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 13:52:55,833 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 13:52:55,835 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 13:52:56,026 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 13:52:56,028 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 13:52:56,030 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 13:52:56,032 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 13:52:56,226 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 13:52:56,230 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 13:52:56,233 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 13:52:56,235 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 13:52:56,237 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 13:52:56,243 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 13:52:56,248 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 13:52:56,426 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:52:56,428 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 13:52:56,430 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:52:56,432 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:52:56,434 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 13:52:56,436 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:52:56,626 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 13:52:56,629 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:52:56,631 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:52:56,638 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 13:52:56,641 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 13:52:56,643 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 13:52:56,646 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 13:52:56,648 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 13:52:56,826 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 13:52:56,828 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:52:56,830 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 13:52:56,831 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:52:56,833 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:52:56,835 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 13:52:57,028 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 13:52:57,033 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 13:52:57,039 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 13:52:57,043 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 13:52:57,088 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 13:52:57,090 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 13:52:57,092 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 13:52:57,094 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 13:52:57,228 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 13:52:57,234 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 13:52:57,238 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 13:52:57,242 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 13:52:57,245 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 13:52:57,250 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 13:52:57,261 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 13:52:57,441 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 13:52:57,443 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 13:52:57,445 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 13:54:00,334 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 13:54:00,356 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 13:54:00,358 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 13:54:00,359 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 13:54:00,361 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 13:54:00,365 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 13:54:00,367 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 13:54:00,368 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 13:54:00,371 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 13:54:00,550 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 13:54:00,552 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 13:54:00,554 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 13:54:00,557 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 13:54:00,559 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 13:54:00,565 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 13:54:00,567 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 13:54:00,573 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 13:54:00,750 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 13:54:00,751 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 13:54:00,753 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 13:54:00,755 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 13:54:00,757 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 13:54:00,974 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 13:54:00,976 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 13:54:00,978 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 13:54:00,979 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 13:54:00,981 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 13:54:00,983 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 13:54:00,985 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 13:54:01,150 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 13:54:01,152 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 13:54:01,154 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 13:54:01,155 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 13:54:01,157 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 13:54:01,350 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 13:54:01,352 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 13:54:01,355 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 13:54:01,361 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 13:54:01,364 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 13:54:01,550 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 13:54:01,552 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 13:54:01,554 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 13:54:01,556 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 13:54:01,558 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 13:54:01,560 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 13:54:01,562 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 13:54:01,564 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 13:54:01,819 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 13:54:01,840 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 13:54:01,851 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 13:54:01,857 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 13:54:01,867 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 13:54:01,950 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 13:54:01,952 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 13:54:01,954 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 13:54:01,956 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 13:54:01,959 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 13:54:01,961 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 13:54:01,964 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 13:54:02,150 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 13:54:02,152 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 13:54:02,154 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 13:54:02,156 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 13:54:02,158 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 13:54:02,160 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 13:54:02,162 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 13:54:02,350 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 13:54:02,352 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 13:54:02,354 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 13:54:02,358 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 13:54:02,360 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 13:54:02,550 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 13:54:02,551 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 13:54:02,553 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 13:54:02,556 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 13:54:02,558 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 13:54:02,560 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 13:54:02,562 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 13:54:02,563 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 13:54:02,749 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 13:54:02,751 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 13:54:02,753 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 13:54:02,755 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 13:54:02,757 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 13:54:02,950 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 13:54:02,951 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 13:54:02,953 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 13:54:02,955 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 13:54:02,957 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 13:54:02,958 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 13:54:02,961 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 13:54:02,963 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 13:54:03,150 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 13:54:03,150 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 13:54:03,152 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 13:54:03,154 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 13:54:03,155 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 13:54:03,157 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 13:54:03,162 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 13:54:03,166 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 14:05:52,400 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 14:05:52,453 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 14:05:52,466 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 14:05:52,471 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 14:05:52,474 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 14:05:52,476 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 14:05:52,477 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 14:05:52,479 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 14:05:52,481 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 14:05:52,483 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 14:05:52,484 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 14:05:52,486 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 14:05:52,631 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 14:05:52,633 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 14:05:52,694 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 14:05:52,699 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 14:05:52,701 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 14:05:52,705 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 14:05:52,709 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 14:05:52,712 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 14:05:52,714 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 14:05:52,723 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 14:05:52,831 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 14:05:52,833 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 14:05:52,837 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 14:05:52,842 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 14:05:52,844 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 14:05:52,846 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 14:05:52,848 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 14:05:52,850 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 14:05:53,031 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 14:05:53,033 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 14:05:53,034 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 14:05:53,036 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 14:05:53,038 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 14:05:53,040 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 14:05:53,042 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 14:05:53,043 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 14:05:53,058 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 14:05:53,233 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 14:05:53,236 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 14:05:53,239 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 14:05:53,241 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 14:05:53,243 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 14:05:53,245 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 14:05:53,248 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 14:05:53,432 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 14:05:53,435 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 14:05:53,438 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 14:05:53,440 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 14:05:53,633 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 14:05:53,636 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 14:05:53,638 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 14:05:53,640 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 14:05:53,643 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 14:05:53,644 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 14:05:53,646 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 14:05:53,648 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 14:05:53,831 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 14:05:53,833 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 14:05:53,834 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 14:05:53,836 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 14:05:54,031 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 14:05:54,039 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 14:05:54,041 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 14:05:54,043 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 14:05:54,045 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 14:05:54,046 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 14:05:54,048 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 14:05:54,231 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 14:05:54,232 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 14:05:54,234 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 14:05:54,235 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 14:05:54,237 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 14:05:54,239 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 14:05:54,431 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 14:05:54,432 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 14:05:54,434 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 14:05:54,436 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 14:05:54,438 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 14:05:54,631 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 14:05:54,633 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 14:05:54,635 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 14:05:54,638 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 14:05:54,641 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 14:05:54,643 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 14:05:54,645 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 14:05:54,831 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 14:05:54,835 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 14:05:54,838 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 14:05:54,840 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 14:05:55,031 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 14:05:55,033 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 14:05:55,036 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 14:05:55,037 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 14:05:55,039 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 14:05:55,231 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 14:05:55,233 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 14:05:55,235 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 14:05:55,237 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 14:05:55,431 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 14:05:55,435 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 14:05:55,438 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 14:05:55,440 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 14:05:55,443 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 14:05:55,449 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 14:05:55,453 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 14:05:55,631 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 14:05:55,634 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 14:05:55,637 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 14:05:55,639 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 14:05:55,641 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 14:05:55,644 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 14:05:55,831 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 14:05:55,833 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 14:05:55,835 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 14:05:55,837 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 14:05:55,839 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 14:05:55,841 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 14:05:55,843 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 14:05:55,845 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 14:05:56,031 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 14:05:56,033 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 14:05:56,035 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 14:05:56,037 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 14:05:56,039 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 14:05:56,041 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 14:05:56,231 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 14:05:56,233 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 14:05:56,235 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 14:05:56,237 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 14:05:56,272 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 14:05:56,274 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 14:05:56,276 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 14:05:56,278 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 14:05:56,431 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 14:05:56,434 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 14:05:56,438 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 14:05:56,440 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 14:05:56,442 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 14:05:56,444 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 14:05:56,450 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 14:05:56,631 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 14:05:56,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 14:05:56,634 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 14:06:17,550 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 14:06:17,552 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 14:06:17,553 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 14:06:17,555 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 14:06:17,562 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 14:06:17,565 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 14:06:17,567 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 14:06:17,569 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 14:06:17,571 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 14:06:17,572 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 14:06:17,574 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 14:06:17,575 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 14:06:17,766 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 14:06:17,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 14:06:17,774 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 14:06:17,777 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 14:06:17,786 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 14:06:17,790 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 14:06:17,793 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 14:06:17,796 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 14:06:17,962 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 14:06:17,964 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 14:06:17,996 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 14:06:17,998 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 14:06:18,164 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 14:06:18,168 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 14:06:18,172 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 14:06:18,175 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 14:06:18,179 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 14:06:18,182 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 14:06:18,185 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 14:06:18,188 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 14:06:18,364 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 14:06:18,368 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 14:06:18,372 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 14:06:18,377 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 14:06:18,590 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 14:06:18,592 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 14:06:18,594 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 14:06:18,624 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 14:06:18,626 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 14:06:18,628 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 14:06:18,763 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 14:06:18,765 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 14:06:18,768 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 14:06:18,771 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 14:06:18,775 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 14:06:18,778 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 14:06:18,783 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 14:06:18,786 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 14:06:18,962 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 14:06:18,963 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 14:06:18,968 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 14:06:18,970 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 14:06:18,972 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 14:06:19,162 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 14:06:19,164 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 14:06:19,166 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 14:06:19,168 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 14:06:19,170 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 14:06:19,172 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 14:06:19,173 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 14:06:19,175 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 14:06:19,362 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 14:06:19,364 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 14:06:19,365 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 14:06:19,367 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 14:06:19,562 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 14:06:19,564 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 14:06:19,566 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 14:06:19,568 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 14:06:19,570 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 14:06:19,572 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 14:06:19,574 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 14:06:19,763 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 14:06:19,766 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 14:06:19,768 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 14:06:19,770 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 14:06:19,772 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 14:06:19,774 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 14:06:19,776 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 14:06:19,780 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 14:06:20,046 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 14:06:20,055 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 14:06:20,095 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 14:06:20,101 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 14:06:20,104 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 14:06:20,168 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 14:06:20,170 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 14:06:20,172 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 14:06:20,174 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 14:06:20,176 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 14:06:20,179 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 14:06:20,179 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 14:06:20,181 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 14:06:20,185 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 14:06:20,368 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 14:06:20,370 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 14:06:20,371 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 14:06:20,380 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:02:38,872 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 17:02:38,929 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 17:02:38,944 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 17:02:38,949 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 17:02:38,952 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 17:02:38,955 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 17:02:38,957 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 17:02:38,959 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 17:02:38,961 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 17:02:38,963 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 17:02:38,964 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:02:38,966 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 17:02:39,089 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 17:02:39,091 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:02:39,119 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 17:02:39,123 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 17:02:39,125 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 17:02:39,128 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 17:02:39,131 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 17:02:39,133 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 17:02:39,135 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 17:02:39,141 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 17:02:39,289 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 17:02:39,291 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 17:02:39,294 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 17:02:39,296 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 17:02:39,298 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 17:02:39,300 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 17:02:39,302 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 17:02:39,303 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 17:02:39,489 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 17:02:39,490 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 17:02:39,492 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 17:02:39,494 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 17:02:39,497 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 17:02:39,499 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 17:02:39,501 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 17:02:39,503 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 17:02:39,521 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:02:39,690 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:02:39,694 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 17:02:39,697 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 17:02:39,700 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 17:02:39,701 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 17:02:39,704 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:02:39,708 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 17:02:39,891 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 17:02:39,894 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 17:02:39,898 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 17:02:39,900 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 17:02:40,091 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 17:02:40,094 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 17:02:40,096 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 17:02:40,098 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:02:40,101 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:02:40,103 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:02:40,105 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 17:02:40,106 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 17:02:40,289 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 17:02:40,299 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 17:02:40,301 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 17:02:40,303 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 17:02:40,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 17:02:40,491 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 17:02:40,493 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:02:40,495 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:02:40,496 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:02:40,498 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 17:02:40,500 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 17:02:40,689 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 17:02:40,690 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 17:02:40,692 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 17:02:40,693 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 17:02:40,695 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 17:02:40,697 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 17:02:40,889 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:02:40,890 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:02:40,892 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:02:40,894 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 17:02:40,896 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 17:02:41,089 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 17:02:41,091 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 17:02:41,093 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 17:02:41,097 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 17:02:41,100 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:02:41,102 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 17:02:41,104 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 17:02:41,289 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 17:02:41,293 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:02:41,295 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:02:41,298 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 17:02:41,489 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 17:02:41,491 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 17:02:41,493 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 17:02:41,495 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 17:02:41,496 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:02:41,689 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:02:41,691 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 17:02:41,693 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 17:02:41,695 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 17:02:41,889 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 17:02:41,893 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 17:02:41,900 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:02:41,903 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 17:02:41,905 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:02:41,907 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:02:41,911 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:02:42,089 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:02:42,092 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:02:42,094 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:02:42,096 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:02:42,099 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:02:42,101 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:02:42,289 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:02:42,291 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:02:42,293 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:02:42,296 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 17:02:42,297 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:02:42,299 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 17:02:42,301 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:02:42,303 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:02:42,489 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:02:42,491 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:02:42,493 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:02:42,495 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:02:42,496 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:02:42,498 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:02:42,689 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:02:42,691 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:02:42,694 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:02:42,696 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:02:42,737 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 17:02:42,739 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 17:02:42,741 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:02:42,743 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:02:42,889 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:02:42,892 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 17:02:42,894 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 17:02:42,896 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:02:42,898 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:02:42,900 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:02:42,905 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:02:43,089 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 17:02:43,091 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:02:43,104 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:02:59,672 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 17:02:59,674 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 17:02:59,677 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 17:02:59,679 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 17:02:59,697 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:02:59,699 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 17:02:59,701 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:02:59,703 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:02:59,706 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 17:02:59,708 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 17:02:59,710 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 17:02:59,712 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:02:59,898 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:02:59,900 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 17:02:59,902 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 17:02:59,904 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 17:02:59,906 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:02:59,908 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:02:59,910 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:02:59,912 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:03:00,097 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 17:03:00,099 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 17:03:00,124 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 17:03:00,127 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 17:03:00,297 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 17:03:00,299 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 17:03:00,300 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 17:03:00,302 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:03:00,304 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:03:00,306 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:03:00,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:03:00,309 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 17:03:00,497 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 17:03:00,498 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 17:03:00,500 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 17:03:00,502 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:03:00,697 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 17:03:00,706 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:03:00,708 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:03:00,743 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 17:03:00,745 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 17:03:00,747 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 17:03:00,897 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 17:03:00,903 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 17:03:00,905 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 17:03:00,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:03:00,912 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:03:00,913 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 17:03:00,915 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 17:03:00,917 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 17:03:01,097 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 17:03:01,098 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 17:03:01,100 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 17:03:01,102 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 17:03:01,103 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:03:01,297 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:03:01,298 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:03:01,300 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:03:01,302 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 17:03:01,304 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 17:03:01,306 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 17:03:01,307 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 17:03:01,309 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 17:03:01,497 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 17:03:01,498 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:03:01,500 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 17:03:01,502 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 17:03:01,697 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 17:03:01,699 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 17:03:01,701 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 17:03:01,703 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:03:01,704 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:03:01,706 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:03:01,708 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:03:01,898 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 17:03:01,900 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 17:03:01,901 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:03:01,903 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 17:03:01,904 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 17:03:01,906 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 17:03:01,908 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 17:03:01,909 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 17:03:02,097 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 17:03:02,098 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 17:03:02,100 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 17:03:02,102 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 17:03:02,103 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 17:03:02,297 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 17:03:02,299 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 17:03:02,301 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 17:03:02,303 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 17:03:02,306 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 17:03:02,308 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:03:02,308 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:03:02,308 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:03:02,317 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 17:03:02,321 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:03:02,520 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:03:02,530 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:03:02,531 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:03:02,541 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:03:02,550 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:03:02,552 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:03:02,703 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:21:14,523 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 17:21:14,579 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 17:21:14,595 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 17:21:14,600 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 17:21:14,602 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 17:21:14,605 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 17:21:14,606 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 17:21:14,608 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 17:21:14,610 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 17:21:14,612 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 17:21:14,614 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:21:14,616 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 17:21:14,754 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 17:21:14,755 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:21:14,810 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 17:21:14,837 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 17:21:14,839 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 17:21:14,842 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 17:21:14,845 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 17:21:14,848 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 17:21:14,849 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 17:21:14,855 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 17:21:14,954 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 17:21:14,956 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 17:21:14,959 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 17:21:14,961 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 17:21:14,962 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 17:21:14,964 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 17:21:14,966 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 17:21:14,968 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 17:21:15,154 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 17:21:15,156 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 17:21:15,158 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 17:21:15,160 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 17:21:15,162 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 17:21:15,164 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 17:21:15,165 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 17:21:15,167 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 17:21:15,180 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:21:15,355 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:21:15,358 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 17:21:15,362 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 17:21:15,364 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 17:21:15,366 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 17:21:15,368 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:21:15,371 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 17:21:15,555 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 17:21:15,557 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 17:21:15,561 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 17:21:15,563 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 17:21:15,756 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 17:21:15,759 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 17:21:15,761 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 17:21:15,764 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:21:15,766 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:21:15,769 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:21:15,771 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 17:21:15,773 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 17:21:15,954 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 17:21:15,955 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 17:21:15,957 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 17:21:15,959 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 17:21:16,154 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 17:21:16,162 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 17:21:16,163 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:21:16,165 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:21:16,166 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:21:16,168 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 17:21:16,169 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 17:21:16,354 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 17:21:16,356 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 17:21:16,357 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 17:21:16,359 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 17:21:16,360 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 17:21:16,362 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 17:21:16,554 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:21:16,555 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:21:16,557 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:21:16,558 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 17:21:16,560 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 17:21:16,754 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 17:21:16,755 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 17:21:16,757 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 17:21:16,760 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 17:21:16,763 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:21:16,764 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 17:21:16,766 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 17:21:16,954 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 17:21:16,958 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:21:16,960 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:21:16,961 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 17:21:17,154 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 17:21:17,156 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 17:21:17,158 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 17:21:17,160 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 17:21:17,162 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:21:17,354 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:21:17,356 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 17:21:17,359 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 17:21:17,361 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 17:21:17,554 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 17:21:17,558 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 17:21:17,561 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:21:17,563 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 17:21:17,565 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:21:17,571 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:21:17,576 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:21:17,754 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:21:17,756 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:21:17,759 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:21:17,760 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:21:17,763 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:21:17,765 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:21:17,954 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:21:17,956 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:21:17,959 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:21:17,961 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 17:21:17,962 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:21:17,964 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 17:21:17,966 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:21:17,968 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:21:18,154 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:21:18,156 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:21:18,158 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:21:18,161 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:21:18,163 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:21:18,165 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:21:18,354 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:21:18,356 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:21:18,358 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:21:18,359 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:21:18,401 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 17:21:18,403 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 17:21:18,405 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:21:18,407 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:21:18,554 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:21:18,556 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 17:21:18,558 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 17:21:18,560 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:21:18,561 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:21:18,563 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:21:18,568 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:21:18,754 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 17:21:18,756 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:21:18,758 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:21:26,240 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 17:21:26,242 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 17:21:26,248 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 17:21:26,395 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 17:21:26,398 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:21:26,401 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 17:21:26,403 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:21:26,406 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:21:26,408 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 17:21:26,593 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 17:21:26,595 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 17:21:26,597 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:21:26,600 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:21:26,602 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 17:21:26,603 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 17:21:26,605 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 17:21:26,606 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:21:26,608 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:21:26,793 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:21:26,795 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:21:26,796 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 17:21:26,798 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 17:21:27,018 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 17:21:27,019 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 17:21:27,021 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 17:21:27,023 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 17:21:27,025 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 17:21:27,027 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:21:27,028 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:21:27,030 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:21:27,194 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:21:27,196 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 17:21:27,198 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 17:21:27,200 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 17:21:27,393 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 17:21:27,395 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:21:27,401 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 17:21:27,403 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:21:27,406 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:21:27,436 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 17:21:27,593 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 17:21:27,595 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 17:21:27,596 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 17:21:27,599 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 17:21:27,600 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 17:21:27,602 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:21:27,603 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:21:27,605 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 17:21:27,801 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 17:21:27,827 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 17:21:27,832 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 17:21:27,834 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 17:21:27,993 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 17:21:27,995 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 17:21:27,997 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:21:27,999 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:21:28,001 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:21:28,003 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:21:28,006 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 17:21:28,008 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 17:21:28,193 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 17:21:28,195 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 17:21:28,196 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 17:21:28,198 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 17:21:28,199 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:21:28,201 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 17:21:28,393 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 17:21:28,397 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 17:21:28,398 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 17:21:28,401 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 17:21:28,403 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:21:28,404 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:21:28,593 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:21:28,595 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:21:28,598 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 17:21:28,600 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 17:21:28,602 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:21:28,603 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 17:21:28,605 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 17:21:28,606 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 17:21:28,793 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 17:21:28,794 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 17:21:28,796 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 17:21:28,797 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 17:21:28,993 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 17:21:28,994 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 17:21:28,996 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 17:21:28,998 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 17:21:29,000 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 17:21:29,001 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 17:21:29,004 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 17:21:29,007 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 17:21:29,009 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:21:29,009 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:21:29,009 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:21:29,195 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 17:21:29,196 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:21:29,206 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:21:29,214 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:21:29,222 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:21:29,224 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:21:29,225 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:21:29,401 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:21:29,419 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:22:24,520 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 17:22:24,573 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 17:22:24,587 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 17:22:24,592 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-10 17:22:24,595 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-10 17:22:24,598 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 17:22:24,600 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 17:22:24,603 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 17:22:24,605 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-10 17:22:24,607 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 17:22:24,609 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:22:24,611 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 17:22:24,729 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 17:22:24,731 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:22:24,752 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 17:22:24,757 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 17:22:24,759 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 17:22:24,762 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 17:22:24,766 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 17:22:24,770 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 17:22:24,772 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 17:22:24,779 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 17:22:24,929 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 17:22:24,931 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 17:22:24,935 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 17:22:24,937 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 17:22:24,939 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 17:22:24,941 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 17:22:24,944 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 17:22:24,946 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 17:22:25,129 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 17:22:25,131 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 17:22:25,133 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 17:22:25,134 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 17:22:25,137 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 17:22:25,139 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 17:22:25,142 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 17:22:25,143 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 17:22:25,161 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:22:25,331 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:22:25,334 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 17:22:25,338 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 17:22:25,341 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 17:22:25,343 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 17:22:25,345 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:25,349 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 17:22:25,530 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 17:22:25,532 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 17:22:25,537 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 17:22:25,539 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 17:22:25,731 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 17:22:25,734 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 17:22:25,736 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 17:22:25,739 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:25,742 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:25,743 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:22:25,745 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 17:22:25,747 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 17:22:25,929 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 17:22:25,931 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 17:22:25,933 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 17:22:25,934 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 17:22:26,136 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 17:22:26,138 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 17:22:26,140 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:22:26,142 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:22:26,144 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:22:26,146 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 17:22:26,148 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 17:22:26,340 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 17:22:26,342 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 17:22:26,344 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 17:22:26,346 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 17:22:26,348 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 17:22:26,350 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 17:22:26,529 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:22:26,533 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:22:26,535 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:22:26,537 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 17:22:26,539 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 17:22:26,729 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 17:22:26,731 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 17:22:26,733 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 17:22:26,737 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 17:22:26,739 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:22:26,741 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 17:22:26,743 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 17:22:26,929 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 17:22:26,933 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:22:26,935 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:22:26,937 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 17:22:27,129 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 17:22:27,132 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 17:22:27,134 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 17:22:27,136 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 17:22:27,138 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:22:27,329 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:22:27,331 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 17:22:27,333 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 17:22:27,335 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 17:22:27,529 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 17:22:27,533 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 17:22:27,535 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:22:27,537 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 17:22:27,544 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:22:27,546 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:22:27,550 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:22:27,729 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:27,732 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:22:27,734 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:27,736 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:27,739 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:22:27,741 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:27,929 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:22:27,931 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:27,934 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:27,936 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 17:22:27,938 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:22:27,940 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 17:22:27,942 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:22:27,944 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:22:28,129 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:22:28,131 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:28,134 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:22:28,136 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:28,138 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:28,141 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:22:28,329 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:28,331 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:22:28,333 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:28,336 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:28,370 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 17:22:28,372 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 17:22:28,375 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:22:28,377 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:22:28,529 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:22:28,532 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 17:22:28,534 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 17:22:28,536 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:22:28,538 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:22:28,541 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:22:28,547 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:22:28,729 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 17:22:28,731 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:22:28,733 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:22:29,511 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 17:22:29,518 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 17:22:29,522 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 17:22:29,526 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 17:22:29,530 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:22:29,534 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 17:22:29,711 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:22:29,716 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:22:29,720 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 17:22:29,724 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 17:22:29,727 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 17:22:29,731 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:22:29,736 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:22:29,741 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 17:22:29,909 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 17:22:29,911 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 17:22:29,913 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:22:29,918 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:22:29,921 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:22:29,923 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:22:29,925 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 17:22:30,111 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 17:22:30,161 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 17:22:30,163 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 17:22:30,166 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 17:22:30,172 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 17:22:30,384 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 17:22:30,386 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:22:30,397 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:22:30,403 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:22:30,409 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:22:30,416 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 17:22:30,422 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 17:22:30,510 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 17:22:30,517 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 17:22:30,520 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:22:30,527 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 17:22:30,533 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:22:30,709 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:22:30,743 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 17:22:30,745 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 17:22:30,748 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 17:22:30,751 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 17:22:30,753 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 17:22:30,909 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 17:22:30,911 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:22:30,913 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:22:30,915 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 17:22:30,917 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 17:22:30,918 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 17:22:31,109 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 17:22:31,112 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 17:22:31,114 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 17:22:31,116 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 17:22:31,117 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:22:31,119 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:22:31,309 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:22:31,311 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:22:31,315 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 17:22:31,317 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 17:22:31,320 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 17:22:31,322 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 17:22:31,324 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 17:22:31,328 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 17:22:31,509 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:22:31,511 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 17:22:31,513 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 17:22:31,515 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 17:22:31,517 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 17:22:31,710 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 17:22:31,712 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:22:31,713 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:22:31,715 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:22:31,717 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:22:31,724 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 17:22:31,727 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 17:22:31,909 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:22:31,911 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 17:22:31,913 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 17:22:31,915 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 17:22:31,917 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 17:22:31,919 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 17:22:32,109 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 17:22:32,111 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 17:22:32,113 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 17:22:32,115 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 17:22:32,117 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 17:22:32,119 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 17:22:32,121 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 17:22:32,309 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 17:22:32,311 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 17:22:32,314 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 17:22:32,317 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:22:32,317 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:22:32,318 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:22:32,321 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 17:22:32,323 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:22:32,324 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:22:32,513 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:22:32,522 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:22:32,549 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:22:32,553 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:22:32,574 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:22:32,578 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:22:52,741 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 17:22:52,796 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 17:22:52,810 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 17:22:52,815 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-10 17:22:52,818 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-10 17:22:52,820 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 17:22:52,822 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 17:22:52,824 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 17:22:52,826 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-10 17:22:52,828 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 17:22:52,830 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:22:52,832 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 17:22:52,972 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 17:22:52,978 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:22:52,996 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 17:22:53,000 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 17:22:53,002 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 17:22:53,006 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 17:22:53,010 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 17:22:53,012 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 17:22:53,014 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 17:22:53,021 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 17:22:53,171 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 17:22:53,173 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 17:22:53,177 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 17:22:53,181 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 17:22:53,183 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 17:22:53,185 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 17:22:53,187 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 17:22:53,189 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 17:22:53,371 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 17:22:53,373 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 17:22:53,374 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 17:22:53,376 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 17:22:53,379 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 17:22:53,381 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 17:22:53,383 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 17:22:53,385 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 17:22:53,402 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:22:53,573 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:22:53,576 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 17:22:53,580 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 17:22:53,583 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 17:22:53,585 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 17:22:53,588 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:53,592 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 17:22:53,772 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 17:22:53,774 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 17:22:53,778 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 17:22:53,780 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 17:22:53,972 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 17:22:53,975 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 17:22:53,977 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 17:22:53,980 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:53,982 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:53,985 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:22:53,986 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 17:22:53,988 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 17:22:54,171 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 17:22:54,173 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 17:22:54,175 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 17:22:54,176 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 17:22:54,371 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 17:22:54,380 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 17:22:54,382 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:22:54,384 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:22:54,385 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:22:54,387 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 17:22:54,389 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 17:22:54,571 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 17:22:54,573 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 17:22:54,575 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 17:22:54,577 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 17:22:54,578 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 17:22:54,581 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 17:22:54,771 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:22:54,774 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:22:54,776 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:22:54,779 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 17:22:54,782 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 17:22:54,971 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 17:22:54,975 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 17:22:54,977 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 17:22:54,981 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 17:22:54,984 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:22:54,986 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 17:22:54,988 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 17:22:55,171 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 17:22:55,174 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:22:55,177 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:22:55,178 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 17:22:55,371 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 17:22:55,373 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 17:22:55,376 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 17:22:55,378 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 17:22:55,380 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:22:55,571 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:22:55,573 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 17:22:55,576 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 17:22:55,578 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 17:22:55,771 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 17:22:55,774 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 17:22:55,776 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:22:55,778 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 17:22:55,780 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:22:55,792 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:22:55,796 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:22:55,971 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:55,973 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:22:55,976 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:55,978 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:55,980 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:22:55,981 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:56,171 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:22:56,173 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:56,176 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:56,178 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 17:22:56,180 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:22:56,182 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 17:22:56,184 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:22:56,186 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:22:56,371 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:22:56,374 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:56,376 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:22:56,378 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:56,380 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:56,382 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:22:56,571 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:22:56,573 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:22:56,576 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:22:56,579 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:22:56,622 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 17:22:56,625 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 17:22:56,627 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:22:56,629 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:22:56,771 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:22:56,774 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 17:22:56,776 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 17:22:56,778 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:22:56,779 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:22:56,781 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:22:56,786 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:22:56,971 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 17:22:56,973 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:22:56,975 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:22:57,752 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 17:22:57,755 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 17:22:57,757 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 17:22:57,759 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 17:22:57,761 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:22:57,951 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 17:22:57,953 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:22:57,955 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:22:57,957 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 17:22:57,959 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 17:22:57,961 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 17:22:57,963 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:22:57,966 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:22:58,151 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 17:22:58,153 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 17:22:58,155 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 17:22:58,156 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:22:58,158 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:22:58,159 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:22:58,161 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:22:58,163 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 17:22:58,351 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 17:22:58,382 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 17:22:58,384 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 17:22:58,386 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 17:22:58,551 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 17:22:58,553 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 17:22:58,558 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:22:58,560 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:22:58,562 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:22:58,564 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:22:58,565 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 17:22:58,567 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 17:22:58,751 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 17:22:58,753 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 17:22:58,755 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:22:58,758 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 17:22:58,951 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:22:58,953 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:22:59,007 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 17:22:59,010 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 17:22:59,012 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 17:22:59,015 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 17:22:59,152 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 17:22:59,158 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 17:22:59,161 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:22:59,165 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:22:59,169 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 17:22:59,173 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 17:22:59,177 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 17:22:59,353 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 17:22:59,357 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 17:22:59,361 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 17:22:59,364 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 17:22:59,367 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:22:59,553 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:22:59,556 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:22:59,560 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:22:59,565 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 17:22:59,569 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 17:22:59,572 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 17:22:59,576 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 17:22:59,579 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 17:22:59,582 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 17:22:59,752 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:22:59,755 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 17:22:59,758 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 17:22:59,762 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 17:22:59,953 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 17:22:59,958 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 17:22:59,962 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:22:59,965 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:22:59,968 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:22:59,972 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:22:59,977 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 17:23:00,151 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 17:23:00,152 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:23:00,157 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 17:23:00,159 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 17:23:00,160 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 17:23:00,162 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 17:23:00,166 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 17:23:00,351 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 17:23:00,355 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 17:23:00,357 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 17:23:00,359 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 17:23:00,361 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 17:23:00,363 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 17:23:00,551 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 17:23:00,553 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 17:23:00,555 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 17:23:00,558 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 17:23:00,560 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:23:00,560 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:23:00,561 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:23:00,563 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 17:23:00,565 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:23:00,761 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:23:00,778 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:23:00,786 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:23:00,787 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:23:00,811 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:23:00,814 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:23:00,817 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:23:39,806 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 17:23:39,869 [Thread: 11      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 17:23:39,884 [Thread: 11      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 17:23:39,891 [Thread: 11      ] [DEBUG] -- Loading object definitions.
2019-12-10 17:23:39,896 [Thread: 11      ] [DEBUG] -- Loading object definitions...
2019-12-10 17:23:39,899 [Thread: 11      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 17:23:39,901 [Thread: 11      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 17:23:39,903 [Thread: 11      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 17:23:39,905 [Thread: 11      ] [DEBUG] -- Default merge 'false'.
2019-12-10 17:23:39,906 [Thread: 11      ] [DEBUG] -- Default init method ''.
2019-12-10 17:23:39,908 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:23:39,910 [Thread: 11      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 17:23:40,025 [Thread: 11      ] [DEBUG] -- Default init method ''.
2019-12-10 17:23:40,026 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:23:40,046 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 17:23:40,050 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 17:23:40,052 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 17:23:40,055 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 17:23:40,059 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 17:23:40,062 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 17:23:40,064 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 17:23:40,070 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 17:23:40,225 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 17:23:40,227 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 17:23:40,230 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 17:23:40,232 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 17:23:40,234 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 17:23:40,236 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 17:23:40,237 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 17:23:40,239 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 17:23:40,425 [Thread: 11      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 17:23:40,427 [Thread: 11      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 17:23:40,428 [Thread: 11      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 17:23:40,430 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 17:23:40,433 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 17:23:40,435 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 17:23:40,437 [Thread: 11      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 17:23:40,438 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 17:23:40,454 [Thread: 11      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:23:40,626 [Thread: 11      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:23:40,628 [Thread: 11      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 17:23:40,632 [Thread: 11      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 17:23:40,635 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 17:23:40,637 [Thread: 11      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 17:23:40,639 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:23:40,641 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 17:23:40,826 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 17:23:40,828 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 17:23:40,832 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 17:23:40,834 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 17:23:41,026 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 17:23:41,029 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 17:23:41,031 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 17:23:41,033 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:23:41,036 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:23:41,037 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:23:41,039 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 17:23:41,040 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 17:23:41,225 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 17:23:41,226 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 17:23:41,228 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 17:23:41,258 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 17:23:41,425 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 17:23:41,426 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 17:23:41,428 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:23:41,430 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:23:41,431 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:23:41,433 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 17:23:41,435 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 17:23:41,625 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 17:23:41,627 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 17:23:41,629 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 17:23:41,630 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 17:23:41,631 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 17:23:41,633 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 17:23:41,825 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:23:41,827 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:23:41,829 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:23:41,831 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 17:23:41,832 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 17:23:42,025 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 17:23:42,027 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 17:23:42,028 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 17:23:42,033 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 17:23:42,035 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:23:42,036 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 17:23:42,038 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 17:23:42,225 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 17:23:42,229 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:23:42,232 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:23:42,234 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 17:23:42,425 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 17:23:42,427 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 17:23:42,429 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 17:23:42,431 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 17:23:42,433 [Thread: 11      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:23:42,625 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:23:42,627 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 17:23:42,629 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 17:23:42,631 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 17:23:42,826 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 17:23:42,834 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 17:23:42,838 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:23:42,848 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 17:23:42,852 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:23:42,856 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:23:42,861 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:23:43,027 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:23:43,031 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:23:43,035 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:23:43,039 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:23:43,044 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:23:43,048 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:23:43,227 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:23:43,232 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:23:43,236 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:23:43,240 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 17:23:43,244 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:23:43,248 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 17:23:43,251 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:23:43,254 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:23:43,425 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:23:43,426 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:23:43,428 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:23:43,430 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:23:43,432 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:23:43,436 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:23:43,625 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:23:43,627 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:23:43,629 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:23:43,632 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:23:43,662 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 17:23:43,672 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 17:23:43,674 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:23:43,676 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:23:43,825 [Thread: 11      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:23:43,829 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 17:23:43,831 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 17:23:43,833 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:23:43,836 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:23:43,838 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:23:43,847 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:23:44,025 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 17:23:44,027 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:23:44,030 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:23:44,876 [Thread: 11      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 17:23:44,878 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 17:23:44,880 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 17:23:44,882 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 17:23:44,885 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:23:44,887 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 17:23:44,889 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:23:45,076 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:23:45,078 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 17:23:45,081 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 17:23:45,083 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 17:23:45,085 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:23:45,087 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:23:45,090 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 17:23:45,092 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 17:23:45,276 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 17:23:45,278 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:23:45,280 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:23:45,281 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:23:45,284 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:23:45,286 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 17:23:45,476 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 17:23:45,503 [Thread: 11      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 17:23:45,506 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 17:23:45,508 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 17:23:45,512 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 17:23:45,514 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 17:23:45,676 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:23:45,678 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:23:45,679 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:23:45,681 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:23:45,682 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 17:23:45,684 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 17:23:45,876 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 17:23:45,878 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 17:23:45,880 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:23:45,882 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 17:23:45,884 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:23:45,887 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:23:46,110 [Thread: 11      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 17:23:46,112 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 17:23:46,114 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 17:23:46,116 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 17:23:46,118 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 17:23:46,120 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 17:23:46,275 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:23:46,277 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:23:46,279 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 17:23:46,281 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 17:23:46,283 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 17:23:46,476 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 17:23:46,478 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 17:23:46,480 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 17:23:46,482 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 17:23:46,484 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:23:46,486 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:23:46,488 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:23:46,676 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:23:46,678 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 17:23:46,680 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 17:23:46,681 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 17:23:46,683 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 17:23:46,684 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 17:23:46,686 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 17:23:46,688 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:23:46,876 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 17:23:46,877 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 17:23:46,880 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 17:23:46,884 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 17:23:46,886 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 17:23:47,076 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:23:47,079 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:23:47,081 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:23:47,083 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:23:47,090 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 17:23:47,092 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 17:23:47,094 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:23:47,276 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 17:23:47,277 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 17:23:47,279 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 17:23:47,281 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 17:23:47,283 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 17:23:47,508 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 17:23:47,581 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 17:23:47,583 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 17:23:47,585 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 17:23:47,589 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 17:23:47,671 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 17:23:47,673 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 17:23:47,675 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 17:23:47,677 [Thread: 11      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 17:23:47,680 [Thread: 11      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 17:23:47,682 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:23:47,682 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:23:47,682 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:23:47,687 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 17:23:47,694 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:23:47,701 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:23:47,726 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:23:47,875 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:23:47,885 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:23:47,898 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:23:47,910 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:23:47,919 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:24:41,053 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 17:24:41,116 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 17:24:41,131 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 17:24:41,136 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-10 17:24:41,139 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-10 17:24:41,141 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 17:24:41,142 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 17:24:41,144 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-10 17:24:41,146 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-10 17:24:41,148 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 17:24:41,150 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:24:41,152 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 17:24:41,263 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-10 17:24:41,265 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:24:41,287 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 17:24:41,292 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 17:24:41,293 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 17:24:41,296 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 17:24:41,299 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 17:24:41,301 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 17:24:41,303 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 17:24:41,309 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 17:24:41,463 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 17:24:41,464 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 17:24:41,467 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 17:24:41,469 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 17:24:41,471 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 17:24:41,472 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 17:24:41,474 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 17:24:41,476 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 17:24:41,663 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 17:24:41,665 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 17:24:41,667 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 17:24:41,669 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 17:24:41,672 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 17:24:41,674 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 17:24:41,675 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 17:24:41,677 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 17:24:41,695 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:24:41,865 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:24:41,868 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 17:24:41,872 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 17:24:41,875 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 17:24:41,877 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 17:24:41,880 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:24:41,884 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 17:24:42,064 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 17:24:42,066 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 17:24:42,070 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 17:24:42,072 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 17:24:42,264 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 17:24:42,267 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 17:24:42,269 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 17:24:42,271 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:24:42,273 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:24:42,275 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:24:42,276 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 17:24:42,278 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 17:24:42,463 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 17:24:42,464 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 17:24:42,466 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 17:24:42,467 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 17:24:42,669 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 17:24:42,671 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 17:24:42,673 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:24:42,674 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:24:42,676 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:24:42,677 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 17:24:42,678 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 17:24:42,863 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 17:24:42,871 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 17:24:42,872 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 17:24:42,875 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 17:24:42,877 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 17:24:42,879 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 17:24:43,063 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:24:43,064 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:24:43,066 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:24:43,068 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 17:24:43,070 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 17:24:43,263 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 17:24:43,264 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 17:24:43,266 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 17:24:43,269 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 17:24:43,272 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:24:43,273 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 17:24:43,275 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 17:24:43,463 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 17:24:43,466 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:24:43,467 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:24:43,469 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 17:24:43,663 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 17:24:43,666 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 17:24:43,668 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 17:24:43,672 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 17:24:43,673 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:24:43,863 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:24:43,865 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 17:24:43,867 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 17:24:43,870 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 17:24:44,063 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 17:24:44,067 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 17:24:44,069 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:24:44,071 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 17:24:44,077 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:24:44,080 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:24:44,084 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:24:44,263 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:24:44,265 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:24:44,268 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:24:44,270 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:24:44,272 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:24:44,275 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:24:44,463 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:24:44,465 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:24:44,468 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:24:44,470 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 17:24:44,472 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:24:44,474 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 17:24:44,476 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:24:44,478 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:24:44,663 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:24:44,665 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:24:44,668 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:24:44,670 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:24:44,672 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:24:44,674 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:24:44,863 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:24:44,866 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:24:44,868 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:24:44,870 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:24:44,913 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 17:24:44,920 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 17:24:44,921 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:24:44,923 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:24:45,063 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:24:45,066 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 17:24:45,068 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 17:24:45,070 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:24:45,072 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:24:45,074 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:24:45,081 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:24:45,263 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 17:24:45,265 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:24:45,268 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:24:45,927 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 17:24:45,929 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 17:24:45,931 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 17:24:46,106 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 17:24:46,108 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:24:46,110 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 17:24:46,112 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:24:46,114 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:24:46,116 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 17:24:46,307 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 17:24:46,311 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 17:24:46,315 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:24:46,321 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:24:46,325 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 17:24:46,329 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 17:24:46,333 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 17:24:46,337 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:24:46,340 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:24:46,506 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:24:46,508 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:24:46,510 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 17:24:46,513 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 17:24:46,757 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 17:24:46,760 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 17:24:46,763 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 17:24:46,765 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 17:24:46,770 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 17:24:46,773 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:24:46,775 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:24:46,777 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:24:46,907 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:24:46,910 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 17:24:46,913 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 17:24:46,916 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 17:24:47,108 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 17:24:47,121 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:24:47,124 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 17:24:47,129 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:24:47,131 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:24:47,170 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 17:24:47,305 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 17:24:47,307 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 17:24:47,309 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 17:24:47,311 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 17:24:47,313 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 17:24:47,315 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:24:47,317 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:24:47,319 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 17:24:47,505 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 17:24:47,507 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 17:24:47,509 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 17:24:47,511 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 17:24:47,705 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 17:24:47,707 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 17:24:47,709 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:24:47,711 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:24:47,713 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:24:47,714 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:24:47,716 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 17:24:47,718 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 17:24:47,905 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 17:24:47,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 17:24:47,909 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 17:24:47,911 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 17:24:47,913 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:24:47,914 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 17:24:48,105 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 17:24:48,107 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 17:24:48,109 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 17:24:48,110 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 17:24:48,113 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:24:48,115 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:24:48,305 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:24:48,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:24:48,311 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 17:24:48,313 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 17:24:48,348 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:24:48,350 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 17:24:48,353 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 17:24:48,355 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 17:24:48,505 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 17:24:48,507 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 17:24:48,509 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 17:24:48,511 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 17:24:48,705 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 17:24:48,707 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 17:24:48,709 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 17:24:48,711 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 17:24:48,713 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 17:24:48,715 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 17:24:48,717 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 17:24:48,720 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 17:24:48,722 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:24:48,722 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:24:48,724 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:24:48,906 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 17:24:48,921 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:24:48,924 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:24:48,931 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:24:48,933 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:24:48,935 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:24:48,941 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:24:49,105 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:24:49,112 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:25:27,555 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-10 17:25:27,614 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-10 17:25:27,625 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-10 17:25:27,631 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-10 17:25:27,634 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-10 17:25:27,636 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-10 17:25:27,638 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-10 17:25:27,641 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-10 17:25:27,643 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-10 17:25:27,645 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 17:25:27,647 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:25:27,650 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-10 17:25:27,791 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-10 17:25:27,793 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-10 17:25:27,814 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-10 17:25:27,818 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-10 17:25:27,820 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-10 17:25:27,823 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-10 17:25:27,828 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-10 17:25:27,831 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-10 17:25:27,833 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-10 17:25:27,839 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-10 17:25:27,991 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-10 17:25:27,993 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-10 17:25:27,997 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-10 17:25:27,999 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-10 17:25:28,001 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-10 17:25:28,003 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-10 17:25:28,006 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-10 17:25:28,008 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-10 17:25:28,191 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-10 17:25:28,193 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-10 17:25:28,194 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-10 17:25:28,196 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-10 17:25:28,199 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-10 17:25:28,201 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-10 17:25:28,203 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-10 17:25:28,205 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-10 17:25:28,222 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:25:28,393 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-10 17:25:28,396 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-10 17:25:28,400 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-10 17:25:28,403 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-10 17:25:28,405 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-10 17:25:28,408 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:25:28,411 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-10 17:25:28,592 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-10 17:25:28,595 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-10 17:25:28,599 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-10 17:25:28,602 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-10 17:25:28,793 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-10 17:25:28,798 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-10 17:25:28,800 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-10 17:25:28,803 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:25:28,806 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:25:28,808 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:25:28,810 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-10 17:25:28,812 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-10 17:25:28,991 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-10 17:25:28,993 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-10 17:25:28,995 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-10 17:25:28,997 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-10 17:25:29,191 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-10 17:25:29,200 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-10 17:25:29,202 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:25:29,204 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:25:29,206 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:25:29,207 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-10 17:25:29,209 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-10 17:25:29,391 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-10 17:25:29,393 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-10 17:25:29,395 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-10 17:25:29,397 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-10 17:25:29,398 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-10 17:25:29,401 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-10 17:25:29,591 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:25:29,593 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:25:29,595 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:25:29,597 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-10 17:25:29,598 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-10 17:25:29,791 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-10 17:25:29,793 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-10 17:25:29,795 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-10 17:25:29,798 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-10 17:25:29,800 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:25:29,802 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-10 17:25:29,804 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-10 17:25:29,991 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-10 17:25:29,995 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:25:29,997 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:25:29,999 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-10 17:25:30,191 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-10 17:25:30,194 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-10 17:25:30,197 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-10 17:25:30,199 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-10 17:25:30,202 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:25:30,394 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:25:30,398 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-10 17:25:30,402 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-10 17:25:30,406 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-10 17:25:30,593 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-10 17:25:30,601 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-10 17:25:30,607 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-10 17:25:30,612 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-10 17:25:30,616 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-10 17:25:30,623 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-10 17:25:30,628 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:25:30,791 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:25:30,794 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:25:30,796 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:25:30,798 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:25:30,801 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:25:30,803 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:25:30,992 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:25:30,997 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:25:31,001 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:25:31,006 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-10 17:25:31,010 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-10 17:25:31,015 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-10 17:25:31,019 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-10 17:25:31,024 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-10 17:25:31,194 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:25:31,198 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:25:31,203 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:25:31,208 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:25:31,213 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:25:31,219 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-10 17:25:31,392 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-10 17:25:31,395 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-10 17:25:31,397 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-10 17:25:31,400 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-10 17:25:31,453 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-10 17:25:31,456 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-10 17:25:31,459 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-10 17:25:31,464 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:25:31,593 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:25:31,596 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-10 17:25:31,598 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-10 17:25:31,600 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-10 17:25:31,602 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:25:31,604 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:25:31,610 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-10 17:25:31,793 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-10 17:25:31,796 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-10 17:25:31,798 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-10 17:25:32,603 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-10 17:25:32,606 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-10 17:25:32,608 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-10 17:25:32,610 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-10 17:25:32,612 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-10 17:25:32,802 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-10 17:25:32,809 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-10 17:25:32,812 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-10 17:25:32,815 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-10 17:25:32,818 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-10 17:25:32,820 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-10 17:25:32,823 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:25:32,841 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:25:33,002 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-10 17:25:33,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-10 17:25:33,010 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-10 17:25:33,013 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:25:33,015 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:25:33,025 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:25:33,035 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:25:33,037 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-10 17:25:33,202 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-10 17:25:33,234 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-10 17:25:33,236 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-10 17:25:33,238 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-10 17:25:33,402 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-10 17:25:33,404 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-10 17:25:33,406 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-10 17:25:33,408 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:25:33,410 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:25:33,411 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:25:33,413 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-10 17:25:33,415 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-10 17:25:33,602 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-10 17:25:33,604 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-10 17:25:33,606 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-10 17:25:33,609 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-10 17:25:33,802 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-10 17:25:33,805 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-10 17:25:33,840 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-10 17:25:33,843 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-10 17:25:33,845 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-10 17:25:33,847 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-10 17:25:34,002 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-10 17:25:34,004 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-10 17:25:34,006 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:25:34,008 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:25:34,011 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-10 17:25:34,013 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-10 17:25:34,014 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-10 17:25:34,202 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-10 17:25:34,204 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-10 17:25:34,208 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-10 17:25:34,210 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-10 17:25:34,212 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:25:34,402 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:25:34,404 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:25:34,407 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:25:34,409 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-10 17:25:34,411 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-10 17:25:34,413 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-10 17:25:34,415 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-10 17:25:34,417 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-10 17:25:34,419 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-10 17:25:34,602 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:25:34,604 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-10 17:25:34,606 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-10 17:25:34,613 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-10 17:25:34,802 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-10 17:25:34,804 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-10 17:25:34,806 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-10 17:25:34,808 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-10 17:25:34,810 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-10 17:25:34,811 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-10 17:25:34,814 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-10 17:25:35,002 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-10 17:25:35,004 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-10 17:25:35,005 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-10 17:25:35,007 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-10 17:25:35,008 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-10 17:25:35,010 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-10 17:25:35,012 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-10 17:25:35,202 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-10 17:25:35,204 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-10 17:25:35,206 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-10 17:25:35,207 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-10 17:25:35,209 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-10 17:25:35,210 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-10 17:25:35,402 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-10 17:25:35,403 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-10 17:25:35,406 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-10 17:25:35,409 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-10 17:25:35,411 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-10 17:25:35,411 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:25:35,411 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-10 17:25:35,415 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-10 17:25:35,422 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:25:35,609 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-10 17:25:35,628 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:25:35,635 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-10 17:25:35,646 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-10 17:25:35,660 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: returning instance for objectname plcRequest
2019-12-10 17:25:35,670 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-10 17:25:35,672 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
