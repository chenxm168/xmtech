2019-12-24 14:43:04,196 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-24 14:43:04,428 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-24 14:43:04,505 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-24 14:43:04,537 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-24 14:43:04,557 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-24 14:43:04,559 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-24 14:43:04,561 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-24 14:43:04,563 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-24 14:43:04,565 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-24 14:43:04,568 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-24 14:43:04,569 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-24 14:43:04,571 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-24 14:43:04,573 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-24 14:43:04,574 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-24 14:43:04,748 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-24 14:43:04,757 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-24 14:43:04,760 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-24 14:43:04,767 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-24 14:43:05,078 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-24 14:43:05,081 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-24 14:43:05,083 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-24 14:43:05,089 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-24 14:43:05,091 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-24 14:43:05,093 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-24 14:43:05,102 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-24 14:43:05,117 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-24 14:43:05,119 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-24 14:43:05,121 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-24 14:43:05,125 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-24 14:43:05,127 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-24 14:43:05,129 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-24 14:43:05,133 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-24 14:43:05,135 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-24 14:43:05,305 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-24 14:43:05,308 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-24 14:43:05,311 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-24 14:43:05,312 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-24 14:43:05,314 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-24 14:43:05,331 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-24 14:43:05,335 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-24 14:43:05,339 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-24 14:43:05,507 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-24 14:43:05,527 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-24 14:43:05,533 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-24 14:43:05,536 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:43:05,539 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-24 14:43:05,543 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-24 14:43:05,706 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-24 14:43:05,723 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-24 14:43:05,726 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-24 14:43:05,730 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-24 14:43:05,733 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-24 14:43:05,908 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-24 14:43:05,911 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:43:05,914 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:43:05,917 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 14:43:05,920 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-24 14:43:05,922 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-24 14:43:06,105 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-24 14:43:06,107 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-24 14:43:06,109 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-24 14:43:06,112 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-24 14:43:06,114 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-24 14:43:06,117 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-24 14:43:06,119 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 14:43:06,305 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 14:43:06,307 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 14:43:06,309 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-24 14:43:06,311 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-24 14:43:06,313 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-24 14:43:06,505 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-24 14:43:06,507 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-24 14:43:06,509 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-24 14:43:06,511 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-24 14:43:06,512 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-24 14:43:06,514 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 14:43:06,516 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-24 14:43:06,705 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:43:06,707 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-24 14:43:06,708 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-24 14:43:06,718 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-24 14:43:06,720 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-24 14:43:06,905 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-24 14:43:06,909 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-24 14:43:06,912 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 14:43:06,914 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-24 14:43:06,916 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-24 14:43:07,105 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-24 14:43:07,109 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 14:43:07,112 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-24 14:43:07,114 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-24 14:43:07,305 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-24 14:43:07,308 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-24 14:43:07,310 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-24 14:43:07,312 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-24 14:43:07,314 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 14:43:07,316 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 14:43:07,318 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-24 14:43:07,505 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-24 14:43:07,507 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-24 14:43:07,510 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-24 14:43:07,514 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-24 14:43:07,705 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 14:43:07,708 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-24 14:43:07,710 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 14:43:07,712 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 14:43:07,716 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:43:07,718 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:43:07,905 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:43:07,907 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:43:07,909 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:43:07,911 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:43:07,913 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:43:07,919 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:43:07,922 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:43:07,924 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:43:08,105 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-24 14:43:08,107 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 14:43:08,109 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-24 14:43:08,111 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 14:43:08,114 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-24 14:43:08,116 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:43:08,305 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:43:08,308 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:43:08,310 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:43:08,312 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:43:08,315 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:43:08,317 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:43:08,319 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:43:08,505 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:43:08,508 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:43:08,579 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-24 14:43:08,581 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-24 14:43:08,583 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 14:43:08,585 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 14:43:08,588 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 14:43:08,590 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-24 14:43:08,705 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-24 14:43:08,707 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-24 14:43:08,709 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 14:43:08,711 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 14:43:08,718 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 14:43:08,720 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-24 14:43:08,722 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 14:43:08,905 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 14:43:09,894 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-24 14:43:09,902 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-24 14:43:10,085 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-24 14:43:10,087 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-24 14:43:10,090 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 14:43:10,286 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-24 14:43:10,290 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 14:43:10,292 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 14:43:10,486 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-24 14:43:10,490 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-24 14:43:10,493 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-24 14:43:10,690 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 14:43:10,892 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-24 14:43:11,086 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-24 14:43:11,089 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-24 14:43:11,091 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-24 14:43:11,286 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:43:11,289 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:43:11,292 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 14:43:11,485 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-24 14:43:11,487 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-24 14:43:11,689 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-24 14:43:11,731 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-24 14:43:11,885 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-24 14:43:11,888 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-24 14:43:11,890 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-24 14:43:12,085 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-24 14:43:12,088 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-24 14:43:12,090 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 14:43:12,285 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 14:43:12,287 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:43:12,292 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-24 14:43:12,485 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-24 14:43:12,488 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-24 14:43:12,686 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-24 14:43:12,691 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 14:43:12,895 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-24 14:43:13,087 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 14:43:13,090 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 14:43:13,486 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-24 14:43:13,488 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-24 14:43:13,490 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-24 14:43:13,494 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-24 14:43:13,686 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-24 14:43:13,689 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-24 14:43:13,692 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:43:13,886 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:43:13,893 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-24 14:43:14,086 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-24 14:43:14,089 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-24 14:43:14,287 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-24 14:43:14,291 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-24 14:43:14,486 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-24 14:43:14,493 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-24 14:43:14,686 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:43:14,688 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 14:43:14,693 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:43:14,887 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:43:14,916 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-24 14:43:15,086 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-24 14:43:15,093 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-24 14:43:15,286 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-24 14:43:15,288 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-24 14:43:15,290 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-24 14:43:15,292 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-24 14:43:15,487 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-24 14:43:15,489 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-24 14:43:15,686 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-24 14:43:15,689 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-24 14:43:15,691 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-24 14:43:15,886 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:43:15,889 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 14:43:15,892 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:43:16,136 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:43:16,140 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-24 14:43:16,142 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-24 14:43:16,300 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-24 14:43:16,487 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-24 14:43:16,492 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-24 14:43:16,494 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-24 14:43:16,694 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-24 14:43:16,887 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-24 14:43:16,889 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-24 14:43:17,087 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-24 14:43:17,089 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-24 14:43:17,092 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-24 14:43:17,296 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-24 14:43:17,487 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-24 14:43:17,490 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-24 14:43:17,492 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-24 14:43:17,688 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-24 14:43:17,692 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-24 14:43:17,887 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 14:43:17,887 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:43:17,889 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:43:17,891 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-24 14:43:17,893 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 14:43:17,898 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 14:43:18,087 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 14:43:18,088 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:43:18,095 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManager
2019-12-24 14:43:18,100 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:43:18,103 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:43:18,318 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:45:35,937 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-24 14:45:35,990 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-24 14:45:36,002 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-24 14:45:36,008 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-24 14:45:36,012 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-24 14:45:36,018 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-24 14:45:36,022 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-24 14:45:36,024 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-24 14:45:36,053 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-24 14:45:36,056 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-24 14:45:36,058 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-24 14:45:36,061 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-24 14:45:36,153 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-24 14:45:36,155 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-24 14:45:36,224 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-24 14:45:36,229 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-24 14:45:36,233 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-24 14:45:36,236 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-24 14:45:36,241 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-24 14:45:36,244 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-24 14:45:36,246 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-24 14:45:36,254 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-24 14:45:36,353 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-24 14:45:36,356 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-24 14:45:36,360 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-24 14:45:36,363 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-24 14:45:36,366 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-24 14:45:36,368 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-24 14:45:36,370 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-24 14:45:36,372 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-24 14:45:36,553 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-24 14:45:36,557 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-24 14:45:36,559 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-24 14:45:36,561 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-24 14:45:36,564 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-24 14:45:36,566 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-24 14:45:36,570 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-24 14:45:36,572 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-24 14:45:36,590 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-24 14:45:36,755 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-24 14:45:36,758 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-24 14:45:36,762 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-24 14:45:36,765 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-24 14:45:36,768 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-24 14:45:36,770 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:45:36,773 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-24 14:45:36,954 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-24 14:45:36,957 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-24 14:45:36,962 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-24 14:45:36,964 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-24 14:45:37,155 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-24 14:45:37,159 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-24 14:45:37,162 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-24 14:45:37,164 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:45:37,167 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:45:37,169 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 14:45:37,171 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-24 14:45:37,173 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-24 14:45:37,353 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-24 14:45:37,355 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-24 14:45:37,357 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-24 14:45:37,359 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-24 14:45:37,562 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-24 14:45:37,564 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-24 14:45:37,565 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 14:45:37,567 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 14:45:37,569 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 14:45:37,571 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-24 14:45:37,573 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-24 14:45:37,753 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-24 14:45:37,756 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-24 14:45:37,757 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-24 14:45:37,759 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-24 14:45:37,761 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-24 14:45:37,764 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-24 14:45:37,953 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 14:45:37,954 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-24 14:45:37,957 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:45:37,959 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-24 14:45:37,960 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-24 14:45:38,153 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-24 14:45:38,155 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-24 14:45:38,156 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-24 14:45:38,160 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-24 14:45:38,162 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 14:45:38,164 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-24 14:45:38,166 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-24 14:45:38,353 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-24 14:45:38,357 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 14:45:38,360 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-24 14:45:38,362 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-24 14:45:38,553 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-24 14:45:38,556 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-24 14:45:38,558 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-24 14:45:38,561 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-24 14:45:38,563 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 14:45:38,753 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 14:45:38,755 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-24 14:45:38,758 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-24 14:45:38,760 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-24 14:45:38,953 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-24 14:45:38,957 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-24 14:45:38,960 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 14:45:38,962 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-24 14:45:38,967 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 14:45:38,971 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 14:45:38,977 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:45:39,153 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:45:39,156 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:45:39,158 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:45:39,161 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:45:39,164 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:45:39,166 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:45:39,353 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:45:39,355 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:45:39,357 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:45:39,359 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-24 14:45:39,361 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 14:45:39,363 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-24 14:45:39,366 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 14:45:39,368 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-24 14:45:39,553 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:45:39,556 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:45:39,558 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:45:39,561 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:45:39,564 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:45:39,567 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:45:39,753 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:45:39,756 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:45:39,758 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:45:39,760 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:45:39,794 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-24 14:45:39,796 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-24 14:45:39,798 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 14:45:39,800 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 14:45:39,953 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 14:45:39,955 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-24 14:45:39,958 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-24 14:45:39,960 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-24 14:45:39,962 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 14:45:39,964 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 14:45:39,969 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 14:45:40,153 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-24 14:45:40,156 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 14:45:40,159 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 14:45:41,023 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-24 14:45:41,025 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-24 14:45:41,027 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-24 14:45:41,030 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-24 14:45:41,034 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 14:45:41,037 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-24 14:45:41,039 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 14:45:41,223 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 14:45:41,225 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-24 14:45:41,226 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-24 14:45:41,228 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-24 14:45:41,229 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 14:45:41,232 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-24 14:45:41,234 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-24 14:45:41,235 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-24 14:45:41,423 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-24 14:45:41,425 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:45:41,426 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:45:41,428 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 14:45:41,430 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-24 14:45:41,431 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-24 14:45:41,623 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-24 14:45:41,647 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-24 14:45:41,648 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-24 14:45:41,650 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-24 14:45:41,652 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-24 14:45:41,657 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-24 14:45:41,823 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-24 14:45:41,824 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 14:45:41,826 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 14:45:41,828 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:45:41,830 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-24 14:45:41,832 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-24 14:45:42,023 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-24 14:45:42,025 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-24 14:45:42,027 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 14:45:42,029 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-24 14:45:42,030 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 14:45:42,032 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 14:45:42,280 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-24 14:45:42,282 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-24 14:45:42,284 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-24 14:45:42,286 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-24 14:45:42,288 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-24 14:45:42,290 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-24 14:45:42,423 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:45:42,425 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:45:42,426 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-24 14:45:42,428 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-24 14:45:42,430 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-24 14:45:42,623 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-24 14:45:42,625 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-24 14:45:42,626 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-24 14:45:42,628 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-24 14:45:42,630 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:45:42,632 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 14:45:42,634 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:45:42,823 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:45:42,826 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-24 14:45:42,827 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-24 14:45:42,829 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-24 14:45:42,830 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-24 14:45:42,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-24 14:45:42,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-24 14:45:42,835 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-24 14:45:43,022 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-24 14:45:43,024 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-24 14:45:43,026 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-24 14:45:43,028 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-24 14:45:43,030 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-24 14:45:43,223 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:45:43,225 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 14:45:43,227 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:45:43,229 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:45:43,232 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-24 14:45:43,234 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-24 14:45:43,239 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-24 14:45:43,423 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-24 14:45:43,424 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-24 14:45:43,426 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-24 14:45:43,427 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-24 14:45:43,429 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-24 14:45:43,623 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-24 14:45:43,625 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-24 14:45:43,627 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-24 14:45:43,629 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-24 14:45:43,631 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-24 14:45:43,633 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-24 14:45:43,634 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-24 14:45:43,636 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-24 14:45:43,823 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-24 14:45:43,825 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-24 14:45:43,828 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 14:45:43,829 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-24 14:45:43,831 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 14:45:43,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-24 14:45:43,837 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:45:43,838 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:45:44,023 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 14:45:44,024 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:45:44,026 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 14:45:44,028 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:45:44,029 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:45:44,032 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:55:37,430 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-24 14:55:37,498 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-24 14:55:37,510 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-24 14:55:37,514 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-12-24 14:55:37,518 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-12-24 14:55:37,520 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-12-24 14:55:37,522 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-12-24 14:55:37,524 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-12-24 14:55:37,526 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-12-24 14:55:37,532 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-24 14:55:37,534 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-24 14:55:37,541 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-12-24 14:55:37,663 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-12-24 14:55:37,665 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-12-24 14:55:37,728 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-24 14:55:37,736 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-24 14:55:37,738 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-24 14:55:37,742 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-24 14:55:37,746 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-24 14:55:37,749 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-24 14:55:37,751 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-24 14:55:37,760 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-24 14:55:37,863 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-24 14:55:37,865 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-24 14:55:37,868 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-24 14:55:37,870 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-24 14:55:37,872 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-24 14:55:37,874 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-24 14:55:37,876 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-24 14:55:37,878 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-24 14:55:38,063 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-24 14:55:38,064 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-24 14:55:38,066 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-24 14:55:38,068 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-24 14:55:38,071 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-24 14:55:38,072 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-24 14:55:38,074 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-24 14:55:38,076 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-24 14:55:38,093 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-24 14:55:38,265 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-24 14:55:38,267 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-24 14:55:38,271 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-24 14:55:38,273 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-24 14:55:38,275 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-24 14:55:38,278 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:55:38,280 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-24 14:55:38,464 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-24 14:55:38,467 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-24 14:55:38,471 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-24 14:55:38,473 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-24 14:55:38,665 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-24 14:55:38,669 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-24 14:55:38,676 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-24 14:55:38,678 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:55:38,680 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:55:38,681 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 14:55:38,683 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-24 14:55:38,684 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-24 14:55:38,863 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-24 14:55:38,864 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-24 14:55:38,866 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-24 14:55:38,867 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-24 14:55:39,063 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-24 14:55:39,073 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-24 14:55:39,075 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 14:55:39,076 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 14:55:39,079 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 14:55:39,080 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-24 14:55:39,082 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-24 14:55:39,263 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-24 14:55:39,265 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-24 14:55:39,266 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-24 14:55:39,268 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-24 14:55:39,270 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-24 14:55:39,271 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-24 14:55:39,463 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 14:55:39,464 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-24 14:55:39,466 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:55:39,468 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-24 14:55:39,470 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-24 14:55:39,663 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-24 14:55:39,665 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-24 14:55:39,666 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-24 14:55:39,670 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-24 14:55:39,673 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 14:55:39,674 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-24 14:55:39,676 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-24 14:55:39,863 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-24 14:55:39,866 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 14:55:39,869 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-24 14:55:39,870 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-24 14:55:40,063 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-24 14:55:40,065 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-24 14:55:40,067 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-24 14:55:40,069 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-24 14:55:40,071 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 14:55:40,263 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 14:55:40,265 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-24 14:55:40,267 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-24 14:55:40,269 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-24 14:55:40,463 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-24 14:55:40,466 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-24 14:55:40,468 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 14:55:40,470 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-24 14:55:40,472 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 14:55:40,478 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 14:55:40,481 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:55:40,663 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:55:40,665 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:55:40,667 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:55:40,669 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:55:40,671 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:55:40,673 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:55:40,863 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:55:40,865 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:55:40,867 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:55:40,869 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-24 14:55:40,871 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 14:55:40,873 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-24 14:55:40,875 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 14:55:40,877 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-24 14:55:41,063 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:55:41,065 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:55:41,067 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:55:41,069 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:55:41,071 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:55:41,073 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:55:41,263 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:55:41,265 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:55:41,267 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:55:41,270 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:55:41,310 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-24 14:55:41,312 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-24 14:55:41,313 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 14:55:41,316 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 14:55:41,463 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 14:55:41,466 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-24 14:55:41,468 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-24 14:55:41,470 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-24 14:55:41,472 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 14:55:41,473 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 14:55:41,478 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 14:55:41,663 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-24 14:55:41,665 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 14:55:41,667 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 14:55:42,535 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-24 14:55:42,538 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-24 14:55:42,542 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-24 14:55:42,544 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-24 14:55:42,546 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 14:55:42,733 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-24 14:55:42,735 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 14:55:42,737 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 14:55:42,740 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-24 14:55:42,743 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-24 14:55:42,746 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-24 14:55:42,748 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 14:55:42,750 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-24 14:55:42,933 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-24 14:55:42,935 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-24 14:55:42,936 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-24 14:55:42,938 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:55:42,940 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:55:42,941 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 14:55:42,943 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-24 14:55:42,944 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-24 14:55:43,133 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-24 14:55:43,160 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-24 14:55:43,162 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-24 14:55:43,163 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-24 14:55:43,333 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-24 14:55:43,334 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-24 14:55:43,339 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-24 14:55:43,341 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 14:55:43,342 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 14:55:43,344 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:55:43,345 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-24 14:55:43,347 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-24 14:55:43,533 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-24 14:55:43,534 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-24 14:55:43,536 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 14:55:43,538 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-24 14:55:43,733 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 14:55:43,735 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 14:55:43,774 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-24 14:55:43,775 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-24 14:55:43,777 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-24 14:55:43,779 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-24 14:55:43,933 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-24 14:55:43,935 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-24 14:55:43,938 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:55:43,940 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:55:43,942 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-24 14:55:43,944 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-24 14:55:43,947 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-24 14:55:44,133 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-24 14:55:44,135 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-24 14:55:44,136 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-24 14:55:44,138 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-24 14:55:44,140 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:55:44,333 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 14:55:44,335 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:55:44,336 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:55:44,338 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-24 14:55:44,340 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-24 14:55:44,341 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-24 14:55:44,343 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-24 14:55:44,345 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-24 14:55:44,346 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-24 14:55:44,533 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-24 14:55:44,535 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-24 14:55:44,537 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-24 14:55:44,539 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-24 14:55:44,733 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-24 14:55:44,735 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-24 14:55:44,737 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:55:44,740 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 14:55:44,742 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:55:44,744 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:55:44,747 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-24 14:55:44,933 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-24 14:55:44,935 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-24 14:55:44,939 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-24 14:55:44,942 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-24 14:55:44,943 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-24 14:55:44,945 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-24 14:55:44,947 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-24 14:55:45,133 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-24 14:55:45,139 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-24 14:55:45,142 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-24 14:55:45,145 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-24 14:55:45,148 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-24 14:55:45,151 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-24 14:55:45,333 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-24 14:55:45,334 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-24 14:55:45,337 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-24 14:55:45,339 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-24 14:55:45,341 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 14:55:45,341 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:55:45,341 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:55:45,346 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-24 14:55:45,348 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 14:55:45,556 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 14:55:45,570 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:55:45,575 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:55:45,583 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 14:55:45,604 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:55:45,611 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:55:45,614 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-12-24 14:57:07,133 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-24 14:57:07,189 [Thread: 11      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-24 14:57:07,203 [Thread: 11      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-24 14:57:07,207 [Thread: 11      ] [DEBUG] -- Loading object definitions.
2019-12-24 14:57:07,209 [Thread: 11      ] [DEBUG] -- Loading object definitions...
2019-12-24 14:57:07,211 [Thread: 11      ] [DEBUG] -- Default lazy init 'false'.
2019-12-24 14:57:07,213 [Thread: 11      ] [DEBUG] -- Default dependency check 'none'.
2019-12-24 14:57:07,215 [Thread: 11      ] [DEBUG] -- Default autowire 'no'.
2019-12-24 14:57:07,217 [Thread: 11      ] [DEBUG] -- Default merge 'false'.
2019-12-24 14:57:07,219 [Thread: 11      ] [DEBUG] -- Default init method ''.
2019-12-24 14:57:07,221 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2019-12-24 14:57:07,223 [Thread: 11      ] [DEBUG] -- Default autowire candidates ''.
2019-12-24 14:57:07,354 [Thread: 11      ] [DEBUG] -- Default init method ''.
2019-12-24 14:57:07,355 [Thread: 11      ] [DEBUG] -- Default destroy method ''.
2019-12-24 14:57:07,414 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-24 14:57:07,418 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-24 14:57:07,421 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-24 14:57:07,425 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-24 14:57:07,429 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-24 14:57:07,432 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-24 14:57:07,435 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-24 14:57:07,442 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-24 14:57:07,554 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-24 14:57:07,556 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-24 14:57:07,559 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-24 14:57:07,561 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-24 14:57:07,563 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-24 14:57:07,565 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-24 14:57:07,567 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-24 14:57:07,568 [Thread: 11      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-24 14:57:07,754 [Thread: 11      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-24 14:57:07,756 [Thread: 11      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-24 14:57:07,757 [Thread: 11      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-24 14:57:07,759 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-24 14:57:07,762 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-24 14:57:07,764 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-24 14:57:07,766 [Thread: 11      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-24 14:57:07,767 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-24 14:57:07,780 [Thread: 11      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-24 14:57:07,956 [Thread: 11      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-24 14:57:07,959 [Thread: 11      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-24 14:57:07,962 [Thread: 11      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-24 14:57:07,965 [Thread: 11      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-24 14:57:07,967 [Thread: 11      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-24 14:57:07,969 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:57:07,972 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-24 14:57:08,155 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-24 14:57:08,157 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-24 14:57:08,161 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-24 14:57:08,163 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-24 14:57:08,356 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-24 14:57:08,359 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-24 14:57:08,361 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-24 14:57:08,364 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:57:08,367 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:57:08,368 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 14:57:08,370 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-24 14:57:08,372 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-24 14:57:08,554 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-24 14:57:08,556 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-24 14:57:08,558 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-24 14:57:08,560 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-24 14:57:08,754 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-24 14:57:08,763 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-24 14:57:08,765 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 14:57:08,767 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 14:57:08,769 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 14:57:08,770 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-24 14:57:08,772 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-24 14:57:08,954 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-24 14:57:08,956 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-24 14:57:08,957 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-24 14:57:08,959 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-24 14:57:08,961 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-24 14:57:08,962 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-24 14:57:09,154 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 14:57:09,156 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-24 14:57:09,158 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:57:09,161 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-24 14:57:09,163 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-24 14:57:09,354 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-24 14:57:09,356 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-24 14:57:09,358 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-24 14:57:09,362 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-24 14:57:09,365 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 14:57:09,366 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-24 14:57:09,368 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-24 14:57:09,554 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-24 14:57:09,558 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 14:57:09,560 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-24 14:57:09,562 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-24 14:57:09,754 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-24 14:57:09,757 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-24 14:57:09,759 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-24 14:57:09,761 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-24 14:57:09,762 [Thread: 11      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 14:57:09,954 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 14:57:09,956 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-24 14:57:09,958 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-24 14:57:09,961 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-24 14:57:10,154 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-24 14:57:10,157 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-24 14:57:10,159 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 14:57:10,161 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-24 14:57:10,163 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 14:57:10,168 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 14:57:10,172 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:57:10,354 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:57:10,357 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:57:10,359 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:57:10,362 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:57:10,364 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:57:10,366 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:57:10,554 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:57:10,557 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:57:10,559 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:57:10,561 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-24 14:57:10,563 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 14:57:10,564 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-24 14:57:10,566 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 14:57:10,568 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-24 14:57:10,754 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:57:10,756 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:57:10,758 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:57:10,760 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:57:10,762 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:57:10,764 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 14:57:10,954 [Thread: 11      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 14:57:10,956 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 14:57:10,958 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 14:57:10,960 [Thread: 11      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 14:57:10,998 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-24 14:57:11,000 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-24 14:57:11,003 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 14:57:11,006 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 14:57:11,154 [Thread: 11      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 14:57:11,157 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-24 14:57:11,158 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-24 14:57:11,160 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-24 14:57:11,161 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 14:57:11,166 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 14:57:11,173 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 14:57:11,354 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-24 14:57:11,356 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 14:57:11,358 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 14:57:12,164 [Thread: 11      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-24 14:57:12,167 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-24 14:57:12,170 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-24 14:57:12,172 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-24 14:57:12,174 [Thread: 11      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 14:57:12,176 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-24 14:57:12,179 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 14:57:12,364 [Thread: 11      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 14:57:12,366 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-24 14:57:12,368 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-24 14:57:12,370 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-24 14:57:12,371 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 14:57:12,374 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-24 14:57:12,376 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-24 14:57:12,377 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-24 14:57:12,564 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-24 14:57:12,565 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:57:12,567 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:57:12,569 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 14:57:12,571 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-24 14:57:12,573 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-24 14:57:12,764 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-24 14:57:12,794 [Thread: 11      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-24 14:57:12,797 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-24 14:57:12,798 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-24 14:57:12,800 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-24 14:57:12,805 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-24 14:57:12,964 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-24 14:57:12,965 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 14:57:12,967 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 14:57:12,968 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:57:12,970 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-24 14:57:12,971 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-24 14:57:13,164 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-24 14:57:13,165 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-24 14:57:13,167 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 14:57:13,169 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-24 14:57:13,170 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 14:57:13,172 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 14:57:13,390 [Thread: 11      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-24 14:57:13,392 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-24 14:57:13,394 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-24 14:57:13,395 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-24 14:57:13,397 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-24 14:57:13,399 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-24 14:57:13,564 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:57:13,565 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:57:13,567 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-24 14:57:13,569 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-24 14:57:13,570 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-24 14:57:13,763 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-24 14:57:13,765 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-24 14:57:13,767 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-24 14:57:13,769 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-24 14:57:13,771 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:57:13,773 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 14:57:13,776 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:57:13,964 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:57:13,966 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-24 14:57:13,967 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-24 14:57:13,969 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-24 14:57:13,970 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-24 14:57:13,972 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-24 14:57:13,973 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-24 14:57:13,975 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-24 14:57:14,164 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-24 14:57:14,166 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-24 14:57:14,167 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-24 14:57:14,169 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-24 14:57:14,171 [Thread: 11      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-24 14:57:14,364 [Thread: 11      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 14:57:14,366 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 14:57:14,368 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 14:57:14,369 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 14:57:14,372 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-24 14:57:14,374 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-24 14:57:14,379 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-24 14:57:14,564 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-24 14:57:14,565 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-24 14:57:14,567 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-24 14:57:14,568 [Thread: 11      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-24 14:57:14,570 [Thread: 11      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-24 14:57:14,764 [Thread: 11      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-24 14:57:14,766 [Thread: 11      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-24 14:57:14,767 [Thread: 11      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-24 14:57:14,770 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-24 14:57:14,771 [Thread: 11      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-24 14:57:14,773 [Thread: 11      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-24 14:57:14,775 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-24 14:57:14,776 [Thread: 11      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-24 14:57:14,964 [Thread: 11      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-24 14:57:14,967 [Thread: 11      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-24 14:57:14,968 [Thread: 11      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 14:57:14,969 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:57:14,968 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 14:57:14,974 [Thread: 11      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-24 14:57:14,979 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 14:57:14,981 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 14:57:14,982 [Thread: 11      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 14:57:15,164 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:57:15,166 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 14:57:15,187 [Thread: 11      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-24 14:57:15,197 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 14:57:15,203 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 15:01:18,379 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-24 15:01:18,434 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-24 15:01:18,448 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-24 15:01:18,453 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-12-24 15:01:18,457 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-12-24 15:01:18,459 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-12-24 15:01:18,461 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-12-24 15:01:18,463 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-12-24 15:01:18,466 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-12-24 15:01:18,468 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-24 15:01:18,469 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-24 15:01:18,472 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-12-24 15:01:18,589 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-12-24 15:01:18,591 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-12-24 15:01:18,655 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-24 15:01:18,660 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-24 15:01:18,678 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-24 15:01:18,686 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-24 15:01:18,690 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-24 15:01:18,697 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-24 15:01:18,699 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-24 15:01:18,726 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-24 15:01:18,789 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-24 15:01:18,791 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-24 15:01:18,794 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-24 15:01:18,796 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-24 15:01:18,798 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-24 15:01:18,800 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-24 15:01:18,803 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-24 15:01:18,805 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-24 15:01:18,989 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-24 15:01:18,991 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-24 15:01:18,993 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-24 15:01:18,995 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-24 15:01:18,998 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-24 15:01:19,000 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-24 15:01:19,003 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-24 15:01:19,004 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-24 15:01:19,021 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-24 15:01:19,191 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-24 15:01:19,194 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-24 15:01:19,198 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-24 15:01:19,201 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-24 15:01:19,203 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-24 15:01:19,206 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 15:01:19,210 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-24 15:01:19,390 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-24 15:01:19,393 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-24 15:01:19,398 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-24 15:01:19,400 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-24 15:01:19,591 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-24 15:01:19,594 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-24 15:01:19,596 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-24 15:01:19,599 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 15:01:19,601 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 15:01:19,603 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 15:01:19,604 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-24 15:01:19,606 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-24 15:01:19,789 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-24 15:01:19,791 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-24 15:01:19,793 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-24 15:01:19,795 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-24 15:01:19,989 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-24 15:01:20,000 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-24 15:01:20,003 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 15:01:20,005 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 15:01:20,007 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 15:01:20,009 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-24 15:01:20,011 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-24 15:01:20,189 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-24 15:01:20,191 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-24 15:01:20,192 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-24 15:01:20,194 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-24 15:01:20,196 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-24 15:01:20,198 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-24 15:01:20,389 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 15:01:20,391 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-24 15:01:20,394 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 15:01:20,396 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-24 15:01:20,397 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-24 15:01:20,590 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-24 15:01:20,594 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-24 15:01:20,600 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-24 15:01:20,608 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-24 15:01:20,613 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 15:01:20,624 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-24 15:01:20,632 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-24 15:01:20,790 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-24 15:01:20,820 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 15:01:20,824 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-24 15:01:20,829 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-24 15:01:20,991 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-24 15:01:20,996 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-24 15:01:21,000 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-24 15:01:21,005 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-24 15:01:21,009 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 15:01:21,191 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 15:01:21,197 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-24 15:01:21,202 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-24 15:01:21,207 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-24 15:01:21,389 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-24 15:01:21,392 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-24 15:01:21,395 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 15:01:21,398 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-24 15:01:21,401 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 15:01:21,407 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 15:01:21,411 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 15:01:21,589 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 15:01:21,592 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 15:01:21,595 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 15:01:21,600 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 15:01:21,603 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 15:01:21,605 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 15:01:21,789 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 15:01:21,792 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 15:01:21,794 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 15:01:21,797 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-24 15:01:21,800 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 15:01:21,802 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-24 15:01:21,805 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 15:01:21,807 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-24 15:01:21,989 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 15:01:21,991 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 15:01:22,005 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 15:01:22,009 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 15:01:22,011 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 15:01:22,013 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 15:01:22,189 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 15:01:22,191 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 15:01:22,193 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 15:01:22,195 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 15:01:22,229 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-24 15:01:22,231 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-24 15:01:22,234 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 15:01:22,237 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 15:01:22,389 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 15:01:22,392 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-24 15:01:22,394 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-24 15:01:22,397 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-24 15:01:22,399 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 15:01:22,401 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 15:01:22,407 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 15:01:22,589 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-24 15:01:22,591 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 15:01:22,594 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 15:01:23,429 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-24 15:01:23,431 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-24 15:01:23,435 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-24 15:01:23,438 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-24 15:01:23,441 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 15:01:23,444 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-24 15:01:23,449 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 15:01:23,629 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 15:01:23,632 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-24 15:01:23,636 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-24 15:01:23,639 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-24 15:01:23,641 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 15:01:23,644 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-24 15:01:23,647 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-24 15:01:23,649 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-24 15:01:23,829 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-24 15:01:23,831 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 15:01:23,833 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 15:01:23,834 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 15:01:23,836 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-24 15:01:23,837 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-24 15:01:24,030 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-24 15:01:24,056 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-24 15:01:24,058 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-24 15:01:24,060 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-24 15:01:24,062 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-24 15:01:24,064 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-24 15:01:24,233 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-24 15:01:24,235 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 15:01:24,237 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 15:01:24,239 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 15:01:24,241 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-24 15:01:24,243 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-24 15:01:24,429 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-24 15:01:24,430 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-24 15:01:24,432 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 15:01:24,435 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-24 15:01:24,437 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 15:01:24,439 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 15:01:24,660 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-24 15:01:24,662 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-24 15:01:24,664 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-24 15:01:24,666 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-24 15:01:24,667 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-24 15:01:24,669 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-24 15:01:24,829 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 15:01:24,831 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 15:01:24,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-24 15:01:24,835 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-24 15:01:24,837 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-24 15:01:25,029 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-24 15:01:25,032 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-24 15:01:25,033 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-24 15:01:25,035 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-24 15:01:25,037 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 15:01:25,039 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 15:01:25,041 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 15:01:25,229 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 15:01:25,231 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-24 15:01:25,233 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-24 15:01:25,235 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-24 15:01:25,237 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-24 15:01:25,239 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-24 15:01:25,241 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-24 15:01:25,242 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-24 15:01:25,429 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-24 15:01:25,431 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-24 15:01:25,433 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-24 15:01:25,435 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-24 15:01:25,437 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-24 15:01:25,629 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 15:01:25,631 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 15:01:25,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 15:01:25,636 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 15:01:25,640 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-24 15:01:25,642 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-24 15:01:25,645 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-24 15:01:25,829 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-24 15:01:25,831 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-24 15:01:25,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-24 15:01:25,835 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-24 15:01:25,837 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-24 15:01:26,029 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-24 15:01:26,031 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-24 15:01:26,033 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-24 15:01:26,035 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-24 15:01:26,037 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-24 15:01:26,039 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-24 15:01:26,041 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-24 15:01:26,043 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-24 15:01:26,230 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-24 15:01:26,233 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-24 15:01:26,235 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 15:01:26,235 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 15:01:26,235 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 15:01:26,239 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-24 15:01:26,249 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 15:01:26,250 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 15:01:26,252 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 15:01:26,451 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 15:01:26,452 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManager
2019-12-24 15:01:26,459 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 15:01:26,463 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 15:01:26,470 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 16:08:20,731 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-12-24 16:08:20,798 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml]
2019-12-24 16:08:20,811 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-12-24 16:08:20,815 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-12-24 16:08:20,819 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-12-24 16:08:20,821 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-12-24 16:08:20,823 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-12-24 16:08:20,825 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-12-24 16:08:20,832 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-12-24 16:08:20,834 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-12-24 16:08:20,836 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-12-24 16:08:20,838 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-12-24 16:08:20,963 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-12-24 16:08:20,964 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-12-24 16:08:21,021 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-12-24 16:08:21,026 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-12-24 16:08:21,029 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-12-24 16:08:21,032 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-12-24 16:08:21,037 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-12-24 16:08:21,041 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-12-24 16:08:21,048 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-12-24 16:08:21,057 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-12-24 16:08:21,163 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-12-24 16:08:21,166 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-12-24 16:08:21,170 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-12-24 16:08:21,172 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-12-24 16:08:21,175 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-12-24 16:08:21,179 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-12-24 16:08:21,181 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-12-24 16:08:21,183 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-12-24 16:08:21,363 [Thread: 8       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-12-24 16:08:21,365 [Thread: 8       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-12-24 16:08:21,368 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-12-24 16:08:21,370 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-12-24 16:08:21,373 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-12-24 16:08:21,375 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-12-24 16:08:21,377 [Thread: 8       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-12-24 16:08:21,379 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-12-24 16:08:21,396 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-12-24 16:08:21,565 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-12-24 16:08:21,568 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-12-24 16:08:21,572 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-12-24 16:08:21,575 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-12-24 16:08:21,577 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-12-24 16:08:21,580 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 16:08:21,583 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-12-24 16:08:21,764 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-12-24 16:08:21,767 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-12-24 16:08:21,772 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-12-24 16:08:21,774 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-12-24 16:08:21,965 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-12-24 16:08:21,973 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-12-24 16:08:21,976 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-12-24 16:08:21,979 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 16:08:21,982 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 16:08:21,983 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 16:08:21,985 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-12-24 16:08:21,987 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-12-24 16:08:22,163 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-12-24 16:08:22,164 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-12-24 16:08:22,166 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-12-24 16:08:22,168 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-12-24 16:08:22,369 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-12-24 16:08:22,371 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-12-24 16:08:22,372 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 16:08:22,374 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 16:08:22,376 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 16:08:22,378 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-12-24 16:08:22,380 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-12-24 16:08:22,563 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-12-24 16:08:22,566 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-12-24 16:08:22,568 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-12-24 16:08:22,570 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-12-24 16:08:22,572 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-12-24 16:08:22,574 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-12-24 16:08:22,763 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 16:08:22,765 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-12-24 16:08:22,767 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 16:08:22,769 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-12-24 16:08:22,770 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-12-24 16:08:22,962 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-12-24 16:08:22,965 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-12-24 16:08:22,967 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-12-24 16:08:22,972 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-12-24 16:08:22,974 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 16:08:22,976 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-12-24 16:08:22,978 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-12-24 16:08:23,163 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-12-24 16:08:23,167 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 16:08:23,170 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-12-24 16:08:23,171 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-12-24 16:08:23,363 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-12-24 16:08:23,370 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-12-24 16:08:23,372 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-12-24 16:08:23,374 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-12-24 16:08:23,377 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 16:08:23,563 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 16:08:23,565 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-12-24 16:08:23,567 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-12-24 16:08:23,570 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-12-24 16:08:23,763 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-12-24 16:08:23,772 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-12-24 16:08:23,779 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-12-24 16:08:23,791 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-12-24 16:08:23,799 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-12-24 16:08:23,803 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-12-24 16:08:23,806 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 16:08:23,963 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 16:08:23,965 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 16:08:23,967 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 16:08:23,970 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 16:08:23,972 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 16:08:23,974 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 16:08:24,163 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 16:08:24,167 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 16:08:24,170 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 16:08:24,174 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-12-24 16:08:24,176 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-12-24 16:08:24,179 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-12-24 16:08:24,185 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-12-24 16:08:24,189 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-12-24 16:08:24,363 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 16:08:24,365 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 16:08:24,368 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 16:08:24,370 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 16:08:24,372 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 16:08:24,374 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-12-24 16:08:24,564 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-12-24 16:08:24,567 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-12-24 16:08:24,571 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-12-24 16:08:24,573 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-12-24 16:08:24,612 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-12-24 16:08:24,615 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-12-24 16:08:24,617 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-12-24 16:08:24,620 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 16:08:24,763 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 16:08:24,765 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-12-24 16:08:24,768 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-12-24 16:08:24,770 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-12-24 16:08:24,772 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 16:08:24,774 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 16:08:24,780 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-12-24 16:08:24,963 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-12-24 16:08:24,965 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-12-24 16:08:25,003 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-12-24 16:09:07,856 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-12-24 16:09:07,858 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-12-24 16:09:07,862 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-12-24 16:09:07,870 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-12-24 16:09:07,884 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-12-24 16:09:08,052 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-12-24 16:09:08,056 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-12-24 16:09:08,059 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-12-24 16:09:08,250 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-12-24 16:09:08,253 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-12-24 16:09:08,255 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-12-24 16:09:08,258 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 16:09:08,262 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-12-24 16:09:08,264 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-12-24 16:09:08,267 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-12-24 16:09:08,270 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-12-24 16:09:08,272 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 16:09:08,450 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 16:09:08,454 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 16:09:08,456 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-12-24 16:09:08,458 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-12-24 16:09:08,650 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-12-24 16:09:08,685 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-12-24 16:09:08,688 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-12-24 16:09:08,690 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-12-24 16:09:08,691 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-12-24 16:09:08,693 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-12-24 16:09:08,695 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-12-24 16:09:08,697 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 16:09:08,850 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 16:09:08,852 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 16:09:08,854 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-12-24 16:09:08,862 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-12-24 16:09:09,070 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-12-24 16:09:09,073 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-12-24 16:09:09,075 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-12-24 16:09:09,253 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-12-24 16:09:09,256 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-12-24 16:09:09,258 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-12-24 16:09:09,289 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-12-24 16:09:09,292 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-12-24 16:09:09,299 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-12-24 16:09:09,450 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-12-24 16:09:09,454 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-12-24 16:09:09,457 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-12-24 16:09:09,459 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 16:09:09,461 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 16:09:09,462 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-12-24 16:09:09,464 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-12-24 16:09:09,466 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-12-24 16:09:09,650 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-12-24 16:09:09,654 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-12-24 16:09:09,656 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-12-24 16:09:09,658 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-12-24 16:09:09,660 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 16:09:09,850 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 16:09:09,853 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 16:09:09,854 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 16:09:09,857 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-12-24 16:09:09,859 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-12-24 16:09:09,861 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-12-24 16:09:09,863 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-12-24 16:09:09,865 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-12-24 16:09:10,051 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-12-24 16:09:10,053 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-12-24 16:09:10,055 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-12-24 16:09:10,056 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-12-24 16:09:10,250 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-12-24 16:09:10,254 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-12-24 16:09:10,256 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-12-24 16:09:10,258 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-12-24 16:09:10,259 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-12-24 16:09:10,261 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-12-24 16:09:10,263 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-12-24 16:09:10,451 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-12-24 16:09:10,453 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-12-24 16:09:10,456 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-12-24 16:09:10,458 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-12-24 16:09:10,460 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-12-24 16:09:10,463 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-12-24 16:09:10,465 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-12-24 16:09:10,468 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\LCMachine\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-12-24 16:09:10,650 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-12-24 16:09:10,652 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-12-24 16:09:10,656 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-12-24 16:09:10,658 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-12-24 16:09:10,660 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-12-24 16:09:10,850 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-12-24 16:09:10,852 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-12-24 16:09:10,867 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-12-24 16:09:10,870 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-12-24 16:09:10,873 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-12-24 16:09:10,876 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-12-24 16:09:10,876 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 16:09:10,876 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-12-24 16:09:10,879 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-12-24 16:09:10,885 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 16:09:11,073 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-12-24 16:09:11,079 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-12-24 16:09:11,081 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 16:09:11,097 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManager
2019-12-24 16:09:11,106 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-12-24 16:09:11,107 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-12-24 16:09:11,250 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
