2019-10-10 09:11:04,219 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:11:04,225 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:11:04,226 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:11:04,227 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:32:35,633 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-10-10 09:32:35,720 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-10-10 09:32:35,797 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-10-10 09:32:35,808 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-10-10 09:32:35,810 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-10-10 09:32:35,812 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-10-10 09:32:35,814 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-10-10 09:32:35,816 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-10-10 09:32:35,817 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-10-10 09:32:35,820 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-10-10 09:32:35,821 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-10-10 09:32:35,823 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-10-10 09:32:35,854 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-10-10 09:32:35,855 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-10-10 09:32:35,868 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-10-10 09:32:35,871 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-10-10 09:32:35,873 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-10-10 09:32:35,875 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-10-10 09:32:35,878 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-10-10 09:32:35,881 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-10-10 09:32:35,883 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-10-10 09:32:35,888 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-10-10 09:32:36,054 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-10-10 09:32:36,056 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-10-10 09:32:36,059 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-10-10 09:32:36,060 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-10-10 09:32:36,062 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-10-10 09:32:36,064 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-10-10 09:32:36,065 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-10-10 09:32:36,067 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-10-10 09:32:36,254 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-10-10 09:32:36,264 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-10-10 09:32:36,265 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-10-10 09:32:36,267 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-10-10 09:32:36,269 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-10-10 09:32:36,272 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-10-10 09:32:36,273 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-10-10 09:32:36,275 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-10-10 09:32:36,292 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-10-10 09:32:36,455 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-10-10 09:32:36,458 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-10-10 09:32:36,461 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-10-10 09:32:36,464 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-10-10 09:32:36,466 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-10-10 09:32:36,468 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:32:36,471 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-10-10 09:32:36,655 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-10-10 09:32:36,657 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-10-10 09:32:36,661 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-10-10 09:32:36,663 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-10-10 09:32:36,860 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-10-10 09:32:36,866 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-10-10 09:32:36,871 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-10-10 09:32:36,875 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:32:36,878 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:32:36,881 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 09:32:36,884 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-10-10 09:32:36,887 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-10-10 09:32:37,056 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-10-10 09:32:37,059 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-10-10 09:32:37,063 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-10-10 09:32:37,066 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-10-10 09:32:37,255 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-10-10 09:32:37,259 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-10-10 09:32:37,263 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 09:32:37,266 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 09:32:37,269 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 09:32:37,272 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-10-10 09:32:37,275 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-10-10 09:32:37,455 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-10-10 09:32:37,477 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-10-10 09:32:37,481 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-10-10 09:32:37,485 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-10-10 09:32:37,488 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-10-10 09:32:37,492 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-10-10 09:32:37,655 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 09:32:37,659 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-10-10 09:32:37,662 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-10-10 09:32:37,666 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-10-10 09:32:37,669 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-10-10 09:32:37,858 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-10-10 09:32:37,859 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-10-10 09:32:37,861 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-10-10 09:32:37,866 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-10-10 09:32:37,869 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 09:32:37,871 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-10-10 09:32:37,873 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-10-10 09:32:38,054 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-10-10 09:32:38,059 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 09:32:38,061 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-10-10 09:32:38,062 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-10-10 09:32:38,254 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-10-10 09:32:38,256 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-10-10 09:32:38,259 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-10-10 09:32:38,260 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-10-10 09:32:38,262 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:32:38,454 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 09:32:38,456 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-10-10 09:32:38,458 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-10-10 09:32:38,459 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-10-10 09:32:38,654 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-10-10 09:32:38,658 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-10-10 09:32:38,660 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 09:32:38,662 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-10-10 09:32:38,666 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 09:32:38,669 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 09:32:38,675 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:32:38,857 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:32:38,859 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:32:38,861 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:32:38,863 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:32:38,865 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:32:38,866 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:32:39,054 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:32:39,056 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:32:39,057 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:32:39,059 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-10-10 09:32:39,061 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 09:32:39,063 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-10-10 09:32:39,064 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 09:32:39,066 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-10-10 09:32:39,255 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:32:39,257 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:32:39,259 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:32:39,262 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:32:39,263 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:32:39,265 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:32:39,461 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:32:39,463 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:32:39,465 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:32:39,467 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:32:39,516 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-10-10 09:32:39,518 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-10-10 09:32:39,520 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 09:32:39,523 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:32:39,661 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:32:39,663 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-10-10 09:32:39,668 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-10-10 09:32:39,670 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-10-10 09:32:39,701 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 09:32:39,703 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 09:32:39,721 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 09:32:39,861 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-10-10 09:32:39,863 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 09:32:39,865 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 09:32:41,537 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-10-10 09:32:41,539 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-10-10 09:32:41,541 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-10-10 09:32:41,544 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-10-10 09:32:41,546 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:32:41,547 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 09:32:41,549 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:32:41,551 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:32:41,554 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-10-10 09:32:41,556 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-10-10 09:32:41,557 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-10-10 09:32:41,744 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 09:32:41,746 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-10-10 09:32:41,748 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-10-10 09:32:41,750 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-10-10 09:32:41,752 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-10-10 09:32:41,753 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-10-10 09:32:41,755 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-10-10 09:32:41,944 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 09:32:41,945 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-10-10 09:32:41,947 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-10-10 09:32:41,948 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-10-10 09:32:41,971 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-10-10 09:32:42,144 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-10-10 09:32:42,145 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-10-10 09:32:42,146 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-10-10 09:32:42,148 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-10-10 09:32:42,150 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-10-10 09:32:42,151 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 09:32:42,153 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 09:32:42,154 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:32:42,344 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-10-10 09:32:42,345 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-10-10 09:32:42,346 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-10-10 09:32:42,348 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-10-10 09:32:42,552 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 09:32:42,554 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-10-10 09:32:42,556 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 09:32:42,558 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 09:32:42,749 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-10-10 09:32:42,750 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-10-10 09:32:42,752 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-10-10 09:32:42,753 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-10-10 09:32:42,755 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-10-10 09:32:42,756 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-10-10 09:32:42,758 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:32:42,760 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:32:42,949 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:32:42,950 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-10-10 09:32:42,951 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-10-10 09:32:42,953 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-10-10 09:32:42,955 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-10-10 09:32:43,149 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-10-10 09:32:43,151 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-10-10 09:32:43,153 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:32:43,155 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 09:32:43,157 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:32:43,159 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:32:43,161 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-10-10 09:32:43,349 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-10-10 09:32:43,351 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-10-10 09:32:43,352 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:32:43,354 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:32:43,355 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-10-10 09:32:43,357 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-10-10 09:32:43,358 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-10-10 09:32:43,549 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-10-10 09:32:43,550 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-10-10 09:32:43,552 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-10-10 09:32:43,557 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-10-10 09:32:43,593 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:32:43,749 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 09:32:43,750 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:32:43,752 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:32:43,754 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-10-10 09:32:43,756 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-10-10 09:32:43,757 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-10-10 09:32:43,758 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-10-10 09:32:43,760 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-10-10 09:32:43,949 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 09:32:43,951 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-10-10 09:32:43,953 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-10-10 09:32:43,954 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-10-10 09:32:43,956 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-10-10 09:32:44,149 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-10-10 09:32:44,150 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-10-10 09:32:44,152 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-10-10 09:32:44,153 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-10-10 09:32:44,154 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 09:32:44,156 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 09:32:44,158 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-10-10 09:32:44,160 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-10-10 09:32:44,350 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:32:44,352 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 09:32:44,354 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:32:44,356 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:32:44,358 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 09:32:44,361 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 09:32:44,363 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 09:32:44,365 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 09:32:44,549 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 09:32:44,550 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-10-10 09:32:44,551 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 09:32:44,553 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-10-10 09:32:44,554 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:32:44,585 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:32:44,598 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:32:44,748 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:32:51,820 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 09:32:51,841 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 09:32:51,843 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 09:32:51,845 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 09:38:07,801 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-10-10 09:38:07,857 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-10-10 09:38:07,868 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-10-10 09:38:07,872 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-10-10 09:38:07,875 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-10-10 09:38:07,877 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-10-10 09:38:07,879 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-10-10 09:38:07,881 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-10-10 09:38:07,882 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-10-10 09:38:07,884 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-10-10 09:38:07,886 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-10-10 09:38:07,887 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-10-10 09:38:08,034 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-10-10 09:38:08,035 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-10-10 09:38:08,053 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-10-10 09:38:08,058 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-10-10 09:38:08,061 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-10-10 09:38:08,063 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-10-10 09:38:08,066 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-10-10 09:38:08,069 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-10-10 09:38:08,071 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-10-10 09:38:08,078 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-10-10 09:38:08,234 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-10-10 09:38:08,236 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-10-10 09:38:08,240 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-10-10 09:38:08,242 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-10-10 09:38:08,244 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-10-10 09:38:08,246 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-10-10 09:38:08,248 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-10-10 09:38:08,249 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-10-10 09:38:08,434 [Thread: 8       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-10-10 09:38:08,435 [Thread: 8       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-10-10 09:38:08,438 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-10-10 09:38:08,439 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-10-10 09:38:08,442 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-10-10 09:38:08,443 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-10-10 09:38:08,445 [Thread: 8       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-10-10 09:38:08,446 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-10-10 09:38:08,460 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-10-10 09:38:08,635 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-10-10 09:38:08,637 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-10-10 09:38:08,641 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-10-10 09:38:08,643 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-10-10 09:38:08,645 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-10-10 09:38:08,647 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:38:08,650 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-10-10 09:38:08,837 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-10-10 09:38:08,840 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-10-10 09:38:08,843 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-10-10 09:38:08,845 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-10-10 09:38:09,035 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-10-10 09:38:09,038 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-10-10 09:38:09,040 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-10-10 09:38:09,042 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:38:09,043 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:38:09,045 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 09:38:09,046 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-10-10 09:38:09,049 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-10-10 09:38:09,234 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-10-10 09:38:09,235 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-10-10 09:38:09,237 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-10-10 09:38:09,238 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-10-10 09:38:09,434 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-10-10 09:38:09,435 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-10-10 09:38:09,436 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 09:38:09,438 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 09:38:09,439 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 09:38:09,441 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-10-10 09:38:09,442 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-10-10 09:38:09,634 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-10-10 09:38:09,643 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-10-10 09:38:09,646 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-10-10 09:38:09,647 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-10-10 09:38:09,649 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-10-10 09:38:09,651 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-10-10 09:38:09,834 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 09:38:09,835 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-10-10 09:38:09,837 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-10-10 09:38:09,838 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-10-10 09:38:09,840 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-10-10 09:38:10,034 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-10-10 09:38:10,036 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-10-10 09:38:10,037 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-10-10 09:38:10,041 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-10-10 09:38:10,043 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 09:38:10,045 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-10-10 09:38:10,046 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-10-10 09:38:10,234 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-10-10 09:38:10,237 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 09:38:10,238 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-10-10 09:38:10,241 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-10-10 09:38:10,434 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-10-10 09:38:10,436 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-10-10 09:38:10,437 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-10-10 09:38:10,439 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-10-10 09:38:10,441 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:38:10,634 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 09:38:10,636 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-10-10 09:38:10,637 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-10-10 09:38:10,639 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-10-10 09:38:10,834 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-10-10 09:38:10,837 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-10-10 09:38:10,839 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 09:38:10,840 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-10-10 09:38:10,842 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 09:38:10,844 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 09:38:10,847 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:38:11,037 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:38:11,039 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:38:11,042 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:38:11,044 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:38:11,046 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:38:11,048 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:38:11,234 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:38:11,236 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:38:11,238 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:38:11,240 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-10-10 09:38:11,242 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 09:38:11,244 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-10-10 09:38:11,251 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 09:38:11,253 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-10-10 09:38:11,434 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:38:11,436 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:38:11,438 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:38:11,439 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:38:11,442 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:38:11,443 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:38:11,634 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:38:11,636 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:38:11,638 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:38:11,640 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:38:11,678 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-10-10 09:38:11,679 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-10-10 09:38:11,681 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 09:38:11,683 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:38:11,834 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:38:11,836 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-10-10 09:38:11,838 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-10-10 09:38:11,839 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-10-10 09:38:11,841 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 09:38:11,843 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 09:38:11,847 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 09:38:12,034 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-10-10 09:38:12,035 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 09:38:12,037 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 09:38:13,681 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-10-10 09:38:13,683 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-10-10 09:38:13,685 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-10-10 09:38:13,687 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-10-10 09:38:13,688 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:38:13,690 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 09:38:13,691 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:38:13,693 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:38:13,876 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-10-10 09:38:13,878 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-10-10 09:38:13,880 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-10-10 09:38:13,881 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 09:38:13,883 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-10-10 09:38:13,885 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-10-10 09:38:13,886 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-10-10 09:38:13,888 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-10-10 09:38:14,074 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-10-10 09:38:14,076 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-10-10 09:38:14,077 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 09:38:14,079 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-10-10 09:38:14,080 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-10-10 09:38:14,274 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-10-10 09:38:14,304 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-10-10 09:38:14,306 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-10-10 09:38:14,308 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-10-10 09:38:14,309 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-10-10 09:38:14,311 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-10-10 09:38:14,312 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-10-10 09:38:14,474 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 09:38:14,475 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 09:38:14,477 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:38:14,478 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-10-10 09:38:14,480 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-10-10 09:38:14,674 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-10-10 09:38:14,675 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-10-10 09:38:14,677 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 09:38:14,679 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-10-10 09:38:14,680 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 09:38:14,685 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 09:38:14,895 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-10-10 09:38:14,896 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-10-10 09:38:14,898 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-10-10 09:38:14,900 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-10-10 09:38:14,901 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-10-10 09:38:15,075 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-10-10 09:38:15,079 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:38:15,082 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:38:15,088 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:38:15,092 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-10-10 09:38:15,096 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-10-10 09:38:15,274 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-10-10 09:38:15,276 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-10-10 09:38:15,278 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-10-10 09:38:15,281 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-10-10 09:38:15,283 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:38:15,287 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 09:38:15,290 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:38:15,475 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:38:15,480 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-10-10 09:38:15,483 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-10-10 09:38:15,485 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-10-10 09:38:15,487 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:38:15,489 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:38:15,491 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-10-10 09:38:15,493 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-10-10 09:38:15,680 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-10-10 09:38:15,685 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-10-10 09:38:15,689 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-10-10 09:38:15,693 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-10-10 09:38:15,880 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-10-10 09:38:15,889 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:38:15,893 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 09:38:15,897 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:38:15,900 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:38:15,904 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-10-10 09:38:15,905 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-10-10 09:38:15,907 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-10-10 09:38:16,078 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-10-10 09:38:16,079 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-10-10 09:38:16,081 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 09:38:16,083 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-10-10 09:38:16,084 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-10-10 09:38:16,277 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-10-10 09:38:16,279 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-10-10 09:38:16,281 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-10-10 09:38:16,283 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-10-10 09:38:16,284 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-10-10 09:38:16,286 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-10-10 09:38:16,288 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 09:38:16,478 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 09:38:16,489 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-10-10 09:38:16,491 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-10-10 09:38:16,493 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:38:16,499 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 09:38:16,500 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:38:16,502 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:38:16,504 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 09:38:16,677 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 09:38:16,679 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 09:38:16,681 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 09:38:16,683 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 09:38:16,684 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-10-10 09:38:16,685 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 09:38:16,687 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-10-10 09:38:16,688 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:38:16,886 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:38:16,891 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:38:16,893 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:38:26,714 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 09:38:26,716 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 09:38:26,718 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 09:38:26,722 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 09:44:37,431 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-10-10 09:44:37,482 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-10-10 09:44:37,498 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-10-10 09:44:37,503 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-10-10 09:44:37,506 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-10-10 09:44:37,508 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-10-10 09:44:37,509 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-10-10 09:44:37,511 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-10-10 09:44:37,513 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-10-10 09:44:37,514 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-10-10 09:44:37,516 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-10-10 09:44:37,518 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-10-10 09:44:37,647 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-10-10 09:44:37,649 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-10-10 09:44:37,664 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-10-10 09:44:37,669 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-10-10 09:44:37,691 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-10-10 09:44:37,695 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-10-10 09:44:37,699 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-10-10 09:44:37,702 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-10-10 09:44:37,703 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-10-10 09:44:37,709 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-10-10 09:44:37,847 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-10-10 09:44:37,849 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-10-10 09:44:37,851 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-10-10 09:44:37,853 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-10-10 09:44:37,855 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-10-10 09:44:37,856 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-10-10 09:44:37,858 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-10-10 09:44:37,860 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-10-10 09:44:38,047 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-10-10 09:44:38,048 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-10-10 09:44:38,050 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-10-10 09:44:38,052 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-10-10 09:44:38,054 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-10-10 09:44:38,056 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-10-10 09:44:38,058 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-10-10 09:44:38,060 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-10-10 09:44:38,073 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-10-10 09:44:38,249 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-10-10 09:44:38,255 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-10-10 09:44:38,259 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-10-10 09:44:38,263 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-10-10 09:44:38,265 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-10-10 09:44:38,268 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:44:38,270 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-10-10 09:44:38,448 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-10-10 09:44:38,450 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-10-10 09:44:38,453 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-10-10 09:44:38,455 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-10-10 09:44:38,648 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-10-10 09:44:38,651 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-10-10 09:44:38,653 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-10-10 09:44:38,655 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:44:38,658 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:44:38,660 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 09:44:38,673 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-10-10 09:44:38,675 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-10-10 09:44:38,847 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-10-10 09:44:38,848 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-10-10 09:44:38,850 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-10-10 09:44:38,851 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-10-10 09:44:39,047 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-10-10 09:44:39,048 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-10-10 09:44:39,050 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 09:44:39,052 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 09:44:39,053 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 09:44:39,055 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-10-10 09:44:39,057 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-10-10 09:44:39,247 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-10-10 09:44:39,255 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-10-10 09:44:39,258 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-10-10 09:44:39,260 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-10-10 09:44:39,262 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-10-10 09:44:39,263 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-10-10 09:44:39,447 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 09:44:39,448 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-10-10 09:44:39,449 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-10-10 09:44:39,451 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-10-10 09:44:39,452 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-10-10 09:44:39,647 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-10-10 09:44:39,648 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-10-10 09:44:39,650 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-10-10 09:44:39,653 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-10-10 09:44:39,655 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 09:44:39,657 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-10-10 09:44:39,659 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-10-10 09:44:39,847 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-10-10 09:44:39,850 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 09:44:39,853 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-10-10 09:44:39,855 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-10-10 09:44:40,047 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-10-10 09:44:40,049 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-10-10 09:44:40,051 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-10-10 09:44:40,072 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-10-10 09:44:40,073 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:44:40,247 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 09:44:40,248 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-10-10 09:44:40,250 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-10-10 09:44:40,252 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-10-10 09:44:40,447 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-10-10 09:44:40,450 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-10-10 09:44:40,452 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 09:44:40,454 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-10-10 09:44:40,456 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 09:44:40,458 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 09:44:40,460 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:44:40,650 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:44:40,652 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:44:40,653 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:44:40,655 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:44:40,657 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:44:40,659 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:44:40,847 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:44:40,849 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:44:40,850 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:44:40,852 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-10-10 09:44:40,853 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 09:44:40,855 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-10-10 09:44:40,857 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 09:44:40,859 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-10-10 09:44:41,047 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:44:41,048 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:44:41,052 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:44:41,054 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:44:41,057 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:44:41,058 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 09:44:41,247 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 09:44:41,248 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 09:44:41,250 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 09:44:41,253 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 09:44:41,289 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-10-10 09:44:41,291 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-10-10 09:44:41,292 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 09:44:41,294 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:44:41,447 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:44:41,449 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-10-10 09:44:41,451 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-10-10 09:44:41,452 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-10-10 09:44:41,454 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 09:44:41,456 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 09:44:41,461 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 09:44:41,673 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-10-10 09:44:41,685 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 09:44:41,687 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 09:44:42,234 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-10-10 09:44:42,236 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-10-10 09:44:42,405 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-10-10 09:44:42,407 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-10-10 09:44:42,409 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:44:42,410 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 09:44:42,412 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:44:42,414 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:44:42,416 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-10-10 09:44:42,598 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-10-10 09:44:42,600 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-10-10 09:44:42,602 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 09:44:42,605 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-10-10 09:44:42,607 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-10-10 09:44:42,608 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-10-10 09:44:42,610 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-10-10 09:44:42,612 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-10-10 09:44:42,798 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-10-10 09:44:42,799 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 09:44:42,802 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-10-10 09:44:42,804 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-10-10 09:44:42,806 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-10-10 09:44:43,022 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-10-10 09:44:43,023 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-10-10 09:44:43,025 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-10-10 09:44:43,026 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-10-10 09:44:43,028 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-10-10 09:44:43,029 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-10-10 09:44:43,031 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 09:44:43,201 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 09:44:43,202 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:44:43,204 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-10-10 09:44:43,205 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-10-10 09:44:43,206 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-10-10 09:44:43,398 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-10-10 09:44:43,399 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 09:44:43,401 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-10-10 09:44:43,402 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 09:44:43,404 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 09:44:43,598 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-10-10 09:44:43,600 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-10-10 09:44:43,602 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-10-10 09:44:43,604 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-10-10 09:44:43,606 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-10-10 09:44:43,608 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-10-10 09:44:43,610 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:44:43,612 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:44:43,798 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:44:43,799 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-10-10 09:44:43,801 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-10-10 09:44:43,802 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-10-10 09:44:43,998 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-10-10 09:44:43,999 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-10-10 09:44:44,011 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-10-10 09:44:44,012 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:44:44,014 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 09:44:44,016 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:44:44,018 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:44:44,020 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-10-10 09:44:44,198 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-10-10 09:44:44,199 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-10-10 09:44:44,222 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:44:44,225 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:44:44,226 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-10-10 09:44:44,228 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-10-10 09:44:44,229 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-10-10 09:44:44,398 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-10-10 09:44:44,399 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-10-10 09:44:44,401 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-10-10 09:44:44,403 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-10-10 09:44:44,404 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 09:44:44,599 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 09:44:44,600 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 09:44:44,603 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 09:44:44,607 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-10-10 09:44:44,612 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-10-10 09:44:44,614 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-10-10 09:44:44,615 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-10-10 09:44:44,617 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-10-10 09:44:44,799 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 09:44:44,803 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-10-10 09:44:44,806 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-10-10 09:44:44,809 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-10-10 09:44:44,813 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-10-10 09:44:45,000 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-10-10 09:44:45,003 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-10-10 09:44:45,006 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-10-10 09:44:45,009 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-10-10 09:44:45,011 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 09:44:45,014 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 09:44:45,017 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-10-10 09:44:45,020 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-10-10 09:44:45,200 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 09:44:45,200 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-10-10 09:44:45,204 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 09:44:45,211 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-10-10 09:44:45,214 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 09:44:45,218 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-10-10 09:44:45,221 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-10-10 09:44:45,224 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 09:44:45,402 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 09:44:45,405 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 09:44:45,602 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 09:44:45,603 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 09:44:45,605 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 09:44:45,609 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-10-10 09:44:45,610 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 09:44:45,612 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-10-10 09:44:45,802 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:44:45,803 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:44:45,805 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:44:45,806 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:44:46,845 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:44:46,847 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:44:46,848 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:44:46,850 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:44:50,202 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:44:50,203 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:44:50,205 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:44:50,206 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:44:50,894 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:44:50,898 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:44:50,899 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:44:50,900 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:49:31,495 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:49:31,497 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:49:31,499 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:49:31,500 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:56:59,738 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:56:59,740 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:56:59,742 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:56:59,743 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:57:03,092 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:57:03,094 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:57:03,095 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:57:03,097 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:57:54,730 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:57:54,732 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:57:54,733 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:57:54,735 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 09:59:24,319 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 09:59:24,322 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 09:59:24,521 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 09:59:24,522 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 10:14:52,757 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 10:14:52,759 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 10:14:52,760 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 10:14:52,762 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 10:14:56,133 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 10:14:56,134 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 10:14:56,136 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 10:14:56,137 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 10:16:08,498 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 10:16:08,504 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 10:16:08,704 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 10:16:08,706 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 10:27:28,811 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 10:27:28,813 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 10:27:28,814 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 10:27:28,933 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 10:44:26,864 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 10:44:26,866 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 10:44:26,867 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 10:44:26,868 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 10:44:30,191 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 10:44:30,197 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 10:44:30,199 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 10:44:30,200 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 10:45:00,411 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 10:45:00,596 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 10:45:00,597 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 10:45:00,598 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 11:08:43,874 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 11:08:43,876 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 11:08:43,877 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 11:08:43,879 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 11:25:41,990 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 11:25:41,991 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 11:25:41,993 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 11:25:41,994 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 11:25:45,307 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 11:25:45,308 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 11:25:45,310 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 11:25:45,312 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 11:26:17,669 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 11:26:17,671 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 11:26:17,675 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 11:26:17,677 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 14:16:31,068 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 14:16:31,071 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 14:16:31,072 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 14:16:31,189 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 14:27:06,136 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 14:27:06,138 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 14:27:06,139 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 14:27:06,141 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:02:35,233 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 15:02:35,241 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 15:02:35,242 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 15:02:35,244 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 15:11:43,626 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-10-10 15:11:43,702 [Thread: 1       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-10-10 15:11:43,754 [Thread: 1       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-10-10 15:11:43,757 [Thread: 1       ] [DEBUG] -- Loading object definitions.
2019-10-10 15:11:43,760 [Thread: 1       ] [DEBUG] -- Loading object definitions...
2019-10-10 15:11:43,762 [Thread: 1       ] [DEBUG] -- Default lazy init 'false'.
2019-10-10 15:11:43,763 [Thread: 1       ] [DEBUG] -- Default dependency check 'none'.
2019-10-10 15:11:43,765 [Thread: 1       ] [DEBUG] -- Default autowire 'no'.
2019-10-10 15:11:43,766 [Thread: 1       ] [DEBUG] -- Default merge 'false'.
2019-10-10 15:11:43,767 [Thread: 1       ] [DEBUG] -- Default init method ''.
2019-10-10 15:11:43,769 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2019-10-10 15:11:43,770 [Thread: 1       ] [DEBUG] -- Default autowire candidates ''.
2019-10-10 15:11:43,772 [Thread: 1       ] [DEBUG] -- Default init method ''.
2019-10-10 15:11:43,773 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2019-10-10 15:11:43,800 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-10-10 15:11:43,803 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-10-10 15:11:43,805 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-10-10 15:11:43,808 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-10-10 15:11:43,813 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-10-10 15:11:43,815 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-10-10 15:11:43,817 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-10-10 15:11:43,821 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-10-10 15:11:43,822 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-10-10 15:11:43,824 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-10-10 15:11:43,827 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-10-10 15:11:43,828 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-10-10 15:11:43,830 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-10-10 15:11:43,831 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-10-10 15:11:43,833 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-10-10 15:11:43,834 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-10-10 15:11:43,835 [Thread: 1       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-10-10 15:11:43,837 [Thread: 1       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-10-10 15:11:43,838 [Thread: 1       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-10-10 15:11:43,839 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-10-10 15:11:43,841 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-10-10 15:11:43,843 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-10-10 15:11:43,844 [Thread: 1       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-10-10 15:11:43,845 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-10-10 15:11:43,860 [Thread: 1       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-10-10 15:11:43,864 [Thread: 1       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-10-10 15:11:43,866 [Thread: 1       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-10-10 15:11:43,870 [Thread: 1       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-10-10 15:11:43,872 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-10-10 15:11:43,874 [Thread: 1       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-10-10 15:11:43,877 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 15:11:43,880 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-10-10 15:11:43,883 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-10-10 15:11:43,885 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-10-10 15:11:43,889 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-10-10 15:11:43,891 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-10-10 15:11:43,894 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-10-10 15:11:43,897 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-10-10 15:11:43,898 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-10-10 15:11:43,901 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 15:11:43,902 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 15:11:43,904 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 15:11:43,905 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-10-10 15:11:43,907 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-10-10 15:11:43,908 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-10-10 15:11:43,910 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-10-10 15:11:43,911 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-10-10 15:11:43,913 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-10-10 15:11:43,914 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-10-10 15:11:43,916 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-10-10 15:11:43,917 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 15:11:43,918 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 15:11:43,920 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 15:11:43,922 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-10-10 15:11:43,924 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-10-10 15:11:43,926 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-10-10 15:11:43,927 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-10-10 15:11:43,929 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-10-10 15:11:43,935 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-10-10 15:11:43,937 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-10-10 15:11:43,938 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-10-10 15:11:43,939 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 15:11:43,940 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-10-10 15:11:43,942 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-10-10 15:11:43,943 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-10-10 15:11:43,944 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-10-10 15:11:43,945 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-10-10 15:11:43,947 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-10-10 15:11:43,949 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-10-10 15:11:43,952 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-10-10 15:11:43,953 [Thread: 1       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 15:11:43,955 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-10-10 15:11:43,956 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-10-10 15:11:43,957 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-10-10 15:11:43,961 [Thread: 1       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 15:11:43,963 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-10-10 15:11:43,964 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-10-10 15:11:43,965 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-10-10 15:11:43,967 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-10-10 15:11:43,969 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-10-10 15:11:43,970 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-10-10 15:11:43,971 [Thread: 1       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 15:11:43,973 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 15:11:43,974 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-10-10 15:11:43,976 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-10-10 15:11:43,977 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-10-10 15:11:43,979 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-10-10 15:11:43,982 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-10-10 15:11:43,984 [Thread: 1       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 15:11:43,986 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-10-10 15:11:43,988 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 15:11:43,990 [Thread: 1       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 15:11:43,993 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 15:11:43,994 [Thread: 1       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 15:11:43,996 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 15:11:43,997 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 15:11:43,999 [Thread: 1       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 15:11:44,001 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 15:11:44,002 [Thread: 1       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 15:11:44,004 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 15:11:44,005 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 15:11:44,007 [Thread: 1       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 15:11:44,008 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-10-10 15:11:44,010 [Thread: 1       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 15:11:44,011 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-10-10 15:11:44,013 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 15:11:44,015 [Thread: 1       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-10-10 15:11:44,017 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 15:11:44,018 [Thread: 1       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 15:11:44,020 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 15:11:44,022 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 15:11:44,023 [Thread: 1       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 15:11:44,025 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 15:11:44,027 [Thread: 1       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 15:11:44,028 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 15:11:44,030 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 15:11:44,033 [Thread: 1       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 15:11:44,072 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-10-10 15:11:44,073 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-10-10 15:11:44,075 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 15:11:44,076 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 15:11:44,078 [Thread: 1       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 15:11:44,080 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-10-10 15:11:44,082 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-10-10 15:11:44,083 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-10-10 15:11:44,085 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 15:11:44,086 [Thread: 1       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 15:11:44,099 [Thread: 1       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 15:11:44,100 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-10-10 15:11:44,102 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 15:11:44,103 [Thread: 1       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 15:11:44,281 [Thread: 1       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-10-10 15:11:44,282 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-10-10 15:11:44,284 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-10-10 15:11:44,285 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-10-10 15:11:44,287 [Thread: 1       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 15:11:44,289 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 15:11:44,290 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 15:11:44,292 [Thread: 1       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 15:11:44,294 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-10-10 15:11:44,296 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-10-10 15:11:44,297 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-10-10 15:11:44,299 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 15:11:44,301 [Thread: 1       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-10-10 15:11:44,303 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-10-10 15:11:44,304 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-10-10 15:11:44,306 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-10-10 15:11:44,307 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-10-10 15:11:44,308 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-10-10 15:11:44,310 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 15:11:44,311 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-10-10 15:11:44,313 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-10-10 15:11:44,314 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-10-10 15:11:44,406 [Thread: 1       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-10-10 15:11:44,408 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-10-10 15:11:44,409 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-10-10 15:11:44,410 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-10-10 15:11:44,412 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-10-10 15:11:44,413 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-10-10 15:11:44,415 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 15:11:44,416 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 15:11:44,417 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 15:11:44,419 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-10-10 15:11:44,420 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-10-10 15:11:44,421 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-10-10 15:11:44,423 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-10-10 15:11:44,425 [Thread: 1       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 15:11:44,426 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-10-10 15:11:44,428 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 15:11:44,429 [Thread: 1       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 15:11:44,447 [Thread: 1       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-10-10 15:11:44,449 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-10-10 15:11:44,450 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-10-10 15:11:44,452 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-10-10 15:11:44,453 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-10-10 15:11:44,455 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-10-10 15:11:44,457 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 15:11:44,458 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 15:11:44,460 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:11:44,461 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-10-10 15:11:44,463 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-10-10 15:11:44,464 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-10-10 15:11:44,478 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-10-10 15:11:44,480 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-10-10 15:11:44,481 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-10-10 15:11:44,483 [Thread: 1       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 15:11:44,484 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 15:11:44,486 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 15:11:44,487 [Thread: 1       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 15:11:44,489 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-10-10 15:11:44,490 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-10-10 15:11:44,491 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-10-10 15:11:44,493 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:11:44,494 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:11:44,495 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-10-10 15:11:44,496 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-10-10 15:11:44,498 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-10-10 15:11:44,499 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-10-10 15:11:44,500 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-10-10 15:11:44,502 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-10-10 15:11:44,503 [Thread: 1       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-10-10 15:11:44,505 [Thread: 1       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 15:11:44,506 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 15:11:44,507 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 15:11:44,509 [Thread: 1       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 15:11:44,511 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-10-10 15:11:44,512 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-10-10 15:11:44,514 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-10-10 15:11:44,515 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-10-10 15:11:44,516 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-10-10 15:11:44,518 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 15:11:44,519 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-10-10 15:11:44,521 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-10-10 15:11:44,522 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-10-10 15:11:44,524 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-10-10 15:11:44,526 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-10-10 15:11:44,528 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-10-10 15:11:44,529 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-10-10 15:11:44,531 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-10-10 15:11:44,534 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 15:11:44,535 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 15:11:44,537 [Thread: 1       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-10-10 15:11:44,540 [Thread: 1       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-10-10 15:11:44,542 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 15:11:44,542 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-10-10 15:11:44,547 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 15:11:44,553 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-10-10 15:11:44,555 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-10-10 15:11:44,555 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 15:11:44,557 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-10-10 15:11:44,558 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 15:11:44,561 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 15:11:44,562 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 15:11:44,564 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 15:11:44,566 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 15:11:44,568 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 15:11:44,569 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-10-10 15:11:44,571 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 15:11:44,573 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-10-10 15:11:44,575 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:11:44,576 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:11:44,578 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:11:44,580 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:11:44,798 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:11:44,799 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:11:44,800 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:11:44,802 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:11:47,831 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:11:47,833 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:11:47,834 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:11:47,836 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:11:47,929 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:11:47,931 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:11:47,932 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:11:47,933 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:13:55,361 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:13:55,363 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:13:55,364 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:13:55,366 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:17:48,429 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:17:48,431 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:17:48,433 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:17:48,434 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:17:51,443 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:17:51,445 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:17:51,446 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:17:51,448 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:18:46,357 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:18:46,359 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:18:46,361 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:18:46,363 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:29:12,449 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:29:12,473 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:29:12,474 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:29:12,476 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:29:15,485 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:29:15,487 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:29:15,488 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:29:15,489 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 15:30:00,367 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 15:30:00,368 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 15:30:00,370 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 15:30:00,371 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 16:28:02,527 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 16:28:02,529 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 16:28:02,530 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 16:28:02,531 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 16:38:36,455 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 16:38:36,456 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 16:38:36,458 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 16:38:36,459 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:08:49,545 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 17:08:49,553 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 17:08:49,577 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 17:08:49,580 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 17:26:09,137 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-10-10 17:26:09,205 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-10-10 17:26:09,225 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-10-10 17:26:09,237 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-10-10 17:26:09,240 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-10-10 17:26:09,241 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-10-10 17:26:09,243 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-10-10 17:26:09,245 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-10-10 17:26:09,247 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-10-10 17:26:09,248 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-10-10 17:26:09,250 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-10-10 17:26:09,252 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-10-10 17:26:09,363 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-10-10 17:26:09,364 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-10-10 17:26:09,377 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-10-10 17:26:09,381 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-10-10 17:26:09,383 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-10-10 17:26:09,385 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-10-10 17:26:09,389 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-10-10 17:26:09,391 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-10-10 17:26:09,393 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-10-10 17:26:09,399 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-10-10 17:26:09,549 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-10-10 17:26:09,555 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-10-10 17:26:09,558 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-10-10 17:26:09,560 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-10-10 17:26:09,562 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-10-10 17:26:09,563 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-10-10 17:26:09,565 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-10-10 17:26:09,567 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-10-10 17:26:09,749 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-10-10 17:26:09,755 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-10-10 17:26:09,756 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-10-10 17:26:09,758 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-10-10 17:26:09,760 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-10-10 17:26:09,762 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-10-10 17:26:09,764 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-10-10 17:26:09,765 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-10-10 17:26:09,778 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-10-10 17:26:09,950 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-10-10 17:26:09,954 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-10-10 17:26:09,958 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-10-10 17:26:09,960 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-10-10 17:26:09,962 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-10-10 17:26:09,964 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 17:26:09,967 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-10-10 17:26:10,149 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-10-10 17:26:10,152 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-10-10 17:26:10,156 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-10-10 17:26:10,158 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-10-10 17:26:10,350 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-10-10 17:26:10,353 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-10-10 17:26:10,355 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-10-10 17:26:10,367 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 17:26:10,369 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 17:26:10,371 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 17:26:10,373 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-10-10 17:26:10,374 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-10-10 17:26:10,549 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-10-10 17:26:10,550 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-10-10 17:26:10,552 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-10-10 17:26:10,553 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-10-10 17:26:10,749 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-10-10 17:26:10,750 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-10-10 17:26:10,752 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 17:26:10,753 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 17:26:10,755 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 17:26:10,756 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-10-10 17:26:10,776 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-10-10 17:26:10,949 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-10-10 17:26:10,951 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-10-10 17:26:10,952 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-10-10 17:26:10,954 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-10-10 17:26:10,955 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-10-10 17:26:10,957 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-10-10 17:26:11,149 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 17:26:11,150 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-10-10 17:26:11,152 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-10-10 17:26:11,154 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-10-10 17:26:11,157 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-10-10 17:26:11,348 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-10-10 17:26:11,350 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-10-10 17:26:11,352 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-10-10 17:26:11,360 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-10-10 17:26:11,362 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 17:26:11,364 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-10-10 17:26:11,366 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-10-10 17:26:11,549 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-10-10 17:26:11,552 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 17:26:11,554 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-10-10 17:26:11,556 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-10-10 17:26:11,749 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-10-10 17:26:11,751 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-10-10 17:26:11,753 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-10-10 17:26:11,755 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-10-10 17:26:11,756 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 17:26:11,949 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 17:26:11,951 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-10-10 17:26:11,952 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-10-10 17:26:11,954 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-10-10 17:26:12,149 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-10-10 17:26:12,153 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-10-10 17:26:12,155 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-10-10 17:26:12,157 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-10-10 17:26:12,159 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-10-10 17:26:12,161 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-10-10 17:26:12,168 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 17:26:12,349 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 17:26:12,351 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 17:26:12,353 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 17:26:12,354 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 17:26:12,361 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 17:26:12,363 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 17:26:12,549 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 17:26:12,551 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 17:26:12,553 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 17:26:12,555 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-10-10 17:26:12,557 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-10-10 17:26:12,559 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-10-10 17:26:12,561 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-10-10 17:26:12,563 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-10-10 17:26:12,749 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 17:26:12,753 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 17:26:12,755 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 17:26:12,757 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 17:26:12,760 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 17:26:12,762 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-10-10 17:26:12,949 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-10-10 17:26:12,952 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-10-10 17:26:12,954 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-10-10 17:26:12,957 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-10-10 17:26:12,989 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-10-10 17:26:12,991 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-10-10 17:26:12,993 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-10-10 17:26:12,995 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 17:26:13,149 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 17:26:13,151 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-10-10 17:26:13,153 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-10-10 17:26:13,155 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-10-10 17:26:13,157 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 17:26:13,159 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 17:26:13,165 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-10-10 17:26:13,349 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-10-10 17:26:13,351 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-10-10 17:26:13,353 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-10-10 17:26:13,965 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-10-10 17:26:13,967 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-10-10 17:26:13,969 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-10-10 17:26:13,971 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-10-10 17:26:14,149 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 17:26:14,151 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 17:26:14,153 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 17:26:14,155 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 17:26:14,157 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-10-10 17:26:14,159 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-10-10 17:26:14,160 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-10-10 17:26:14,349 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 17:26:14,351 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-10-10 17:26:14,353 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-10-10 17:26:14,355 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-10-10 17:26:14,356 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-10-10 17:26:14,358 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-10-10 17:26:14,359 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-10-10 17:26:14,361 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 17:26:14,549 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-10-10 17:26:14,551 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-10-10 17:26:14,552 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-10-10 17:26:14,575 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-10-10 17:26:14,576 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-10-10 17:26:14,750 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-10-10 17:26:14,754 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-10-10 17:26:14,764 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-10-10 17:26:14,768 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-10-10 17:26:14,771 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 17:26:14,774 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 17:26:14,777 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 17:26:14,781 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-10-10 17:26:14,950 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-10-10 17:26:14,954 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-10-10 17:26:14,957 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-10-10 17:26:14,962 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-10-10 17:26:15,151 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-10-10 17:26:15,154 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-10-10 17:26:15,158 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-10-10 17:26:15,205 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-10-10 17:26:15,207 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-10-10 17:26:15,349 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-10-10 17:26:15,350 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-10-10 17:26:15,352 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-10-10 17:26:15,354 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-10-10 17:26:15,355 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 17:26:15,357 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 17:26:15,359 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:26:15,360 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-10-10 17:26:15,549 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-10-10 17:26:15,550 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-10-10 17:26:15,552 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-10-10 17:26:15,554 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-10-10 17:26:15,556 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-10-10 17:26:15,749 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 17:26:15,750 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 17:26:15,753 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 17:26:15,754 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 17:26:15,756 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-10-10 17:26:15,758 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-10-10 17:26:15,760 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-10-10 17:26:15,761 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:26:15,949 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:26:15,950 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-10-10 17:26:15,952 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-10-10 17:26:15,954 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-10-10 17:26:15,956 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-10-10 17:26:16,153 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-10-10 17:26:16,156 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-10-10 17:26:16,377 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-10-10 17:26:16,379 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-10-10 17:26:16,380 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-10-10 17:26:16,567 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-10-10 17:26:16,570 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-10-10 17:26:16,605 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-10-10 17:26:16,750 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-10-10 17:26:16,780 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-10-10 17:26:16,818 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-10-10 17:26:16,843 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-10-10 17:26:16,884 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 17:26:16,900 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-10-10 17:26:16,952 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-10-10 17:26:16,958 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-10-10 17:26:17,152 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-10-10 17:26:17,153 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-10-10 17:26:17,155 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-10-10 17:26:17,156 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-10-10 17:26:17,166 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-10-10 17:26:17,168 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 17:26:17,361 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 17:26:17,368 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-10-10 17:26:17,374 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-10-10 17:26:17,381 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:26:17,381 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-10-10 17:26:17,381 [Thread: mProtocol_OnEventReceived] [DEBUG] --          GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-10-10 17:26:17,552 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:26:17,557 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-10-10 17:26:17,568 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-10-10 17:26:17,575 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:26:17,582 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-10-10 17:26:17,583 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-10-10 17:26:17,584 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:26:17,758 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-10-10 17:26:17,783 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-10-10 17:26:17,783 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-10-10 17:26:17,831 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-10-10 17:26:17,951 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-10-10 17:26:18,151 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-10-10 17:26:18,358 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-10-10 17:26:18,360 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-10-10 17:26:18,362 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-10-10 17:26:18,363 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-10-10 17:26:18,553 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:26:18,556 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:26:18,558 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:26:18,560 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:26:19,463 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:26:19,554 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:26:19,556 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:26:19,557 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:26:22,761 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:26:22,763 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:26:22,765 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:26:22,767 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:26:23,596 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:26:23,598 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:26:23,599 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:26:23,601 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:26:52,047 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:26:52,217 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:26:52,218 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:26:52,220 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:32:31,522 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:32:31,533 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:32:31,538 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:32:31,541 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:32:34,848 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:32:34,850 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:32:34,852 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:32:34,854 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:33:04,069 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:33:04,253 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:33:04,254 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:33:04,255 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:43:54,549 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:43:54,637 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:43:54,638 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:43:54,639 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:43:57,842 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:43:57,844 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:43:57,846 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:43:57,848 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:44:27,252 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:44:27,254 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:44:27,255 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:44:27,257 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 17:45:59,494 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 17:45:59,496 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 17:45:59,497 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 17:45:59,499 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 18:02:57,583 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 18:02:57,586 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 18:02:57,587 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 18:02:57,589 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 18:03:00,903 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 18:03:00,904 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 18:03:00,906 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 18:03:00,908 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 18:03:34,106 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 18:03:34,279 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 18:03:34,280 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 18:03:34,282 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 18:06:37,475 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 18:06:37,477 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 18:06:37,478 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 18:06:37,480 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 18:23:35,778 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 18:23:35,780 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 18:23:35,782 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 18:23:35,783 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 18:23:39,141 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 18:23:39,147 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 18:23:39,153 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 18:23:39,154 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 18:24:10,153 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 18:24:10,323 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 18:24:10,324 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 18:24:10,325 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 19:05:59,624 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 19:05:59,626 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 19:05:59,628 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 19:05:59,629 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 19:22:57,802 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 19:22:57,804 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 19:22:57,805 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 19:22:57,807 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 19:23:01,049 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 19:23:01,050 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 19:23:01,052 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 19:23:01,053 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 19:26:07,277 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 19:26:07,443 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 19:26:07,444 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 19:26:07,446 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 19:45:58,759 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 19:45:58,760 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 19:45:58,849 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 19:45:58,851 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 20:02:57,781 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 20:02:57,783 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 20:02:57,784 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 20:02:57,786 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 20:03:01,110 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 20:03:01,112 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 20:03:01,118 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 20:03:01,119 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 20:03:30,340 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 20:03:30,516 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 20:03:30,518 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 20:03:30,519 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 20:19:03,882 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 20:19:03,884 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 20:19:03,892 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 20:19:03,893 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 20:36:02,901 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 20:36:02,904 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 20:36:02,906 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 20:36:02,908 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 20:36:06,213 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 20:36:06,215 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 20:36:06,217 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 20:36:06,219 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 20:36:40,467 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 20:36:40,632 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 20:36:40,633 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 20:36:40,635 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 21:42:50,047 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 21:42:50,049 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 21:42:50,145 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 21:42:50,147 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 21:56:54,039 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 21:56:54,041 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 21:56:54,042 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 21:56:54,044 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-10-10 22:49:25,882 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-10-10 22:49:25,885 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-10-10 22:49:25,890 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-10-10 22:49:25,897 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
