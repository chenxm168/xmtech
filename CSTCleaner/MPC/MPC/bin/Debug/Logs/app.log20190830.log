2019-08-30 10:07:42,089 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-30 10:07:42,137 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-30 10:07:42,148 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-30 10:07:42,151 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-08-30 10:07:42,154 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-08-30 10:07:42,155 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-08-30 10:07:42,156 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-08-30 10:07:42,175 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-08-30 10:07:42,177 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-08-30 10:07:42,180 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-08-30 10:07:42,182 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-08-30 10:07:42,183 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-08-30 10:07:42,299 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-08-30 10:07:42,305 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-08-30 10:07:42,317 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-30 10:07:42,328 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-30 10:07:42,330 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-30 10:07:42,332 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-30 10:07:42,334 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-30 10:07:42,336 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-30 10:07:42,338 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-30 10:07:42,343 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-30 10:07:42,500 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-30 10:07:42,501 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-30 10:07:42,503 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-30 10:07:42,504 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-30 10:07:42,505 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-30 10:07:42,507 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-30 10:07:42,508 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-30 10:07:42,509 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-30 10:07:42,699 [Thread: 8       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-30 10:07:42,701 [Thread: 8       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-30 10:07:42,702 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-30 10:07:42,703 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-30 10:07:42,705 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-30 10:07:42,706 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-30 10:07:42,707 [Thread: 8       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-30 10:07:42,708 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-30 10:07:42,720 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-30 10:07:42,901 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-30 10:07:42,903 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-30 10:07:42,906 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-30 10:07:42,907 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-30 10:07:42,909 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-30 10:07:42,911 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 10:07:42,913 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-30 10:07:43,101 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-30 10:07:43,107 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-30 10:07:43,110 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-30 10:07:43,112 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-30 10:07:43,301 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-30 10:07:43,303 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-30 10:07:43,304 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-30 10:07:43,306 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 10:07:43,307 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 10:07:43,308 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 10:07:43,309 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-30 10:07:43,310 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-30 10:07:43,499 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-30 10:07:43,501 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-30 10:07:43,502 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-30 10:07:43,503 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-30 10:07:43,699 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-30 10:07:43,700 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-30 10:07:43,701 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 10:07:43,702 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 10:07:43,703 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 10:07:43,704 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-30 10:07:43,705 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-30 10:07:43,899 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-30 10:07:43,901 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-30 10:07:43,902 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-30 10:07:43,903 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-30 10:07:43,904 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-30 10:07:43,905 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-30 10:07:44,099 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 10:07:44,101 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-30 10:07:44,102 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 10:07:44,103 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-30 10:07:44,104 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-30 10:07:44,300 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-30 10:07:44,302 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-30 10:07:44,304 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-30 10:07:44,308 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-30 10:07:44,310 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 10:07:44,312 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-30 10:07:44,314 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-30 10:07:44,500 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-30 10:07:44,503 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 10:07:44,505 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-30 10:07:44,506 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-30 10:07:44,700 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-30 10:07:44,701 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-30 10:07:44,702 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-30 10:07:44,707 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-30 10:07:44,708 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 10:07:44,917 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 10:07:44,919 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-30 10:07:44,920 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-30 10:07:44,922 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-30 10:07:45,100 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-30 10:07:45,102 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-30 10:07:45,104 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 10:07:45,105 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-30 10:07:45,106 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 10:07:45,108 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 10:07:45,110 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 10:07:45,300 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 10:07:45,302 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 10:07:45,303 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 10:07:45,304 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 10:07:45,306 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 10:07:45,307 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 10:07:45,500 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 10:07:45,501 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 10:07:45,503 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 10:07:45,504 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-30 10:07:45,505 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 10:07:45,507 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-30 10:07:45,508 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 10:07:45,509 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-30 10:07:45,700 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 10:07:45,701 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 10:07:45,702 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 10:07:45,704 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 10:07:45,705 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 10:07:45,706 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 10:07:45,900 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 10:07:45,901 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 10:07:45,902 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 10:07:45,904 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 10:07:45,933 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-30 10:07:45,935 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-30 10:07:45,944 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 10:07:45,946 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 10:07:46,100 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 10:07:46,101 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-30 10:07:46,102 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-30 10:07:46,103 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-30 10:07:46,104 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 10:07:46,105 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 10:07:46,109 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 10:07:46,300 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-30 10:07:46,301 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 10:07:46,302 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 10:07:46,796 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-30 10:07:46,799 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-30 10:07:46,800 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-30 10:07:46,801 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-30 10:07:46,993 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 10:07:46,995 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 10:07:46,998 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 10:07:47,000 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 10:07:47,010 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-30 10:07:47,012 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-30 10:07:47,014 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-30 10:07:47,193 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 10:07:47,198 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-30 10:07:47,201 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-30 10:07:47,203 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-30 10:07:47,205 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-30 10:07:47,208 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 10:07:47,210 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 10:07:47,212 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 10:07:47,393 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-30 10:07:47,395 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-30 10:07:47,398 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-30 10:07:47,451 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-30 10:07:47,453 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-30 10:07:47,591 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-30 10:07:47,592 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-30 10:07:47,593 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-30 10:07:47,595 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-30 10:07:47,596 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 10:07:47,597 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 10:07:47,598 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 10:07:47,599 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-30 10:07:47,791 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-30 10:07:47,792 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-30 10:07:47,793 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-30 10:07:47,795 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 10:07:47,991 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-30 10:07:47,993 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 10:07:47,994 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 10:07:48,034 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-30 10:07:48,035 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-30 10:07:48,191 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-30 10:07:48,192 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-30 10:07:48,193 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-30 10:07:48,194 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-30 10:07:48,195 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 10:07:48,196 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 10:07:48,197 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 10:07:48,198 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-30 10:07:48,391 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-30 10:07:48,393 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-30 10:07:48,394 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-30 10:07:48,395 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-30 10:07:48,396 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-30 10:07:48,599 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 10:07:48,600 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 10:07:48,602 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 10:07:48,603 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 10:07:48,604 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-30 10:07:48,606 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-30 10:07:48,607 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-30 10:07:48,608 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 10:07:48,803 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 10:07:48,805 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-30 10:07:48,806 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-30 10:07:48,807 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-30 10:07:48,808 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-30 10:07:49,000 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-30 10:07:49,002 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-30 10:07:49,004 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-30 10:07:49,008 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 10:07:49,009 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 10:07:49,010 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 10:07:49,011 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 10:07:49,200 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-30 10:07:49,202 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-30 10:07:49,203 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-30 10:07:49,204 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-30 10:07:49,205 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-30 10:07:49,206 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 10:07:49,207 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-30 10:07:49,208 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-30 10:07:49,400 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-30 10:07:49,402 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-30 10:07:49,404 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-30 10:07:49,406 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-30 10:07:49,599 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-30 10:07:49,600 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-30 10:07:49,602 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 10:07:49,603 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 10:07:49,605 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-30 10:07:49,607 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-30 10:07:49,608 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 10:07:49,609 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 10:07:49,609 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 10:07:49,802 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-30 10:07:49,811 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 10:07:49,818 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 10:07:49,827 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 10:07:49,830 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 10:07:49,837 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 10:07:49,838 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 10:07:49,839 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 10:07:50,000 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 10:07:50,001 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 10:07:50,003 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-30 10:07:50,004 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 10:07:50,006 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-30 10:07:50,203 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 10:07:50,204 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 10:07:50,206 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 10:07:50,402 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 10:07:51,325 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 10:07:51,326 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 10:07:51,327 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 10:07:51,402 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 10:12:41,976 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 10:12:41,977 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 10:12:41,978 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 10:12:41,979 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 10:28:49,848 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 10:28:49,850 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 10:28:49,851 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 10:28:49,852 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 10:28:51,222 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 10:28:51,223 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 10:28:51,224 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 10:28:51,225 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 10:53:37,226 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 10:53:37,227 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 10:53:37,228 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 10:53:37,229 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 11:09:44,704 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 11:09:44,705 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 11:09:44,707 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 11:09:44,708 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 11:09:45,945 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 11:09:45,946 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 11:09:45,947 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 11:09:45,948 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 14:49:18,376 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 14:49:18,385 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 14:49:18,394 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 14:49:18,400 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 14:50:50,615 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-30 14:50:50,675 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-30 14:50:50,688 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-30 14:50:50,693 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-08-30 14:50:50,696 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-08-30 14:50:50,698 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-08-30 14:50:50,699 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-08-30 14:50:50,701 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-08-30 14:50:50,703 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-08-30 14:50:50,705 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-30 14:50:50,707 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-30 14:50:50,708 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-08-30 14:50:50,826 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-30 14:50:50,828 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-30 14:50:50,847 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-30 14:50:50,851 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-30 14:50:50,852 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-30 14:50:50,855 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-30 14:50:50,859 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-30 14:50:50,862 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-30 14:50:50,864 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-30 14:50:50,870 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-30 14:50:51,026 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-30 14:50:51,027 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-30 14:50:51,029 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-30 14:50:51,031 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-30 14:50:51,032 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-30 14:50:51,033 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-30 14:50:51,034 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-30 14:50:51,035 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-30 14:50:51,226 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-30 14:50:51,227 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-30 14:50:51,228 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-30 14:50:51,229 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-30 14:50:51,231 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-30 14:50:51,233 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-30 14:50:51,234 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-30 14:50:51,235 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-30 14:50:51,248 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-30 14:50:51,427 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-30 14:50:51,429 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-30 14:50:51,432 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-30 14:50:51,434 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-30 14:50:51,435 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-30 14:50:51,443 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 14:50:51,447 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-30 14:50:51,626 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-30 14:50:51,633 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-30 14:50:51,636 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-30 14:50:51,637 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-30 14:50:51,836 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-30 14:50:51,838 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-30 14:50:51,840 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-30 14:50:51,841 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 14:50:51,842 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 14:50:51,843 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 14:50:51,844 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-30 14:50:51,845 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-30 14:50:52,025 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-30 14:50:52,027 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-30 14:50:52,027 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-30 14:50:52,028 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-30 14:50:52,225 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-30 14:50:52,231 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-30 14:50:52,232 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 14:50:52,233 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 14:50:52,234 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 14:50:52,238 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-30 14:50:52,239 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-30 14:50:52,425 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-30 14:50:52,428 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-30 14:50:52,429 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-30 14:50:52,430 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-30 14:50:52,431 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-30 14:50:52,432 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-30 14:50:52,625 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 14:50:52,626 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-30 14:50:52,627 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 14:50:52,628 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-30 14:50:52,629 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-30 14:50:52,837 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-30 14:50:52,839 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-30 14:50:52,840 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-30 14:50:52,843 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-30 14:50:52,845 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 14:50:52,846 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-30 14:50:52,848 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-30 14:50:53,025 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-30 14:50:53,028 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 14:50:53,029 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-30 14:50:53,030 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-30 14:50:53,226 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-30 14:50:53,227 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-30 14:50:53,228 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-30 14:50:53,233 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-30 14:50:53,234 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 14:50:53,426 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 14:50:53,427 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-30 14:50:53,428 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-30 14:50:53,430 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-30 14:50:53,626 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-30 14:50:53,628 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-30 14:50:53,630 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 14:50:53,631 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-30 14:50:53,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 14:50:53,634 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 14:50:53,636 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 14:50:53,826 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 14:50:53,831 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 14:50:53,832 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 14:50:53,834 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 14:50:53,835 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 14:50:53,836 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 14:50:54,026 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 14:50:54,027 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 14:50:54,029 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 14:50:54,030 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-30 14:50:54,031 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 14:50:54,032 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-30 14:50:54,034 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 14:50:54,035 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-30 14:50:54,226 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 14:50:54,227 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 14:50:54,228 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 14:50:54,230 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 14:50:54,232 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 14:50:54,277 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 14:50:54,426 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 14:50:54,441 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 14:50:54,443 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 14:50:54,445 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 14:50:54,477 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-30 14:50:54,479 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-30 14:50:54,494 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 14:50:54,496 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 14:50:54,626 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 14:50:54,628 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-30 14:50:54,630 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-30 14:50:54,632 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-30 14:50:54,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 14:50:54,637 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 14:50:54,646 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 14:50:54,826 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-30 14:50:54,828 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 14:50:54,830 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 14:50:56,554 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-30 14:50:56,556 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-30 14:50:56,557 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-30 14:50:56,559 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-30 14:50:56,560 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 14:50:56,561 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 14:50:56,739 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 14:50:56,740 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 14:50:56,742 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-30 14:50:56,743 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-30 14:50:56,748 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-30 14:50:56,749 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 14:50:56,751 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-30 14:50:56,939 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-30 14:50:56,940 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-30 14:50:56,941 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-30 14:50:56,942 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 14:50:56,943 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 14:50:56,944 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 14:50:56,945 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-30 14:50:56,946 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-30 14:50:57,138 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-30 14:50:57,172 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-30 14:50:57,173 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-30 14:50:57,175 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-30 14:50:57,176 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-30 14:50:57,340 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-30 14:50:57,342 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-30 14:50:57,344 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 14:50:57,347 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 14:50:57,349 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 14:50:57,351 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-30 14:50:57,353 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-30 14:50:57,540 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-30 14:50:57,572 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-30 14:50:57,581 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 14:50:57,740 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-30 14:50:57,743 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 14:50:57,745 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 14:50:57,798 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-30 14:50:57,800 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-30 14:50:57,801 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-30 14:50:57,940 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-30 14:50:57,942 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-30 14:50:57,944 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-30 14:50:57,946 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 14:50:57,948 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 14:50:57,950 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 14:50:57,952 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-30 14:50:57,954 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-30 14:50:58,141 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-30 14:50:58,144 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-30 14:50:58,146 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-30 14:50:58,147 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-30 14:50:58,148 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 14:50:58,340 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 14:50:58,343 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 14:50:58,346 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 14:50:58,349 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-30 14:50:58,352 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-30 14:50:58,355 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-30 14:50:58,359 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 14:50:58,361 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 14:50:58,540 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-30 14:50:58,547 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-30 14:50:58,551 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-30 14:50:58,555 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-30 14:50:58,739 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-30 14:50:58,740 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-30 14:50:58,743 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-30 14:50:58,744 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 14:50:58,745 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 14:50:58,750 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 14:50:58,751 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 14:50:58,939 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-30 14:50:58,942 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-30 14:50:58,943 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-30 14:50:58,944 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-30 14:50:58,945 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-30 14:50:58,946 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 14:50:58,947 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-30 14:50:58,948 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-30 14:50:59,139 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-30 14:50:59,140 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-30 14:50:59,142 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-30 14:50:59,143 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-30 14:50:59,144 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-30 14:50:59,339 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-30 14:50:59,340 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 14:50:59,341 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 14:50:59,343 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-30 14:50:59,344 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-30 14:50:59,346 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 14:50:59,347 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 14:50:59,348 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 14:50:59,539 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 14:50:59,540 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 14:50:59,541 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 14:50:59,542 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 14:50:59,543 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 14:50:59,545 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 14:50:59,547 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-30 14:50:59,549 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 14:50:59,739 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-30 14:50:59,740 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 14:50:59,742 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 14:50:59,743 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 14:50:59,744 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 15:13:06,277 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 15:13:06,279 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 15:13:06,280 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 15:13:06,281 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 15:24:17,864 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-30 15:24:17,905 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-30 15:24:17,916 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-30 15:24:17,919 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-30 15:24:17,921 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-30 15:24:17,923 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-30 15:24:17,924 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-30 15:24:17,925 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-30 15:24:17,926 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-30 15:24:17,928 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-30 15:24:17,929 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-30 15:24:17,930 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-30 15:24:18,083 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-30 15:24:18,093 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-30 15:24:18,105 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-30 15:24:18,109 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-30 15:24:18,113 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-30 15:24:18,116 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-30 15:24:18,118 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-30 15:24:18,120 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-30 15:24:18,121 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-30 15:24:18,126 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-30 15:24:18,283 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-30 15:24:18,284 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-30 15:24:18,287 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-30 15:24:18,288 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-30 15:24:18,289 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-30 15:24:18,290 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-30 15:24:18,291 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-30 15:24:18,292 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-30 15:24:18,483 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-30 15:24:18,484 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-30 15:24:18,485 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-30 15:24:18,486 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-30 15:24:18,488 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-30 15:24:18,489 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-30 15:24:18,490 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-30 15:24:18,491 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-30 15:24:18,503 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-30 15:24:18,684 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-30 15:24:18,686 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-30 15:24:18,690 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-30 15:24:18,693 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-30 15:24:18,697 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-30 15:24:18,699 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 15:24:18,702 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-30 15:24:18,889 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-30 15:24:18,891 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-30 15:24:18,894 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-30 15:24:18,895 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-30 15:24:19,084 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-30 15:24:19,086 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-30 15:24:19,088 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-30 15:24:19,090 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 15:24:19,091 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 15:24:19,093 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 15:24:19,093 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-30 15:24:19,094 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-30 15:24:19,283 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-30 15:24:19,285 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-30 15:24:19,286 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-30 15:24:19,288 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-30 15:24:19,483 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-30 15:24:19,484 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-30 15:24:19,486 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 15:24:19,488 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 15:24:19,489 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 15:24:19,491 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-30 15:24:19,492 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-30 15:24:19,683 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-30 15:24:19,685 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-30 15:24:19,686 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-30 15:24:19,689 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-30 15:24:19,690 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-30 15:24:19,692 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-30 15:24:19,883 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 15:24:19,884 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-30 15:24:19,886 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 15:24:19,888 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-30 15:24:19,889 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-30 15:24:20,083 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-30 15:24:20,085 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-30 15:24:20,086 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-30 15:24:20,090 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-30 15:24:20,092 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 15:24:20,094 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-30 15:24:20,095 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-30 15:24:20,283 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-30 15:24:20,287 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 15:24:20,289 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-30 15:24:20,290 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-30 15:24:20,483 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-30 15:24:20,485 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-30 15:24:20,486 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-30 15:24:20,492 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-30 15:24:20,494 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 15:24:20,683 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 15:24:20,684 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-30 15:24:20,685 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-30 15:24:20,686 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-30 15:24:20,883 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-30 15:24:20,885 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-30 15:24:20,887 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 15:24:20,899 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-30 15:24:20,901 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 15:24:20,902 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 15:24:20,904 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 15:24:21,083 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 15:24:21,084 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 15:24:21,085 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 15:24:21,086 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 15:24:21,087 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 15:24:21,089 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 15:24:21,283 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 15:24:21,284 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 15:24:21,285 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 15:24:21,286 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-30 15:24:21,288 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 15:24:21,289 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-30 15:24:21,290 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 15:24:21,300 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-30 15:24:21,485 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 15:24:21,486 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 15:24:21,487 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 15:24:21,488 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 15:24:21,489 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 15:24:21,491 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 15:24:21,684 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 15:24:21,685 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 15:24:21,686 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 15:24:21,687 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 15:24:21,717 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-30 15:24:21,719 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-30 15:24:21,729 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 15:24:21,730 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 15:24:21,884 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 15:24:21,885 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-30 15:24:21,887 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-30 15:24:21,888 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-30 15:24:21,889 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 15:24:21,890 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 15:24:21,894 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 15:24:22,084 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-30 15:24:22,085 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 15:24:22,086 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 15:24:22,593 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-30 15:24:22,594 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-30 15:24:22,779 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-30 15:24:22,780 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-30 15:24:22,781 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 15:24:22,782 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 15:24:22,783 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 15:24:22,784 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 15:24:22,788 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-30 15:24:22,974 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-30 15:24:22,975 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-30 15:24:22,976 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 15:24:22,977 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-30 15:24:22,979 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-30 15:24:22,980 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-30 15:24:22,981 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-30 15:24:22,982 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 15:24:23,173 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 15:24:23,174 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 15:24:23,175 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-30 15:24:23,176 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-30 15:24:23,178 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-30 15:24:23,398 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-30 15:24:23,400 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-30 15:24:23,401 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-30 15:24:23,402 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-30 15:24:23,402 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-30 15:24:23,403 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-30 15:24:23,404 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 15:24:23,573 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 15:24:23,574 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 15:24:23,575 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-30 15:24:23,576 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-30 15:24:23,577 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-30 15:24:23,773 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-30 15:24:23,775 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 15:24:23,776 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-30 15:24:23,777 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 15:24:23,778 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 15:24:23,973 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-30 15:24:23,974 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-30 15:24:23,975 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-30 15:24:23,977 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-30 15:24:23,979 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-30 15:24:23,980 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-30 15:24:23,983 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 15:24:23,985 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 15:24:24,174 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 15:24:24,175 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-30 15:24:24,176 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-30 15:24:24,178 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-30 15:24:24,379 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-30 15:24:24,380 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-30 15:24:24,382 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-30 15:24:24,383 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 15:24:24,384 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 15:24:24,385 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 15:24:24,387 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 15:24:24,388 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-30 15:24:24,574 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-30 15:24:24,575 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-30 15:24:24,576 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 15:24:24,577 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 15:24:24,578 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-30 15:24:24,580 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-30 15:24:24,581 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-30 15:24:24,774 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-30 15:24:24,775 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-30 15:24:24,777 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-30 15:24:24,778 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-30 15:24:24,784 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 15:24:24,974 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 15:24:24,975 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 15:24:24,976 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 15:24:24,980 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-30 15:24:24,982 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-30 15:24:24,983 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-30 15:24:24,984 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-30 15:24:24,986 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-30 15:24:25,174 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 15:24:25,177 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-30 15:24:25,179 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-30 15:24:25,181 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-30 15:24:25,183 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-30 15:24:25,374 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-30 15:24:25,376 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-30 15:24:25,377 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-30 15:24:25,379 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-30 15:24:25,381 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 15:24:25,383 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 15:24:25,388 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-30 15:24:25,391 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-30 15:24:25,574 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 15:24:25,575 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 15:24:25,576 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 15:24:25,577 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 15:24:25,579 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-30 15:24:25,580 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 15:24:25,582 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 15:24:25,582 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 15:24:25,797 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 15:24:25,824 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 15:24:25,839 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 15:24:25,840 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 15:24:25,841 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 15:24:25,843 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-30 15:24:25,844 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 15:24:25,978 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-30 15:24:26,180 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 15:24:26,181 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 15:24:26,182 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 15:24:26,183 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 15:24:27,189 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 15:24:27,190 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 15:24:27,191 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 15:24:27,191 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 15:32:10,320 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 15:32:10,326 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 15:32:10,327 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 15:32:10,328 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 15:32:11,552 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 15:32:11,553 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 15:32:11,554 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 15:32:11,557 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 16:08:38,730 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 16:08:38,736 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 16:08:38,737 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 16:08:38,738 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 16:24:46,053 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 16:24:46,054 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 16:24:46,055 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 16:24:46,057 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 16:24:47,256 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 16:24:47,257 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 16:24:47,262 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 16:24:47,263 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 17:14:34,612 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 17:14:34,614 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 17:14:34,615 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 17:14:34,617 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 17:37:08,970 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:37:08,973 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 17:37:08,975 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:37:08,977 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 17:38:33,237 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-30 17:38:33,283 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-30 17:38:33,293 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-30 17:38:33,297 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-08-30 17:38:33,299 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-08-30 17:38:33,301 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-08-30 17:38:33,302 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-08-30 17:38:33,303 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-08-30 17:38:33,304 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-08-30 17:38:33,305 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-30 17:38:33,306 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-30 17:38:33,307 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-08-30 17:38:33,461 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-30 17:38:33,466 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-30 17:38:33,478 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-30 17:38:33,481 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-30 17:38:33,485 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-30 17:38:33,487 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-30 17:38:33,490 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-30 17:38:33,492 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-30 17:38:33,493 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-30 17:38:33,498 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-30 17:38:33,661 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-30 17:38:33,662 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-30 17:38:33,665 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-30 17:38:33,666 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-30 17:38:33,668 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-30 17:38:33,669 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-30 17:38:33,670 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-30 17:38:33,671 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-30 17:38:33,861 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-30 17:38:33,868 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-30 17:38:33,869 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-30 17:38:33,870 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-30 17:38:33,872 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-30 17:38:33,873 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-30 17:38:33,875 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-30 17:38:33,876 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-30 17:38:33,888 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-30 17:38:34,062 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-30 17:38:34,073 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-30 17:38:34,076 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-30 17:38:34,078 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-30 17:38:34,079 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-30 17:38:34,081 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:38:34,085 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-30 17:38:34,262 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-30 17:38:34,273 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-30 17:38:34,278 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-30 17:38:34,280 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-30 17:38:34,464 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-30 17:38:34,466 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-30 17:38:34,468 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-30 17:38:34,471 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:38:34,473 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:38:34,474 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 17:38:34,476 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-30 17:38:34,477 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-30 17:38:34,661 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-30 17:38:34,662 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-30 17:38:34,664 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-30 17:38:34,665 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-30 17:38:34,861 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-30 17:38:34,862 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-30 17:38:34,863 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 17:38:34,864 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 17:38:34,866 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 17:38:34,868 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-30 17:38:34,869 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-30 17:38:35,061 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-30 17:38:35,063 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-30 17:38:35,064 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-30 17:38:35,066 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-30 17:38:35,067 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-30 17:38:35,068 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-30 17:38:35,261 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 17:38:35,262 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-30 17:38:35,263 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 17:38:35,264 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-30 17:38:35,264 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-30 17:38:35,461 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-30 17:38:35,465 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-30 17:38:35,466 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-30 17:38:35,469 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-30 17:38:35,470 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 17:38:35,471 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-30 17:38:35,472 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-30 17:38:35,660 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-30 17:38:35,667 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 17:38:35,668 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-30 17:38:35,670 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-30 17:38:35,861 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-30 17:38:35,862 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-30 17:38:35,863 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-30 17:38:35,864 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-30 17:38:35,865 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:38:36,061 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 17:38:36,062 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-30 17:38:36,063 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-30 17:38:36,064 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-30 17:38:36,261 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-30 17:38:36,264 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-30 17:38:36,266 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 17:38:36,267 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-30 17:38:36,273 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 17:38:36,275 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 17:38:36,277 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:38:36,461 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:38:36,462 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:38:36,463 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:38:36,464 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:38:36,466 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:38:36,471 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:38:36,668 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:38:36,670 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:38:36,671 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:38:36,672 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-30 17:38:36,674 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 17:38:36,675 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-30 17:38:36,676 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 17:38:36,677 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-30 17:38:36,861 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:38:36,862 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:38:36,865 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:38:36,866 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:38:36,868 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:38:36,869 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:38:37,062 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:38:37,068 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:38:37,069 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:38:37,070 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:38:37,100 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-30 17:38:37,102 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-30 17:38:37,104 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 17:38:37,105 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:38:37,261 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:38:37,263 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-30 17:38:37,264 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-30 17:38:37,266 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-30 17:38:37,267 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 17:38:37,269 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 17:38:37,274 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 17:38:37,461 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-30 17:38:37,463 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 17:38:37,471 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 17:38:39,067 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-30 17:38:39,069 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-30 17:38:39,070 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-30 17:38:39,072 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-30 17:38:39,075 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:38:39,076 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 17:38:39,078 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:38:39,079 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:38:39,080 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-30 17:38:39,081 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-30 17:38:39,082 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-30 17:38:39,274 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 17:38:39,277 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-30 17:38:39,279 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-30 17:38:39,281 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-30 17:38:39,282 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-30 17:38:39,284 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 17:38:39,285 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 17:38:39,472 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 17:38:39,473 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-30 17:38:39,475 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-30 17:38:39,476 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-30 17:38:39,527 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-30 17:38:39,672 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-30 17:38:39,674 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-30 17:38:39,675 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-30 17:38:39,677 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-30 17:38:39,679 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-30 17:38:39,681 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 17:38:39,682 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 17:38:39,684 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:38:39,872 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-30 17:38:39,874 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-30 17:38:39,878 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-30 17:38:39,879 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-30 17:38:40,072 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 17:38:40,073 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-30 17:38:40,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 17:38:40,076 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 17:38:40,102 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-30 17:38:40,272 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-30 17:38:40,273 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-30 17:38:40,274 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-30 17:38:40,275 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-30 17:38:40,277 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-30 17:38:40,278 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:38:40,279 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:38:40,472 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 17:38:40,473 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-30 17:38:40,475 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-30 17:38:40,476 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-30 17:38:40,477 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-30 17:38:40,672 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-30 17:38:40,674 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-30 17:38:40,676 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:38:40,678 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 17:38:40,681 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:38:40,683 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:38:40,686 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-30 17:38:40,877 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-30 17:38:40,878 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-30 17:38:40,879 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 17:38:40,880 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 17:38:40,885 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-30 17:38:40,886 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-30 17:38:40,887 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-30 17:38:41,077 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-30 17:38:41,078 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-30 17:38:41,079 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-30 17:38:41,081 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-30 17:38:41,082 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:38:41,276 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 17:38:41,277 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:38:41,279 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:38:41,281 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-30 17:38:41,282 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-30 17:38:41,283 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-30 17:38:41,284 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-30 17:38:41,285 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-30 17:38:41,476 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:38:41,477 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-30 17:38:41,479 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-30 17:38:41,480 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-30 17:38:41,481 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-30 17:38:41,676 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-30 17:38:41,677 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-30 17:38:41,679 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-30 17:38:41,680 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-30 17:38:41,681 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:38:41,682 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 17:38:41,684 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-30 17:38:41,685 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-30 17:38:41,877 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:38:41,878 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 17:38:41,879 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:38:41,880 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:38:41,881 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:38:41,884 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 17:38:41,887 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:38:41,888 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 17:38:42,076 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 17:38:42,077 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-30 17:38:42,078 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 17:38:42,079 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-30 17:38:42,080 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 17:38:42,081 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 17:38:42,082 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 17:38:42,083 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 17:40:34,610 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-30 17:40:34,662 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-30 17:40:34,673 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-30 17:40:34,677 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-08-30 17:40:34,680 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-08-30 17:40:34,682 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-08-30 17:40:34,684 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-08-30 17:40:34,686 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-08-30 17:40:34,687 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-08-30 17:40:34,689 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-30 17:40:34,690 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-30 17:40:34,692 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-08-30 17:40:34,844 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-30 17:40:34,845 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-30 17:40:34,861 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-30 17:40:34,864 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-30 17:40:34,865 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-30 17:40:34,868 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-30 17:40:34,872 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-30 17:40:34,874 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-30 17:40:34,876 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-30 17:40:34,883 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-30 17:40:35,044 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-30 17:40:35,046 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-30 17:40:35,050 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-30 17:40:35,051 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-30 17:40:35,053 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-30 17:40:35,054 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-30 17:40:35,056 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-30 17:40:35,057 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-30 17:40:35,244 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-30 17:40:35,246 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-30 17:40:35,249 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-30 17:40:35,251 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-30 17:40:35,254 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-30 17:40:35,255 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-30 17:40:35,257 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-30 17:40:35,258 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-30 17:40:35,274 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-30 17:40:35,445 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-30 17:40:35,447 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-30 17:40:35,451 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-30 17:40:35,454 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-30 17:40:35,455 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-30 17:40:35,457 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:40:35,460 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-30 17:40:35,644 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-30 17:40:35,652 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-30 17:40:35,655 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-30 17:40:35,656 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-30 17:40:35,846 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-30 17:40:35,848 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-30 17:40:35,854 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-30 17:40:35,855 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:40:35,857 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:40:35,858 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 17:40:35,859 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-30 17:40:35,860 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-30 17:40:36,043 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-30 17:40:36,045 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-30 17:40:36,046 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-30 17:40:36,046 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-30 17:40:36,244 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-30 17:40:36,245 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-30 17:40:36,246 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 17:40:36,247 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 17:40:36,248 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 17:40:36,249 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-30 17:40:36,250 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-30 17:40:36,444 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-30 17:40:36,445 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-30 17:40:36,446 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-30 17:40:36,447 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-30 17:40:36,449 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-30 17:40:36,449 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-30 17:40:36,643 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 17:40:36,644 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-30 17:40:36,645 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 17:40:36,647 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-30 17:40:36,648 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-30 17:40:36,843 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-30 17:40:36,845 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-30 17:40:36,845 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-30 17:40:36,848 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-30 17:40:36,849 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 17:40:36,852 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-30 17:40:36,853 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-30 17:40:37,043 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-30 17:40:37,046 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 17:40:37,047 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-30 17:40:37,049 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-30 17:40:37,244 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-30 17:40:37,245 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-30 17:40:37,247 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-30 17:40:37,252 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-30 17:40:37,253 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:40:37,445 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 17:40:37,446 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-30 17:40:37,448 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-30 17:40:37,451 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-30 17:40:37,644 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-30 17:40:37,646 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-30 17:40:37,648 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 17:40:37,649 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-30 17:40:37,650 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 17:40:37,652 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 17:40:37,654 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:40:37,844 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:40:37,845 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:40:37,846 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:40:37,848 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:40:37,849 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:40:37,850 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:40:38,044 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:40:38,045 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:40:38,046 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:40:38,047 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-30 17:40:38,048 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 17:40:38,049 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-30 17:40:38,051 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 17:40:38,052 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-30 17:40:38,244 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:40:38,245 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:40:38,246 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:40:38,247 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:40:38,249 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:40:38,250 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:40:38,444 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:40:38,445 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:40:38,451 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:40:38,453 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:40:38,487 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-30 17:40:38,488 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-30 17:40:38,500 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 17:40:38,502 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:40:38,644 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:40:38,646 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-30 17:40:38,647 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-30 17:40:38,649 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-30 17:40:38,651 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 17:40:38,652 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 17:40:38,657 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 17:40:38,844 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-30 17:40:38,845 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 17:40:38,846 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 17:40:40,476 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-30 17:40:40,478 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-30 17:40:40,480 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-30 17:40:40,481 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-30 17:40:40,483 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:40:40,494 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 17:40:40,496 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:40:40,498 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:40:40,500 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-30 17:40:40,502 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-30 17:40:40,508 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-30 17:40:40,510 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 17:40:40,695 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-30 17:40:40,696 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-30 17:40:40,697 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-30 17:40:40,698 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-30 17:40:40,699 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 17:40:40,700 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 17:40:40,701 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 17:40:40,702 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-30 17:40:40,893 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-30 17:40:40,894 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-30 17:40:40,917 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-30 17:40:40,918 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-30 17:40:41,093 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-30 17:40:41,104 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-30 17:40:41,105 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-30 17:40:41,106 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-30 17:40:41,107 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 17:40:41,108 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 17:40:41,109 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:40:41,110 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-30 17:40:41,295 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-30 17:40:41,299 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-30 17:40:41,301 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-30 17:40:41,309 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 17:40:41,526 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-30 17:40:41,528 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 17:40:41,529 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 17:40:41,556 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-30 17:40:41,557 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-30 17:40:41,695 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-30 17:40:41,697 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-30 17:40:41,700 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-30 17:40:41,702 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-30 17:40:41,705 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:40:41,707 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:40:41,709 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 17:40:41,711 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-30 17:40:41,894 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-30 17:40:41,896 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-30 17:40:41,898 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-30 17:40:41,899 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-30 17:40:41,901 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-30 17:40:42,095 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:40:42,097 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 17:40:42,099 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:40:42,102 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:40:42,105 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-30 17:40:42,107 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-30 17:40:42,110 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-30 17:40:42,293 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 17:40:42,304 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 17:40:42,305 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-30 17:40:42,306 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-30 17:40:42,307 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-30 17:40:42,493 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-30 17:40:42,495 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-30 17:40:42,496 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-30 17:40:42,497 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-30 17:40:42,498 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:40:42,499 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 17:40:42,503 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:40:42,693 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:40:42,695 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-30 17:40:42,696 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-30 17:40:42,698 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-30 17:40:42,699 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-30 17:40:42,700 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-30 17:40:42,701 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:40:42,702 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-30 17:40:42,893 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-30 17:40:42,894 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-30 17:40:42,896 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-30 17:40:42,897 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-30 17:40:42,897 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-30 17:40:43,093 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-30 17:40:43,094 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-30 17:40:43,095 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:40:43,096 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 17:40:43,098 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-30 17:40:43,100 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-30 17:40:43,101 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:40:43,102 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 17:40:43,294 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:40:43,295 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:40:43,296 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:40:43,297 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 17:40:43,298 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:40:43,298 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 17:40:43,299 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 17:40:43,300 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-30 17:40:43,493 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 17:40:43,494 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-30 17:40:43,495 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 17:40:43,496 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 17:40:43,497 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 17:40:43,498 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 17:40:49,297 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:40:49,299 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 17:40:49,301 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:40:49,302 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 17:46:53,589 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-30 17:46:53,629 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-30 17:46:53,638 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-30 17:46:53,641 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-30 17:46:53,643 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-30 17:46:53,644 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-30 17:46:53,646 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-30 17:46:53,647 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-30 17:46:53,648 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-30 17:46:53,649 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-30 17:46:53,650 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-30 17:46:53,651 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-30 17:46:53,806 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-30 17:46:53,808 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-30 17:46:53,820 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-30 17:46:53,823 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-30 17:46:53,835 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-30 17:46:53,846 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-30 17:46:53,849 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-30 17:46:53,851 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-30 17:46:53,852 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-30 17:46:53,856 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-30 17:46:54,007 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-30 17:46:54,008 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-30 17:46:54,010 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-30 17:46:54,012 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-30 17:46:54,013 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-30 17:46:54,014 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-30 17:46:54,016 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-30 17:46:54,017 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-30 17:46:54,206 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-30 17:46:54,208 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-30 17:46:54,209 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-30 17:46:54,210 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-30 17:46:54,212 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-30 17:46:54,213 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-30 17:46:54,214 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-30 17:46:54,215 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-30 17:46:54,227 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-30 17:46:54,408 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-30 17:46:54,423 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-30 17:46:54,432 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-30 17:46:54,436 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-30 17:46:54,439 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-30 17:46:54,442 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:46:54,445 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-30 17:46:54,608 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-30 17:46:54,616 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-30 17:46:54,620 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-30 17:46:54,622 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-30 17:46:54,808 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-30 17:46:54,811 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-30 17:46:54,813 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-30 17:46:54,815 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:46:54,817 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:46:54,819 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 17:46:54,820 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-30 17:46:54,822 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-30 17:46:55,007 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-30 17:46:55,009 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-30 17:46:55,010 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-30 17:46:55,011 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-30 17:46:55,207 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-30 17:46:55,210 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-30 17:46:55,213 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 17:46:55,214 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 17:46:55,216 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 17:46:55,218 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-30 17:46:55,219 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-30 17:46:55,407 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-30 17:46:55,409 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-30 17:46:55,410 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-30 17:46:55,412 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-30 17:46:55,413 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-30 17:46:55,414 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-30 17:46:55,607 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 17:46:55,608 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-30 17:46:55,610 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 17:46:55,611 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-30 17:46:55,612 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-30 17:46:55,807 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-30 17:46:55,808 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-30 17:46:55,810 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-30 17:46:55,813 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-30 17:46:55,816 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 17:46:55,817 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-30 17:46:55,819 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-30 17:46:56,010 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-30 17:46:56,014 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 17:46:56,016 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-30 17:46:56,018 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-30 17:46:56,210 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-30 17:46:56,212 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-30 17:46:56,214 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-30 17:46:56,220 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-30 17:46:56,221 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:46:56,410 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 17:46:56,412 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-30 17:46:56,413 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-30 17:46:56,415 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-30 17:46:56,610 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-30 17:46:56,614 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-30 17:46:56,616 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 17:46:56,618 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-30 17:46:56,619 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 17:46:56,621 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 17:46:56,624 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:46:56,810 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:46:56,812 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:46:56,813 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:46:56,815 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:46:56,817 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:46:56,819 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:46:57,010 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:46:57,011 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:46:57,012 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:46:57,013 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-30 17:46:57,015 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 17:46:57,016 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-30 17:46:57,017 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 17:46:57,018 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-30 17:46:57,210 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:46:57,211 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:46:57,212 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:46:57,213 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:46:57,215 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:46:57,216 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 17:46:57,410 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 17:46:57,411 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 17:46:57,412 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 17:46:57,413 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 17:46:57,443 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-30 17:46:57,444 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-30 17:46:57,453 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 17:46:57,455 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:46:57,610 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:46:57,611 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-30 17:46:57,612 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-30 17:46:57,613 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-30 17:46:57,614 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 17:46:57,615 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 17:46:57,620 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 17:46:57,810 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-30 17:46:57,811 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 17:46:57,812 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 17:46:59,434 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-30 17:46:59,436 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-30 17:46:59,438 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-30 17:46:59,440 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-30 17:46:59,442 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:46:59,450 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 17:46:59,452 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:46:59,456 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:46:59,458 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-30 17:46:59,460 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-30 17:46:59,466 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-30 17:46:59,467 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 17:46:59,470 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-30 17:46:59,650 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-30 17:46:59,652 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-30 17:46:59,654 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-30 17:46:59,655 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 17:46:59,657 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 17:46:59,658 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 17:46:59,659 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-30 17:46:59,850 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-30 17:46:59,851 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-30 17:46:59,883 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-30 17:46:59,885 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-30 17:47:00,050 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-30 17:47:00,051 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-30 17:47:00,053 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-30 17:47:00,054 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-30 17:47:00,056 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 17:47:00,057 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 17:47:00,058 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:47:00,060 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-30 17:47:00,250 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-30 17:47:00,251 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-30 17:47:00,252 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-30 17:47:00,254 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 17:47:00,450 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-30 17:47:00,451 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 17:47:00,452 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 17:47:00,501 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-30 17:47:00,502 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-30 17:47:00,650 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-30 17:47:00,651 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-30 17:47:00,653 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-30 17:47:00,654 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-30 17:47:00,656 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:47:00,657 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:47:00,659 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 17:47:00,660 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-30 17:47:00,850 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-30 17:47:00,851 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-30 17:47:00,853 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-30 17:47:00,854 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-30 17:47:00,855 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-30 17:47:01,050 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:47:01,051 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 17:47:01,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:47:01,054 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:47:01,056 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-30 17:47:01,057 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-30 17:47:01,059 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-30 17:47:01,250 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 17:47:01,251 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 17:47:01,252 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-30 17:47:01,254 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-30 17:47:01,255 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-30 17:47:01,451 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-30 17:47:01,453 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-30 17:47:01,455 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-30 17:47:01,457 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-30 17:47:01,458 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 17:47:01,464 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 17:47:01,465 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 17:47:01,650 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 17:47:01,652 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-30 17:47:01,654 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-30 17:47:01,655 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-30 17:47:01,657 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-30 17:47:01,658 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-30 17:47:01,660 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:47:01,661 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-30 17:47:01,850 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-30 17:47:01,851 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-30 17:47:01,853 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-30 17:47:01,855 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-30 17:47:01,856 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-30 17:47:02,050 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-30 17:47:02,051 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-30 17:47:02,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:47:02,054 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 17:47:02,056 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-30 17:47:02,058 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-30 17:47:02,060 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 17:47:02,062 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 17:47:02,250 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 17:47:02,252 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 17:47:02,256 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:47:02,258 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 17:47:02,259 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:47:02,261 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 17:47:02,262 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 17:47:02,264 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-30 17:47:02,450 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 17:47:02,451 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-30 17:47:02,453 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 17:47:02,454 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 17:47:02,456 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 17:47:02,457 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 17:47:07,918 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 17:47:07,921 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 17:47:07,923 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 17:47:07,924 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 18:05:34,952 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-30 18:05:35,005 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-30 18:05:35,018 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-30 18:05:35,024 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-30 18:05:35,027 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-30 18:05:35,029 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-30 18:05:35,031 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-30 18:05:35,033 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-30 18:05:35,034 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-30 18:05:35,036 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-30 18:05:35,038 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-30 18:05:35,039 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-30 18:05:35,167 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-30 18:05:35,170 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-30 18:05:35,187 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-30 18:05:35,191 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-30 18:05:35,192 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-30 18:05:35,195 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-30 18:05:35,200 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-30 18:05:35,202 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-30 18:05:35,204 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-30 18:05:35,211 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-30 18:05:35,367 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-30 18:05:35,368 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-30 18:05:35,371 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-30 18:05:35,372 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-30 18:05:35,373 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-30 18:05:35,374 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-30 18:05:35,375 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-30 18:05:35,376 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-30 18:05:35,566 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-30 18:05:35,568 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-30 18:05:35,569 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-30 18:05:35,570 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-30 18:05:35,572 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-30 18:05:35,573 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-30 18:05:35,574 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-30 18:05:35,575 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-30 18:05:35,588 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-30 18:05:35,768 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-30 18:05:35,770 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-30 18:05:35,773 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-30 18:05:35,775 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-30 18:05:35,776 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-30 18:05:35,778 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:05:35,780 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-30 18:05:35,973 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-30 18:05:35,975 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-30 18:05:35,978 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-30 18:05:35,980 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-30 18:05:36,180 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-30 18:05:36,182 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-30 18:05:36,184 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-30 18:05:36,186 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:05:36,187 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:05:36,189 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 18:05:36,190 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-30 18:05:36,192 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-30 18:05:36,374 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-30 18:05:36,376 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-30 18:05:36,377 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-30 18:05:36,378 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-30 18:05:36,574 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-30 18:05:36,576 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-30 18:05:36,577 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 18:05:36,578 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 18:05:36,579 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 18:05:36,580 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-30 18:05:36,581 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-30 18:05:36,774 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-30 18:05:36,777 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-30 18:05:36,778 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-30 18:05:36,779 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-30 18:05:36,780 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-30 18:05:36,781 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-30 18:05:36,974 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 18:05:36,975 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-30 18:05:36,976 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 18:05:36,977 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-30 18:05:36,978 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-30 18:05:37,174 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-30 18:05:37,189 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-30 18:05:37,191 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-30 18:05:37,193 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-30 18:05:37,195 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 18:05:37,196 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-30 18:05:37,197 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-30 18:05:37,374 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-30 18:05:37,377 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 18:05:37,378 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-30 18:05:37,380 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-30 18:05:37,575 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-30 18:05:37,576 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-30 18:05:37,578 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-30 18:05:37,581 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-30 18:05:37,583 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 18:05:37,775 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 18:05:37,776 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-30 18:05:37,777 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-30 18:05:37,779 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-30 18:05:37,975 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-30 18:05:37,977 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-30 18:05:37,979 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 18:05:37,980 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-30 18:05:37,981 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 18:05:37,983 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 18:05:37,985 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 18:05:38,175 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:05:38,176 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 18:05:38,182 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:05:38,184 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:05:38,185 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 18:05:38,186 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:05:38,375 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 18:05:38,376 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:05:38,377 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:05:38,379 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-30 18:05:38,380 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 18:05:38,382 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-30 18:05:38,383 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 18:05:38,385 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-30 18:05:38,575 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 18:05:38,581 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:05:38,583 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 18:05:38,584 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:05:38,585 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:05:38,586 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 18:05:38,775 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:05:38,776 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 18:05:38,777 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:05:38,778 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:05:38,809 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-30 18:05:38,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-30 18:05:38,820 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 18:05:38,821 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 18:05:38,975 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 18:05:38,977 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-30 18:05:38,979 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-30 18:05:38,980 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-30 18:05:38,981 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 18:05:38,982 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 18:05:38,987 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 18:05:39,175 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-30 18:05:39,176 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 18:05:39,177 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 18:05:39,786 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-30 18:05:39,955 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-30 18:05:39,957 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-30 18:05:39,958 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-30 18:05:39,959 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 18:05:39,961 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 18:05:39,962 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 18:05:39,964 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 18:05:39,969 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-30 18:05:40,155 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-30 18:05:40,156 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-30 18:05:40,166 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 18:05:40,169 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-30 18:05:40,171 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-30 18:05:40,173 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-30 18:05:40,174 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-30 18:05:40,356 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 18:05:40,357 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 18:05:40,359 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 18:05:40,360 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-30 18:05:40,362 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-30 18:05:40,555 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-30 18:05:40,584 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-30 18:05:40,586 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-30 18:05:40,588 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-30 18:05:40,590 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-30 18:05:40,591 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-30 18:05:40,595 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-30 18:05:40,597 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 18:05:40,754 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 18:05:40,755 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 18:05:40,756 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-30 18:05:40,757 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-30 18:05:40,958 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-30 18:05:40,959 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-30 18:05:40,961 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 18:05:40,962 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-30 18:05:40,963 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 18:05:40,964 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 18:05:41,163 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-30 18:05:41,164 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-30 18:05:41,165 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-30 18:05:41,166 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-30 18:05:41,168 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-30 18:05:41,169 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-30 18:05:41,170 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 18:05:41,354 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 18:05:41,358 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:05:41,359 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-30 18:05:41,360 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-30 18:05:41,361 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-30 18:05:41,556 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-30 18:05:41,559 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-30 18:05:41,561 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-30 18:05:41,563 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 18:05:41,566 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 18:05:41,568 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 18:05:41,571 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 18:05:41,757 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-30 18:05:41,759 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-30 18:05:41,762 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-30 18:05:41,765 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:05:41,767 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:05:41,770 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-30 18:05:41,773 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-30 18:05:41,775 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-30 18:05:41,956 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-30 18:05:41,959 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-30 18:05:41,962 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-30 18:05:41,965 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-30 18:05:41,975 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 18:05:42,155 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 18:05:42,156 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 18:05:42,161 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 18:05:42,163 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-30 18:05:42,165 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-30 18:05:42,166 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-30 18:05:42,168 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-30 18:05:42,355 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-30 18:05:42,357 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 18:05:42,359 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-30 18:05:42,361 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-30 18:05:42,363 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-30 18:05:42,555 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-30 18:05:42,556 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-30 18:05:42,557 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-30 18:05:42,558 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-30 18:05:42,559 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-30 18:05:42,560 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 18:05:42,561 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 18:05:42,563 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-30 18:05:42,755 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-30 18:05:42,756 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 18:05:42,757 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 18:05:42,760 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 18:05:42,785 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-30 18:05:42,789 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 18:05:42,792 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 18:05:42,792 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 18:05:42,793 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 18:05:42,954 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 18:05:42,955 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 18:05:42,957 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 18:05:42,958 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 18:05:42,959 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 18:05:43,159 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-30 18:05:43,160 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 18:05:43,355 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-30 18:05:43,356 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:05:43,357 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 18:05:43,359 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:05:43,555 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:05:44,458 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:05:44,460 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 18:05:44,556 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:05:44,557 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:05:45,760 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:05:45,761 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 18:05:45,763 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:05:45,764 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:05:46,446 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:05:46,447 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 18:05:46,448 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:05:46,449 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:26:10,028 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 18:26:10,031 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 18:26:10,033 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 18:26:10,035 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 18:27:37,478 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-30 18:27:37,518 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-30 18:27:37,527 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-30 18:27:37,530 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-08-30 18:27:37,532 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-08-30 18:27:37,533 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-08-30 18:27:37,535 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-08-30 18:27:37,536 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-08-30 18:27:37,537 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-08-30 18:27:37,542 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-30 18:27:37,543 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-30 18:27:37,544 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-08-30 18:27:37,702 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-30 18:27:37,712 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-30 18:27:37,724 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-30 18:27:37,728 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-30 18:27:37,729 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-30 18:27:37,731 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-30 18:27:37,734 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-30 18:27:37,736 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-30 18:27:37,737 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-30 18:27:37,742 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-30 18:27:37,902 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-30 18:27:37,903 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-30 18:27:37,905 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-30 18:27:37,906 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-30 18:27:37,908 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-30 18:27:37,909 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-30 18:27:37,910 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-30 18:27:37,911 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-30 18:27:38,101 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-30 18:27:38,102 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-30 18:27:38,104 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-30 18:27:38,105 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-30 18:27:38,107 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-30 18:27:38,108 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-30 18:27:38,109 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-30 18:27:38,109 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-30 18:27:38,121 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-30 18:27:38,304 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-30 18:27:38,306 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-30 18:27:38,309 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-30 18:27:38,311 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-30 18:27:38,312 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-30 18:27:38,314 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:27:38,316 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-30 18:27:38,506 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-30 18:27:38,520 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-30 18:27:38,528 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-30 18:27:38,529 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-30 18:27:38,708 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-30 18:27:38,713 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-30 18:27:38,716 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-30 18:27:38,719 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:27:38,723 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:27:38,725 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 18:27:38,727 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-30 18:27:38,729 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-30 18:27:38,904 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-30 18:27:38,907 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-30 18:27:38,909 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-30 18:27:38,912 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-30 18:27:39,104 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-30 18:27:39,107 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-30 18:27:39,109 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 18:27:39,111 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 18:27:39,114 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 18:27:39,116 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-30 18:27:39,119 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-30 18:27:39,315 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-30 18:27:39,317 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-30 18:27:39,318 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-30 18:27:39,320 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-30 18:27:39,321 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-30 18:27:39,322 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-30 18:27:39,518 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 18:27:39,520 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-30 18:27:39,521 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 18:27:39,523 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-30 18:27:39,524 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-30 18:27:39,713 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-30 18:27:39,715 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-30 18:27:39,716 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-30 18:27:39,720 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-30 18:27:39,722 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 18:27:39,724 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-30 18:27:39,726 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-30 18:27:39,913 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-30 18:27:39,917 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 18:27:39,919 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-30 18:27:39,921 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-30 18:27:40,113 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-30 18:27:40,115 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-30 18:27:40,116 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-30 18:27:40,122 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-30 18:27:40,124 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 18:27:40,313 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 18:27:40,315 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-30 18:27:40,316 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-30 18:27:40,318 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-30 18:27:40,513 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-30 18:27:40,517 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-30 18:27:40,519 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-30 18:27:40,521 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-30 18:27:40,522 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-30 18:27:40,524 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-30 18:27:40,526 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 18:27:40,713 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:27:40,714 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 18:27:40,715 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:27:40,717 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:27:40,718 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 18:27:40,719 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:27:40,913 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 18:27:40,914 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:27:40,915 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:27:40,916 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-30 18:27:40,918 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-30 18:27:40,919 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-30 18:27:40,920 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-30 18:27:40,922 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-30 18:27:41,113 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 18:27:41,114 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:27:41,116 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 18:27:41,121 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:27:41,123 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:27:41,124 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-30 18:27:41,313 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-30 18:27:41,314 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-30 18:27:41,316 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-30 18:27:41,317 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-30 18:27:41,350 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-30 18:27:41,351 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-30 18:27:41,361 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-30 18:27:41,362 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 18:27:41,513 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 18:27:41,514 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-30 18:27:41,515 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-30 18:27:41,517 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-30 18:27:41,518 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 18:27:41,519 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 18:27:41,523 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-30 18:27:41,713 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-30 18:27:41,714 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-30 18:27:41,715 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-30 18:27:42,251 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-30 18:27:42,252 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-30 18:27:42,434 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-30 18:27:42,447 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-30 18:27:42,448 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 18:27:42,449 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 18:27:42,451 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 18:27:42,452 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 18:27:42,456 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-30 18:27:42,633 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-30 18:27:42,634 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-30 18:27:42,635 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 18:27:42,636 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-30 18:27:42,638 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-30 18:27:42,639 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-30 18:27:42,640 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-30 18:27:42,641 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 18:27:42,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 18:27:42,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 18:27:42,834 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-30 18:27:42,835 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-30 18:27:42,836 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-30 18:27:43,053 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-30 18:27:43,055 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-30 18:27:43,056 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-30 18:27:43,057 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-30 18:27:43,058 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-30 18:27:43,059 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-30 18:27:43,060 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 18:27:43,232 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 18:27:43,233 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 18:27:43,235 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-30 18:27:43,235 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-30 18:27:43,237 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-30 18:27:43,433 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-30 18:27:43,434 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-30 18:27:43,436 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-30 18:27:43,437 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-30 18:27:43,438 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-30 18:27:43,632 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-30 18:27:43,633 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-30 18:27:43,634 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-30 18:27:43,635 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-30 18:27:43,636 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-30 18:27:43,637 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-30 18:27:43,638 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 18:27:43,640 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 18:27:43,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:27:43,834 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-30 18:27:43,835 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-30 18:27:43,836 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-30 18:27:44,033 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-30 18:27:44,034 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-30 18:27:44,035 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-30 18:27:44,039 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 18:27:44,040 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 18:27:44,041 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 18:27:44,045 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 18:27:44,047 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-30 18:27:44,269 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-30 18:27:44,270 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-30 18:27:44,272 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:27:44,274 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:27:44,275 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-30 18:27:44,278 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-30 18:27:44,280 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-30 18:27:44,433 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-30 18:27:44,435 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-30 18:27:44,436 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-30 18:27:44,439 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-30 18:27:44,441 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-30 18:27:44,633 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-30 18:27:44,635 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-30 18:27:44,636 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-30 18:27:44,639 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-30 18:27:44,641 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-30 18:27:44,642 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-30 18:27:44,644 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-30 18:27:44,645 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-30 18:27:44,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 18:27:44,835 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-30 18:27:44,836 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-30 18:27:44,838 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-30 18:27:44,839 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-30 18:27:45,035 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-30 18:27:45,042 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-30 18:27:45,044 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-30 18:27:45,046 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-30 18:27:45,047 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 18:27:45,050 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 18:27:45,052 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-30 18:27:45,054 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-30 18:27:45,233 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-30 18:27:45,234 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-30 18:27:45,235 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-30 18:27:45,237 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-30 18:27:45,238 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-30 18:27:45,239 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-30 18:27:45,241 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 18:27:45,242 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-30 18:27:45,433 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 18:27:45,434 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-08-30 18:27:45,436 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 18:27:45,438 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-30 18:27:45,439 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-30 18:27:45,633 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-30 18:27:45,634 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-30 18:27:45,641 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-30 18:27:45,833 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:27:45,835 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 18:27:45,837 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:27:45,838 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:27:46,841 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:27:46,844 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 18:27:46,846 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:27:46,848 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:27:50,038 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:27:50,040 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 18:27:50,041 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:27:50,042 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:27:50,839 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-30 18:27:50,841 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-30 18:27:50,842 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-30 18:27:50,843 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-30 18:41:57,435 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-30 18:41:57,445 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-30 18:41:57,447 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-30 18:41:57,448 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
