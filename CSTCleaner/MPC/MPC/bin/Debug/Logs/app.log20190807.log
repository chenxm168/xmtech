2019-08-07 11:05:10,519 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:05:10,593 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:05:10,629 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:05:10,641 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 11:05:10,643 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 11:05:10,644 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:05:10,645 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:05:10,647 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:05:10,648 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:05:10,649 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:05:10,651 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:05:10,652 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:05:10,756 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:05:10,761 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:05:10,802 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:05:10,806 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:05:10,808 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:05:10,810 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:05:10,811 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:05:10,816 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:05:10,817 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:05:10,818 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:05:10,957 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:05:10,958 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:05:10,959 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:05:10,960 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:05:10,961 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:05:10,962 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:05:10,963 [Thread: 10      ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:05:10,964 [Thread: 10      ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:05:10,965 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:05:11,158 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:05:11,160 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:05:11,161 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:05:11,162 [Thread: 10      ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:05:11,163 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:05:11,187 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:05:11,189 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:05:11,356 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:05:11,359 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:05:11,361 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:05:11,362 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:05:11,364 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:11,366 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:05:11,368 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:05:11,556 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:05:11,607 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:05:11,608 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:05:11,616 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:05:11,618 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:05:11,756 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:05:11,757 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:11,759 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:11,760 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:05:11,761 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:05:11,761 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:05:11,961 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:05:11,963 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:05:11,965 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:05:11,968 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:05:11,970 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:05:11,971 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:05:12,155 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:05:12,157 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:05:12,160 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:05:12,161 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:05:12,356 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:05:12,357 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:05:12,359 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:05:12,361 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:05:12,362 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:05:12,556 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:05:12,557 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:05:12,558 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:05:12,559 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:05:12,756 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:05:12,757 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:05:12,760 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:05:12,761 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:12,763 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:05:12,764 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:12,765 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:12,957 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:05:12,958 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:12,962 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:05:12,964 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:12,965 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:12,967 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:05:13,158 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:13,161 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:05:13,163 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:13,166 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:13,169 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:05:13,171 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:13,174 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:05:13,358 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:13,361 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:13,430 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:05:13,431 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:05:13,433 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:05:13,434 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:05:13,435 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:05:13,437 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:05:13,557 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:05:13,560 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:05:13,562 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:05:13,565 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:05:13,575 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:05:13,578 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:05:13,581 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:05:13,757 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:05:14,549 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:05:14,707 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:05:14,708 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:05:14,709 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:05:14,710 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:05:14,711 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:05:14,712 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:05:14,713 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:05:14,906 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:05:14,916 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:05:14,917 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:05:14,919 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:05:14,920 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:05:14,922 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:05:14,923 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:05:14,924 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:05:15,105 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:05:15,107 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:05:15,108 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:05:15,109 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:05:15,110 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:05:15,306 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:05:15,331 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:05:15,332 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:05:15,333 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:05:15,334 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:05:15,335 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:05:15,336 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:05:15,337 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:05:15,507 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:05:15,508 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:05:15,509 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:05:15,510 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:05:15,707 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:05:15,708 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:05:15,709 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:05:15,710 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:05:15,711 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:05:15,712 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:05:15,942 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:05:15,943 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:05:15,944 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:05:15,945 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:05:15,946 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:05:15,947 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:05:15,948 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:05:16,110 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:05:16,112 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:05:16,113 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:05:16,114 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:05:16,115 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:05:16,307 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:05:16,308 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:05:16,309 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:05:16,310 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:05:16,311 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:05:16,312 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:05:16,313 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:05:16,507 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:05:16,508 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:05:16,509 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:05:16,510 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:05:16,511 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:05:16,512 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:05:16,513 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:05:16,514 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:05:16,706 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:05:16,708 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:05:16,709 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:05:16,710 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:05:16,711 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:05:16,907 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:05:16,908 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:05:16,909 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:05:16,911 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:05:16,912 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:05:16,913 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:05:16,913 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:05:17,107 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:05:17,108 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:05:17,109 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:05:17,110 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:05:17,111 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:05:17,307 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:05:17,308 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:05:17,309 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:05:17,310 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:05:17,311 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:05:17,312 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:05:17,312 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:05:17,314 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:05:17,507 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:05:17,508 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:05:17,509 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:05:17,510 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:05:17,511 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:05:17,512 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:05:17,513 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:05:17,518 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:05:17,706 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:05:17,707 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:05:17,708 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:05:17,709 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:05:17,710 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:05:17,711 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:05:17,712 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:05:17,713 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:05:17,911 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:05:22,303 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:05:22,305 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:05:22,306 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:05:22,307 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:05:40,199 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:05:40,244 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:05:40,254 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:05:40,259 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 11:05:40,262 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 11:05:40,263 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:05:40,265 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:05:40,266 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:05:40,268 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:05:40,269 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:05:40,270 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:05:40,272 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:05:40,432 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:05:40,433 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:05:40,448 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:05:40,452 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:05:40,456 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:05:40,458 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:05:40,459 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:05:40,464 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:05:40,465 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:05:40,466 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:05:40,633 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:05:40,638 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:05:40,639 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:05:40,641 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:05:40,642 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:05:40,643 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:05:40,644 [Thread: 10      ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:05:40,645 [Thread: 10      ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:05:40,646 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:05:40,831 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:05:40,833 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:05:40,835 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:05:40,836 [Thread: 10      ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:05:40,837 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:05:40,849 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:05:40,852 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:05:41,032 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:05:41,035 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:05:41,037 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:05:41,039 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:05:41,041 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:41,043 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:05:41,045 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:05:41,235 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:05:41,238 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:05:41,240 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:05:41,248 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:05:41,250 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:05:41,432 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:05:41,433 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:41,435 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:41,436 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:05:41,437 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:05:41,438 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:05:41,631 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:05:41,633 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:05:41,634 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:05:41,637 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:05:41,639 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:05:41,640 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:05:41,831 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:05:41,833 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:05:41,835 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:05:41,836 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:05:42,032 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:05:42,033 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:05:42,034 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:05:42,035 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:05:42,036 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:05:42,232 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:05:42,233 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:05:42,234 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:05:42,235 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:05:42,432 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:05:42,433 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:05:42,435 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:05:42,437 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:42,438 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:05:42,440 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:42,441 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:42,633 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:05:42,634 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:42,638 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:05:42,640 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:42,641 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:42,642 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:05:42,832 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:42,833 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:05:42,834 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:42,835 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:42,837 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:05:42,838 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:05:42,839 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:05:43,032 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:05:43,033 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:05:43,089 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:05:43,090 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:05:43,091 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:05:43,093 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:05:43,094 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:05:43,095 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:05:43,232 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:05:43,233 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:05:43,234 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:05:43,235 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:05:43,239 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:05:43,241 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:05:43,242 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:05:43,432 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:05:43,925 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:05:43,926 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:05:43,927 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:05:43,928 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:05:44,122 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:05:44,123 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:05:44,124 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:05:44,125 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:05:44,127 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:05:44,128 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:05:44,129 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:05:44,321 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:05:44,323 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:05:44,325 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:05:44,326 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:05:44,327 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:05:44,328 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:05:44,329 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:05:44,330 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:05:44,521 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:05:44,522 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:05:44,523 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:05:44,545 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:05:44,546 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:05:44,722 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:05:44,723 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:05:44,724 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:05:44,725 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:05:44,726 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:05:44,727 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:05:44,728 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:05:44,729 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:05:44,921 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:05:44,923 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:05:44,924 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:05:44,925 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:05:45,123 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:05:45,126 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:05:45,128 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:05:45,160 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:05:45,161 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:05:45,323 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:05:45,325 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:05:45,327 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:05:45,329 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:05:45,331 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:05:45,341 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:05:45,344 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:05:45,346 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:05:45,523 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:05:45,525 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:05:45,528 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:05:45,530 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:05:45,532 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:05:45,722 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:05:45,725 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:05:45,727 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:05:45,729 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:05:45,732 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:05:45,734 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:05:45,736 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:05:45,738 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:05:45,922 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:05:45,925 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:05:45,927 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:05:45,929 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:05:45,931 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:05:46,122 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:05:46,127 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:05:46,128 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:05:46,130 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:05:46,131 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:05:46,132 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:05:46,133 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:05:46,323 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:05:46,324 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:05:46,325 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:05:46,326 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:05:46,327 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:05:46,328 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:05:46,329 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:05:46,330 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:05:46,521 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:05:46,523 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:05:46,528 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:05:46,529 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:05:46,722 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:05:46,723 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:05:46,724 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:05:46,725 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:05:46,726 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:05:46,728 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:05:46,739 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:05:46,740 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:05:46,921 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:05:46,922 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:05:46,923 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:05:46,928 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:05:46,929 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:05:46,930 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:05:46,931 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:05:46,932 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:05:47,121 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:05:47,122 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:05:47,123 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:05:47,125 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:05:47,126 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:05:47,127 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:06:10,891 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:06:10,895 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 11:06:10,896 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:06:10,897 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:10:00,136 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:10:00,176 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:10:00,188 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:10:00,192 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 11:10:00,195 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 11:10:00,196 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:10:00,197 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:10:00,199 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:10:00,200 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:10:00,201 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:10:00,202 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:10:00,203 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:10:00,372 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:10:00,373 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:10:00,386 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:10:00,390 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:10:00,394 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:10:00,398 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:10:00,400 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:10:00,404 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:10:00,406 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:10:00,407 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:10:00,571 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:10:00,572 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:10:00,573 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:10:00,574 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:10:00,575 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:10:00,576 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:10:00,578 [Thread: 10      ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:10:00,578 [Thread: 10      ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:10:00,580 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:10:00,768 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:10:00,771 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:10:00,772 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:10:00,773 [Thread: 10      ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:10:00,774 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:10:00,786 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:10:00,804 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:10:00,970 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:10:00,974 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:10:00,976 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:10:00,977 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:10:00,979 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:10:00,982 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:10:00,984 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:10:01,169 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:10:01,172 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:10:01,173 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:10:01,181 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:10:01,183 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:10:01,369 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:10:01,370 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:10:01,372 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:10:01,373 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:10:01,401 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:10:01,402 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:10:01,568 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:10:01,570 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:10:01,570 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:10:01,573 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:10:01,575 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:10:01,576 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:10:01,768 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:10:01,769 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:10:01,773 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:10:01,775 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:10:01,975 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:10:01,976 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:10:01,978 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:10:01,979 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:10:01,980 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:10:02,169 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:10:02,170 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:10:02,171 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:10:02,173 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:10:02,369 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:10:02,370 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:10:02,373 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:10:02,374 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:10:02,375 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:10:02,377 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:10:02,378 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:10:02,570 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:10:02,572 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:10:02,576 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:10:02,578 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:10:02,579 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:10:02,580 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:10:02,769 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:10:02,770 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:10:02,771 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:10:02,773 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:10:02,774 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:10:02,775 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:10:02,776 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:10:02,969 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:10:02,970 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:10:03,000 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:10:03,001 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:10:03,003 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:10:03,004 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:10:03,006 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:10:03,008 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:10:03,169 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:10:03,170 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:10:03,171 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:10:03,172 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:10:03,176 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:10:03,177 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:10:03,178 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:10:03,369 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:10:08,908 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:10:08,913 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:10:08,915 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:10:08,916 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:10:08,918 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:10:08,919 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:10:08,921 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:10:08,922 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:10:08,923 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:10:08,924 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:10:08,925 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:10:08,926 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:10:09,120 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:10:09,121 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:10:09,122 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:10:09,123 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:10:09,123 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:10:09,124 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:10:09,125 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:10:09,318 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:10:09,320 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:10:09,321 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:10:09,342 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:10:09,344 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:10:09,519 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:10:09,538 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:10:09,562 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:10:09,564 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:10:09,565 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:10:09,566 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:10:09,567 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:10:09,568 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:10:09,719 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:10:09,721 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:10:09,722 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:10:09,723 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:10:09,919 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:10:09,920 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:10:09,921 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:10:09,948 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:10:09,950 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:10:10,119 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:10:10,120 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:10:10,121 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:10:10,122 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:10:10,124 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:10:10,131 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:10:10,133 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:10:10,134 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:10:10,318 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:10:10,320 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:10:10,321 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:10:10,322 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:10:10,323 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:10:10,518 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:10:10,520 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:10:10,521 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:10:10,522 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:10:10,523 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:10:10,524 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:10:10,525 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:10:10,526 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:10:10,719 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:10:10,720 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:10:10,721 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:10:10,722 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:10:10,723 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:10:10,919 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:10:10,920 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:10:10,921 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:10:10,922 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:10:10,923 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:10:10,924 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:10:10,925 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:10:11,120 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:10:11,121 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:10:11,122 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:10:11,123 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:10:11,124 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:10:11,124 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:10:11,126 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:10:11,127 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:10:11,318 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:10:11,320 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:10:11,321 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:10:11,322 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:10:11,518 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:10:11,520 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:10:11,521 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:10:11,522 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:10:11,523 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:10:11,525 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:10:11,526 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:10:11,535 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:10:11,718 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:10:11,719 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:10:11,721 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:10:11,725 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:10:11,726 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:10:11,727 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:10:11,727 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:10:11,728 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:10:11,919 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:10:11,919 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:10:11,920 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:10:11,921 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:10:11,922 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:10:11,923 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:10:15,073 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:10:15,078 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 11:10:15,079 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:10:15,080 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:11:56,274 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:11:56,315 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:11:56,324 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:11:56,329 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-08-07 11:11:56,331 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-08-07 11:11:56,333 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:11:56,334 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:11:56,335 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:11:56,336 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:11:56,338 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-07 11:11:56,339 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:11:56,340 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:11:56,501 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-07 11:11:56,511 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:11:56,524 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:11:56,527 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:11:56,532 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:11:56,534 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:11:56,535 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:11:56,539 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:11:56,541 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:11:56,542 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:11:56,702 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:11:56,703 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:11:56,704 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:11:56,705 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:11:56,706 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:11:56,707 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:11:56,709 [Thread: 9       ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:11:56,710 [Thread: 9       ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:11:56,711 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:11:56,900 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:11:56,902 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:11:56,904 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:11:56,905 [Thread: 9       ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:11:56,906 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:11:56,918 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:11:56,920 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:11:57,101 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:11:57,104 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:11:57,106 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:11:57,107 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:11:57,109 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:11:57,111 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:11:57,113 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:11:57,301 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:11:57,304 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:11:57,306 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:11:57,314 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:11:57,316 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:11:57,501 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:11:57,502 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:11:57,504 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:11:57,505 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:11:57,506 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:11:57,507 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:11:57,700 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:11:57,702 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:11:57,703 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:11:57,705 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:11:57,707 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:11:57,708 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:11:57,901 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:11:57,902 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:11:57,905 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:11:57,906 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:11:58,101 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:11:58,102 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:11:58,104 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:11:58,105 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:11:58,106 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:11:58,305 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:11:58,307 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:11:58,308 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:11:58,309 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:11:58,501 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:11:58,502 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:11:58,505 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:11:58,506 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:11:58,507 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:11:58,509 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:11:58,510 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:11:58,702 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:11:58,704 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:11:58,708 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:11:58,710 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:11:58,711 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:11:58,712 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:11:58,901 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:11:58,902 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:11:58,904 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:11:58,905 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:11:58,906 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:11:58,908 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:11:58,909 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:11:59,101 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:11:59,102 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:11:59,132 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:11:59,133 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:11:59,134 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:11:59,136 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:11:59,137 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:11:59,139 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:11:59,301 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:11:59,302 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:11:59,303 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:11:59,304 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:11:59,308 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:11:59,309 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:11:59,310 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:11:59,500 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:12:03,569 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:12:03,570 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:12:03,576 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:12:03,577 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:12:03,763 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:12:03,764 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:12:03,765 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:12:03,766 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:12:03,767 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:12:03,769 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:12:03,770 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:12:03,771 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:12:03,963 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:12:03,969 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:12:03,974 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:12:03,975 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:12:03,980 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:12:03,981 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:12:03,986 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:12:03,987 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:12:04,162 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:12:04,164 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:12:04,190 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:12:04,193 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:12:04,362 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:12:04,363 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:12:04,364 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:12:04,365 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:12:04,366 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:12:04,367 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:12:04,368 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:12:04,369 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:12:04,562 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:12:04,575 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:12:04,576 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:12:04,578 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:12:04,762 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:12:04,763 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:12:04,764 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:12:04,798 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:12:04,799 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:12:04,811 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:12:04,962 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:12:04,964 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:12:04,965 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:12:04,966 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:12:04,970 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:12:04,971 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:12:04,972 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:12:04,973 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:12:05,162 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:12:05,164 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:12:05,165 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:12:05,166 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:12:05,167 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:12:05,363 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:12:05,373 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:12:05,374 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:12:05,376 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:12:05,377 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:12:05,378 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:12:05,379 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:12:05,380 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:12:05,562 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:12:05,564 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:12:05,565 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:12:05,566 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:12:05,763 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:12:05,764 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:12:05,765 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:12:05,767 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:12:05,768 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:12:05,769 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:12:05,770 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:12:05,772 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:12:05,962 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:12:05,964 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:12:05,965 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:12:05,965 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:12:05,966 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:12:05,967 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:12:05,968 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:12:06,162 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:12:06,164 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:12:06,165 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:12:06,166 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:12:06,167 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:12:06,365 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:12:06,366 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:12:06,367 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:12:06,369 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:12:06,370 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:12:06,371 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:12:06,373 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:12:06,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:12:06,562 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:12:06,564 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:12:06,568 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:12:06,569 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:12:06,570 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:12:06,570 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:12:06,571 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:12:06,572 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:12:06,762 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:12:06,763 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:12:06,764 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:12:06,765 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:12:06,766 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:12:08,975 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:12:08,977 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 11:12:08,978 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:12:08,978 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:14:36,770 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:14:36,817 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:14:36,828 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:14:36,832 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 11:14:36,834 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 11:14:36,836 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:14:36,837 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:14:36,838 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:14:36,839 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:14:36,840 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:14:36,841 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:14:36,842 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:14:36,977 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:14:36,978 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:14:36,990 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:14:36,993 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:14:37,008 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:14:37,010 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:14:37,011 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:14:37,016 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:14:37,017 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:14:37,019 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:14:37,178 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:14:37,179 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:14:37,180 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:14:37,181 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:14:37,182 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:14:37,183 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:14:37,184 [Thread: 10      ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:14:37,185 [Thread: 10      ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:14:37,186 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:14:37,376 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:14:37,378 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:14:37,379 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:14:37,380 [Thread: 10      ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:14:37,381 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:14:37,392 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:14:37,395 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:14:37,577 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:14:37,580 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:14:37,581 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:14:37,583 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:14:37,584 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:14:37,586 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:14:37,588 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:14:37,777 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:14:37,780 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:14:37,781 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:14:37,789 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:14:37,793 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:14:37,977 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:14:37,978 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:14:37,979 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:14:37,980 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:14:37,981 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:14:37,982 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:14:38,177 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:14:38,178 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:14:38,179 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:14:38,181 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:14:38,183 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:14:38,184 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:14:38,376 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:14:38,377 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:14:38,380 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:14:38,382 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:14:38,576 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:14:38,577 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:14:38,579 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:14:38,580 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:14:38,581 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:14:38,777 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:14:38,778 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:14:38,779 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:14:38,780 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:14:38,977 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:14:38,979 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:14:38,982 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:14:38,983 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:14:38,985 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:14:38,986 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:14:38,988 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:14:39,178 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:14:39,179 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:14:39,184 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:14:39,185 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:14:39,186 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:14:39,187 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:14:39,377 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:14:39,378 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:14:39,379 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:14:39,380 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:14:39,381 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:14:39,382 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:14:39,383 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:14:39,581 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:14:39,583 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:14:39,612 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:14:39,614 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:14:39,615 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:14:39,616 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:14:39,617 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:14:39,619 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:14:39,781 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:14:39,782 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:14:39,788 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:14:39,789 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:14:39,793 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:14:39,795 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:14:39,796 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:14:39,980 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:14:44,140 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:14:44,141 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:14:44,143 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:14:44,145 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:14:44,152 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:14:44,153 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:14:44,154 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:14:44,155 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:14:44,156 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:14:44,157 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:14:44,158 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:14:44,353 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:14:44,355 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:14:44,356 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:14:44,357 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:14:44,358 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:14:44,359 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:14:44,360 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:14:44,361 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:14:44,599 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:14:44,600 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:14:44,601 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:14:44,625 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:14:44,626 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:14:44,790 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:14:44,791 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:14:44,792 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:14:44,793 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:14:44,794 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:14:44,795 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:14:44,795 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:14:44,796 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:14:44,990 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:14:44,991 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:14:44,992 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:14:44,993 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:14:45,191 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:14:45,192 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:14:45,193 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:14:45,212 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:14:45,214 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:14:45,390 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:14:45,391 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:14:45,392 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:14:45,393 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:14:45,394 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:14:45,398 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:14:45,398 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:14:45,399 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:14:45,604 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:14:45,605 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:14:45,606 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:14:45,607 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:14:45,608 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:14:45,821 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:14:45,822 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:14:45,823 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:14:45,824 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:14:45,825 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:14:45,826 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:14:45,827 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:14:45,828 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:14:46,007 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:14:46,007 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:14:46,008 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:14:46,009 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:14:46,010 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:14:46,207 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:14:46,208 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:14:46,209 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:14:46,210 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:14:46,211 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:14:46,212 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:14:46,213 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:14:46,407 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:14:46,409 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:14:46,409 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:14:46,411 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:14:46,411 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:14:46,412 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:14:46,413 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:14:46,414 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:14:46,606 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:14:46,608 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:14:46,608 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:14:46,609 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:14:46,806 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:14:46,807 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:14:46,808 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:14:46,809 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:14:46,811 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:14:46,813 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:14:46,814 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:14:46,815 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:14:47,006 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:14:47,007 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:14:47,009 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:14:47,013 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:14:47,013 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:14:47,014 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:14:47,015 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:14:47,016 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:14:47,206 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:14:47,207 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:14:47,208 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:14:47,209 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:14:47,210 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:14:47,211 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:14:50,037 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:14:50,038 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 11:14:50,039 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:14:50,040 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:35:40,671 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:35:40,738 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:35:40,750 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:35:40,754 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 11:35:40,756 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 11:35:40,757 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:35:40,758 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:35:40,759 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:35:40,760 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:35:40,761 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:35:40,762 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:35:40,763 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:35:40,888 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:35:40,888 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:35:40,901 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:35:40,906 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:35:40,912 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:35:40,914 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:35:40,917 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:35:40,922 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:35:40,923 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:35:40,924 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:35:41,089 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:35:41,094 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:35:41,095 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:35:41,097 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:35:41,098 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:35:41,099 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:35:41,100 [Thread: 10      ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:35:41,101 [Thread: 10      ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:35:41,102 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:35:41,287 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:35:41,289 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:35:41,291 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:35:41,292 [Thread: 10      ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:35:41,293 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:35:41,305 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:35:41,307 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:35:41,488 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:35:41,491 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:35:41,493 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:35:41,494 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:35:41,496 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:35:41,498 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:35:41,500 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:35:41,688 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:35:41,691 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:35:41,692 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:35:41,700 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:35:41,702 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:35:41,888 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:35:41,893 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:35:41,895 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:35:41,896 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:35:41,897 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:35:41,898 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:35:42,088 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:35:42,089 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:35:42,090 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:35:42,092 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:35:42,094 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:35:42,095 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:35:42,288 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:35:42,289 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:35:42,291 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:35:42,293 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:35:42,488 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:35:42,489 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:35:42,490 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:35:42,491 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:35:42,493 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:35:42,688 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:35:42,689 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:35:42,691 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:35:42,692 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:35:42,888 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:35:42,893 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:35:42,896 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:35:42,897 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:35:42,899 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:35:42,900 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:35:42,901 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:35:43,089 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:35:43,090 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:35:43,094 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:35:43,096 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:35:43,097 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:35:43,099 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:35:43,288 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:35:43,289 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:35:43,290 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:35:43,291 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:35:43,293 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:35:43,294 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:35:43,295 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:35:43,488 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:35:43,489 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:35:43,519 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:35:43,520 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:35:43,522 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:35:43,524 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:35:43,525 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:35:43,527 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:35:43,688 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:35:43,689 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:35:43,690 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:35:43,691 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:35:43,695 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:35:43,696 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:35:43,698 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:35:43,888 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:35:44,424 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:35:44,427 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:35:50,477 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:35:50,478 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:35:50,479 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:35:50,480 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:35:50,481 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:35:50,482 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:35:50,483 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:35:50,484 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:35:50,653 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:35:50,654 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:35:50,656 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:35:50,657 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:35:50,658 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:35:50,659 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:35:50,660 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:35:50,661 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:35:50,852 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:35:50,854 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:35:50,855 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:35:50,856 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:35:50,879 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:35:51,053 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:35:51,054 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:35:51,055 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:35:51,056 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:35:51,057 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:35:51,058 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:35:51,059 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:35:51,060 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:35:51,252 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:35:51,254 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:35:51,255 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:35:51,256 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:35:51,456 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:35:51,457 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:35:51,458 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:35:51,459 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:35:51,479 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:35:51,653 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:35:51,654 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:35:51,655 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:35:51,656 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:35:51,657 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:35:51,660 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:35:51,661 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:35:51,663 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:35:51,852 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:35:51,859 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:35:51,860 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:35:51,861 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:35:51,862 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:35:52,052 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:35:52,054 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:35:52,055 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:35:52,056 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:35:52,057 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:35:52,058 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:35:52,060 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:35:52,061 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:35:52,252 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:35:52,258 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:35:52,259 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:35:52,260 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:35:52,261 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:35:52,452 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:35:52,454 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:35:52,455 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:35:52,456 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:35:52,457 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:35:52,458 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:35:52,459 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:35:52,653 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:35:52,655 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:35:52,656 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:35:52,657 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:35:52,658 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:35:52,659 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:35:52,660 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:35:52,865 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:35:52,866 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:35:52,867 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:35:52,869 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:35:52,870 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:35:53,052 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:35:53,054 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:35:53,055 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:35:53,056 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:35:53,057 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:35:53,058 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:35:53,060 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:35:53,062 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:35:53,252 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:35:53,253 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:35:53,254 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:35:53,258 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:35:53,259 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:35:53,260 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:35:53,261 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:35:53,262 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:35:53,452 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:35:53,453 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:35:53,455 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:35:53,456 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:35:53,457 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:35:53,458 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:35:53,459 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:35:55,939 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:35:55,940 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 11:35:55,941 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:35:55,942 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:36:46,229 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:36:46,281 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:36:46,291 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:36:46,296 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-08-07 11:36:46,299 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-08-07 11:36:46,301 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:36:46,303 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:36:46,304 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:36:46,305 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:36:46,306 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-08-07 11:36:46,308 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:36:46,309 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:36:46,440 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-08-07 11:36:46,441 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:36:46,454 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:36:46,457 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:36:46,459 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:36:46,461 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:36:46,462 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:36:46,467 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:36:46,468 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:36:46,469 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:36:46,642 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:36:46,643 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:36:46,645 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:36:46,646 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:36:46,647 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:36:46,649 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:36:46,650 [Thread: 8       ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:36:46,651 [Thread: 8       ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:36:46,653 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:36:46,841 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:36:46,842 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:36:46,843 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:36:46,844 [Thread: 8       ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:36:46,845 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:36:46,859 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:36:46,861 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:36:47,041 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:36:47,044 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:36:47,046 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:36:47,047 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:36:47,049 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:36:47,051 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:36:47,053 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:36:47,241 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:36:47,244 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:36:47,245 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:36:47,253 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:36:47,255 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:36:47,441 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:36:47,443 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:36:47,444 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:36:47,445 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:36:47,446 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:36:47,447 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:36:47,640 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:36:47,641 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:36:47,642 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:36:47,645 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:36:47,646 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:36:47,647 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:36:47,840 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:36:47,841 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:36:47,844 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:36:47,845 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:36:48,040 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:36:48,041 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:36:48,043 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:36:48,044 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:36:48,045 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:36:48,241 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:36:48,242 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:36:48,243 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:36:48,244 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:36:48,441 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:36:48,442 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:36:48,444 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:36:48,446 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:36:48,447 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:36:48,448 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:36:48,449 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:36:48,642 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:36:48,649 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:36:48,653 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:36:48,654 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:36:48,655 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:36:48,657 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:36:48,841 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:36:48,842 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:36:48,843 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:36:48,844 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:36:48,845 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:36:48,846 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:36:48,847 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:36:49,041 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:36:49,042 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:36:49,072 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:36:49,074 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:36:49,075 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:36:49,076 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:36:49,077 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:36:49,078 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:36:49,241 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:36:49,242 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:36:49,243 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:36:49,244 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:36:49,248 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:36:49,249 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:36:49,250 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:36:49,441 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:37:21,432 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:37:21,475 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:37:21,476 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:37:21,484 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:37:21,485 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:37:21,486 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:37:21,487 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:37:21,488 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:37:21,489 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:37:21,637 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:37:21,638 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:37:21,639 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:37:21,641 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:37:21,642 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:37:21,643 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:37:21,644 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:37:21,836 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:37:21,853 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:37:21,857 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:37:21,858 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:37:21,863 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:37:22,036 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:37:22,061 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:37:22,062 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:37:22,063 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:37:22,064 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:37:22,065 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:37:22,066 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:37:22,067 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:37:22,236 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:37:22,237 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:37:22,243 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:37:22,248 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:37:22,463 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:37:22,464 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:37:22,466 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:37:22,467 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:37:22,468 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:37:22,469 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:37:22,670 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:37:22,671 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:37:22,672 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:37:22,673 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:37:22,674 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:37:22,675 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:37:22,679 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:37:22,864 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:37:22,867 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:37:22,869 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:37:22,872 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:37:22,874 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:37:23,065 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:37:23,067 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:37:23,070 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:37:23,073 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:37:23,075 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:37:23,078 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:37:23,081 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:37:23,084 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:37:23,262 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:37:23,263 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:37:23,265 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:37:23,266 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:37:23,266 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:37:23,267 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:37:23,268 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:37:23,462 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:37:23,464 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:37:23,465 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:37:23,466 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:37:23,467 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:37:23,662 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:37:23,663 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:37:23,665 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:37:23,666 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:37:23,667 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:37:23,668 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:37:23,669 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:37:23,670 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:37:23,863 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:37:23,864 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:37:23,865 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:37:23,866 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:37:24,063 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:37:24,064 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:37:24,065 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:37:24,066 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:37:24,067 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:37:24,068 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:37:24,069 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:37:24,070 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:37:24,275 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:37:24,276 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:37:24,277 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:37:24,278 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:37:24,279 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:37:24,280 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:37:24,285 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:37:24,285 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:37:24,473 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:37:24,473 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:37:24,474 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:37:24,475 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:37:24,476 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:37:24,477 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:37:24,478 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:37:24,479 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:37:24,672 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:37:27,119 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:37:27,120 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 11:37:27,121 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:37:27,122 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:40:56,910 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:40:56,949 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:40:56,957 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:40:56,961 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 11:40:56,964 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 11:40:56,965 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:40:56,966 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:40:56,967 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:40:56,968 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:40:56,969 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:40:56,970 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:40:56,971 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:40:57,140 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:40:57,141 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:40:57,154 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:40:57,157 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:40:57,159 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:40:57,161 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:40:57,162 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:40:57,168 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:40:57,169 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:40:57,170 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:40:57,342 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:40:57,343 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:40:57,344 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:40:57,345 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:40:57,346 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:40:57,347 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:40:57,348 [Thread: 10      ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:40:57,349 [Thread: 10      ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:40:57,350 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:40:57,540 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:40:57,542 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:40:57,543 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:40:57,544 [Thread: 10      ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:40:57,545 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:40:57,557 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:40:57,559 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:40:57,744 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:40:57,747 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:40:57,749 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:40:57,750 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:40:57,752 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:40:57,754 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:40:57,756 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:40:57,943 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:40:57,946 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:40:57,947 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:40:57,955 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:40:57,957 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:40:58,181 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:40:58,209 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:40:58,211 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:40:58,212 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:40:58,213 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:40:58,214 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:40:58,363 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:40:58,364 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:40:58,365 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:40:58,367 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:40:58,369 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:40:58,370 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:40:58,563 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:40:58,564 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:40:58,567 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:40:58,569 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:40:58,763 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:40:58,774 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:40:58,776 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:40:58,777 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:40:58,778 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:40:58,963 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:40:58,964 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:40:58,965 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:40:58,966 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:40:59,163 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:40:59,164 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:40:59,167 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:40:59,169 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:40:59,170 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:40:59,171 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:40:59,172 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:40:59,364 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:40:59,379 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:40:59,383 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:40:59,385 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:40:59,386 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:40:59,388 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:40:59,563 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:40:59,564 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:40:59,565 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:40:59,567 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:40:59,568 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:40:59,569 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:40:59,570 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:40:59,763 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:40:59,764 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:40:59,793 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:40:59,800 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:40:59,801 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:40:59,802 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:40:59,803 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:40:59,805 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:40:59,963 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:40:59,964 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:40:59,965 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:40:59,967 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:40:59,972 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:40:59,974 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:40:59,975 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:41:00,163 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:41:03,720 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:41:03,723 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:41:03,726 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:41:03,727 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:41:03,736 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:41:03,738 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:41:03,739 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:41:03,740 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:41:03,741 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:41:03,742 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:41:03,743 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:41:03,937 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:41:03,938 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:41:03,940 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:41:03,941 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:41:03,941 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:41:03,942 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:41:03,943 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:41:03,944 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:41:04,136 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:41:04,138 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:41:04,139 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:41:04,167 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:41:04,168 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:41:04,337 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:41:04,338 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:41:04,339 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:41:04,340 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:41:04,341 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:41:04,341 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:41:04,342 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:41:04,343 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:41:04,536 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:41:04,537 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:41:04,538 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:41:04,539 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:41:04,736 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:41:04,737 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:41:04,738 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:41:04,761 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:41:04,762 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:41:04,936 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:41:04,937 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:41:04,938 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:41:04,939 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:41:04,940 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:41:04,943 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:41:04,944 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:41:04,945 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:41:05,136 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:41:05,137 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:41:05,139 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:41:05,140 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:41:05,141 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:41:05,336 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:41:05,337 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:41:05,338 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:41:05,339 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:41:05,340 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:41:05,341 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:41:05,342 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:41:05,343 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:41:05,537 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:41:05,538 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:41:05,539 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:41:05,540 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:41:05,541 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:41:05,737 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:41:05,747 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:41:05,748 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:41:05,749 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:41:05,750 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:41:05,751 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:41:05,752 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:41:05,937 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:41:05,938 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:41:05,939 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:41:05,940 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:41:05,941 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:41:05,942 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:41:05,943 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:41:05,944 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:41:06,136 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:41:06,138 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:41:06,139 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:41:06,140 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:41:06,336 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:41:06,337 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:41:06,338 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:41:06,339 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:41:06,341 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:41:06,342 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:41:06,344 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:41:06,345 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:41:06,536 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:41:06,537 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:41:06,538 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:41:06,542 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:41:06,543 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:41:06,544 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:41:06,545 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:41:06,546 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:41:06,736 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:41:06,737 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:41:06,738 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:41:06,739 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:41:06,740 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:41:06,741 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:41:09,118 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:41:09,119 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 11:41:09,120 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:41:09,121 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:47:09,751 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 11:47:09,798 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 11:47:09,808 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 11:47:09,811 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 11:47:09,813 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 11:47:09,814 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 11:47:09,815 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 11:47:09,816 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 11:47:09,817 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 11:47:09,818 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:47:09,819 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:47:09,820 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 11:47:09,966 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 11:47:09,967 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 11:47:09,979 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 11:47:09,983 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 11:47:09,986 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 11:47:09,987 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 11:47:09,988 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 11:47:09,994 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 11:47:09,996 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 11:47:09,997 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 11:47:10,167 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 11:47:10,178 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 11:47:10,179 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 11:47:10,180 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 11:47:10,181 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 11:47:10,183 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 11:47:10,184 [Thread: 10      ] [DEBUG] -- Found 14 <object> elements defining objects.
2019-08-07 11:47:10,185 [Thread: 10      ] [DEBUG] -- Loaded 14 object definitions from location [spring-objects.xml]
2019-08-07 11:47:10,191 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 11:47:10,365 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 11:47:10,367 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 11:47:10,369 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 11:47:10,370 [Thread: 10      ] [DEBUG] -- 14 objects defined in application context [spring.root].
2019-08-07 11:47:10,371 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 11:47:10,383 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:47:10,386 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 11:47:10,566 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 11:47:10,570 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 11:47:10,572 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 11:47:10,574 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 11:47:10,576 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:47:10,578 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 11:47:10,580 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 11:47:10,766 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 11:47:10,778 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 11:47:10,780 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 11:47:10,788 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 11:47:10,810 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 11:47:10,966 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 11:47:10,968 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:47:10,969 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:47:10,971 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:47:10,972 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 11:47:10,973 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 11:47:11,165 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 11:47:11,167 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 11:47:11,168 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 11:47:11,170 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 11:47:11,172 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:47:11,173 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 11:47:11,366 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 46].
2019-08-07 11:47:11,367 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 11:47:11,370 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:47:11,371 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:47:11,566 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 40].
2019-08-07 11:47:11,567 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 11:47:11,568 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 11:47:11,569 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 11:47:11,571 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 11:47:11,766 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:47:11,767 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:47:11,768 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2019-08-07 11:47:11,769 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 11:47:11,966 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 11:47:11,967 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 11:47:11,970 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:47:11,971 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:47:11,973 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:47:11,974 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:47:11,975 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:47:12,167 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:47:12,168 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:47:12,173 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:47:12,174 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:47:12,175 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:47:12,177 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:47:12,366 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:47:12,367 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:47:12,368 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:47:12,370 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:47:12,371 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 11:47:12,373 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 11:47:12,374 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 11:47:12,566 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 11:47:12,567 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 11:47:12,597 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 11:47:12,598 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 11:47:12,599 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 11:47:12,600 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:47:12,601 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:47:12,603 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 11:47:12,766 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 11:47:12,767 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 11:47:12,768 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:47:12,769 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:47:12,773 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 11:47:12,774 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 11:47:12,775 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 11:47:12,966 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 11:47:16,935 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 11:47:16,937 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 11:47:16,939 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 11:47:16,940 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 11:47:16,942 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:47:16,944 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:47:16,945 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:47:16,946 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:47:16,947 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 11:47:16,949 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 11:47:16,952 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 11:47:17,142 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:47:17,144 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:47:17,146 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 11:47:17,147 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 11:47:17,147 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 11:47:17,148 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:47:17,149 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:47:17,150 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:47:17,342 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:47:17,344 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 54].
2019-08-07 11:47:17,345 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 11:47:17,375 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 11:47:17,376 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 11:47:17,543 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 11:47:17,544 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 11:47:17,545 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 11:47:17,546 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 11:47:17,547 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:47:17,548 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:47:17,549 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:47:17,550 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 11:47:17,742 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 59].
2019-08-07 11:47:17,744 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 11:47:17,745 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 11:47:17,746 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 11:47:17,943 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 11:47:17,956 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 11:47:17,957 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 11:47:17,978 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 11:47:17,979 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 11:47:18,143 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 11:47:18,144 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 11:47:18,145 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 11:47:18,145 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 11:47:18,146 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:47:18,150 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:47:18,151 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:47:18,152 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 11:47:18,342 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 64].
2019-08-07 11:47:18,359 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 11:47:18,362 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 11:47:18,364 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 11:47:18,365 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 11:47:18,542 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:47:18,544 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:47:18,544 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:47:18,545 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:47:18,547 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 11:47:18,548 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 11:47:18,549 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 11:47:18,550 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:47:18,742 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:47:18,744 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 11:47:18,745 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:47:18,746 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 69].
2019-08-07 11:47:18,747 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 11:47:18,943 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 11:47:18,944 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 11:47:18,945 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 11:47:18,947 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 11:47:18,948 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 11:47:18,949 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 11:47:18,950 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 11:47:19,144 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 11:47:19,145 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 11:47:19,146 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 11:47:19,147 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 11:47:19,148 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 11:47:19,149 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:47:19,150 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 11:47:19,151 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 75].
2019-08-07 11:47:19,342 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 11:47:19,344 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 11:47:19,345 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 11:47:19,346 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 11:47:19,543 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 11:47:19,544 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 11:47:19,545 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:47:19,547 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:47:19,549 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 11:47:19,550 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 11:47:19,552 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 11:47:19,553 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 11:47:19,742 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 11:47:19,743 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 11:47:19,745 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:47:19,749 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:47:19,750 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:47:19,751 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 11:47:19,752 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 11:47:19,753 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 11:47:19,944 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 11:47:19,945 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 11:47:19,946 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 11:47:19,947 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 11:47:19,948 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 11:47:19,949 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 11:47:21,818 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 11:47:21,824 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 11:47:21,825 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 11:47:21,826 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 11:50:29,071 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 11:50:29,073 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 11:50:29,075 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 11:50:29,076 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 12:06:04,649 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 12:06:04,712 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 12:06:04,723 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 12:06:04,727 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2019-08-07 12:06:04,730 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2019-08-07 12:06:04,732 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 12:06:04,733 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 12:06:04,734 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2019-08-07 12:06:04,735 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2019-08-07 12:06:04,737 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-08-07 12:06:04,738 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-08-07 12:06:04,739 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 12:06:04,867 [Thread: 8       ] [DEBUG] -- Default init method ''.
2019-08-07 12:06:04,868 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2019-08-07 12:06:04,885 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 12:06:04,888 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-07 12:06:04,890 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 12:06:04,894 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 12:06:04,896 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 12:06:04,897 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 12:06:04,902 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 12:06:04,904 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 12:06:05,067 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 12:06:05,069 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 12:06:05,070 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 12:06:05,071 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 12:06:05,072 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 12:06:05,073 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 12:06:05,074 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 12:06:05,075 [Thread: 8       ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-08-07 12:06:05,076 [Thread: 8       ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-08-07 12:06:05,267 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 12:06:05,267 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 12:06:05,269 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 12:06:05,270 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 12:06:05,271 [Thread: 8       ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-08-07 12:06:05,272 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 12:06:05,284 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 12:06:05,468 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 12:06:05,479 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 12:06:05,482 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 12:06:05,484 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 12:06:05,485 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 12:06:05,487 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:06:05,489 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 12:06:05,492 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 12:06:05,667 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 12:06:05,675 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 12:06:05,677 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 12:06:05,680 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 12:06:05,868 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 12:06:05,869 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 12:06:05,870 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:06:05,872 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:06:05,873 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-07 12:06:05,874 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-07 12:06:05,875 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 12:06:06,066 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-07 12:06:06,067 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-07 12:06:06,068 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-07 12:06:06,069 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-07 12:06:06,070 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-07 12:06:06,266 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-07 12:06:06,267 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-07 12:06:06,268 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-07 12:06:06,269 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 12:06:06,270 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 12:06:06,271 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-07 12:06:06,468 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 12:06:06,470 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 12:06:06,472 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 12:06:06,477 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 12:06:06,479 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 12:06:06,481 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 12:06:06,483 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 48].
2019-08-07 12:06:06,668 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 12:06:06,674 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 12:06:06,678 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 12:06:06,680 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-08-07 12:06:06,868 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 12:06:06,871 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 12:06:06,874 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 12:06:06,876 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 12:06:07,067 [Thread: 8       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 12:06:07,069 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 12:06:07,070 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 30].
2019-08-07 12:06:07,071 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 12:06:07,268 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 12:06:07,270 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 12:06:07,275 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 12:06:07,281 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:06:07,283 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 12:06:07,284 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:06:07,285 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:06:07,468 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 12:06:07,469 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:06:07,471 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 12:06:07,472 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:06:07,474 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:06:07,475 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 12:06:07,476 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:06:07,667 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 12:06:07,668 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:06:07,669 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:06:07,670 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-07 12:06:07,671 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-07 12:06:07,672 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-07 12:06:07,673 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-07 12:06:07,867 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-07 12:06:07,868 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 12:06:07,869 [Thread: 8       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:06:07,870 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 12:06:07,871 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:06:07,872 [Thread: 8       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:06:07,902 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 12:06:08,067 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 12:06:08,068 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 12:06:08,069 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 12:06:08,070 [Thread: 8       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 12:06:08,072 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 12:06:08,073 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 12:06:08,074 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 12:06:08,271 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 12:06:08,272 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 12:06:08,277 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 12:06:08,278 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 12:06:08,281 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 12:06:08,282 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 12:06:08,810 [Thread: 8       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 12:06:14,290 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 12:06:16,153 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 12:06:17,537 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 12:06:17,538 [Thread: 8       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 12:06:17,540 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 12:06:17,542 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 12:06:17,543 [Thread: 8       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 12:06:17,544 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 12:06:17,545 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 12:06:17,546 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 12:06:17,564 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 12:06:17,565 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 12:06:17,567 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 12:06:17,568 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 12:06:17,569 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 12:06:17,569 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 12:06:17,570 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 12:06:17,571 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 12:06:17,763 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 12:06:17,764 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 56].
2019-08-07 12:06:17,765 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 12:06:17,795 [Thread: 8       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 12:06:17,796 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 12:06:17,963 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 12:06:17,964 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 12:06:17,965 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 12:06:17,966 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 12:06:17,967 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 12:06:17,968 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 12:06:17,969 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 12:06:18,168 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 12:06:18,169 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 61].
2019-08-07 12:06:18,170 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 12:06:18,171 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 12:06:18,364 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 12:06:18,365 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 12:06:18,366 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 12:06:18,367 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 12:06:18,399 [Thread: 8       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 12:06:18,400 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 12:06:18,563 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 12:06:18,564 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 12:06:18,565 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 12:06:18,566 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 12:06:18,567 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 12:06:18,568 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 12:06:18,569 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 12:06:18,570 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 12:06:18,763 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 66].
2019-08-07 12:06:18,767 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 12:06:18,768 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 12:06:18,769 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 12:06:18,770 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 12:06:18,963 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 12:06:18,964 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 12:06:18,965 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 12:06:18,966 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 12:06:18,968 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 12:06:18,969 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 12:06:18,969 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 12:06:18,970 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 12:06:19,163 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 12:06:19,164 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 12:06:19,165 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 12:06:19,166 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 71].
2019-08-07 12:06:19,363 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 12:06:19,365 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 12:06:19,366 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 12:06:19,367 [Thread: 8       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 12:06:19,368 [Thread: 8       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 12:06:19,369 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 12:06:19,370 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 12:06:19,564 [Thread: 8       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 12:06:19,566 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 12:06:19,566 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 12:06:19,567 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 12:06:19,568 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 12:06:19,569 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 12:06:19,570 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 12:06:19,571 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 12:06:19,763 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 77].
2019-08-07 12:06:19,764 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 12:06:19,765 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 12:06:19,766 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 12:06:19,767 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 12:06:19,985 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 12:06:19,986 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 12:06:19,987 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 12:06:19,988 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 12:06:19,990 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 12:06:19,991 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 12:06:19,992 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 12:06:22,362 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 12:06:22,370 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 12:06:22,403 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 12:06:22,403 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 12:06:22,404 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 12:06:22,405 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 12:06:22,406 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 12:06:26,010 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 12:06:27,507 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 12:06:38,907 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 12:06:47,092 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 12:06:47,119 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 12:06:47,120 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 12:06:47,121 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 12:06:47,274 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 12:06:47,275 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 12:06:47,277 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 12:06:47,277 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 12:06:47,278 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 12:08:01,647 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 12:08:01,649 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 12:08:01,650 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 12:08:01,651 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 12:09:57,441 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 12:09:57,479 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 12:09:57,488 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 12:09:57,491 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 12:09:57,493 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 12:09:57,495 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 12:09:57,496 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 12:09:57,497 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 12:09:57,498 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 12:09:57,500 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 12:09:57,501 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 12:09:57,502 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 12:09:57,653 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 12:09:57,654 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 12:09:57,667 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 12:09:57,670 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-07 12:09:57,672 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 12:09:57,674 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 12:09:57,676 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 12:09:57,677 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 12:09:57,683 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 12:09:57,689 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 12:09:57,853 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 12:09:57,855 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 12:09:57,856 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 12:09:57,858 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 12:09:57,859 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 12:09:57,860 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 12:09:57,861 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 12:09:57,863 [Thread: 10      ] [DEBUG] -- Found 15 <object> elements defining objects.
2019-08-07 12:09:57,864 [Thread: 10      ] [DEBUG] -- Loaded 15 object definitions from location [spring-objects.xml]
2019-08-07 12:09:58,053 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 12:09:58,054 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 12:09:58,056 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 12:09:58,057 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 12:09:58,058 [Thread: 10      ] [DEBUG] -- 15 objects defined in application context [spring.root].
2019-08-07 12:09:58,059 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 12:09:58,071 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 12:09:58,254 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 12:09:58,256 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 12:09:58,258 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 12:09:58,260 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 12:09:58,261 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 12:09:58,263 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:09:58,265 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 12:09:58,267 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 12:09:58,453 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 12:09:58,465 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 12:09:58,466 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 12:09:58,469 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 12:09:58,674 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 12:09:58,675 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 12:09:58,677 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:09:58,678 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:09:58,679 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-07 12:09:58,680 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-07 12:09:58,681 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 12:09:58,852 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-07 12:09:58,853 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-07 12:09:58,854 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-07 12:09:58,855 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-07 12:09:58,856 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-07 12:09:59,052 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-07 12:09:59,058 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-07 12:09:59,058 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-07 12:09:59,059 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 12:09:59,060 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 12:09:59,061 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-07 12:09:59,266 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 12:09:59,267 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 12:09:59,268 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 12:09:59,271 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 12:09:59,273 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 12:09:59,274 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 12:09:59,275 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 48].
2019-08-07 12:09:59,453 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 12:09:59,456 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 12:09:59,458 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 12:09:59,459 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 42].
2019-08-07 12:09:59,655 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 12:09:59,657 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 12:09:59,662 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 12:09:59,663 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 12:09:59,853 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 12:09:59,854 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 12:09:59,855 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 30].
2019-08-07 12:09:59,856 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 12:10:00,053 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 12:10:00,054 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 12:10:00,056 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 12:10:00,058 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:10:00,059 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 12:10:00,061 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:10:00,062 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:10:00,254 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 12:10:00,255 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:10:00,256 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 12:10:00,258 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:10:00,264 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:10:00,265 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 12:10:00,267 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:10:00,453 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 12:10:00,454 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:10:00,455 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:10:00,456 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-07 12:10:00,458 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-07 12:10:00,459 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-07 12:10:00,460 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-07 12:10:00,653 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-07 12:10:00,658 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 12:10:00,659 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 12:10:00,660 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 12:10:00,662 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 12:10:00,663 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 12:10:00,693 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 12:10:00,853 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 12:10:00,854 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 12:10:00,855 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 12:10:00,856 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 12:10:00,858 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 12:10:00,859 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 12:10:00,860 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 12:10:01,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 12:10:01,058 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 12:10:01,062 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 12:10:01,069 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 12:10:01,070 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 12:10:01,072 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 12:10:07,811 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 12:10:07,822 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 12:10:07,824 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 12:10:07,825 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 12:10:07,826 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 12:10:07,827 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 12:10:07,828 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 12:10:07,829 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 12:10:07,830 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 12:10:08,020 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 12:10:08,022 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 12:10:08,023 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 12:10:08,025 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 12:10:08,026 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 12:10:08,027 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 12:10:08,028 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 12:10:08,029 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 12:10:08,220 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 12:10:08,221 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 12:10:08,222 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 12:10:08,224 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 56].
2019-08-07 12:10:08,225 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 12:10:08,442 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 12:10:08,444 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 12:10:08,449 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 12:10:08,452 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 12:10:08,453 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 12:10:08,454 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 12:10:08,455 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 12:10:08,620 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 12:10:08,621 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 12:10:08,622 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 12:10:08,623 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 61].
2019-08-07 12:10:08,624 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 12:10:08,820 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 12:10:08,843 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 12:10:08,845 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 12:10:08,847 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 12:10:08,848 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 12:10:09,020 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 12:10:09,025 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 12:10:09,026 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 12:10:09,027 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 12:10:09,028 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 12:10:09,029 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 12:10:09,029 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 12:10:09,030 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 12:10:09,220 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 12:10:09,222 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 12:10:09,227 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 66].
2019-08-07 12:10:09,228 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 12:10:09,229 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 12:10:09,420 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 12:10:09,421 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 12:10:09,423 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 12:10:09,424 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 12:10:09,425 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 12:10:09,426 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 12:10:09,427 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 12:10:09,621 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 12:10:09,622 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 12:10:09,623 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 12:10:09,624 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 12:10:09,625 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 12:10:09,626 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 12:10:09,627 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 71].
2019-08-07 12:10:09,820 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 12:10:09,822 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 12:10:09,823 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 12:10:09,824 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 12:10:09,825 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 12:10:10,020 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 12:10:10,022 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 12:10:10,023 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 12:10:10,025 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 12:10:10,026 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 12:10:10,027 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 12:10:10,028 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 12:10:10,029 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 12:10:10,220 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 12:10:10,221 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 12:10:10,222 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 77].
2019-08-07 12:10:10,223 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 12:10:10,226 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 12:10:10,420 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 12:10:10,435 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 12:10:10,437 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 12:10:10,438 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 12:10:10,439 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 12:10:10,440 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 12:10:10,441 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 12:10:10,446 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 12:10:10,621 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 12:10:10,621 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 12:10:10,624 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 12:10:10,633 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 12:10:10,640 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 12:10:10,642 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 12:10:10,644 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 12:10:10,822 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 12:10:11,022 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 12:10:11,025 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 12:10:11,028 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 12:10:11,030 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 12:10:11,224 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 12:10:11,227 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 12:10:11,229 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 12:10:11,230 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 12:10:11,232 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 12:10:11,234 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 12:10:11,236 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 12:10:11,422 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 12:10:28,226 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 12:10:28,228 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 12:10:28,229 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 12:10:28,230 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 14:20:59,183 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 14:20:59,231 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 14:20:59,240 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 14:20:59,245 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2019-08-07 14:20:59,248 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2019-08-07 14:20:59,249 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 14:20:59,250 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 14:20:59,252 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2019-08-07 14:20:59,253 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2019-08-07 14:20:59,254 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-07 14:20:59,255 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-07 14:20:59,256 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 14:20:59,391 [Thread: 9       ] [DEBUG] -- Default init method ''.
2019-08-07 14:20:59,393 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2019-08-07 14:20:59,411 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 14:20:59,415 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-07 14:20:59,416 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-07 14:20:59,418 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 14:20:59,422 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 14:20:59,423 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 14:20:59,425 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 14:20:59,429 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 14:20:59,591 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 14:20:59,592 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 14:20:59,594 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 14:20:59,595 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 14:20:59,596 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 14:20:59,598 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 14:20:59,599 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 14:20:59,600 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 14:20:59,797 [Thread: 9       ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-07 14:20:59,802 [Thread: 9       ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-07 14:20:59,807 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 14:20:59,813 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 14:20:59,815 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 14:20:59,816 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 14:20:59,817 [Thread: 9       ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-07 14:20:59,818 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 14:20:59,831 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 14:21:00,000 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 14:21:00,005 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 14:21:00,012 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 14:21:00,016 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 14:21:00,019 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 14:21:00,024 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:21:00,029 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 14:21:00,199 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 14:21:00,202 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 14:21:00,210 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 14:21:00,213 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 14:21:00,396 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 14:21:00,399 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 14:21:00,401 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 14:21:00,403 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:21:00,405 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:21:00,406 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-07 14:21:00,407 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-07 14:21:00,410 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 14:21:00,594 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-07 14:21:00,596 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-07 14:21:00,599 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-07 14:21:00,601 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-07 14:21:00,794 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-07 14:21:00,796 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-07 14:21:00,797 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-07 14:21:00,799 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-07 14:21:00,800 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-07 14:21:00,801 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-07 14:21:00,802 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-07 14:21:00,994 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-07 14:21:01,004 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-07 14:21:01,007 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-07 14:21:01,009 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-07 14:21:01,010 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-07 14:21:01,011 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-07 14:21:01,194 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-07 14:21:01,197 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-07 14:21:01,199 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 14:21:01,200 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 14:21:01,201 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-07 14:21:01,395 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 14:21:01,396 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 14:21:01,397 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 14:21:01,399 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 14:21:01,401 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 14:21:01,402 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 14:21:01,403 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-07 14:21:01,594 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 14:21:01,597 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 14:21:01,599 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 14:21:01,600 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-07 14:21:01,806 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 14:21:01,808 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 14:21:01,809 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 14:21:01,811 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 14:21:01,812 [Thread: 9       ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 14:21:01,999 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 14:21:02,010 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-07 14:21:02,012 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 14:21:02,014 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 14:21:02,199 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 14:21:02,202 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-07 14:21:02,204 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-07 14:21:02,205 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-07 14:21:02,207 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-07 14:21:02,208 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-07 14:21:02,210 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 14:21:02,402 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:21:02,404 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 14:21:02,406 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:21:02,407 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:21:02,408 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 14:21:02,410 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:21:02,599 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 14:21:02,600 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:21:02,602 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:21:02,604 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-07 14:21:02,605 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-07 14:21:02,607 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-07 14:21:02,608 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-07 14:21:02,610 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-07 14:21:02,799 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 14:21:02,800 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:21:02,802 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 14:21:02,803 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:21:02,805 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:21:02,806 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 14:21:02,999 [Thread: 9       ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:21:03,000 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 14:21:03,001 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:21:03,003 [Thread: 9       ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:21:03,032 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 14:21:03,034 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 14:21:03,035 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 14:21:03,037 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 14:21:03,199 [Thread: 9       ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 14:21:03,200 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 14:21:03,202 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 14:21:03,203 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 14:21:03,204 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 14:21:03,205 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 14:21:03,210 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 14:21:03,399 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 14:21:03,400 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 14:21:03,401 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 14:21:03,912 [Thread: 9       ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 14:21:04,100 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 14:21:04,100 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 14:21:04,101 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 14:21:04,102 [Thread: 9       ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 14:21:04,103 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 14:21:04,104 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 14:21:04,105 [Thread: 9       ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 14:21:04,289 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 14:21:04,290 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 14:21:04,291 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 14:21:04,292 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 14:21:04,294 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 14:21:04,295 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 14:21:04,296 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 14:21:04,297 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 14:21:04,488 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 14:21:04,489 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 14:21:04,490 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 14:21:04,491 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 14:21:04,492 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-07 14:21:04,688 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 14:21:04,711 [Thread: 9       ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 14:21:04,713 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 14:21:04,716 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 14:21:04,717 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 14:21:04,717 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 14:21:04,718 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 14:21:04,722 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 14:21:04,889 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 14:21:04,890 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 14:21:04,891 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 14:21:04,892 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-07 14:21:05,088 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 14:21:05,089 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 14:21:05,091 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 14:21:05,092 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 14:21:05,093 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 14:21:05,094 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 14:21:05,298 [Thread: 9       ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 14:21:05,299 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 14:21:05,300 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 14:21:05,301 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 14:21:05,301 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 14:21:05,302 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 14:21:05,303 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 14:21:05,488 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 14:21:05,489 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 14:21:05,491 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 14:21:05,491 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-07 14:21:05,493 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 14:21:05,689 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 14:21:05,690 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 14:21:05,691 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 14:21:05,692 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 14:21:05,693 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 14:21:05,694 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 14:21:05,695 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 14:21:05,893 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 14:21:05,895 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 14:21:05,896 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 14:21:05,897 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 14:21:05,898 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 14:21:05,900 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 14:21:05,900 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 14:21:05,902 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-07 14:21:06,088 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 14:21:06,091 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 14:21:06,092 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 14:21:06,093 [Thread: 9       ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 14:21:06,094 [Thread: 9       ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 14:21:06,288 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 14:21:06,289 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 14:21:06,291 [Thread: 9       ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 14:21:06,293 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 14:21:06,294 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 14:21:06,295 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 14:21:06,296 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 14:21:06,488 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 14:21:06,490 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 14:21:06,491 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 14:21:06,492 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-07 14:21:06,493 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 14:21:06,695 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 14:21:06,696 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 14:21:06,697 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 14:21:06,698 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 14:21:06,699 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 14:21:06,700 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 14:21:06,702 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 14:21:06,703 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 14:21:06,896 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 14:21:06,904 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 14:21:06,904 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 14:21:06,906 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 14:21:06,908 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 14:21:06,910 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 14:21:06,911 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 14:21:06,913 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 14:21:06,917 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 14:21:07,097 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 14:21:07,098 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 14:21:07,100 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 14:21:07,296 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 14:21:07,298 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 14:21:07,300 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 14:21:07,302 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 14:21:07,495 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 14:21:07,498 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 14:21:07,501 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 14:21:07,503 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 14:21:07,696 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 14:23:58,365 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2019-08-07 14:23:58,404 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml]
2019-08-07 14:23:58,413 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2019-08-07 14:23:58,416 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2019-08-07 14:23:58,418 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2019-08-07 14:23:58,421 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2019-08-07 14:23:58,422 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2019-08-07 14:23:58,423 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2019-08-07 14:23:58,425 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2019-08-07 14:23:58,426 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 14:23:58,427 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 14:23:58,428 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2019-08-07 14:23:58,588 [Thread: 10      ] [DEBUG] -- Default init method ''.
2019-08-07 14:23:58,589 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2019-08-07 14:23:58,601 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'portStatusChange'.
2019-08-07 14:23:58,604 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'connectionHandler'.
2019-08-07 14:23:58,605 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'initPortState'.
2019-08-07 14:23:58,607 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'plcRequest'.
2019-08-07 14:23:58,610 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'm_EQPEventProcess'.
2019-08-07 14:23:58,611 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManagerFactory'.
2019-08-07 14:23:58,612 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'controlManager'.
2019-08-07 14:23:58,616 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tibMessageInfo'.
2019-08-07 14:23:58,788 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'tIBMessageService'.
2019-08-07 14:23:58,789 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibSender'.
2019-08-07 14:23:58,791 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'TibMessageHandler'.
2019-08-07 14:23:58,792 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'serverManager'.
2019-08-07 14:23:58,793 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateChangeRequestProc'.
2019-08-07 14:23:58,794 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'CurrentDateTimeRequestProc'.
2019-08-07 14:23:58,795 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'AreYouThereResponseProc'.
2019-08-07 14:23:58,797 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'MachineControlStateRequestProc'.
2019-08-07 14:23:58,988 [Thread: 10      ] [DEBUG] -- Found 16 <object> elements defining objects.
2019-08-07 14:23:58,989 [Thread: 10      ] [DEBUG] -- Loaded 16 object definitions from location [spring-objects.xml]
2019-08-07 14:23:58,990 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2019-08-07 14:23:58,991 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2019-08-07 14:23:58,993 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2019-08-07 14:23:58,994 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2019-08-07 14:23:58,995 [Thread: 10      ] [DEBUG] -- 16 objects defined in application context [spring.root].
2019-08-07 14:23:58,996 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2019-08-07 14:23:59,007 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2019-08-07 14:23:59,189 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2019-08-07 14:23:59,191 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2019-08-07 14:23:59,193 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2019-08-07 14:23:59,195 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2019-08-07 14:23:59,197 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2019-08-07 14:23:59,198 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:23:59,210 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'portStatusChange'
2019-08-07 14:23:59,388 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'portStatusChange' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PortStatusChange]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 24].
2019-08-07 14:23:59,397 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'portStatusChange'.
2019-08-07 14:23:59,400 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'portStatusChange' to allow for resolving potential circular references
2019-08-07 14:23:59,401 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'portStatusChange'
2019-08-07 14:23:59,589 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'portStatusChange'
2019-08-07 14:23:59,591 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'portStatusChange'
2019-08-07 14:23:59,592 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'portStatusChange'
2019-08-07 14:23:59,594 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:23:59,595 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:23:59,596 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-07 14:23:59,597 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'connectionHandler'
2019-08-07 14:23:59,598 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'connectionHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.ConnectionHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 25].
2019-08-07 14:23:59,787 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'connectionHandler'.
2019-08-07 14:23:59,789 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'connectionHandler' to allow for resolving potential circular references
2019-08-07 14:23:59,789 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'connectionHandler'
2019-08-07 14:23:59,790 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'connectionHandler'
2019-08-07 14:23:59,987 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'connectionHandler'
2019-08-07 14:23:59,989 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'connectionHandler'
2019-08-07 14:23:59,990 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-07 14:23:59,991 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname connectionHandler
2019-08-07 14:23:59,992 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-07 14:23:59,993 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'initPortState'
2019-08-07 14:23:59,994 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'initPortState' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.InitPortState]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2019-08-07 14:24:00,189 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'initPortState'.
2019-08-07 14:24:00,191 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'initPortState' to allow for resolving potential circular references
2019-08-07 14:24:00,194 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'initPortState'
2019-08-07 14:24:00,196 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'initPortState'
2019-08-07 14:24:00,198 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'initPortState'
2019-08-07 14:24:00,200 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'initPortState'
2019-08-07 14:24:00,389 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-07 14:24:00,392 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname initPortState
2019-08-07 14:24:00,394 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 14:24:00,396 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'plcRequest'
2019-08-07 14:24:00,398 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'plcRequest' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.PLCRequest]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 27].
2019-08-07 14:24:00,589 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'plcRequest'.
2019-08-07 14:24:00,592 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'plcRequest' to allow for resolving potential circular references
2019-08-07 14:24:00,594 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'plcRequest'
2019-08-07 14:24:00,601 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'Plc' in object 'plcRequest' to object 'controlManager'.
2019-08-07 14:24:00,604 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 14:24:00,607 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManager'
2019-08-07 14:24:00,609 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManager' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = getControlManager; FactoryObjectName = controlManagerFactory; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 50].
2019-08-07 14:24:00,789 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManager'.
2019-08-07 14:24:00,795 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 14:24:00,798 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'controlManagerFactory'
2019-08-07 14:24:00,800 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'controlManagerFactory' with merged definition [RootObjectDefinition : Class [EQPIO.Controller.ControlManagerFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 44].
2019-08-07 14:24:00,990 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'controlManagerFactory'.
2019-08-07 14:24:00,994 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManagerFactory' to allow for resolving potential circular references
2019-08-07 14:24:00,997 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManagerFactory'
2019-08-07 14:24:01,007 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManagerFactory' to object 'm_EQPEventProcess'.
2019-08-07 14:24:01,010 [Thread: 10      ] [DEBUG] --             GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 14:24:01,188 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 14:24:01,189 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'm_EQPEventProcess' with merged definition [RootObjectDefinition : Class [MPC.Server.EQP.EQPEventHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 31].
2019-08-07 14:24:01,190 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'm_EQPEventProcess'.
2019-08-07 14:24:01,191 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'm_EQPEventProcess' to allow for resolving potential circular references
2019-08-07 14:24:01,388 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'm_EQPEventProcess'
2019-08-07 14:24:01,391 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[Connection]' in object 'm_EQPEventProcess' to object 'connectionHandler'.
2019-08-07 14:24:01,393 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name connectionHandler => canonical name connectionHandler
2019-08-07 14:24:01,394 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'connectionHandler'.
2019-08-07 14:24:01,396 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'connectionHandler'.
2019-08-07 14:24:01,397 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname connectionHandler
2019-08-07 14:24:01,400 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 14:24:01,588 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:24:01,589 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 14:24:01,590 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:24:01,591 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:24:01,593 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#2LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 14:24:01,594 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:24:01,795 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 14:24:01,796 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:24:01,798 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:24:01,799 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_BIT_AllPortState]' in object 'm_EQPEventProcess' to object 'initPortState'.
2019-08-07 14:24:01,800 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name initPortState => canonical name initPortState
2019-08-07 14:24:01,802 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'initPortState'.
2019-08-07 14:24:01,803 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'initPortState'.
2019-08-07 14:24:01,804 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname initPortState
2019-08-07 14:24:01,993 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1LoadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 14:24:01,995 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:24:01,996 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 14:24:01,998 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:24:01,999 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:24:02,000 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EventHandlers[L2_Port#1UnloadRequestReport]' in object 'm_EQPEventProcess' to object 'portStatusChange'.
2019-08-07 14:24:02,193 [Thread: 10      ] [DEBUG] --                GetObjectInternal: obtaining instance for name portStatusChange => canonical name portStatusChange
2019-08-07 14:24:02,194 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'portStatusChange'.
2019-08-07 14:24:02,195 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'portStatusChange'.
2019-08-07 14:24:02,197 [Thread: 10      ] [DEBUG] --             GetObjectInternal: returning instance for objectname portStatusChange
2019-08-07 14:24:02,226 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'm_EQPEventProcess'
2019-08-07 14:24:02,228 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'm_EQPEventProcess'
2019-08-07 14:24:02,237 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'm_EQPEventProcess'
2019-08-07 14:24:02,238 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 14:24:02,393 [Thread: 10      ] [DEBUG] --          GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 14:24:02,395 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManagerFactory'
2019-08-07 14:24:02,396 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManagerFactory'
2019-08-07 14:24:02,397 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManagerFactory'
2019-08-07 14:24:02,398 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 14:24:02,399 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 14:24:02,404 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name controlManagerFactory => canonical name controlManagerFactory
2019-08-07 14:24:02,593 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManagerFactory'.
2019-08-07 14:24:02,594 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManagerFactory'.
2019-08-07 14:24:02,595 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname controlManagerFactory
2019-08-07 14:24:03,097 [Thread: 10      ] [DEBUG] -- Object 'controlManager' instantiated via factory method [EQPIO.Controller.ControlManager getControlManager()].
2019-08-07 14:24:03,099 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'controlManager' to allow for resolving potential circular references
2019-08-07 14:24:03,100 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'controlManager'
2019-08-07 14:24:03,101 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'EQPEventHandler' in object 'controlManager' to object 'm_EQPEventProcess'.
2019-08-07 14:24:03,283 [Thread: 10      ] [DEBUG] --          GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 14:24:03,285 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 14:24:03,286 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 14:24:03,287 [Thread: 10      ] [DEBUG] --       GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 14:24:03,291 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'controlManager'
2019-08-07 14:24:03,292 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'controlManager'
2019-08-07 14:24:03,482 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'controlManager'
2019-08-07 14:24:03,484 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 14:24:03,485 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname controlManager
2019-08-07 14:24:03,487 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'plcRequest'
2019-08-07 14:24:03,488 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'plcRequest'
2019-08-07 14:24:03,489 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'plcRequest'
2019-08-07 14:24:03,490 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 14:24:03,491 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 14:24:03,492 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 14:24:03,682 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tibMessageInfo'
2019-08-07 14:24:03,683 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tibMessageInfo' with merged definition [RootObjectDefinition : Class [TIBMessageIo.MessageInfo]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 58].
2019-08-07 14:24:03,684 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tibMessageInfo'.
2019-08-07 14:24:03,707 [Thread: 10      ] [DEBUG] -- Object 'tibMessageInfo' instantiated via constructor [Void .ctor(System.String, System.String)].
2019-08-07 14:24:03,883 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tibMessageInfo' to allow for resolving potential circular references
2019-08-07 14:24:03,884 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tibMessageInfo'
2019-08-07 14:24:03,885 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tibMessageInfo'
2019-08-07 14:24:03,886 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tibMessageInfo'
2019-08-07 14:24:03,887 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tibMessageInfo'
2019-08-07 14:24:03,888 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 14:24:03,889 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 14:24:03,890 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 14:24:04,082 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'tIBMessageService'
2019-08-07 14:24:04,083 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'tIBMessageService' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBMessageService]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 63].
2019-08-07 14:24:04,084 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'tIBMessageService'.
2019-08-07 14:24:04,085 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'constructor argument with name msginfo' in object 'tIBMessageService' to object 'tibMessageInfo'.
2019-08-07 14:24:04,283 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tibMessageInfo => canonical name tibMessageInfo
2019-08-07 14:24:04,284 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tibMessageInfo'.
2019-08-07 14:24:04,285 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tibMessageInfo'.
2019-08-07 14:24:04,287 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tibMessageInfo
2019-08-07 14:24:04,313 [Thread: 10      ] [DEBUG] -- Object 'tIBMessageService' instantiated via constructor [Void .ctor(TIBMessageIo.MessageInfo)].
2019-08-07 14:24:04,315 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'tIBMessageService' to allow for resolving potential circular references
2019-08-07 14:24:04,483 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'tIBMessageService'
2019-08-07 14:24:04,484 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'tIBMessageService'
2019-08-07 14:24:04,485 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'tIBMessageService'
2019-08-07 14:24:04,486 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'tIBMessageService'
2019-08-07 14:24:04,487 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 14:24:04,487 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 14:24:04,488 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 14:24:04,682 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibSender'
2019-08-07 14:24:04,683 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibSender' with merged definition [RootObjectDefinition : Class [TIBMessageIo.TIBAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 68].
2019-08-07 14:24:04,684 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibSender'.
2019-08-07 14:24:04,685 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibSender' to allow for resolving potential circular references
2019-08-07 14:24:04,686 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibSender'
2019-08-07 14:24:04,885 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'TIB' in object 'TibSender' to object 'tIBMessageService'.
2019-08-07 14:24:04,889 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 14:24:04,890 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 14:24:04,891 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 14:24:04,892 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 14:24:04,893 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibSender'
2019-08-07 14:24:04,894 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibSender'
2019-08-07 14:24:04,895 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibSender'
2019-08-07 14:24:05,082 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 14:24:05,083 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 14:24:05,084 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibMessageHandler => canonical name TibMessageHandler
2019-08-07 14:24:05,085 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'TibMessageHandler'
2019-08-07 14:24:05,086 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'TibMessageHandler' with merged definition [RootObjectDefinition : Class [MPC.Server.TIB.TIBMessageHandler]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 73].
2019-08-07 14:24:05,282 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'TibMessageHandler'.
2019-08-07 14:24:05,284 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'TibMessageHandler' to allow for resolving potential circular references
2019-08-07 14:24:05,285 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'TibMessageHandler'
2019-08-07 14:24:05,286 [Thread: 10      ] [DEBUG] -- Resolving reference from property 'ListenerReceived' in object 'TibMessageHandler' to object 'tIBMessageService'.
2019-08-07 14:24:05,291 [Thread: 10      ] [DEBUG] --       GetObjectInternal: obtaining instance for name tIBMessageService => canonical name tIBMessageService
2019-08-07 14:24:05,292 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'tIBMessageService'.
2019-08-07 14:24:05,293 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'tIBMessageService'.
2019-08-07 14:24:05,482 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname tIBMessageService
2019-08-07 14:24:05,484 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'TibMessageHandler'
2019-08-07 14:24:05,485 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'TibMessageHandler'
2019-08-07 14:24:05,486 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'TibMessageHandler'
2019-08-07 14:24:05,487 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibMessageHandler'.
2019-08-07 14:24:05,488 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibMessageHandler
2019-08-07 14:24:05,489 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 14:24:05,490 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'serverManager'
2019-08-07 14:24:05,682 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'serverManager' with merged definition [RootObjectDefinition : Class [MPC.Server.ServerManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\CSTCleaner\MPC\MPC\bin\Debug\spring-objects.xml] line 79].
2019-08-07 14:24:05,683 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'serverManager'.
2019-08-07 14:24:05,685 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'serverManager' to allow for resolving potential circular references
2019-08-07 14:24:05,686 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'serverManager'
2019-08-07 14:24:05,882 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'serverManager'
2019-08-07 14:24:05,883 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'serverManager'
2019-08-07 14:24:05,884 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'serverManager'
2019-08-07 14:24:05,885 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 14:24:05,886 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 14:24:05,888 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2019-08-07 14:24:05,889 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2019-08-07 14:24:05,891 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name m_EQPEventProcess => canonical name m_EQPEventProcess
2019-08-07 14:24:05,891 [Thread: mProtocol_OnEventReceived] [DEBUG] --       GetObjectInternal: obtaining instance for name plcRequest => canonical name plcRequest
2019-08-07 14:24:06,083 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'm_EQPEventProcess'.
2019-08-07 14:24:06,083 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'plcRequest'.
2019-08-07 14:24:06,084 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'm_EQPEventProcess'.
2019-08-07 14:24:06,085 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'plcRequest'.
2019-08-07 14:24:06,086 [Thread: 10      ] [DEBUG] --    GetObjectInternal: returning instance for objectname m_EQPEventProcess
2019-08-07 14:24:06,086 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname plcRequest
2019-08-07 14:24:06,088 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 14:24:06,286 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 14:24:06,488 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 14:24:06,489 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
2019-08-07 14:24:06,490 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name controlManager => canonical name controlManager
2019-08-07 14:24:06,490 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'controlManager'.
2019-08-07 14:24:06,685 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'controlManager'.
2019-08-07 14:24:06,686 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname controlManager
2019-08-07 14:24:06,687 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 14:24:06,688 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 14:24:06,689 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 14:24:06,690 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 14:24:27,849 [Thread: mProtocol_OnEventReceived] [DEBUG] --    GetObjectInternal: obtaining instance for name TibSender => canonical name TibSender
2019-08-07 14:24:27,851 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Returning cached instance of singleton object 'TibSender'.
2019-08-07 14:24:27,852 [Thread: mProtocol_OnEventReceived] [DEBUG] -- Calling code asked for normal instance for name 'TibSender'.
2019-08-07 14:24:27,853 [Thread: mProtocol_OnEventReceived] [DEBUG] -- GetObjectInternal: returning instance for objectname TibSender
2019-08-07 14:30:07,457 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name serverManager => canonical name serverManager
2019-08-07 14:30:07,459 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'serverManager'.
2019-08-07 14:30:07,460 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'serverManager'.
2019-08-07 14:30:07,462 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname serverManager
