2020-04-03 09:49:03,649 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 09:49:04,261 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 09:49:04,377 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 09:49:04,439 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 09:49:04,450 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 09:49:04,455 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 09:49:04,457 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 09:49:04,459 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 09:49:04,461 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 09:49:04,463 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 09:49:04,465 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 09:49:04,467 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 09:49:04,468 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 09:49:04,470 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 09:49:04,544 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 09:49:04,547 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 09:49:04,551 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 09:49:04,553 [Thread: 9       ] [DEBUG] -- Found 3 <object> elements defining objects.
2020-04-03 09:49:04,554 [Thread: 9       ] [DEBUG] -- Loaded 3 object definitions from location [spring-objects.xml]
2020-04-03 09:49:04,555 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 09:49:04,556 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 09:49:04,558 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 09:49:04,559 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 09:49:04,693 [Thread: 9       ] [DEBUG] -- 3 objects defined in application context [spring.root].
2020-04-03 09:49:04,695 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 09:49:04,795 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 09:49:04,797 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 09:49:04,799 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 09:49:04,802 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 09:49:04,803 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 09:49:04,805 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 09:49:04,892 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 09:49:04,894 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 09:49:04,896 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 09:49:04,898 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 09:49:05,717 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 09:49:05,719 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 09:49:05,721 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 09:49:05,725 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 09:49:05,728 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 09:49:05,751 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 09:49:05,753 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 09:49:05,758 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 09:49:05,759 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 09:49:05,761 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 09:49:05,763 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 09:49:05,931 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 09:49:06,213 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 09:49:06,214 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 09:49:06,215 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 09:49:06,216 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 09:49:06,217 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 09:49:06,218 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 09:49:06,219 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 09:49:06,220 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 09:49:06,221 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 09:49:06,331 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 09:49:06,338 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 09:49:06,339 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 09:49:06,341 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 09:49:06,343 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 09:49:06,531 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 09:49:06,533 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 09:49:06,534 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 09:49:06,535 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 09:49:06,537 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 09:49:06,538 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 09:49:06,540 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 09:49:06,544 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 09:49:06,731 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 09:49:06,736 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 09:49:06,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 09:49:06,738 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:07:13,031 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:07:13,613 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:07:13,894 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:07:14,070 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-04-03 11:07:14,076 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-04-03 11:07:14,079 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:07:14,082 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:07:14,085 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:07:14,088 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:07:14,091 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-04-03 11:07:14,094 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:07:14,096 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:07:14,098 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-04-03 11:07:14,101 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:07:14,225 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:07:14,233 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:07:14,242 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:07:14,244 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:07:14,245 [Thread: 10      ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:07:14,247 [Thread: 10      ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:07:14,248 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:07:14,250 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:07:14,253 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:07:14,255 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:07:14,318 [Thread: 10      ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:07:14,319 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:07:14,403 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:07:14,406 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:07:14,409 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:07:14,412 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:07:14,414 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:07:14,518 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:07:14,521 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:07:14,526 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:07:14,530 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:07:14,533 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:07:15,221 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:07:15,223 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:07:15,224 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:07:15,227 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:07:15,229 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:07:15,251 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:07:15,253 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:07:15,255 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:07:15,256 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:07:15,257 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:07:15,258 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:07:15,438 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:07:15,650 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:07:15,651 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:07:15,652 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:07:15,653 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:07:15,654 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:07:15,655 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:07:15,656 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:07:15,657 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:07:15,662 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:07:15,837 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:07:15,838 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:07:15,839 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:07:15,841 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:07:15,842 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:07:16,038 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:07:16,040 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:07:16,042 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:07:16,044 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:07:16,046 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:07:16,048 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:07:16,050 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:07:16,052 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:07:16,237 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:07:16,238 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:07:35,640 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:07:35,641 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:07:35,642 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:07:35,643 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:07:35,644 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:07:35,645 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:07:35,646 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:07:35,648 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:07:35,650 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:07:35,671 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:07:35,672 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:07:35,673 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:07:35,674 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:07:35,675 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:09:47,136 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:09:47,659 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:09:47,882 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:09:47,906 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:09:47,913 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:09:47,915 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:09:47,916 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:09:47,918 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:09:47,919 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:09:47,921 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:09:47,922 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:09:47,923 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:09:47,924 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:09:47,926 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:09:48,073 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:09:48,082 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:09:48,122 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:09:48,126 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:09:48,128 [Thread: 9       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:09:48,130 [Thread: 9       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:09:48,133 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:09:48,135 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:09:48,139 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:09:48,140 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:09:48,141 [Thread: 9       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:09:48,314 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:09:48,492 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:09:48,495 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:09:48,501 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:09:48,509 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:09:48,515 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:09:48,520 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:09:48,528 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:09:48,532 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:09:48,535 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:09:48,716 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:09:49,421 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:09:49,424 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:09:49,427 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:09:49,431 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:09:49,436 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:09:49,464 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:09:49,467 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:09:49,472 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:09:49,474 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:09:49,475 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:09:49,477 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:09:49,645 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:09:49,881 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:09:49,887 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:09:49,888 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:09:49,889 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:09:49,890 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:09:49,892 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:09:49,893 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:09:49,894 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:09:49,895 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:09:50,045 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:09:50,046 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:09:50,053 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:09:50,060 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:09:50,060 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:09:50,246 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:09:50,247 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:09:50,249 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:09:50,251 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:09:50,252 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:09:50,254 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:09:50,256 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:09:50,257 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:09:50,446 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:09:50,447 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:09:50,451 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:09:50,452 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:09:50,453 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:09:50,646 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:09:50,650 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:09:50,652 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:09:50,654 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:09:50,656 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:09:50,659 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:09:50,662 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:09:50,664 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:09:50,845 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:09:50,846 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:09:50,847 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:09:53,699 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:09:53,779 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:09:53,781 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:09:53,784 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:09:54,022 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:09:55,009 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:09:55,011 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:09:55,012 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:09:55,013 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:09:55,242 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:09:55,803 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:09:55,815 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:09:55,819 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:09:55,821 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:09:55,824 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:09:56,937 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:09:56,939 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:09:57,471 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:09:57,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:09:57,476 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:09:57,479 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:09:57,482 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:09:58,499 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:09:58,501 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:09:59,033 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:09:59,034 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:09:59,035 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:09:59,036 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:09:59,037 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:10:00,046 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:10:00,047 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:10:00,589 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:10:00,591 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:10:00,595 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:10:00,598 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:10:00,601 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:10:01,618 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:10:01,620 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:10:02,152 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:10:02,153 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:10:02,159 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:10:02,167 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:10:02,170 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:10:03,180 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:10:03,180 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:10:03,711 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:10:03,716 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:10:03,716 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:10:03,722 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:10:03,722 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:10:04,728 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:10:04,733 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:10:05,260 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:10:05,265 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:10:05,266 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:10:05,266 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:10:05,267 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:10:06,277 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:10:06,277 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:10:06,810 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:10:06,816 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:10:06,817 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:10:06,817 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:10:06,818 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:10:07,828 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:10:07,829 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:10:08,366 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:10:08,368 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:10:08,371 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:10:08,374 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:10:08,377 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:11:35,851 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:11:36,748 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:11:36,871 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:11:36,946 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:11:36,949 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:11:36,951 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:11:36,953 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:11:36,955 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:11:36,956 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:11:36,958 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:11:36,959 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:11:36,961 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:11:36,962 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:11:36,964 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:11:37,059 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:11:37,065 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:11:37,073 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:11:37,075 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:11:37,154 [Thread: 9       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:11:37,155 [Thread: 9       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:11:37,157 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:11:37,158 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:11:37,160 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:11:37,161 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:11:37,163 [Thread: 9       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:11:37,164 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:11:37,499 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:11:37,505 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:11:37,510 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:11:37,517 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:11:37,521 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:11:37,524 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:11:37,528 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:11:37,556 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:11:37,558 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:11:37,559 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:11:38,242 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:11:38,244 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:11:38,246 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:11:38,250 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:11:38,254 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:11:38,270 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:11:38,273 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:11:38,278 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:11:38,279 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:11:38,281 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:11:38,283 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:11:38,455 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:11:38,616 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:11:38,617 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:11:38,617 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:11:38,618 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:11:38,619 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:11:38,621 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:11:38,654 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:11:38,656 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:11:38,657 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:11:38,658 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:11:38,659 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:11:38,854 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:11:38,857 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:11:38,867 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:11:38,869 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:11:38,870 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:11:38,871 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:11:38,873 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:11:38,874 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:11:39,054 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:11:39,056 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:11:39,056 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:11:39,058 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:11:39,059 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:11:39,255 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:11:39,256 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:11:39,257 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:11:39,258 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:11:39,259 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:11:39,260 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:11:39,261 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:11:39,261 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:11:39,263 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:11:39,456 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:11:39,458 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:11:39,459 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:11:39,460 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:11:39,462 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:11:42,289 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:11:42,368 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:11:42,370 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:11:42,372 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:11:42,492 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:11:43,591 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:11:43,592 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:11:43,593 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:11:43,594 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:11:43,621 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:11:44,158 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:11:44,161 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:11:44,162 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:11:44,163 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:11:44,164 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:11:53,278 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:11:53,286 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:11:53,824 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:11:53,828 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:11:53,831 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:11:53,834 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:11:53,836 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:02,972 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:02,987 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:03,519 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:03,519 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:03,520 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:03,521 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:03,522 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:04,529 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:04,531 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:05,064 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:05,066 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:05,069 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:05,071 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:05,073 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:06,088 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:06,098 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:06,630 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:06,631 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:06,632 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:06,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:06,634 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:07,639 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:07,640 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:08,171 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:08,176 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:08,177 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:08,178 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:08,179 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:09,185 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:09,186 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:09,727 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:09,729 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:09,731 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:09,732 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:09,734 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:10,744 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:10,745 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:11,286 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:11,287 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:11,288 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:11,290 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:11,291 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:12,297 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:12,299 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:12,831 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:12,834 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:12,837 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:12,840 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:12,843 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:13,859 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:13,860 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:14,392 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:14,394 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:14,396 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:14,398 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:14,400 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:15,415 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:15,421 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:15,963 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:15,972 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:15,975 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:15,977 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:15,978 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:16,985 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:16,986 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:17,521 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:17,522 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:17,524 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:17,529 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:17,531 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:18,538 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:18,540 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:19,075 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:19,077 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:19,078 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:19,080 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:19,082 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:20,094 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:20,096 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:20,631 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:20,632 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:20,633 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:20,633 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:20,634 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:21,641 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:21,642 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:22,183 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:22,186 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:22,188 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:22,190 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:22,191 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:23,203 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:23,204 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:23,739 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:23,740 [Thread: VCR Read thread] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:23,741 [Thread: VCR Read thread] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:23,743 [Thread: VCR Read thread] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:23,751 [Thread: VCR Read thread] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:24,759 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:24,761 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:25,303 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:25,305 [Thread: VCR Read thread] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:25,308 [Thread: VCR Read thread] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:25,310 [Thread: VCR Read thread] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:25,312 [Thread: VCR Read thread] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:26,324 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:26,324 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:26,865 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:26,867 [Thread: VCR Read thread] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:26,868 [Thread: VCR Read thread] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:26,869 [Thread: VCR Read thread] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:26,871 [Thread: VCR Read thread] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:27,876 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:27,878 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:28,412 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:28,414 [Thread: VCR Read thread] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:28,417 [Thread: VCR Read thread] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:28,420 [Thread: VCR Read thread] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:28,422 [Thread: VCR Read thread] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:29,441 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:29,442 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:12:29,983 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:12:29,984 [Thread: VCR Read thread] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:12:29,985 [Thread: VCR Read thread] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:12:29,989 [Thread: VCR Read thread] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:12:29,989 [Thread: VCR Read thread] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:12:30,994 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:12:30,995 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:19,965 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:13:20,613 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:13:20,903 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:13:20,974 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:13:20,979 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:13:20,983 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:13:20,985 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:13:20,988 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:13:20,989 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:13:20,991 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-04-03 11:13:20,992 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:13:20,997 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:13:20,999 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-04-03 11:13:21,000 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:13:21,143 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:13:21,151 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:13:21,162 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:13:21,168 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:13:21,170 [Thread: 8       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:13:21,171 [Thread: 8       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:13:21,173 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:13:21,174 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:13:21,176 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:13:21,177 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:13:21,323 [Thread: 8       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:13:21,324 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:13:21,547 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:13:21,554 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:13:21,558 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:13:21,563 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:13:21,566 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:13:21,568 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:13:21,571 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:13:21,575 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:13:21,723 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:13:21,725 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:13:22,347 [Thread: 8       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:13:22,349 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:13:22,351 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:13:22,354 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:13:22,356 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:13:22,376 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:13:22,379 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:13:22,381 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:13:22,383 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:13:22,384 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:13:22,385 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:13:22,563 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:13:22,758 [Thread: 8       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:13:22,759 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:13:22,760 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:13:22,761 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:13:22,762 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:13:22,763 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:13:22,764 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:13:22,765 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:13:22,766 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:13:22,767 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:13:22,768 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:13:22,963 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:13:22,967 [Thread: 8       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:13:22,968 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:13:22,970 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:13:22,971 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:13:22,973 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:13:22,974 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:13:23,163 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:13:23,166 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:13:23,168 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:23,170 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:13:23,173 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:13:23,363 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:13:23,367 [Thread: 8       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:13:23,370 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:13:23,372 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:13:23,375 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:13:23,377 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:13:23,380 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:13:23,382 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:23,563 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:23,566 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:13:23,570 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:13:23,572 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:13:23,574 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:13:23,575 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:13:23,577 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:13:25,450 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:13:25,649 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:13:25,652 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:13:25,655 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:13:25,978 [Thread: 10      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:13:27,243 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:13:27,244 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:13:27,245 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:13:27,246 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:13:27,329 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:27,890 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:27,901 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:27,905 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:27,907 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:27,910 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:28,983 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:28,984 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:29,525 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:29,526 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:29,528 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:29,530 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:29,531 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:30,558 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:30,560 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:31,092 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:31,093 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:31,094 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:31,095 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:31,096 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:32,102 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:32,103 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:32,644 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:32,646 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:32,647 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:32,649 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:32,650 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:33,664 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:33,665 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:34,207 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:34,208 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:34,213 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:34,214 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:34,215 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:35,221 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:35,222 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:35,754 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:35,754 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:35,757 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:35,762 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:35,763 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:36,769 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:36,770 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:37,300 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:37,301 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:37,301 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:37,302 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:37,303 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:38,314 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:38,317 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:38,849 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:38,851 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:38,854 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:38,856 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:38,859 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:39,874 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:39,876 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:40,408 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:40,409 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:40,410 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:40,411 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:40,412 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:41,422 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:41,423 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:41,974 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:13:42,976 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:42,977 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:43,528 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:13:44,529 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:44,543 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:45,095 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:13:46,097 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:46,098 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:46,649 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:13:47,650 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:47,653 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:48,176 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:48,178 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:48,179 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:48,181 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:48,183 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:49,197 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:49,198 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:49,720 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:49,722 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:49,725 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:49,728 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:49,729 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:50,746 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:50,748 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:51,272 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:51,274 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:51,276 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:51,277 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:51,281 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:52,299 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:52,299 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:52,820 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:52,821 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:52,822 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:52,823 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:52,824 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:53,832 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:53,832 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:54,358 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:13:54,359 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:13:54,360 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:13:54,361 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:13:54,361 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:13:55,369 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:55,370 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:55,911 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:13:56,911 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:56,912 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:57,458 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:13:58,459 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:13:58,463 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:13:58,494 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:13:58,497 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:13:58,498 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:13:58,499 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:13:58,501 [Thread: 8       ] [DEBUG] -- Reader Stop Request
2020-04-03 11:13:59,016 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:13:59,017 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 11:15:45,670 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:15:46,568 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:15:46,950 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:15:47,136 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:15:47,165 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:15:47,170 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:15:47,175 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:15:47,178 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:15:47,180 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:15:47,183 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:15:47,185 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:15:47,187 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:15:47,189 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:15:47,192 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:15:47,382 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:15:47,387 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:15:47,500 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:15:47,502 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:15:47,504 [Thread: 9       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:15:47,505 [Thread: 9       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:15:47,507 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:15:47,508 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:15:47,511 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:15:47,513 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:15:47,562 [Thread: 9       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:15:47,563 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:15:47,677 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:15:47,687 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:15:47,691 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:15:47,696 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:15:47,699 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:15:47,763 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:15:47,791 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:15:47,830 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:15:47,832 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:15:47,870 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:15:48,855 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:15:48,858 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:15:48,860 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:15:48,865 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:15:48,869 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:15:48,890 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:15:48,893 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:15:48,898 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:15:48,900 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:15:48,902 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:15:48,904 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:15:49,072 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:15:49,507 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:15:49,508 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:15:49,509 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:15:49,510 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:15:49,510 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:15:49,511 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:15:49,512 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:15:49,513 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:15:49,514 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:15:49,533 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:15:49,538 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:15:49,539 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:15:49,542 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:15:49,544 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:15:49,733 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:15:49,734 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:15:49,735 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:15:49,736 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:15:49,737 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:15:49,738 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:15:49,739 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:15:49,740 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:15:49,938 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:15:49,940 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:15:49,943 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:15:49,945 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:15:49,946 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:15:50,132 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:15:50,134 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:15:50,135 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:15:50,137 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:15:50,138 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:15:50,140 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:15:50,142 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:15:50,144 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:15:50,332 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:15:50,333 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:15:50,335 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:15:52,118 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:15:52,137 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:15:52,138 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:15:52,139 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:15:52,169 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:15:52,972 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:15:52,975 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:15:52,977 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:15:52,977 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:15:53,009 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:15:53,569 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:15:54,572 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:15:54,572 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:15:55,123 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:15:56,124 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:15:56,125 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:15:57,236 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:15:58,238 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:15:58,240 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:15:58,754 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:15:58,755 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:15:58,757 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:15:58,758 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:15:58,759 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:15:59,782 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:15:59,782 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:01,014 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:02,015 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:02,016 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:02,527 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:02,528 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:02,529 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:02,531 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:02,532 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:03,542 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:03,543 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:04,067 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:04,069 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:04,072 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:04,075 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:04,078 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:05,097 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:05,099 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:05,620 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:05,621 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:05,622 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:05,624 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:05,625 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:06,633 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:06,633 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:07,154 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:07,156 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:07,158 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:07,160 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:07,170 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:08,179 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:08,180 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:08,701 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:08,702 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:08,704 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:08,706 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:08,707 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:09,721 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:09,722 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:10,240 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:10,242 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:10,245 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:10,247 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:10,248 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:11,262 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:11,265 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:11,783 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:11,785 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:11,786 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:11,788 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:11,790 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:12,802 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:12,804 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:13,969 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:14,971 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:14,972 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:16,084 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:17,086 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:17,087 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:18,253 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:19,254 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:19,255 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:19,767 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:19,769 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:19,770 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:19,771 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:19,773 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:20,784 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:20,785 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:21,896 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:22,896 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:22,901 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:24,074 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:25,075 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:25,076 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:26,203 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:27,204 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:27,205 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:28,331 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:29,333 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:29,335 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:30,470 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:31,471 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:31,502 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:32,623 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:33,625 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:33,626 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:34,751 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:35,754 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:35,756 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:36,273 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:36,274 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:36,275 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:36,276 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:36,277 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:37,284 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:37,285 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:37,808 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:37,809 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:37,810 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:37,811 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:37,812 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:38,818 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:38,820 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:39,337 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:39,338 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:39,341 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:39,342 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:39,343 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:40,351 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:40,352 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:40,863 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:40,864 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:40,865 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:40,866 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:40,866 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:41,872 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:41,872 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:42,388 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:42,388 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:42,389 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:42,390 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:42,391 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:43,396 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:43,401 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:43,912 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:43,913 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:43,913 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:43,914 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:43,915 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:44,922 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:44,924 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:45,445 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:45,450 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:45,455 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:45,455 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:45,456 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:46,462 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:46,463 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:46,973 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:46,974 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:46,975 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:46,976 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:46,981 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:47,986 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:47,988 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:48,504 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:48,506 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:48,509 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:48,511 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:48,513 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:49,532 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:49,533 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:50,051 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:50,052 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:50,053 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:50,054 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:50,055 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:51,069 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:51,078 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:51,590 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:51,591 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:51,592 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:51,593 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:51,593 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:52,598 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:52,599 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:53,712 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:54,713 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:54,714 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:55,836 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:16:56,837 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:56,839 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:57,351 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:57,352 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:57,354 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:57,355 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:57,360 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:58,372 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:58,373 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:16:58,895 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:16:58,896 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:16:58,898 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:16:58,900 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:16:58,901 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:16:59,912 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:16:59,913 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:00,437 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:00,439 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:00,442 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:00,444 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:00,447 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:01,467 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:01,469 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:01,982 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:01,984 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:01,986 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:01,989 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:01,992 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:03,010 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:03,011 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:03,532 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:03,534 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:03,538 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:03,540 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:03,542 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:04,561 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:04,562 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:05,082 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:05,084 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:05,087 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:05,088 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:05,089 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:06,102 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:06,104 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:06,618 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:06,635 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:06,641 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:06,643 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:06,645 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:07,651 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:07,654 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:08,171 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:08,171 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:08,172 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:08,173 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:08,174 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:09,182 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:09,183 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:09,696 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:09,697 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:09,698 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:09,699 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:09,699 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:10,705 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:10,707 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:11,219 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:11,221 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:11,222 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:11,223 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:11,225 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:12,235 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:12,236 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:12,747 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:12,748 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:12,750 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:12,751 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:12,753 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:13,763 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:13,763 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:14,285 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:14,286 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:14,288 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:14,289 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:14,291 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:15,299 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:15,300 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:15,823 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:15,825 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:15,838 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:15,850 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:15,852 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:16,860 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:16,861 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:17,381 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:17,382 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:17,384 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:17,385 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:17,386 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:18,393 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:18,393 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:18,914 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:18,919 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:18,920 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:18,921 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:18,921 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:19,927 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:19,929 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:21,055 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:17:22,056 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:22,057 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:22,568 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:22,568 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:22,569 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:22,570 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:22,571 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:23,578 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:23,579 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:24,101 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:24,103 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:24,106 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:24,108 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:24,113 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:25,130 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:25,133 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:26,247 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:17:27,249 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:27,250 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:27,771 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:27,773 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:27,775 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:27,777 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:27,780 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:28,798 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:28,800 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:29,317 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:29,318 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:29,319 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:29,320 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:29,321 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:30,329 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:30,331 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:30,852 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:30,854 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:30,857 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:30,858 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:30,860 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:31,867 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:31,868 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:32,381 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:32,382 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:32,383 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:32,384 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:32,385 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:33,393 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:33,398 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:33,913 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:33,913 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:33,914 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:33,915 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:33,916 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:34,921 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:34,922 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:35,443 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:35,448 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:35,449 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:35,449 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:35,450 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:36,465 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:36,470 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:36,992 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:36,997 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:37,003 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:37,008 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:37,009 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:38,016 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:38,021 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:38,543 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:38,548 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:38,552 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:38,553 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:38,553 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:39,559 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:39,562 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:40,075 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:40,075 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:40,079 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:40,080 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:40,081 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:41,088 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:41,089 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:41,610 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:41,610 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:41,611 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:41,612 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:41,613 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:42,619 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:42,620 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:43,142 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:43,143 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:43,144 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:43,145 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:43,146 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:44,155 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:44,157 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:44,669 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:44,671 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:44,673 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:44,675 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:44,678 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:45,699 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:45,700 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:46,221 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:46,229 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:46,231 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:46,232 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:46,234 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:47,243 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:47,244 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:47,761 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:47,763 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:47,765 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:47,767 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:47,768 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:48,782 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:48,783 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:49,294 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:49,295 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:49,297 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:49,298 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:49,302 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:50,312 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:50,315 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:50,828 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:50,829 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:50,830 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:50,831 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:50,832 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:51,845 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:51,850 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:52,372 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:52,375 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:52,377 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:52,380 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:52,383 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:53,399 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:53,405 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:53,916 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:53,918 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:53,932 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:53,934 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:53,936 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:54,948 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:54,949 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:55,471 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:55,473 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:55,476 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:55,478 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:55,481 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:56,499 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:56,509 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:57,021 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:57,024 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:57,026 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:57,036 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:57,040 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:58,052 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:58,053 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:17:58,565 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:17:58,567 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:17:58,569 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:17:58,571 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:17:58,573 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:17:59,595 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:17:59,596 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:00,116 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:00,117 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:00,122 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:00,124 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:00,126 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:01,138 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:01,139 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:01,652 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:01,653 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:01,654 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:01,655 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:01,656 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:02,662 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:02,664 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:03,177 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:03,178 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:03,179 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:03,183 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:03,184 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:04,193 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:04,194 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:04,704 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:04,705 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:04,717 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:04,725 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:04,730 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:05,737 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:05,739 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:06,260 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:06,261 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:06,262 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:06,263 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:06,264 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:07,269 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:07,270 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:07,781 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:07,786 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:07,787 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:07,788 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:07,788 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:08,800 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:08,807 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:09,320 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:09,321 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:09,321 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:09,322 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:09,323 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:10,331 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:10,333 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:10,847 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:10,850 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:10,852 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:10,855 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:10,857 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:11,874 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:11,876 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:12,429 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:13,430 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:13,431 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:13,981 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:14,982 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:14,984 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:15,536 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:16,537 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:16,539 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:17,411 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:18,412 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:18,414 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:19,498 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:20,501 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:20,503 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:21,757 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:22,759 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:22,760 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:23,904 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:24,905 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:24,906 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:25,512 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:26,513 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:26,514 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:27,558 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:28,559 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:28,560 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:29,180 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:30,180 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:30,181 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:30,696 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:30,698 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:30,700 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:30,703 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:30,705 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:31,723 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:31,724 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:32,256 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:32,258 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:32,264 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:32,269 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:32,271 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:33,288 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:33,289 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:34,424 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:35,425 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:35,427 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:35,953 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:35,954 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:35,956 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:35,957 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:35,959 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:36,972 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:36,973 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:37,505 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:18:37,506 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:18:37,507 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:18:37,509 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:18:37,510 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:18:38,517 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:38,518 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:39,061 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:40,062 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:18:40,070 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:18:40,477 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:18:40,478 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:18:40,479 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:18:40,480 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:18:40,481 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-04-03 11:18:40,611 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:18:40,613 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 11:19:01,701 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:19:01,833 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:19:01,871 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:19:01,875 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-04-03 11:19:01,877 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-04-03 11:19:01,879 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:19:01,880 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:19:01,881 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:19:01,882 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:19:01,883 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-04-03 11:19:01,884 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:19:01,885 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:19:01,910 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-04-03 11:19:01,911 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:19:01,925 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:19:01,927 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:19:01,934 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:19:01,936 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:19:01,937 [Thread: 10      ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:19:01,938 [Thread: 10      ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:19:01,939 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:19:01,940 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:19:02,112 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:19:02,114 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:19:02,115 [Thread: 10      ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:19:02,117 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:19:02,156 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:19:02,160 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:19:02,163 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:19:02,167 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:19:02,314 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:19:02,318 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:19:02,324 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:19:02,330 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:19:02,335 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:19:02,513 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:19:02,653 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:19:02,654 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:19:02,656 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:19:02,658 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:19:02,660 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:19:02,703 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:19:02,712 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:19:02,716 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:19:02,717 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:19:02,718 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:19:02,720 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:19:02,721 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:19:03,013 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:19:03,014 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:19:03,015 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:19:03,016 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:19:03,017 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:19:03,018 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:19:03,019 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:19:03,020 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:19:03,112 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:19:03,115 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:19:03,118 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:19:03,133 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:19:03,138 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:19:03,310 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:19:03,311 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:19:03,313 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:19:03,314 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:19:03,315 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:19:03,316 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:19:03,317 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:19:03,318 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:03,510 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:19:03,511 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:19:03,512 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:19:03,514 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:19:03,515 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:19:03,710 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:19:03,711 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:19:03,712 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:19:03,713 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:19:03,714 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:03,715 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:03,716 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:19:03,718 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:19:03,910 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:19:03,911 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:19:03,913 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:19:03,913 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:19:06,012 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:19:06,014 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:19:06,015 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:19:06,016 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:19:06,100 [Thread: 12      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:19:06,902 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:19:06,904 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:19:06,905 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:19:06,907 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:19:06,911 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:07,460 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:19:08,463 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:08,465 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:09,014 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:19:10,016 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:10,017 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:10,559 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:19:11,560 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:11,560 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:12,089 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:12,091 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:12,092 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:12,092 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:12,093 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:13,103 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:13,105 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:13,906 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:19:14,908 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:14,909 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:15,440 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:15,441 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:15,442 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:15,443 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:15,444 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:16,449 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:16,450 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:16,973 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:16,974 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:16,975 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:16,976 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:16,979 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:17,983 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:17,985 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:18,507 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:18,508 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:18,509 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:18,510 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:18,511 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:19,515 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:19,518 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:20,041 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:20,043 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:20,045 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:20,060 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:20,062 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:21,072 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:21,073 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:21,595 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:21,597 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:21,600 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:21,603 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:21,605 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:22,622 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:22,623 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:23,145 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:23,148 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:23,151 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:23,153 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:23,156 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:24,172 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:24,174 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:24,697 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:24,699 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:24,704 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:24,707 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:24,709 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:25,721 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:25,722 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:26,243 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:26,247 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:26,248 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:26,250 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:26,251 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:27,259 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:27,264 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:27,785 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:27,786 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:27,787 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:27,787 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:27,788 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:28,792 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:28,793 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:29,319 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:29,321 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:29,323 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:29,325 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:29,327 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:30,346 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:30,347 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:30,869 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:30,870 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:30,871 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:30,871 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:30,872 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:31,878 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:31,879 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:32,690 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:19:33,702 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:33,703 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:34,224 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:34,225 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:34,226 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:34,227 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:34,229 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:35,236 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:35,238 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:35,760 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:35,761 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:35,762 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:35,763 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:35,764 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:36,777 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:36,778 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:37,299 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:37,300 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:37,301 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:37,302 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:37,303 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:38,308 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:38,310 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:38,837 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:38,840 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:38,843 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:38,846 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:38,848 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:39,865 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:39,866 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:40,390 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:40,392 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:40,394 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:40,396 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:40,398 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:41,406 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:41,408 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:41,929 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:19:41,931 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:19:41,932 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:19:41,934 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:19:41,936 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:19:42,952 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:42,955 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:43,508 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:19:44,509 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:44,510 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:19:45,062 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:19:46,063 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:19:46,064 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:20:57,280 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:20:58,212 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:20:58,493 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:20:58,615 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:20:58,621 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:20:58,626 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:20:58,629 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:20:58,633 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:20:58,636 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:20:58,638 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:20:58,640 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:20:58,643 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:20:58,645 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:20:58,647 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:20:58,765 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:20:58,773 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:20:58,785 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:20:58,788 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:20:58,790 [Thread: 9       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:20:58,792 [Thread: 9       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:20:58,793 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:20:58,795 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:20:58,798 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:20:58,800 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:20:58,901 [Thread: 9       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:20:58,903 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:20:59,028 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:20:59,031 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:20:59,034 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:20:59,038 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:20:59,041 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:20:59,102 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:20:59,104 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:20:59,108 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:20:59,111 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:20:59,113 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:21:00,001 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:21:00,005 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:21:00,009 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:21:00,017 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:21:00,019 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:21:00,050 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:21:00,053 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:21:00,056 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:21:00,057 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:21:00,059 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:21:00,204 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:21:00,207 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:21:00,440 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:21:00,441 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:21:00,442 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:21:00,443 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:21:00,444 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:21:00,445 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:21:00,447 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:21:00,447 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:21:00,448 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:21:00,604 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:21:00,616 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:21:00,618 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:21:00,622 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:21:00,624 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:21:00,804 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:21:00,805 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:21:00,807 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:21:00,808 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:21:00,809 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:21:00,811 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:21:00,812 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:21:00,813 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:21:01,004 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:21:01,007 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:21:01,013 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:21:01,016 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:21:01,019 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:21:01,204 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:21:01,207 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:21:01,209 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:21:01,211 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:21:01,214 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:21:01,217 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:21:01,220 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:21:01,221 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:21:01,403 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:21:01,405 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:21:01,406 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:21:04,670 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:21:04,765 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:21:04,768 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:21:04,771 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:21:04,924 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:21:05,868 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:21:05,870 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:21:05,871 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:21:05,871 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:21:06,027 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:06,613 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:07,617 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:07,619 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:08,167 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:09,168 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:09,169 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:09,720 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:10,720 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:10,722 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:11,272 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:12,273 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:12,274 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:13,495 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:14,495 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:14,496 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:15,017 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:21:15,018 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:21:15,019 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:21:15,020 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:21:15,021 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:21:16,048 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:16,048 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:17,159 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:18,162 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:18,164 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:19,267 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:20,268 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:20,269 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:21,407 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:22,408 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:22,409 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:23,581 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:24,582 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:24,585 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:25,752 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:26,754 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:26,757 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:21:27,967 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:21:28,969 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:21:28,970 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:02,796 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:22:02,986 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:22:03,034 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:22:03,038 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:22:03,040 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:22:03,042 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:22:03,043 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:22:03,044 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:22:03,046 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:22:03,047 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-04-03 11:22:03,048 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:22:03,049 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:22:03,050 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-04-03 11:22:03,051 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:22:03,241 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:22:03,246 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:22:03,254 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:22:03,256 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:22:03,257 [Thread: 8       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:22:03,258 [Thread: 8       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:22:03,261 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:22:03,262 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:22:03,264 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:22:03,419 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:22:03,425 [Thread: 8       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:22:03,429 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:22:03,569 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:22:03,574 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:22:03,578 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:22:03,583 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:22:03,587 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:22:03,619 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:22:03,623 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:22:03,628 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:22:03,633 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:22:03,636 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:22:03,910 [Thread: 8       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:22:03,912 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:22:03,913 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:22:03,915 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:22:03,917 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:22:03,957 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:22:03,960 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:22:03,964 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:22:04,018 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:22:04,021 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:22:04,022 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:22:04,025 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:22:04,124 [Thread: 8       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:22:04,219 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:22:04,223 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:22:04,226 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:22:04,229 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:22:04,232 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:22:04,234 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:22:04,237 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:22:04,240 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:22:04,419 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:22:04,422 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:22:04,441 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:22:04,447 [Thread: 8       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:22:04,450 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:22:04,619 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:22:04,621 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:22:04,624 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:22:04,626 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:22:04,628 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:22:04,630 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:22:04,633 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:04,635 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:22:04,820 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:22:04,823 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:22:04,838 [Thread: 8       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:22:04,843 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:22:04,847 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:22:05,019 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:22:05,020 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:22:05,022 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:22:05,022 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:05,023 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:05,025 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:22:05,027 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:22:05,028 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:22:05,029 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:22:05,219 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:22:05,221 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:22:06,994 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:22:06,996 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:22:06,997 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:22:06,998 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:22:07,092 [Thread: 10      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:22:08,761 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:22:08,763 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:22:08,765 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:22:08,767 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:22:08,773 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:09,928 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:22:10,930 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:10,931 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:12,040 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:22:13,042 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:13,043 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:14,157 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:22:15,166 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:15,167 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:16,274 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:22:17,274 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:17,275 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:18,366 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:22:19,367 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:19,369 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:20,573 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:22:21,574 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:21,575 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:22,575 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:22:23,577 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:23,579 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:24,101 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:24,106 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:24,110 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:24,112 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:24,115 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:25,172 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:25,173 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:25,688 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:25,690 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:25,692 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:25,694 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:25,696 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:26,703 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:26,709 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:27,232 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:27,235 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:27,237 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:27,240 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:27,243 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:28,264 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:28,265 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:28,787 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:28,788 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:28,789 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:28,790 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:28,791 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:29,797 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:29,850 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:30,374 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:30,375 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:30,376 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:30,377 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:30,378 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:31,384 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:31,390 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:31,912 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:31,914 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:31,917 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:31,919 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:31,926 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:32,939 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:32,940 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:33,467 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:33,468 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:33,468 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:33,469 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:33,470 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:34,475 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:34,480 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:35,004 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:35,006 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:35,009 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:35,011 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:35,013 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:36,028 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:36,033 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:36,554 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:36,555 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:36,555 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:36,556 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:36,557 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:37,563 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:37,564 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:38,078 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:38,079 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:38,080 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:38,081 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:38,082 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:39,088 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:39,090 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:39,611 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:39,613 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:39,617 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:39,619 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:39,620 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:40,626 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:40,627 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:41,151 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:41,158 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:41,159 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:41,160 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:41,162 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:42,170 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:42,171 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:42,692 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:42,693 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:42,694 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:42,695 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:42,696 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:43,703 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:43,708 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:44,233 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:44,235 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:44,238 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:44,240 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:44,243 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:45,259 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:45,260 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:45,782 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:45,784 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:45,785 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:45,787 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:45,788 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:46,800 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:46,801 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:47,322 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:47,324 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:47,327 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:47,329 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:47,331 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:48,347 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:48,350 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:48,872 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:48,874 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:48,876 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:48,879 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:48,884 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:49,894 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:49,895 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:50,416 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:50,417 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:50,418 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:50,419 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:50,420 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:51,428 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:51,430 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:52,566 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:22:53,568 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:53,571 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:54,093 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:54,095 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:54,098 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:54,102 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:54,104 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:55,119 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:55,121 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:55,644 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:55,645 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:55,647 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:55,648 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:55,649 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:56,663 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:56,664 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:57,188 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:57,191 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:57,194 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:57,196 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:57,199 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:58,222 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:58,223 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:22:58,736 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:22:58,738 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:22:58,741 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:22:58,743 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:22:58,746 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:22:59,758 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:22:59,761 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:23:00,304 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:23:01,305 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:23:01,306 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:23:01,861 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:23:02,869 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:23:02,871 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:23:03,420 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:23:04,421 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:23:04,422 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:23:04,967 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:23:05,968 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:23:05,969 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:23:06,512 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:23:07,513 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:23:07,514 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:23:08,069 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:23:09,070 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:23:09,071 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:23:09,616 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:23:10,616 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:23:10,619 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:23:11,161 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:23:12,163 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:23:12,171 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:26:48,178 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:26:49,096 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:26:49,561 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:26:49,618 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:26:49,621 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:26:49,622 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:26:49,623 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:26:49,624 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:26:49,626 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:26:49,627 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:26:49,628 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:26:49,629 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:26:49,630 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:26:49,631 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:26:49,734 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:26:49,737 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:26:49,783 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:26:49,784 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:26:49,786 [Thread: 9       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:26:49,787 [Thread: 9       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:26:49,788 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:26:49,789 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:26:49,792 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:26:49,793 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:26:49,979 [Thread: 9       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:26:49,982 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:26:50,163 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:26:50,166 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:26:50,169 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:26:50,173 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:26:50,175 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:26:50,178 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:26:50,180 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:26:50,183 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:26:50,186 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:26:50,188 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:26:51,326 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:26:51,329 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:26:51,333 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:26:51,341 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:26:51,347 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:26:51,451 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:26:51,459 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:26:51,466 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:26:51,468 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:26:51,470 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:26:51,472 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:26:51,549 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:26:51,903 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:26:51,904 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:26:51,905 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:26:51,906 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:26:51,908 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:26:51,909 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:26:51,909 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:26:51,910 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:26:51,911 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:26:51,949 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:26:51,963 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:26:51,967 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:26:51,971 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:26:51,974 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:26:52,149 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:26:52,152 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:26:52,155 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:26:52,161 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:26:52,163 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:26:52,166 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:26:52,168 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:26:52,170 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:26:52,349 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:26:52,352 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:26:52,359 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:26:52,361 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:26:52,364 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:26:52,549 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:26:52,552 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:26:52,555 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:26:52,559 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:26:52,561 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:26:52,566 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:26:52,572 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:26:52,577 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:26:52,749 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:26:52,752 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:26:52,754 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:26:54,735 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:26:54,765 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:26:54,767 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:26:54,768 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:26:54,852 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:26:55,935 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:26:55,937 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:26:55,938 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:26:55,939 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:26:56,137 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:26:56,698 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:26:57,700 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:26:57,702 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:26:58,254 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:26:59,256 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:26:59,258 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:26:59,805 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:00,807 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:00,810 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:01,362 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:02,363 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:02,365 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:03,272 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:04,274 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:04,275 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:05,397 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:06,400 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:06,402 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:07,450 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:08,452 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:08,452 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:09,545 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:10,546 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:10,559 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:11,593 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:12,598 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:12,603 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:13,632 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:14,633 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:14,635 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:15,650 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:16,651 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:16,653 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:17,786 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:18,787 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:18,791 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:19,889 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:20,890 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:20,891 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:21,692 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:22,692 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:22,693 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:23,834 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:24,844 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:24,846 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:25,960 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:26,961 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:26,962 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:27,553 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:28,555 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:28,576 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:29,100 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:27:29,102 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:27:29,103 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:27:29,104 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:27:29,105 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:27:30,206 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:30,207 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:31,347 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:32,348 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:32,349 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:33,503 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:34,504 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:34,506 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:35,027 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:27:35,028 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:27:35,029 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:27:35,034 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:27:35,034 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:27:36,040 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:36,043 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:36,565 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:27:36,566 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:27:36,568 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:27:36,570 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:27:36,572 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:27:37,583 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:37,583 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:38,106 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:27:38,108 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:27:38,111 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:27:38,114 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:27:38,116 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:27:39,132 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:39,133 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:39,654 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:27:39,654 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:27:39,657 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:27:39,658 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:27:39,659 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:27:40,664 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:40,665 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:41,599 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:27:42,600 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:42,601 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:27:43,124 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:27:43,125 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:27:43,127 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:27:43,128 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:27:43,129 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:27:43,877 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:27:43,948 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:27:43,949 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:27:43,950 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:27:43,951 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-04-03 11:27:44,137 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:27:44,138 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 11:27:57,008 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:27:57,148 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:27:57,209 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:27:57,262 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-04-03 11:27:57,268 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-04-03 11:27:57,273 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:27:57,276 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:27:57,280 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:27:57,283 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:27:57,286 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-04-03 11:27:57,288 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:27:57,289 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:27:57,291 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-04-03 11:27:57,292 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:27:57,314 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:27:57,317 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:27:57,470 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:27:57,473 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:27:57,475 [Thread: 10      ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:27:57,477 [Thread: 10      ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:27:57,479 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:27:57,481 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:27:57,485 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:27:57,493 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:27:57,634 [Thread: 10      ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:27:57,636 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:27:57,713 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:27:57,720 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:27:57,726 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:27:57,735 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:27:57,740 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:27:57,743 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:27:57,835 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:27:57,838 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:27:57,840 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:27:57,842 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:27:58,172 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:27:58,173 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:27:58,175 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:27:58,177 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:27:58,179 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:27:58,208 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:27:58,210 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:27:58,212 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:27:58,214 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:27:58,234 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:27:58,236 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:27:58,237 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:27:58,387 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:27:58,388 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:27:58,433 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:27:58,435 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:27:58,436 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:27:58,437 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:27:58,438 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:27:58,439 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:27:58,440 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:27:58,441 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:27:58,635 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:27:58,651 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:27:58,656 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:27:58,659 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:27:58,662 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:27:58,833 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:27:58,835 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:27:58,836 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:27:58,837 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:27:58,838 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:27:58,840 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:27:58,841 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:27:58,842 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:27:59,035 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:27:59,040 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:27:59,043 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:27:59,046 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:27:59,049 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:27:59,234 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:27:59,238 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:27:59,240 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:27:59,243 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:27:59,247 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:27:59,253 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:27:59,256 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:27:59,259 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:27:59,262 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:27:59,434 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:28:02,719 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:28:02,720 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:28:02,722 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:28:02,722 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:28:02,806 [Thread: 12      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:28:03,756 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:28:03,762 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:28:03,763 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:28:03,764 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:28:03,769 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:04,290 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:04,293 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:04,294 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:04,295 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:04,296 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:05,319 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:05,319 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:05,840 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:05,841 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:05,842 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:05,842 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:05,843 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:06,853 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:06,854 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:07,375 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:07,376 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:07,376 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:07,377 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:07,378 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:08,387 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:08,388 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:09,261 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:28:10,263 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:10,265 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:10,786 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:10,787 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:10,788 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:10,789 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:10,790 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:11,796 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:11,797 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:12,322 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:12,323 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:12,324 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:12,326 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:12,327 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:13,347 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:13,349 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:13,865 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:13,866 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:13,867 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:13,868 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:13,869 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:14,875 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:14,876 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:15,397 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:15,398 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:15,399 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:15,400 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:15,401 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:16,407 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:16,409 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:16,930 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:16,931 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:16,932 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:16,934 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:16,935 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:17,947 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:17,948 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:19,136 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:28:20,137 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:20,138 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:20,653 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:20,654 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:20,655 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:20,656 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:20,657 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:21,664 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:21,665 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:22,187 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:22,188 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:22,189 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:22,190 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:22,191 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:23,196 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:23,198 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:23,720 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:23,722 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:23,725 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:23,729 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:23,732 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:24,752 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:24,754 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:25,276 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:25,278 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:25,280 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:25,282 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:25,283 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:26,295 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:26,296 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:26,819 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:26,821 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:26,822 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:26,824 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:26,826 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:27,844 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:27,847 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:28,360 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:28,362 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:28,365 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:28,367 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:28,369 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:29,385 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:29,387 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:29,904 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:29,905 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:29,908 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:29,910 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:29,912 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:30,924 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:30,926 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:31,446 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:31,447 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:31,448 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:31,449 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:31,450 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:32,454 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:32,455 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:32,980 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:32,981 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:32,983 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:32,984 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:32,985 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:34,000 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:34,001 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:35,131 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:28:36,132 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:36,133 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:36,656 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:36,657 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:36,659 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:36,660 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:36,662 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:37,679 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:37,680 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:38,202 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:38,203 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:38,205 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:38,207 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:38,209 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:39,222 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:39,224 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:39,747 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:39,747 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:39,748 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:39,749 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:39,750 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:40,761 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:40,762 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:41,283 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:41,284 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:41,285 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:41,285 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:41,286 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:42,299 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:42,301 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:42,823 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:42,826 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:42,829 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:42,831 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:42,834 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:43,852 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:43,853 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:44,376 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:44,377 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:44,378 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:44,379 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:44,379 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:45,386 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:45,387 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:45,945 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:45,946 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:45,948 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:45,950 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:45,953 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:46,965 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:46,967 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:47,481 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:47,483 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:47,486 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:47,488 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:47,490 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:48,505 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:48,507 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:49,044 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:49,047 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:49,051 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:49,053 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:49,056 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:50,071 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:50,072 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:50,886 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:28:51,888 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:51,890 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:52,413 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:52,415 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:52,418 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:52,420 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:52,423 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:53,435 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:53,438 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:53,960 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:53,961 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:53,962 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:53,963 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:53,964 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:54,968 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:54,971 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:55,493 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:55,494 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:55,495 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:55,496 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:55,497 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:56,503 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:56,506 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:57,029 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:57,030 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:57,031 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:57,032 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:57,033 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:58,037 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:58,038 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:28:58,559 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:28:58,560 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:28:58,560 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:28:58,561 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:28:58,562 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:28:59,569 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:28:59,570 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:29:00,387 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:29:00,813 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:29:00,829 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:29:00,830 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:29:00,831 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:29:00,832 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-04-03 11:29:01,388 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:29:01,394 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 11:31:25,601 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:31:26,416 [Thread: 8       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:31:26,680 [Thread: 8       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:31:26,785 [Thread: 8       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:31:26,790 [Thread: 8       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:31:26,810 [Thread: 8       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:31:26,813 [Thread: 8       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:31:26,815 [Thread: 8       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:31:26,818 [Thread: 8       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:31:26,821 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-04-03 11:31:26,824 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:31:26,826 [Thread: 8       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:31:26,829 [Thread: 8       ] [DEBUG] -- Default init method ''.
2020-04-03 11:31:26,831 [Thread: 8       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:31:26,889 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:31:26,893 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:31:27,021 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:31:27,025 [Thread: 8       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:31:27,028 [Thread: 8       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:31:27,031 [Thread: 8       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:31:27,035 [Thread: 8       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:31:27,037 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:31:27,044 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:31:27,046 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:31:27,106 [Thread: 8       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:31:27,108 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:31:27,608 [Thread: 8       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:31:27,614 [Thread: 8       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:31:27,619 [Thread: 8       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:31:27,627 [Thread: 8       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:31:27,631 [Thread: 8       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:31:27,634 [Thread: 8       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:31:27,665 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:31:27,732 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:31:27,738 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:31:27,835 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:31:28,283 [Thread: 8       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:31:28,286 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:31:28,288 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:31:28,290 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:31:28,292 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:31:28,337 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:31:28,341 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:31:28,346 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:31:28,348 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:31:28,349 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:31:28,487 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:31:28,488 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:31:28,849 [Thread: 8       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:31:28,850 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:31:28,851 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:31:28,852 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:31:28,853 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:31:28,854 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:31:28,855 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:31:28,856 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:31:28,857 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:31:28,886 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:31:28,887 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:31:28,893 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:31:28,895 [Thread: 8       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:31:28,896 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:31:29,086 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:31:29,087 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:31:29,088 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:31:29,089 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:31:29,090 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:31:29,091 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:31:29,092 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:29,093 [Thread: 8       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:31:29,287 [Thread: 8       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:31:29,290 [Thread: 8       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:31:29,295 [Thread: 8       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:31:29,298 [Thread: 8       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:31:29,300 [Thread: 8       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:31:29,488 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:31:29,491 [Thread: 8       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:31:29,494 [Thread: 8       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:31:29,498 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:29,501 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:29,505 [Thread: 8       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:31:29,509 [Thread: 8       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:31:29,512 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:31:29,688 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:31:29,690 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:31:29,691 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:31:32,274 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:31:32,327 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:31:32,329 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:31:32,332 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:31:32,563 [Thread: 10      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:31:33,349 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:31:33,350 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:31:33,351 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:31:33,353 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:31:33,481 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:34,165 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:34,179 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:34,185 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:34,187 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:34,189 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:35,222 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:35,224 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:35,750 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:35,756 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:35,758 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:35,759 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:35,761 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:36,772 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:36,773 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:37,296 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:37,306 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:37,307 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:37,308 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:37,309 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:38,315 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:38,315 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:38,835 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:38,837 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:38,838 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:38,839 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:38,840 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:39,846 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:39,846 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:40,367 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:40,367 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:40,368 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:40,369 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:40,370 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:41,383 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:41,388 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:42,208 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:31:43,208 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:43,211 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:43,733 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:43,735 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:43,746 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:43,748 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:43,750 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:44,765 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:44,767 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:45,288 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:45,289 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:45,290 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:45,291 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:45,292 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:46,298 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:46,298 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:46,820 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:46,821 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:46,822 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:46,823 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:46,824 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:47,829 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:47,830 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:48,353 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:48,354 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:48,356 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:48,357 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:48,359 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:49,367 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:49,368 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:49,892 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:49,893 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:49,894 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:49,895 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:49,897 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:50,905 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:50,906 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:51,429 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:51,430 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:51,432 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:51,433 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:51,436 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:52,444 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:52,448 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:53,580 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:31:54,582 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:54,618 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:55,131 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:55,132 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:55,133 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:55,139 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:55,140 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:56,149 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:56,150 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:56,669 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:56,671 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:56,674 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:56,676 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:56,678 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:57,694 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:57,701 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:58,225 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:58,226 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:58,227 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:58,228 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:58,229 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:59,236 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:31:59,237 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:31:59,758 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:31:59,760 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:31:59,763 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:31:59,766 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:31:59,768 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:31:59,927 [Thread: 8       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:31:59,970 [Thread: 8       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:31:59,974 [Thread: 8       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:31:59,980 [Thread: 8       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:31:59,982 [Thread: 8       ] [DEBUG] -- Reader Stop Request
2020-04-03 11:32:00,787 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:32:00,789 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 11:32:32,117 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:32:32,416 [Thread: 1       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:32:32,679 [Thread: 1       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:32:32,773 [Thread: 1       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:32:32,781 [Thread: 1       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:32:32,785 [Thread: 1       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:32:32,788 [Thread: 1       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:32:32,790 [Thread: 1       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:32:32,793 [Thread: 1       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:32:32,796 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-04-03 11:32:32,798 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:32:32,801 [Thread: 1       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:32:32,804 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-04-03 11:32:32,807 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:32:32,839 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:32:32,842 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:32:32,844 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:32:32,845 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:32:32,846 [Thread: 1       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:32:32,846 [Thread: 1       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:32:32,848 [Thread: 1       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:32:32,849 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:32:32,850 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:32:32,851 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:32:32,852 [Thread: 1       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:32:32,853 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:32:32,956 [Thread: 1       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:32:32,963 [Thread: 1       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:32:32,970 [Thread: 1       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:32:32,981 [Thread: 1       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:32:32,986 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:32:32,990 [Thread: 1       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:32:32,995 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:32:33,000 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:32:33,004 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:32:33,007 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:32:33,073 [Thread: 1       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:32:33,074 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:32:33,076 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:32:33,078 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:32:33,081 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:32:33,103 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:32:33,105 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:32:33,107 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:32:33,108 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:32:33,109 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:32:33,110 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:32:33,111 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:32:33,124 [Thread: 1       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:32:33,125 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:32:33,127 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:32:33,128 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:32:33,129 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:32:33,130 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:32:33,131 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:32:33,132 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:32:33,133 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:32:33,134 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:32:33,135 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:32:33,136 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:32:33,137 [Thread: 1       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:32:33,138 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:32:33,139 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:32:33,140 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:32:33,141 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:32:33,142 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:32:33,143 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:32:33,145 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:32:33,146 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:32:33,147 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:32:33,148 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:32:33,149 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:32:33,151 [Thread: 1       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:32:33,152 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:32:33,153 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:32:33,154 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:32:33,155 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:32:33,156 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:32:33,157 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:32:33,158 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:32:33,159 [Thread: 1       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:32:33,161 [Thread: 1       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:32:33,162 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:32:33,163 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:32:33,164 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:32:33,165 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:32:35,380 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:32:35,385 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:32:35,388 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:32:35,390 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:32:35,496 [Thread: 4       ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:32:36,272 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:32:36,402 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:32:36,404 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:32:36,407 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:32:36,414 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:32:36,938 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:32:36,949 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:32:36,952 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:32:36,954 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:32:36,956 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:32:38,030 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:32:38,032 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:32:38,554 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:32:38,556 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:32:38,559 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:32:38,561 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:32:38,564 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:32:39,581 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:32:39,583 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:32:40,116 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:32:40,118 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:32:40,121 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:32:40,123 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:32:40,126 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:32:41,141 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:32:41,143 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:32:41,666 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:32:41,668 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:32:41,671 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:32:41,674 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:32:41,692 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:32:42,699 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:32:42,701 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:32:43,223 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:32:43,226 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:32:43,228 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:32:43,231 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:32:43,233 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:32:43,990 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:32:43,994 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:32:43,998 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:32:43,999 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:32:44,001 [Thread: 1       ] [DEBUG] -- Reader Stop Request
2020-04-03 11:32:44,249 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:32:44,251 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 11:32:49,086 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:32:49,131 [Thread: 1       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:32:49,143 [Thread: 1       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:32:49,146 [Thread: 1       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:32:49,148 [Thread: 1       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:32:49,149 [Thread: 1       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:32:49,150 [Thread: 1       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:32:49,151 [Thread: 1       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:32:49,152 [Thread: 1       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:32:49,153 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-04-03 11:32:49,154 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:32:49,155 [Thread: 1       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:32:49,155 [Thread: 1       ] [DEBUG] -- Default init method ''.
2020-04-03 11:32:49,156 [Thread: 1       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:32:49,173 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:32:49,176 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:32:49,178 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:32:49,179 [Thread: 1       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:32:49,180 [Thread: 1       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:32:49,180 [Thread: 1       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:32:49,181 [Thread: 1       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:32:49,182 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:32:49,184 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:32:49,185 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:32:49,186 [Thread: 1       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:32:49,187 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:32:49,199 [Thread: 1       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:32:49,201 [Thread: 1       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:32:49,203 [Thread: 1       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:32:49,206 [Thread: 1       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:32:49,208 [Thread: 1       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:32:49,209 [Thread: 1       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:32:49,211 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:32:49,214 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:32:49,217 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:32:49,218 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:32:49,281 [Thread: 1       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:32:49,282 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:32:49,283 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:32:49,285 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:32:49,288 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:32:49,289 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:32:49,291 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:32:49,293 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:32:49,294 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:32:49,295 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:32:49,296 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:32:49,296 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:32:49,309 [Thread: 1       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:32:49,310 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:32:49,310 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:32:49,311 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:32:49,312 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:32:49,313 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:32:49,314 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:32:49,314 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:32:49,315 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:32:49,316 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:32:49,316 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:32:49,317 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:32:49,319 [Thread: 1       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:32:49,320 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:32:49,320 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:32:49,321 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:32:49,322 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:32:49,323 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:32:49,324 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:32:49,325 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:32:49,326 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:32:49,327 [Thread: 1       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:32:49,327 [Thread: 1       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:32:49,328 [Thread: 1       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:32:49,330 [Thread: 1       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:32:49,330 [Thread: 1       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:32:49,331 [Thread: 1       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:32:49,332 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:32:49,333 [Thread: 1       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:32:49,334 [Thread: 1       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:32:49,335 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:32:49,335 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:32:49,337 [Thread: 1       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:32:49,339 [Thread: 1       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:32:49,342 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:32:49,343 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:32:49,344 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:32:49,345 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:32:59,268 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:32:59,273 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:32:59,276 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:32:59,279 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:32:59,296 [Thread: 4       ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:33:00,248 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:33:00,251 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:33:00,253 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:33:00,255 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:33:00,267 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:33:00,791 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:33:00,795 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:33:00,797 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:33:00,798 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:33:00,800 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:33:01,817 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:33:01,821 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:33:02,344 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:33:02,346 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:33:02,349 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:33:02,351 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:33:02,354 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:33:03,370 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:33:03,372 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:33:03,894 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:33:03,896 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:33:03,898 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:33:03,901 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:33:03,904 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:33:04,919 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:33:04,921 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:33:05,453 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:33:05,455 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:33:05,474 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:33:05,477 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:33:05,479 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:33:06,491 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:33:06,493 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:33:07,015 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:33:07,017 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:33:07,019 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:33:07,022 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:33:07,024 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:33:07,934 [Thread: 1       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:33:07,936 [Thread: 1       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:33:07,939 [Thread: 1       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:33:07,941 [Thread: 1       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:33:07,944 [Thread: 1       ] [DEBUG] -- Reader Stop Request
2020-04-03 11:33:08,039 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:33:08,040 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 11:52:30,983 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:52:31,730 [Thread: 10      ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:52:32,054 [Thread: 10      ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:52:32,231 [Thread: 10      ] [DEBUG] -- Loading object definitions.
2020-04-03 11:52:32,238 [Thread: 10      ] [DEBUG] -- Loading object definitions...
2020-04-03 11:52:32,240 [Thread: 10      ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:52:32,241 [Thread: 10      ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:52:32,243 [Thread: 10      ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:52:32,244 [Thread: 10      ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:52:32,246 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-04-03 11:52:32,247 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:52:32,248 [Thread: 10      ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:52:32,250 [Thread: 10      ] [DEBUG] -- Default init method ''.
2020-04-03 11:52:32,251 [Thread: 10      ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:52:32,382 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:52:32,387 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:52:32,405 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:52:32,409 [Thread: 10      ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:52:32,412 [Thread: 10      ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:52:32,415 [Thread: 10      ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:52:32,417 [Thread: 10      ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:52:32,418 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:52:32,420 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:52:32,421 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:52:32,477 [Thread: 10      ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:52:32,478 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:52:32,698 [Thread: 10      ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:52:32,703 [Thread: 10      ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:52:32,707 [Thread: 10      ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:52:32,712 [Thread: 10      ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:52:32,716 [Thread: 10      ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:52:32,719 [Thread: 10      ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:52:32,722 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:52:32,727 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:52:32,878 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:52:32,880 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:52:33,224 [Thread: 10      ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:52:33,226 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:52:33,228 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:52:33,230 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:52:33,232 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:52:33,386 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:52:33,391 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:52:33,398 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:52:33,400 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:52:33,403 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:52:33,406 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:52:33,477 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:52:33,668 [Thread: 10      ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:52:33,669 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:52:33,670 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:52:33,671 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:52:33,672 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:52:33,673 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:52:33,674 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:52:33,677 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:52:33,678 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:52:33,679 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:52:33,685 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:52:33,686 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:52:33,879 [Thread: 10      ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:52:33,880 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:52:33,882 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:52:33,883 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:52:33,884 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:52:33,886 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:52:33,887 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:52:33,888 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:52:34,078 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:52:34,081 [Thread: 10      ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:52:34,083 [Thread: 10      ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:52:34,086 [Thread: 10      ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:52:34,092 [Thread: 10      ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:52:34,279 [Thread: 10      ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:52:34,280 [Thread: 10      ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:52:34,282 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:52:34,283 [Thread: 10      ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:52:34,285 [Thread: 10      ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:52:34,286 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:52:34,288 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:52:34,292 [Thread: 10      ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:52:34,296 [Thread: 10      ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:52:34,479 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:52:34,480 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:52:34,481 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:52:34,482 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:52:36,383 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:52:36,459 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:52:36,461 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:52:36,463 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:52:36,575 [Thread: 12      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:52:37,832 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:52:37,834 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:52:37,835 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:52:37,836 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:52:37,988 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:38,800 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:39,807 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:39,808 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:40,607 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:41,610 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:41,612 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:42,649 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:43,653 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:43,656 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:44,329 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:45,331 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:45,332 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:46,375 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:47,377 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:47,379 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:48,181 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:49,182 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:49,183 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:49,977 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:50,977 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:50,978 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:51,548 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:52,549 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:52,549 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:53,345 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:54,345 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:54,347 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:55,152 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:56,154 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:56,155 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:56,949 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:57,950 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:57,951 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:52:58,972 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:52:59,974 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:52:59,975 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:00,766 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:01,767 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:01,768 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:02,683 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:03,684 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:03,686 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:04,891 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:05,892 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:05,894 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:07,089 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:08,089 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:08,091 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:09,277 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:10,278 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:10,280 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:11,416 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:12,417 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:12,419 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:13,601 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:14,603 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:14,605 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:15,747 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:16,748 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:16,749 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:17,750 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:18,751 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:18,752 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:19,538 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:20,540 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:20,541 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:21,662 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:22,663 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:22,664 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:23,684 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:24,685 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:24,687 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:25,785 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:26,787 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:26,787 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:28,008 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:29,008 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:29,010 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:30,112 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:31,113 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:31,114 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:31,925 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:32,926 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:32,929 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:34,073 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:35,076 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:35,077 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:36,098 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:37,113 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:37,116 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:37,922 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:38,925 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:38,927 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:40,020 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:41,021 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:41,022 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:42,153 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:43,154 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:43,155 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:43,717 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:44,719 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:44,724 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:45,881 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:46,882 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:46,887 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:48,003 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:49,008 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:49,009 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:50,020 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:51,022 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:51,023 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:51,574 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:52,582 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:52,583 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:53,133 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:54,137 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:54,142 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:54,693 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:55,694 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:55,695 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:56,244 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:57,244 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:57,245 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:57,795 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:53:58,796 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:53:58,797 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:53:59,338 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:00,339 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:00,340 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:00,893 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:01,901 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:01,902 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:02,450 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:03,451 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:03,453 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:04,004 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:05,011 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:05,018 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:05,559 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:06,560 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:06,561 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:07,112 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:08,113 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:08,114 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:08,666 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:09,678 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:09,679 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:10,234 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:11,235 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:11,236 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:11,787 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:12,788 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:12,790 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:13,844 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:14,845 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:14,850 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:16,002 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:17,003 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:17,004 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:18,109 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:19,110 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:19,111 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:20,211 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:21,216 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:21,217 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:22,339 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:23,340 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:23,343 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:24,365 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:25,365 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:25,366 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:26,240 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:27,242 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:27,245 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:28,238 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:29,242 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:29,244 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:30,229 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:31,230 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:31,231 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:31,791 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:32,792 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:32,797 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:33,798 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:34,803 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:34,803 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:35,896 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:36,897 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:36,897 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:37,467 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:38,467 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:38,469 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:39,244 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:40,245 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:40,247 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:40,818 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:41,819 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:41,820 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:42,605 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:43,606 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:43,607 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:44,279 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:45,279 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:45,280 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:46,064 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:47,065 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:47,066 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:47,737 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:48,738 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:48,740 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:49,307 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:50,309 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:53,349 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:54,026 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:55,027 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:55,028 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:55,807 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:56,809 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:56,810 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:57,373 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:54:58,375 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:54:58,376 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:54:59,157 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:00,174 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:00,177 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:00,739 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:01,739 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:01,740 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:02,302 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:03,304 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:03,306 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:04,184 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:05,185 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:05,187 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:05,961 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:06,972 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:06,973 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:07,765 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:08,766 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:08,768 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:09,439 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:10,441 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:10,442 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:10,994 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:11,994 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:11,995 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:12,560 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:13,561 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:13,562 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:14,677 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:15,678 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:15,679 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:16,697 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:17,698 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:17,700 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:18,815 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:19,816 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:19,819 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:20,926 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:21,927 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:21,928 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:23,064 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:24,066 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:24,068 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:24,854 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:25,855 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:25,857 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:26,970 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:27,972 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:27,974 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:29,077 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:30,078 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:30,080 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:30,862 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:31,863 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:31,864 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:32,424 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:33,424 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:33,429 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:34,182 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:35,187 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:35,192 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:35,753 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:36,767 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:36,768 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:37,327 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:38,328 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:38,330 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:39,095 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:40,096 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:40,097 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:41,255 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:42,256 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:55:42,258 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:55:42,398 [Thread: 10      ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:55:42,463 [Thread: 10      ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:55:42,466 [Thread: 10      ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:55:42,468 [Thread: 10      ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:55:42,471 [Thread: 10      ] [DEBUG] -- Reader Stop Request
2020-04-03 11:55:43,421 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:55:43,422 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 11:57:38,169 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 11:57:39,160 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 11:57:39,323 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 11:57:39,399 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 11:57:39,406 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 11:57:39,410 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 11:57:39,413 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 11:57:39,416 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 11:57:39,420 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 11:57:39,423 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:57:39,426 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:57:39,429 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 11:57:39,432 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 11:57:39,436 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 11:57:39,628 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 11:57:39,636 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 11:57:39,648 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 11:57:39,651 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 11:57:39,652 [Thread: 9       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 11:57:39,654 [Thread: 9       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 11:57:39,655 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 11:57:39,657 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 11:57:39,661 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 11:57:39,663 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 11:57:39,775 [Thread: 9       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 11:57:39,777 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 11:57:39,883 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:57:39,887 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 11:57:39,890 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 11:57:39,894 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 11:57:39,897 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 11:57:39,975 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 11:57:39,978 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:57:39,986 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 11:57:39,992 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 11:57:39,996 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 11:57:40,819 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:57:40,822 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 11:57:40,826 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 11:57:40,833 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 11:57:40,839 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 11:57:40,863 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 11:57:40,866 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:57:40,871 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:57:40,873 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 11:57:40,874 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 11:57:40,876 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 11:57:41,047 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 11:57:41,350 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:57:41,351 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 11:57:41,352 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 11:57:41,353 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 11:57:41,354 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 11:57:41,354 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 11:57:41,355 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 11:57:41,356 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 11:57:41,357 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 11:57:41,447 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 11:57:41,450 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 11:57:41,466 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 11:57:41,471 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:57:41,473 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 11:57:41,647 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 11:57:41,650 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 11:57:41,652 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 11:57:41,655 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 11:57:41,657 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 11:57:41,668 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 11:57:41,670 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:41,672 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 11:57:41,847 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 11:57:41,848 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 11:57:41,851 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 11:57:41,853 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 11:57:41,854 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 11:57:42,047 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 11:57:42,052 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 11:57:42,054 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 11:57:42,057 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:42,059 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:57:42,064 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 11:57:42,069 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 11:57:42,073 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:57:42,247 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:57:42,249 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:57:42,251 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:57:44,688 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:57:44,761 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:57:44,764 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:57:44,766 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:57:44,927 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 11:57:46,161 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:57:46,165 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:57:46,166 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:57:46,167 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:57:46,324 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:46,838 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:57:46,848 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:46,851 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:57:46,854 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:46,857 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:57:47,882 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:57:47,885 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:48,397 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:57:48,399 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:48,402 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:57:48,404 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:48,407 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:57:49,425 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:57:49,427 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:49,947 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:57:49,953 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:49,956 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:57:49,958 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:49,960 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:57:50,975 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:57:50,977 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:51,500 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:57:51,502 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:51,504 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:57:51,506 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:51,508 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:57:52,522 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:57:52,525 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:53,044 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:57:53,047 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:53,049 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:57:53,051 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:53,054 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:57:54,068 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:57:54,070 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:54,593 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:57:54,595 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:54,598 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:57:54,616 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:54,617 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:57:55,626 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:57:55,629 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:56,796 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:57:57,798 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:57:57,800 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:58,323 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:57:58,326 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:58,328 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:57:58,331 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:58,337 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:57:59,354 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:57:59,355 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:57:59,877 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:57:59,880 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:57:59,881 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:57:59,885 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:57:59,886 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:00,895 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:00,897 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:01,421 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:01,423 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:01,426 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:01,428 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:01,430 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:02,443 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:02,447 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:02,965 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:02,967 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:02,970 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:02,972 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:02,975 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:03,991 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:03,994 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:04,522 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:04,524 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:04,527 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:04,530 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:04,536 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:05,551 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:05,554 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:06,066 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:06,067 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:06,068 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:06,071 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:06,073 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:07,081 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:07,082 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:07,594 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:07,595 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:07,597 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:07,599 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:07,600 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:08,611 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:08,614 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:09,138 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:09,139 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:09,140 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:09,141 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:09,142 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:10,146 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:10,147 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:11,271 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:58:12,272 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:12,273 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:12,783 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:12,794 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:12,795 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:12,796 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:12,797 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:13,802 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:13,803 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:14,318 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:14,319 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:14,320 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:14,320 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:14,321 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:15,326 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:15,327 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:15,848 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:15,849 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:15,850 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:15,850 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:15,851 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:16,856 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:16,857 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:17,379 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:17,381 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:17,383 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:17,389 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:17,391 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:18,402 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:18,403 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:19,535 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 11:58:20,535 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:20,536 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:21,058 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:21,059 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:21,061 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:21,062 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:21,064 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:22,072 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:22,073 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:22,594 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:22,596 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:22,598 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:22,600 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:22,602 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:23,617 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:23,618 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:24,139 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:24,140 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:24,141 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:24,142 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:24,144 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:25,156 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:25,156 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:25,677 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:25,678 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:25,680 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:25,682 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:25,683 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:26,692 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:26,693 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:27,215 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:27,217 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:27,227 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:27,230 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:27,232 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:28,243 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:28,245 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:28,766 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:28,768 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:28,769 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:28,773 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:28,775 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:29,785 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:29,786 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:30,307 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:30,309 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:30,318 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:30,319 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:30,321 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:31,331 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:31,333 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:31,856 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:31,858 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:31,860 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:31,863 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:31,865 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:32,883 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:32,884 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:33,405 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:33,407 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:33,409 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:33,411 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:33,413 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:34,424 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:34,425 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:34,948 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:34,950 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:34,952 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:34,954 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:34,955 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:35,966 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 11:58:35,967 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 11:58:36,278 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 11:58:36,336 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 11:58:36,339 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 11:58:36,342 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 11:58:36,345 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-04-03 11:58:36,487 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 11:58:36,489 [Thread: VCR Read thread] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 11:58:36,492 [Thread: VCR Read thread] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 11:58:36,497 [Thread: VCR Read thread] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 11:58:36,499 [Thread: VCR Read thread] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 11:58:36,567 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 12:06:34,442 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 12:06:34,988 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 12:06:35,237 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 12:06:35,334 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 12:06:35,340 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 12:06:35,344 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 12:06:35,347 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 12:06:35,351 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 12:06:35,354 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 12:06:35,357 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 12:06:35,359 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 12:06:35,361 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 12:06:35,363 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 12:06:35,364 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 12:06:35,508 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 12:06:35,513 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 12:06:35,652 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 12:06:35,655 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 12:06:35,657 [Thread: 9       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 12:06:35,659 [Thread: 9       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 12:06:35,661 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 12:06:35,663 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 12:06:35,667 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 12:06:35,669 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 12:06:35,671 [Thread: 9       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 12:06:35,672 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 12:06:35,840 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 12:06:35,848 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 12:06:35,854 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 12:06:35,863 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 12:06:35,867 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 12:06:35,871 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 12:06:35,970 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 12:06:35,987 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 12:06:35,994 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 12:06:36,008 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 12:06:36,835 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 12:06:36,838 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 12:06:36,841 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 12:06:36,847 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 12:06:36,854 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 12:06:36,885 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 12:06:36,888 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 12:06:36,892 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 12:06:36,894 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 12:06:36,895 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 12:06:36,897 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 12:06:37,053 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 12:06:37,485 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 12:06:37,486 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 12:06:37,487 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 12:06:37,488 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 12:06:37,489 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 12:06:37,490 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 12:06:37,491 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 12:06:37,493 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 12:06:37,494 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 12:06:37,513 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 12:06:37,518 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 12:06:37,520 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 12:06:37,521 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 12:06:37,522 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 12:06:37,713 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 12:06:37,714 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 12:06:37,715 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 12:06:37,715 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 12:06:37,716 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 12:06:37,717 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 12:06:37,717 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:06:37,718 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 12:06:37,918 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 12:06:37,919 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 12:06:37,921 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 12:06:37,922 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 12:06:37,923 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 12:06:38,118 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 12:06:38,119 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 12:06:38,121 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 12:06:38,122 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:06:38,123 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:06:38,125 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 12:06:38,127 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 12:06:38,128 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 12:06:38,321 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 12:06:38,322 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 12:06:38,324 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 12:06:40,322 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 12:06:40,349 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 12:06:40,350 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 12:06:40,351 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 12:06:40,423 [Thread: 11      ] [DEBUG] -- VCReader TCP Connected!
2020-04-03 12:06:41,249 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 12:06:41,251 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 12:06:41,252 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 12:06:41,253 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 12:06:41,363 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:42,524 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 12:06:43,531 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:43,531 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:44,514 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 12:06:45,516 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:45,518 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:46,041 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:06:46,046 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:06:46,048 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:06:46,050 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:06:46,051 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:06:47,101 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:47,104 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:47,626 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:06:47,627 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:06:47,628 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:06:47,629 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:06:47,630 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:06:48,635 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:48,636 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:49,159 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:06:49,161 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:06:49,162 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:06:49,164 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:06:49,165 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:06:50,173 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:50,174 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:50,695 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:06:50,695 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:06:50,696 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:06:50,697 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:06:50,698 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:06:51,705 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:51,706 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:52,228 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:06:52,229 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:06:52,230 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:06:52,231 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:06:52,232 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:06:53,264 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:53,264 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:54,402 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 12:06:55,402 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:55,403 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:55,925 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:06:55,927 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:06:55,930 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:06:55,933 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:06:55,935 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:06:56,954 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:56,956 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:57,760 [Thread: VCR Read thread] [DEBUG] -- Received [BR]
2020-04-03 12:06:58,761 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:06:58,762 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:06:59,283 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:06:59,284 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:06:59,285 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:06:59,286 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:06:59,287 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:07:00,293 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:07:00,294 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:07:00,818 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:07:00,820 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:07:00,822 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:07:00,824 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:07:00,825 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:07:01,839 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:07:01,840 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:07:02,363 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:07:02,364 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:07:02,364 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:07:02,365 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:07:02,366 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:07:03,372 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:07:03,372 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:07:03,893 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:07:03,894 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:07:03,895 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:07:03,897 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:07:03,898 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:07:04,906 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:07:04,909 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:07:05,431 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:07:05,432 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:07:05,436 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:07:05,438 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:07:05,439 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:07:06,455 [Thread: VCR Read thread] [DEBUG] -- Start Next Cycle
2020-04-03 12:07:06,456 [Thread: VCR Read thread] [DEBUG] -- Send Read Command
2020-04-03 12:07:06,598 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 12:07:06,709 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 12:07:06,712 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 12:07:06,715 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 12:07:06,718 [Thread: 9       ] [DEBUG] -- Reader Stop Request
2020-04-03 12:07:06,975 [Thread: VCR Read thread] [DEBUG] -- Received [02DBK1C864]
2020-04-03 12:07:06,976 [Thread: VCR Read thread] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 12:07:06,977 [Thread: VCR Read thread] [DEBUG] -- Returning cached instance of singleton object 'glass'.
2020-04-03 12:07:06,979 [Thread: VCR Read thread] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 12:07:06,980 [Thread: VCR Read thread] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 12:07:07,001 [Thread: VCR Read thread] [DEBUG] -- Reader Stop
2020-04-03 15:31:50,420 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Refreshing object factory 
2020-04-03 15:31:50,567 [Thread: 9       ] [DEBUG] -- Loading XML object definitions from file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml]
2020-04-03 15:31:50,632 [Thread: 9       ] [DEBUG] -- Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2020-04-03 15:31:50,661 [Thread: 9       ] [DEBUG] -- Loading object definitions.
2020-04-03 15:31:50,663 [Thread: 9       ] [DEBUG] -- Loading object definitions...
2020-04-03 15:31:50,664 [Thread: 9       ] [DEBUG] -- Default lazy init 'false'.
2020-04-03 15:31:50,665 [Thread: 9       ] [DEBUG] -- Default dependency check 'none'.
2020-04-03 15:31:50,666 [Thread: 9       ] [DEBUG] -- Default autowire 'no'.
2020-04-03 15:31:50,668 [Thread: 9       ] [DEBUG] -- Default merge 'false'.
2020-04-03 15:31:50,669 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 15:31:50,670 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 15:31:50,671 [Thread: 9       ] [DEBUG] -- Default autowire candidates ''.
2020-04-03 15:31:50,691 [Thread: 9       ] [DEBUG] -- Default init method ''.
2020-04-03 15:31:50,692 [Thread: 9       ] [DEBUG] -- Default destroy method ''.
2020-04-03 15:31:50,747 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'reader'.
2020-04-03 15:31:50,749 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'defects'.
2020-04-03 15:31:50,754 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'csvwriter'.
2020-04-03 15:31:50,759 [Thread: 9       ] [DEBUG] -- Registering object definition with id 'glass'.
2020-04-03 15:31:50,760 [Thread: 9       ] [DEBUG] -- Found 4 <object> elements defining objects.
2020-04-03 15:31:50,761 [Thread: 9       ] [DEBUG] -- Loaded 4 object definitions from location [spring-objects.xml]
2020-04-03 15:31:50,762 [Thread: 9       ] [DEBUG] -- Refreshed ObjectFactory for application context 'spring.root'.
2020-04-03 15:31:50,762 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Registering well-known processors and objects
2020-04-03 15:31:50,892 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Custom post processing object factory
2020-04-03 15:31:50,893 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using pre-registered processors
2020-04-03 15:31:50,894 [Thread: 9       ] [DEBUG] -- 4 objects defined in application context [spring.root].
2020-04-03 15:31:50,895 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Post processing object factory using defined processors
2020-04-03 15:31:50,933 [Thread: 9       ] [DEBUG] -- processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2020-04-03 15:31:50,936 [Thread: 9       ] [DEBUG] -- processed 0 IObjectPostProcessors defined in application context [spring.root].
2020-04-03 15:31:50,937 [Thread: 9       ] [DEBUG] -- No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2020-04-03 15:31:50,940 [Thread: 9       ] [DEBUG] -- No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2020-04-03 15:31:51,092 [Thread: 9       ] [DEBUG] -- ApplicationContext Refresh: Preinstantiating singletons
2020-04-03 15:31:51,093 [Thread: 9       ] [DEBUG] -- Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2020-04-03 15:31:51,094 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 15:31:51,096 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'reader'
2020-04-03 15:31:51,098 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'reader' with merged definition [RootObjectDefinition : Class [TCPSrv.Reader.VCReaderTCP]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 26].
2020-04-03 15:31:51,292 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'reader'.
2020-04-03 15:31:51,518 [Thread: 9       ] [DEBUG] -- Object 'reader' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 15:31:51,519 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'reader' to allow for resolving potential circular references
2020-04-03 15:31:51,520 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'reader'
2020-04-03 15:31:51,523 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'reader'
2020-04-03 15:31:51,525 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'reader'
2020-04-03 15:31:51,531 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'reader'
2020-04-03 15:31:51,532 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 15:31:51,534 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
2020-04-03 15:31:51,535 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name defects => canonical name defects
2020-04-03 15:31:51,691 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'defects'
2020-04-03 15:31:51,692 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'defects' with merged definition [RootObjectDefinition : Class [MPC.DefectCollection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 29].
2020-04-03 15:31:51,693 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'defects'.
2020-04-03 15:31:51,815 [Thread: 9       ] [DEBUG] -- Object 'defects' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 15:31:51,816 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'defects' to allow for resolving potential circular references
2020-04-03 15:31:51,891 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'defects'
2020-04-03 15:31:51,892 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'defects'
2020-04-03 15:31:51,893 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'defects'
2020-04-03 15:31:51,894 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'defects'
2020-04-03 15:31:51,895 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'defects'.
2020-04-03 15:31:51,896 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname defects
2020-04-03 15:31:51,897 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name csvwriter => canonical name csvwriter
2020-04-03 15:31:51,898 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'csvwriter'
2020-04-03 15:31:52,091 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'csvwriter' with merged definition [RootObjectDefinition : Class [FileSrv.csv.CSVWriter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 33].
2020-04-03 15:31:52,096 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'csvwriter'.
2020-04-03 15:31:52,098 [Thread: 9       ] [DEBUG] -- Object 'csvwriter' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 15:31:52,099 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'csvwriter' to allow for resolving potential circular references
2020-04-03 15:31:52,099 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'csvwriter'
2020-04-03 15:31:52,291 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'csvwriter'
2020-04-03 15:31:52,292 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'csvwriter'
2020-04-03 15:31:52,293 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'csvwriter'
2020-04-03 15:31:52,293 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'csvwriter'.
2020-04-03 15:31:52,294 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname csvwriter
2020-04-03 15:31:52,295 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name glass => canonical name glass
2020-04-03 15:31:52,295 [Thread: 9       ] [DEBUG] -- Creating shared instance of singleton object 'glass'
2020-04-03 15:31:52,296 [Thread: 9       ] [DEBUG] -- Creating instance of Object 'glass' with merged definition [RootObjectDefinition : Class [MPC.GlassDefectColection]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = No; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = file [D:\DevRepository\2DReader\MPC\MPC\bin\Debug\spring-objects.xml] line 37].
2020-04-03 15:31:52,491 [Thread: 9       ] [DEBUG] -- Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'glass'.
2020-04-03 15:31:52,493 [Thread: 9       ] [DEBUG] -- Object 'glass' instantiated via constructor [Void .ctor(System.String)].
2020-04-03 15:31:52,493 [Thread: 9       ] [DEBUG] -- Eagerly caching object 'glass' to allow for resolving potential circular references
2020-04-03 15:31:52,494 [Thread: 9       ] [DEBUG] -- Configuring object using definition 'glass'
2020-04-03 15:31:52,495 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors before initialization of object 'glass'
2020-04-03 15:31:52,691 [Thread: 9       ] [DEBUG] -- Invoking IObjectPostProcessors after initialization of object 'glass'
2020-04-03 15:31:52,692 [Thread: 9       ] [DEBUG] -- Cached shared instance of singleton object 'glass'
2020-04-03 15:31:52,693 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'glass'.
2020-04-03 15:31:52,693 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname glass
2020-04-03 15:31:52,694 [Thread: 9       ] [DEBUG] -- Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2020-04-03 15:31:52,696 [Thread: 9       ] [INFO ] -- ApplicationContext Refresh: Completed
2020-04-03 15:31:52,697 [Thread: 9       ] [DEBUG] --    GetObjectInternal: obtaining instance for name reader => canonical name reader
2020-04-03 15:31:52,697 [Thread: 9       ] [DEBUG] -- Returning cached instance of singleton object 'reader'.
2020-04-03 15:31:52,698 [Thread: 9       ] [DEBUG] -- Calling code asked for normal instance for name 'reader'.
2020-04-03 15:31:52,891 [Thread: 9       ] [DEBUG] -- GetObjectInternal: returning instance for objectname reader
